
nemu：     文件格式 elf32-i386


Disassembly of section .init:

00002568 <_init>:
    2568:	53                   	push   %ebx
    2569:	83 ec 08             	sub    $0x8,%esp
    256c:	e8 4f 07 00 00       	call   2cc0 <__x86.get_pc_thunk.bx>
    2571:	81 c3 8f 8a 02 00    	add    $0x28a8f,%ebx
    2577:	8b 83 ec ff ff ff    	mov    -0x14(%ebx),%eax
    257d:	85 c0                	test   %eax,%eax
    257f:	74 05                	je     2586 <_init+0x1e>
    2581:	e8 42 03 00 00       	call   28c8 <.plt.got+0x8>
    2586:	83 c4 08             	add    $0x8,%esp
    2589:	5b                   	pop    %ebx
    258a:	c3                   	ret    

Disassembly of section .plt:

00002590 <.plt>:
    2590:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    2596:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    259c:	00 00                	add    %al,(%eax)
	...

000025a0 <fread@plt>:
    25a0:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    25a6:	68 00 00 00 00       	push   $0x0
    25ab:	e9 e0 ff ff ff       	jmp    2590 <.plt>

000025b0 <SDL_Quit@plt>:
    25b0:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    25b6:	68 08 00 00 00       	push   $0x8
    25bb:	e9 d0 ff ff ff       	jmp    2590 <.plt>

000025c0 <SDL_Flip@plt>:
    25c0:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    25c6:	68 10 00 00 00       	push   $0x10
    25cb:	e9 c0 ff ff ff       	jmp    2590 <.plt>

000025d0 <fwrite@plt>:
    25d0:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    25d6:	68 18 00 00 00       	push   $0x18
    25db:	e9 b0 ff ff ff       	jmp    2590 <.plt>

000025e0 <memcpy@plt>:
    25e0:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    25e6:	68 20 00 00 00       	push   $0x20
    25eb:	e9 a0 ff ff ff       	jmp    2590 <.plt>

000025f0 <malloc@plt>:
    25f0:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    25f6:	68 28 00 00 00       	push   $0x28
    25fb:	e9 90 ff ff ff       	jmp    2590 <.plt>

00002600 <SDL_EnableKeyRepeat@plt>:
    2600:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
    2606:	68 30 00 00 00       	push   $0x30
    260b:	e9 80 ff ff ff       	jmp    2590 <.plt>

00002610 <strlen@plt>:
    2610:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
    2616:	68 38 00 00 00       	push   $0x38
    261b:	e9 70 ff ff ff       	jmp    2590 <.plt>

00002620 <SDL_PollEvent@plt>:
    2620:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
    2626:	68 40 00 00 00       	push   $0x40
    262b:	e9 60 ff ff ff       	jmp    2590 <.plt>

00002630 <sprintf@plt>:
    2630:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
    2636:	68 48 00 00 00       	push   $0x48
    263b:	e9 50 ff ff ff       	jmp    2590 <.plt>

00002640 <SDL_Delay@plt>:
    2640:	ff a3 34 00 00 00    	jmp    *0x34(%ebx)
    2646:	68 50 00 00 00       	push   $0x50
    264b:	e9 40 ff ff ff       	jmp    2590 <.plt>

00002650 <strcmp@plt>:
    2650:	ff a3 38 00 00 00    	jmp    *0x38(%ebx)
    2656:	68 58 00 00 00       	push   $0x58
    265b:	e9 30 ff ff ff       	jmp    2590 <.plt>

00002660 <SDL_GetError@plt>:
    2660:	ff a3 3c 00 00 00    	jmp    *0x3c(%ebx)
    2666:	68 60 00 00 00       	push   $0x60
    266b:	e9 20 ff ff ff       	jmp    2590 <.plt>

00002670 <time@plt>:
    2670:	ff a3 40 00 00 00    	jmp    *0x40(%ebx)
    2676:	68 68 00 00 00       	push   $0x68
    267b:	e9 10 ff ff ff       	jmp    2590 <.plt>

00002680 <SDL_CreateThread@plt>:
    2680:	ff a3 44 00 00 00    	jmp    *0x44(%ebx)
    2686:	68 70 00 00 00       	push   $0x70
    268b:	e9 00 ff ff ff       	jmp    2590 <.plt>

00002690 <fflush@plt>:
    2690:	ff a3 48 00 00 00    	jmp    *0x48(%ebx)
    2696:	68 78 00 00 00       	push   $0x78
    269b:	e9 f0 fe ff ff       	jmp    2590 <.plt>

000026a0 <memcmp@plt>:
    26a0:	ff a3 4c 00 00 00    	jmp    *0x4c(%ebx)
    26a6:	68 80 00 00 00       	push   $0x80
    26ab:	e9 e0 fe ff ff       	jmp    2590 <.plt>

000026b0 <SDL_UpperBlit@plt>:
    26b0:	ff a3 50 00 00 00    	jmp    *0x50(%ebx)
    26b6:	68 88 00 00 00       	push   $0x88
    26bb:	e9 d0 fe ff ff       	jmp    2590 <.plt>

000026c0 <fseek@plt>:
    26c0:	ff a3 54 00 00 00    	jmp    *0x54(%ebx)
    26c6:	68 90 00 00 00       	push   $0x90
    26cb:	e9 c0 fe ff ff       	jmp    2590 <.plt>

000026d0 <SDL_Init@plt>:
    26d0:	ff a3 58 00 00 00    	jmp    *0x58(%ebx)
    26d6:	68 98 00 00 00       	push   $0x98
    26db:	e9 b0 fe ff ff       	jmp    2590 <.plt>

000026e0 <readline@plt>:
    26e0:	ff a3 5c 00 00 00    	jmp    *0x5c(%ebx)
    26e6:	68 a0 00 00 00       	push   $0xa0
    26eb:	e9 a0 fe ff ff       	jmp    2590 <.plt>

000026f0 <srand@plt>:
    26f0:	ff a3 60 00 00 00    	jmp    *0x60(%ebx)
    26f6:	68 a8 00 00 00       	push   $0xa8
    26fb:	e9 90 fe ff ff       	jmp    2590 <.plt>

00002700 <SDL_SetVideoMode@plt>:
    2700:	ff a3 64 00 00 00    	jmp    *0x64(%ebx)
    2706:	68 b0 00 00 00       	push   $0xb0
    270b:	e9 80 fe ff ff       	jmp    2590 <.plt>

00002710 <SDL_SetPalette@plt>:
    2710:	ff a3 68 00 00 00    	jmp    *0x68(%ebx)
    2716:	68 b8 00 00 00       	push   $0xb8
    271b:	e9 70 fe ff ff       	jmp    2590 <.plt>

00002720 <SDL_WM_SetCaption@plt>:
    2720:	ff a3 6c 00 00 00    	jmp    *0x6c(%ebx)
    2726:	68 c0 00 00 00       	push   $0xc0
    272b:	e9 60 fe ff ff       	jmp    2590 <.plt>

00002730 <__libc_start_main@plt>:
    2730:	ff a3 70 00 00 00    	jmp    *0x70(%ebx)
    2736:	68 c8 00 00 00       	push   $0xc8
    273b:	e9 50 fe ff ff       	jmp    2590 <.plt>

00002740 <__isoc99_sscanf@plt>:
    2740:	ff a3 74 00 00 00    	jmp    *0x74(%ebx)
    2746:	68 d0 00 00 00       	push   $0xd0
    274b:	e9 40 fe ff ff       	jmp    2590 <.plt>

00002750 <rand@plt>:
    2750:	ff a3 78 00 00 00    	jmp    *0x78(%ebx)
    2756:	68 d8 00 00 00       	push   $0xd8
    275b:	e9 30 fe ff ff       	jmp    2590 <.plt>

00002760 <__isoc99_scanf@plt>:
    2760:	ff a3 7c 00 00 00    	jmp    *0x7c(%ebx)
    2766:	68 e0 00 00 00       	push   $0xe0
    276b:	e9 20 fe ff ff       	jmp    2590 <.plt>

00002770 <regexec@plt>:
    2770:	ff a3 80 00 00 00    	jmp    *0x80(%ebx)
    2776:	68 e8 00 00 00       	push   $0xe8
    277b:	e9 10 fe ff ff       	jmp    2590 <.plt>

00002780 <free@plt>:
    2780:	ff a3 84 00 00 00    	jmp    *0x84(%ebx)
    2786:	68 f0 00 00 00       	push   $0xf0
    278b:	e9 00 fe ff ff       	jmp    2590 <.plt>

00002790 <add_history@plt>:
    2790:	ff a3 88 00 00 00    	jmp    *0x88(%ebx)
    2796:	68 f8 00 00 00       	push   $0xf8
    279b:	e9 f0 fd ff ff       	jmp    2590 <.plt>

000027a0 <regcomp@plt>:
    27a0:	ff a3 8c 00 00 00    	jmp    *0x8c(%ebx)
    27a6:	68 00 01 00 00       	push   $0x100
    27ab:	e9 e0 fd ff ff       	jmp    2590 <.plt>

000027b0 <SDL_CreateRGBSurface@plt>:
    27b0:	ff a3 90 00 00 00    	jmp    *0x90(%ebx)
    27b6:	68 08 01 00 00       	push   $0x108
    27bb:	e9 d0 fd ff ff       	jmp    2590 <.plt>

000027c0 <printf@plt>:
    27c0:	ff a3 94 00 00 00    	jmp    *0x94(%ebx)
    27c6:	68 10 01 00 00       	push   $0x110
    27cb:	e9 c0 fd ff ff       	jmp    2590 <.plt>

000027d0 <regerror@plt>:
    27d0:	ff a3 98 00 00 00    	jmp    *0x98(%ebx)
    27d6:	68 18 01 00 00       	push   $0x118
    27db:	e9 b0 fd ff ff       	jmp    2590 <.plt>

000027e0 <stpcpy@plt>:
    27e0:	ff a3 9c 00 00 00    	jmp    *0x9c(%ebx)
    27e6:	68 20 01 00 00       	push   $0x120
    27eb:	e9 a0 fd ff ff       	jmp    2590 <.plt>

000027f0 <strtok@plt>:
    27f0:	ff a3 a0 00 00 00    	jmp    *0xa0(%ebx)
    27f6:	68 28 01 00 00       	push   $0x128
    27fb:	e9 90 fd ff ff       	jmp    2590 <.plt>

00002800 <puts@plt>:
    2800:	ff a3 a4 00 00 00    	jmp    *0xa4(%ebx)
    2806:	68 30 01 00 00       	push   $0x130
    280b:	e9 80 fd ff ff       	jmp    2590 <.plt>

00002810 <_IO_putc@plt>:
    2810:	ff a3 a8 00 00 00    	jmp    *0xa8(%ebx)
    2816:	68 38 01 00 00       	push   $0x138
    281b:	e9 70 fd ff ff       	jmp    2590 <.plt>

00002820 <memset@plt>:
    2820:	ff a3 ac 00 00 00    	jmp    *0xac(%ebx)
    2826:	68 40 01 00 00       	push   $0x140
    282b:	e9 60 fd ff ff       	jmp    2590 <.plt>

00002830 <putchar@plt>:
    2830:	ff a3 b0 00 00 00    	jmp    *0xb0(%ebx)
    2836:	68 48 01 00 00       	push   $0x148
    283b:	e9 50 fd ff ff       	jmp    2590 <.plt>

00002840 <strspn@plt>:
    2840:	ff a3 b4 00 00 00    	jmp    *0xb4(%ebx)
    2846:	68 50 01 00 00       	push   $0x150
    284b:	e9 40 fd ff ff       	jmp    2590 <.plt>

00002850 <__strdup@plt>:
    2850:	ff a3 b8 00 00 00    	jmp    *0xb8(%ebx)
    2856:	68 58 01 00 00       	push   $0x158
    285b:	e9 30 fd ff ff       	jmp    2590 <.plt>

00002860 <fclose@plt>:
    2860:	ff a3 bc 00 00 00    	jmp    *0xbc(%ebx)
    2866:	68 60 01 00 00       	push   $0x160
    286b:	e9 20 fd ff ff       	jmp    2590 <.plt>

00002870 <SDL_WaitThread@plt>:
    2870:	ff a3 c0 00 00 00    	jmp    *0xc0(%ebx)
    2876:	68 68 01 00 00       	push   $0x168
    287b:	e9 10 fd ff ff       	jmp    2590 <.plt>

00002880 <strcpy@plt>:
    2880:	ff a3 c4 00 00 00    	jmp    *0xc4(%ebx)
    2886:	68 70 01 00 00       	push   $0x170
    288b:	e9 00 fd ff ff       	jmp    2590 <.plt>

00002890 <__assert_fail@plt>:
    2890:	ff a3 c8 00 00 00    	jmp    *0xc8(%ebx)
    2896:	68 78 01 00 00       	push   $0x178
    289b:	e9 f0 fc ff ff       	jmp    2590 <.plt>

000028a0 <fopen@plt>:
    28a0:	ff a3 cc 00 00 00    	jmp    *0xcc(%ebx)
    28a6:	68 80 01 00 00       	push   $0x180
    28ab:	e9 e0 fc ff ff       	jmp    2590 <.plt>

000028b0 <ftell@plt>:
    28b0:	ff a3 d0 00 00 00    	jmp    *0xd0(%ebx)
    28b6:	68 88 01 00 00       	push   $0x188
    28bb:	e9 d0 fc ff ff       	jmp    2590 <.plt>

Disassembly of section .plt.got:

000028c0 <.plt.got>:
    28c0:	ff a3 d0 ff ff ff    	jmp    *-0x30(%ebx)
    28c6:	66 90                	xchg   %ax,%ax
    28c8:	ff a3 ec ff ff ff    	jmp    *-0x14(%ebx)
    28ce:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

000028d0 <draw_pixel.part.1>:
    28d0:	53                   	push   %ebx
    28d1:	e8 ea 03 00 00       	call   2cc0 <__x86.get_pc_thunk.bx>
    28d6:	81 c3 2a 87 02 00    	add    $0x2872a,%ebx
    28dc:	83 ec 08             	sub    $0x8,%esp
    28df:	8d 83 9c fb fe ff    	lea    -0x10464(%ebx),%eax
    28e5:	50                   	push   %eax
    28e6:	8d 83 4b fb fe ff    	lea    -0x104b5(%ebx),%eax
    28ec:	6a 19                	push   $0x19
    28ee:	50                   	push   %eax
    28ef:	8d 83 64 fb fe ff    	lea    -0x1049c(%ebx),%eax
    28f5:	50                   	push   %eax
    28f6:	e8 95 ff ff ff       	call   2890 <__assert_fail@plt>

000028fb <hw_mem_write.part.1>:
    28fb:	53                   	push   %ebx
    28fc:	e8 bf 03 00 00       	call   2cc0 <__x86.get_pc_thunk.bx>
    2901:	81 c3 ff 86 02 00    	add    $0x286ff,%ebx
    2907:	83 ec 08             	sub    $0x8,%esp
    290a:	8d 83 a0 1e ff ff    	lea    -0xe160(%ebx),%eax
    2910:	50                   	push   %eax
    2911:	8d 83 17 1e ff ff    	lea    -0xe1e9(%ebx),%eax
    2917:	6a 16                	push   $0x16
    2919:	50                   	push   %eax
    291a:	8d 83 2b 1e ff ff    	lea    -0xe1d5(%ebx),%eax
    2920:	50                   	push   %eax
    2921:	e8 6a ff ff ff       	call   2890 <__assert_fail@plt>
    2926:	66 90                	xchg   %ax,%ax
    2928:	66 90                	xchg   %ax,%ax
    292a:	66 90                	xchg   %ax,%ax
    292c:	66 90                	xchg   %ax,%ax
    292e:	66 90                	xchg   %ax,%ax

00002930 <main>:
    2930:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    2934:	83 e4 f0             	and    $0xfffffff0,%esp
    2937:	ff 71 fc             	pushl  -0x4(%ecx)
    293a:	55                   	push   %ebp
    293b:	89 e5                	mov    %esp,%ebp
    293d:	57                   	push   %edi
    293e:	56                   	push   %esi
    293f:	53                   	push   %ebx
    2940:	51                   	push   %ecx
    2941:	e8 7a 03 00 00       	call   2cc0 <__x86.get_pc_thunk.bx>
    2946:	81 c3 ba 86 02 00    	add    $0x286ba,%ebx
    294c:	83 ec 38             	sub    $0x38,%esp
    294f:	8b 01                	mov    (%ecx),%eax
    2951:	8b 51 04             	mov    0x4(%ecx),%edx
    2954:	83 f8 01             	cmp    $0x1,%eax
    2957:	0f 84 15 03 00 00    	je     2c72 <main+0x342>
    295d:	83 f8 03             	cmp    $0x3,%eax
    2960:	0f 84 bf 01 00 00    	je     2b25 <main+0x1f5>
    2966:	83 f8 02             	cmp    $0x2,%eax
    2969:	0f 85 93 01 00 00    	jne    2b02 <main+0x1d2>
    296f:	8b 72 04             	mov    0x4(%edx),%esi
    2972:	8d 83 13 12 ff ff    	lea    -0xeded(%ebx),%eax
    2978:	51                   	push   %ecx
    2979:	51                   	push   %ecx
    297a:	50                   	push   %eax
    297b:	56                   	push   %esi
    297c:	e8 cf fc ff ff       	call   2650 <strcmp@plt>
    2981:	83 c4 10             	add    $0x10,%esp
    2984:	85 c0                	test   %eax,%eax
    2986:	0f 84 39 02 00 00    	je     2bc5 <main+0x295>
    298c:	8d 83 1c 12 ff ff    	lea    -0xede4(%ebx),%eax
    2992:	52                   	push   %edx
    2993:	52                   	push   %edx
    2994:	50                   	push   %eax
    2995:	56                   	push   %esi
    2996:	e8 b5 fc ff ff       	call   2650 <strcmp@plt>
    299b:	83 c4 10             	add    $0x10,%esp
    299e:	85 c0                	test   %eax,%eax
    29a0:	0f 85 9b 02 00 00    	jne    2c41 <main+0x311>
    29a6:	c6 83 a2 14 05 00 01 	movb   $0x1,0x514a2(%ebx)
    29ad:	c6 83 a1 14 05 00 01 	movb   $0x1,0x514a1(%ebx)
    29b4:	80 bb a0 14 05 00 00 	cmpb   $0x0,0x514a0(%ebx)
    29bb:	0f 85 4c 02 00 00    	jne    2c0d <main+0x2dd>
    29c1:	8d 83 bc fc ff ff    	lea    -0x344(%ebx),%eax
    29c7:	8d bb 40 fc ff ff    	lea    -0x3c0(%ebx),%edi
    29cd:	8d b3 cf 14 05 00    	lea    0x514cf(%ebx),%esi
    29d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    29d6:	8d 05 40 15 05 00    	lea    0x51540,%eax
    29dc:	89 45 d0             	mov    %eax,-0x30(%ebp)
    29df:	8d 05 44 15 05 00    	lea    0x51544,%eax
    29e5:	89 45 cc             	mov    %eax,-0x34(%ebp)
    29e8:	8d 05 48 15 05 00    	lea    0x51548,%eax
    29ee:	89 45 c8             	mov    %eax,-0x38(%ebp)
    29f1:	8d 05 4c 15 05 00    	lea    0x5154c,%eax
    29f7:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    29fa:	8d 05 c0 14 05 00    	lea    0x514c0,%eax
    2a00:	89 45 e0             	mov    %eax,-0x20(%ebp)
    2a03:	8d 05 c4 14 05 00    	lea    0x514c4,%eax
    2a09:	89 45 dc             	mov    %eax,-0x24(%ebp)
    2a0c:	8d 05 c8 14 05 00    	lea    0x514c8,%eax
    2a12:	89 45 d8             	mov    %eax,-0x28(%ebp)
    2a15:	8d 05 cc 14 05 00    	lea    0x514cc,%eax
    2a1b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    2a1e:	8d 83 4f 15 05 00    	lea    0x5154f(%ebx),%eax
    2a24:	89 45 bc             	mov    %eax,-0x44(%ebp)
    2a27:	e9 90 00 00 00       	jmp    2abc <main+0x18c>
    2a2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2a30:	c7 04 18 2e 2f 74 65 	movl   $0x65742f2e,(%eax,%ebx,1)
    2a37:	8b 45 cc             	mov    -0x34(%ebp),%eax
    2a3a:	83 ec 08             	sub    $0x8,%esp
    2a3d:	8b 0f                	mov    (%edi),%ecx
    2a3f:	c7 04 18 73 74 63 61 	movl   $0x61637473,(%eax,%ebx,1)
    2a46:	8b 45 c8             	mov    -0x38(%ebp),%eax
    2a49:	89 4d c0             	mov    %ecx,-0x40(%ebp)
    2a4c:	c7 04 18 73 65 2f 62 	movl   $0x622f6573,(%eax,%ebx,1)
    2a53:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    2a56:	c7 04 18 69 6e 2f 00 	movl   $0x2f6e69,(%eax,%ebx,1)
    2a5d:	51                   	push   %ecx
    2a5e:	ff 75 bc             	pushl  -0x44(%ebp)
    2a61:	e8 7a fd ff ff       	call   27e0 <stpcpy@plt>
    2a66:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    2a69:	c7 00 2e 69 6d 67    	movl   $0x676d692e,(%eax)
    2a6f:	83 c4 10             	add    $0x10,%esp
    2a72:	c6 40 04 00          	movb   $0x0,0x4(%eax)
    2a76:	8b 45 e0             	mov    -0x20(%ebp),%eax
    2a79:	83 ec 08             	sub    $0x8,%esp
    2a7c:	83 c7 04             	add    $0x4,%edi
    2a7f:	c7 04 18 2e 2f 74 65 	movl   $0x65742f2e,(%eax,%ebx,1)
    2a86:	8b 45 dc             	mov    -0x24(%ebp),%eax
    2a89:	c7 04 18 73 74 63 61 	movl   $0x61637473,(%eax,%ebx,1)
    2a90:	8b 45 d8             	mov    -0x28(%ebp),%eax
    2a93:	c7 04 18 73 65 2f 62 	movl   $0x622f6573,(%eax,%ebx,1)
    2a9a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2a9d:	c7 04 18 69 6e 2f 00 	movl   $0x2f6e69,(%eax,%ebx,1)
    2aa4:	51                   	push   %ecx
    2aa5:	56                   	push   %esi
    2aa6:	e8 d5 fd ff ff       	call   2880 <strcpy@plt>
    2aab:	e8 30 4b 01 00       	call   175e0 <single_run>
    2ab0:	83 c4 10             	add    $0x10,%esp
    2ab3:	39 7d e4             	cmp    %edi,-0x1c(%ebp)
    2ab6:	0f 84 3f 01 00 00    	je     2bfb <main+0x2cb>
    2abc:	80 bb a1 14 05 00 00 	cmpb   $0x0,0x514a1(%ebx)
    2ac3:	8b 45 d0             	mov    -0x30(%ebp),%eax
    2ac6:	0f 84 64 ff ff ff    	je     2a30 <main+0x100>
    2acc:	c7 04 18 2e 2f 6b 65 	movl   $0x656b2f2e,(%eax,%ebx,1)
    2ad3:	8b 45 cc             	mov    -0x34(%ebp),%eax
    2ad6:	8b 0f                	mov    (%edi),%ecx
    2ad8:	c7 04 18 72 6e 65 6c 	movl   $0x6c656e72,(%eax,%ebx,1)
    2adf:	8b 45 c8             	mov    -0x38(%ebp),%eax
    2ae2:	c7 04 18 2f 6b 65 72 	movl   $0x72656b2f,(%eax,%ebx,1)
    2ae9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    2aec:	c7 04 18 6e 65 6c 2e 	movl   $0x2e6c656e,(%eax,%ebx,1)
    2af3:	c7 83 50 15 05 00 69 	movl   $0x676d69,0x51550(%ebx)
    2afa:	6d 67 00 
    2afd:	e9 74 ff ff ff       	jmp    2a76 <main+0x146>
    2b02:	8d 83 2f 12 ff ff    	lea    -0xedd1(%ebx),%eax
    2b08:	83 ec 0c             	sub    $0xc,%esp
    2b0b:	50                   	push   %eax
    2b0c:	e8 ef fc ff ff       	call   2800 <puts@plt>
    2b11:	83 c4 10             	add    $0x10,%esp
    2b14:	b8 01 00 00 00       	mov    $0x1,%eax
    2b19:	8d 65 f0             	lea    -0x10(%ebp),%esp
    2b1c:	59                   	pop    %ecx
    2b1d:	5b                   	pop    %ebx
    2b1e:	5e                   	pop    %esi
    2b1f:	5f                   	pop    %edi
    2b20:	5d                   	pop    %ebp
    2b21:	8d 61 fc             	lea    -0x4(%ecx),%esp
    2b24:	c3                   	ret    
    2b25:	8b 72 04             	mov    0x4(%edx),%esi
    2b28:	50                   	push   %eax
    2b29:	50                   	push   %eax
    2b2a:	8d 83 d1 11 ff ff    	lea    -0xee2f(%ebx),%eax
    2b30:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    2b33:	50                   	push   %eax
    2b34:	56                   	push   %esi
    2b35:	e8 16 fb ff ff       	call   2650 <strcmp@plt>
    2b3a:	83 c4 10             	add    $0x10,%esp
    2b3d:	85 c0                	test   %eax,%eax
    2b3f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    2b42:	0f 85 89 00 00 00    	jne    2bd1 <main+0x2a1>
    2b48:	8d 83 40 15 05 00    	lea    0x51540(%ebx),%eax
    2b4e:	8d b3 03 12 ff ff    	lea    -0xedfd(%ebx),%esi
    2b54:	b9 04 00 00 00       	mov    $0x4,%ecx
    2b59:	89 55 e0             	mov    %edx,-0x20(%ebp)
    2b5c:	89 c7                	mov    %eax,%edi
    2b5e:	89 75 e4             	mov    %esi,-0x1c(%ebp)
    2b61:	8d 83 4f 15 05 00    	lea    0x5154f(%ebx),%eax
    2b67:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    2b69:	56                   	push   %esi
    2b6a:	56                   	push   %esi
    2b6b:	ff 72 08             	pushl  0x8(%edx)
    2b6e:	50                   	push   %eax
    2b6f:	e8 6c fc ff ff       	call   27e0 <stpcpy@plt>
    2b74:	c7 00 2e 69 6d 67    	movl   $0x676d692e,(%eax)
    2b7a:	c6 40 04 00          	movb   $0x0,0x4(%eax)
    2b7e:	8d 83 c0 14 05 00    	lea    0x514c0(%ebx),%eax
    2b84:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    2b87:	b9 04 00 00 00       	mov    $0x4,%ecx
    2b8c:	8b 55 e0             	mov    -0x20(%ebp),%edx
    2b8f:	89 c7                	mov    %eax,%edi
    2b91:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    2b93:	8d b3 cf 14 05 00    	lea    0x514cf(%ebx),%esi
    2b99:	5f                   	pop    %edi
    2b9a:	58                   	pop    %eax
    2b9b:	ff 72 08             	pushl  0x8(%edx)
    2b9e:	56                   	push   %esi
    2b9f:	e8 dc fc ff ff       	call   2880 <strcpy@plt>
    2ba4:	e8 37 4a 01 00       	call   175e0 <single_run>
    2ba9:	83 c4 10             	add    $0x10,%esp
    2bac:	80 bb a2 14 05 00 00 	cmpb   $0x0,0x514a2(%ebx)
    2bb3:	0f 85 fb fd ff ff    	jne    29b4 <main+0x84>
    2bb9:	e8 e2 11 00 00       	call   3da0 <close_sdl>
    2bbe:	31 c0                	xor    %eax,%eax
    2bc0:	e9 54 ff ff ff       	jmp    2b19 <main+0x1e9>
    2bc5:	c6 83 a2 14 05 00 01 	movb   $0x1,0x514a2(%ebx)
    2bcc:	e9 e3 fd ff ff       	jmp    29b4 <main+0x84>
    2bd1:	8d 83 d6 11 ff ff    	lea    -0xee2a(%ebx),%eax
    2bd7:	ff 72 08             	pushl  0x8(%edx)
    2bda:	56                   	push   %esi
    2bdb:	ff 32                	pushl  (%edx)
    2bdd:	50                   	push   %eax
    2bde:	e8 dd fb ff ff       	call   27c0 <printf@plt>
    2be3:	8d 83 e7 11 ff ff    	lea    -0xee19(%ebx),%eax
    2be9:	89 04 24             	mov    %eax,(%esp)
    2bec:	e8 0f fc ff ff       	call   2800 <puts@plt>
    2bf1:	83 c4 10             	add    $0x10,%esp
    2bf4:	31 c0                	xor    %eax,%eax
    2bf6:	e9 1e ff ff ff       	jmp    2b19 <main+0x1e9>
    2bfb:	80 bb a2 14 05 00 00 	cmpb   $0x0,0x514a2(%ebx)
    2c02:	74 b5                	je     2bb9 <main+0x289>
    2c04:	80 bb a0 14 05 00 00 	cmpb   $0x0,0x514a0(%ebx)
    2c0b:	74 ac                	je     2bb9 <main+0x289>
    2c0d:	8d 83 40 15 05 00    	lea    0x51540(%ebx),%eax
    2c13:	8d b3 46 12 ff ff    	lea    -0xedba(%ebx),%esi
    2c19:	b9 05 00 00 00       	mov    $0x5,%ecx
    2c1e:	89 c7                	mov    %eax,%edi
    2c20:	8d 83 c0 14 05 00    	lea    0x514c0(%ebx),%eax
    2c26:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    2c28:	8d b3 5a 12 ff ff    	lea    -0xeda6(%ebx),%esi
    2c2e:	89 c7                	mov    %eax,%edi
    2c30:	b9 03 00 00 00       	mov    $0x3,%ecx
    2c35:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    2c37:	e8 a4 49 01 00       	call   175e0 <single_run>
    2c3c:	e9 78 ff ff ff       	jmp    2bb9 <main+0x289>
    2c41:	50                   	push   %eax
    2c42:	50                   	push   %eax
    2c43:	8d 83 29 12 ff ff    	lea    -0xedd7(%ebx),%eax
    2c49:	50                   	push   %eax
    2c4a:	56                   	push   %esi
    2c4b:	e8 00 fa ff ff       	call   2650 <strcmp@plt>
    2c50:	83 c4 10             	add    $0x10,%esp
    2c53:	85 c0                	test   %eax,%eax
    2c55:	0f 85 51 ff ff ff    	jne    2bac <main+0x27c>
    2c5b:	c6 83 a2 14 05 00 01 	movb   $0x1,0x514a2(%ebx)
    2c62:	c6 83 a1 14 05 00 01 	movb   $0x1,0x514a1(%ebx)
    2c69:	c6 83 a0 14 05 00 01 	movb   $0x1,0x514a0(%ebx)
    2c70:	eb 9b                	jmp    2c0d <main+0x2dd>
    2c72:	e8 99 23 00 00       	call   5010 <reg_test>
    2c77:	e8 d4 64 00 00       	call   9150 <alu_test>
    2c7c:	e8 ef 70 00 00       	call   9d70 <fpu_test>
    2c81:	31 c0                	xor    %eax,%eax
    2c83:	e9 91 fe ff ff       	jmp    2b19 <main+0x1e9>

00002c88 <_start>:
    2c88:	31 ed                	xor    %ebp,%ebp
    2c8a:	5e                   	pop    %esi
    2c8b:	89 e1                	mov    %esp,%ecx
    2c8d:	83 e4 f0             	and    $0xfffffff0,%esp
    2c90:	50                   	push   %eax
    2c91:	54                   	push   %esp
    2c92:	52                   	push   %edx
    2c93:	e8 22 00 00 00       	call   2cba <_start+0x32>
    2c98:	81 c3 68 83 02 00    	add    $0x28368,%ebx
    2c9e:	8d 83 80 f9 fe ff    	lea    -0x10680(%ebx),%eax
    2ca4:	50                   	push   %eax
    2ca5:	8d 83 20 f9 fe ff    	lea    -0x106e0(%ebx),%eax
    2cab:	50                   	push   %eax
    2cac:	51                   	push   %ecx
    2cad:	56                   	push   %esi
    2cae:	ff b3 d4 ff ff ff    	pushl  -0x2c(%ebx)
    2cb4:	e8 77 fa ff ff       	call   2730 <__libc_start_main@plt>
    2cb9:	f4                   	hlt    
    2cba:	8b 1c 24             	mov    (%esp),%ebx
    2cbd:	c3                   	ret    
    2cbe:	66 90                	xchg   %ax,%ax

00002cc0 <__x86.get_pc_thunk.bx>:
    2cc0:	8b 1c 24             	mov    (%esp),%ebx
    2cc3:	c3                   	ret    
    2cc4:	66 90                	xchg   %ax,%ax
    2cc6:	66 90                	xchg   %ax,%ax
    2cc8:	66 90                	xchg   %ax,%ax
    2cca:	66 90                	xchg   %ax,%ax
    2ccc:	66 90                	xchg   %ax,%ax
    2cce:	66 90                	xchg   %ax,%ax

00002cd0 <deregister_tm_clones>:
    2cd0:	e8 17 01 00 00       	call   2dec <__x86.get_pc_thunk.dx>
    2cd5:	81 c2 2b 83 02 00    	add    $0x2832b,%edx
    2cdb:	8d 8a 78 13 00 00    	lea    0x1378(%edx),%ecx
    2ce1:	8d 82 7b 13 00 00    	lea    0x137b(%edx),%eax
    2ce7:	29 c8                	sub    %ecx,%eax
    2ce9:	83 f8 06             	cmp    $0x6,%eax
    2cec:	76 17                	jbe    2d05 <deregister_tm_clones+0x35>
    2cee:	8b 82 e8 ff ff ff    	mov    -0x18(%edx),%eax
    2cf4:	85 c0                	test   %eax,%eax
    2cf6:	74 0d                	je     2d05 <deregister_tm_clones+0x35>
    2cf8:	55                   	push   %ebp
    2cf9:	89 e5                	mov    %esp,%ebp
    2cfb:	83 ec 14             	sub    $0x14,%esp
    2cfe:	51                   	push   %ecx
    2cff:	ff d0                	call   *%eax
    2d01:	83 c4 10             	add    $0x10,%esp
    2d04:	c9                   	leave  
    2d05:	f3 c3                	repz ret 
    2d07:	89 f6                	mov    %esi,%esi
    2d09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002d10 <register_tm_clones>:
    2d10:	e8 d7 00 00 00       	call   2dec <__x86.get_pc_thunk.dx>
    2d15:	81 c2 eb 82 02 00    	add    $0x282eb,%edx
    2d1b:	55                   	push   %ebp
    2d1c:	8d 8a 78 13 00 00    	lea    0x1378(%edx),%ecx
    2d22:	8d 82 78 13 00 00    	lea    0x1378(%edx),%eax
    2d28:	89 e5                	mov    %esp,%ebp
    2d2a:	53                   	push   %ebx
    2d2b:	29 c8                	sub    %ecx,%eax
    2d2d:	c1 f8 02             	sar    $0x2,%eax
    2d30:	83 ec 04             	sub    $0x4,%esp
    2d33:	89 c3                	mov    %eax,%ebx
    2d35:	c1 eb 1f             	shr    $0x1f,%ebx
    2d38:	01 d8                	add    %ebx,%eax
    2d3a:	d1 f8                	sar    %eax
    2d3c:	74 14                	je     2d52 <register_tm_clones+0x42>
    2d3e:	8b 92 f0 ff ff ff    	mov    -0x10(%edx),%edx
    2d44:	85 d2                	test   %edx,%edx
    2d46:	74 0a                	je     2d52 <register_tm_clones+0x42>
    2d48:	83 ec 08             	sub    $0x8,%esp
    2d4b:	50                   	push   %eax
    2d4c:	51                   	push   %ecx
    2d4d:	ff d2                	call   *%edx
    2d4f:	83 c4 10             	add    $0x10,%esp
    2d52:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2d55:	c9                   	leave  
    2d56:	c3                   	ret    
    2d57:	89 f6                	mov    %esi,%esi
    2d59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002d60 <__do_global_dtors_aux>:
    2d60:	55                   	push   %ebp
    2d61:	89 e5                	mov    %esp,%ebp
    2d63:	53                   	push   %ebx
    2d64:	e8 57 ff ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    2d69:	81 c3 97 82 02 00    	add    $0x28297,%ebx
    2d6f:	83 ec 04             	sub    $0x4,%esp
    2d72:	80 bb 80 13 00 00 00 	cmpb   $0x0,0x1380(%ebx)
    2d79:	75 27                	jne    2da2 <__do_global_dtors_aux+0x42>
    2d7b:	8b 83 d0 ff ff ff    	mov    -0x30(%ebx),%eax
    2d81:	85 c0                	test   %eax,%eax
    2d83:	74 11                	je     2d96 <__do_global_dtors_aux+0x36>
    2d85:	83 ec 0c             	sub    $0xc,%esp
    2d88:	ff b3 e4 00 00 00    	pushl  0xe4(%ebx)
    2d8e:	e8 2d fb ff ff       	call   28c0 <.plt.got>
    2d93:	83 c4 10             	add    $0x10,%esp
    2d96:	e8 35 ff ff ff       	call   2cd0 <deregister_tm_clones>
    2d9b:	c6 83 80 13 00 00 01 	movb   $0x1,0x1380(%ebx)
    2da2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    2da5:	c9                   	leave  
    2da6:	c3                   	ret    
    2da7:	89 f6                	mov    %esi,%esi
    2da9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00002db0 <frame_dummy>:
    2db0:	e8 37 00 00 00       	call   2dec <__x86.get_pc_thunk.dx>
    2db5:	81 c2 4b 82 02 00    	add    $0x2824b,%edx
    2dbb:	8d 82 3c fc ff ff    	lea    -0x3c4(%edx),%eax
    2dc1:	8b 08                	mov    (%eax),%ecx
    2dc3:	85 c9                	test   %ecx,%ecx
    2dc5:	75 09                	jne    2dd0 <frame_dummy+0x20>
    2dc7:	e9 44 ff ff ff       	jmp    2d10 <register_tm_clones>
    2dcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2dd0:	8b 92 e4 ff ff ff    	mov    -0x1c(%edx),%edx
    2dd6:	85 d2                	test   %edx,%edx
    2dd8:	74 ed                	je     2dc7 <frame_dummy+0x17>
    2dda:	55                   	push   %ebp
    2ddb:	89 e5                	mov    %esp,%ebp
    2ddd:	83 ec 14             	sub    $0x14,%esp
    2de0:	50                   	push   %eax
    2de1:	ff d2                	call   *%edx
    2de3:	83 c4 10             	add    $0x10,%esp
    2de6:	c9                   	leave  
    2de7:	e9 24 ff ff ff       	jmp    2d10 <register_tm_clones>

00002dec <__x86.get_pc_thunk.dx>:
    2dec:	8b 14 24             	mov    (%esp),%edx
    2def:	c3                   	ret    

00002df0 <pio_write>:
    2df0:	55                   	push   %ebp
    2df1:	57                   	push   %edi
    2df2:	56                   	push   %esi
    2df3:	53                   	push   %ebx
    2df4:	e8 c7 fe ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    2df9:	81 c3 07 82 02 00    	add    $0x28207,%ebx
    2dff:	83 ec 2c             	sub    $0x2c,%esp
    2e02:	8b 7c 24 44          	mov    0x44(%esp),%edi
    2e06:	8b 54 24 40          	mov    0x40(%esp),%edx
    2e0a:	8b 44 24 48          	mov    0x48(%esp),%eax
    2e0e:	8d 4f ff             	lea    -0x1(%edi),%ecx
    2e11:	89 d6                	mov    %edx,%esi
    2e13:	83 f9 01             	cmp    $0x1,%ecx
    2e16:	76 09                	jbe    2e21 <pio_write+0x31>
    2e18:	83 ff 04             	cmp    $0x4,%edi
    2e1b:	0f 85 ac 00 00 00    	jne    2ecd <pio_write+0xdd>
    2e21:	0f b7 ea             	movzwl %dx,%ebp
    2e24:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    2e28:	8d 4c 24 1c          	lea    0x1c(%esp),%ecx
    2e2c:	8d 84 2b a0 13 00 00 	lea    0x13a0(%ebx,%ebp,1),%eax
    2e33:	89 54 24 0c          	mov    %edx,0xc(%esp)
    2e37:	83 ec 04             	sub    $0x4,%esp
    2e3a:	57                   	push   %edi
    2e3b:	51                   	push   %ecx
    2e3c:	50                   	push   %eax
    2e3d:	e8 9e f7 ff ff       	call   25e0 <memcpy@plt>
    2e42:	83 c4 10             	add    $0x10,%esp
    2e45:	8b 54 24 0c          	mov    0xc(%esp),%edx
    2e49:	66 81 fa f0 01       	cmp    $0x1f0,%dx
    2e4e:	74 75                	je     2ec5 <pio_write+0xd5>
    2e50:	ba f1 01 00 00       	mov    $0x1f1,%edx
    2e55:	b8 01 00 00 00       	mov    $0x1,%eax
    2e5a:	eb 14                	jmp    2e70 <pio_write+0x80>
    2e5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2e60:	83 c0 01             	add    $0x1,%eax
    2e63:	83 f8 1a             	cmp    $0x1a,%eax
    2e66:	74 30                	je     2e98 <pio_write+0xa8>
    2e68:	0f b7 94 c3 00 fe ff 	movzwl -0x200(%ebx,%eax,8),%edx
    2e6f:	ff 
    2e70:	66 39 d6             	cmp    %dx,%si
    2e73:	75 eb                	jne    2e60 <pio_write+0x70>
    2e75:	8b 84 c3 04 fe ff ff 	mov    -0x1fc(%ebx,%eax,8),%eax
    2e7c:	89 7c 24 44          	mov    %edi,0x44(%esp)
    2e80:	89 6c 24 40          	mov    %ebp,0x40(%esp)
    2e84:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%esp)
    2e8b:	00 
    2e8c:	83 c4 2c             	add    $0x2c,%esp
    2e8f:	5b                   	pop    %ebx
    2e90:	5e                   	pop    %esi
    2e91:	5f                   	pop    %edi
    2e92:	5d                   	pop    %ebp
    2e93:	ff e0                	jmp    *%eax
    2e95:	8d 76 00             	lea    0x0(%esi),%esi
    2e98:	8d 83 e4 f9 fe ff    	lea    -0x1061c(%ebx),%eax
    2e9e:	83 ec 04             	sub    $0x4,%esp
    2ea1:	55                   	push   %ebp
    2ea2:	55                   	push   %ebp
    2ea3:	50                   	push   %eax
    2ea4:	e8 17 f9 ff ff       	call   27c0 <printf@plt>
    2ea9:	8d 83 3c fa fe ff    	lea    -0x105c4(%ebx),%eax
    2eaf:	50                   	push   %eax
    2eb0:	8d 83 a8 f9 fe ff    	lea    -0x10658(%ebx),%eax
    2eb6:	6a 4d                	push   $0x4d
    2eb8:	50                   	push   %eax
    2eb9:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
    2ebf:	50                   	push   %eax
    2ec0:	e8 cb f9 ff ff       	call   2890 <__assert_fail@plt>
    2ec5:	8d 83 c0 83 fd ff    	lea    -0x27c40(%ebx),%eax
    2ecb:	eb af                	jmp    2e7c <pio_write+0x8c>
    2ecd:	8d 83 3c fa fe ff    	lea    -0x105c4(%ebx),%eax
    2ed3:	50                   	push   %eax
    2ed4:	8d 83 a8 f9 fe ff    	lea    -0x10658(%ebx),%eax
    2eda:	6a 42                	push   $0x42
    2edc:	50                   	push   %eax
    2edd:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
    2ee3:	50                   	push   %eax
    2ee4:	e8 a7 f9 ff ff       	call   2890 <__assert_fail@plt>
    2ee9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00002ef0 <pio_read>:
    2ef0:	57                   	push   %edi
    2ef1:	56                   	push   %esi
    2ef2:	53                   	push   %ebx
    2ef3:	e8 c8 fd ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    2ef8:	81 c3 08 81 02 00    	add    $0x28108,%ebx
    2efe:	83 ec 10             	sub    $0x10,%esp
    2f01:	8b 7c 24 24          	mov    0x24(%esp),%edi
    2f05:	8b 74 24 20          	mov    0x20(%esp),%esi
    2f09:	8d 47 ff             	lea    -0x1(%edi),%eax
    2f0c:	89 f1                	mov    %esi,%ecx
    2f0e:	83 f8 01             	cmp    $0x1,%eax
    2f11:	76 09                	jbe    2f1c <pio_read+0x2c>
    2f13:	83 ff 04             	cmp    $0x4,%edi
    2f16:	0f 85 ac 00 00 00    	jne    2fc8 <pio_read+0xd8>
    2f1c:	66 81 fe f0 01       	cmp    $0x1f0,%si
    2f21:	0f 84 99 00 00 00    	je     2fc0 <pio_read+0xd0>
    2f27:	ba f1 01 00 00       	mov    $0x1f1,%edx
    2f2c:	b8 01 00 00 00       	mov    $0x1,%eax
    2f31:	eb 15                	jmp    2f48 <pio_read+0x58>
    2f33:	90                   	nop
    2f34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2f38:	83 c0 01             	add    $0x1,%eax
    2f3b:	83 f8 1a             	cmp    $0x1a,%eax
    2f3e:	74 50                	je     2f90 <pio_read+0xa0>
    2f40:	0f b7 94 c3 00 fe ff 	movzwl -0x200(%ebx,%eax,8),%edx
    2f47:	ff 
    2f48:	66 39 d1             	cmp    %dx,%cx
    2f4b:	75 eb                	jne    2f38 <pio_read+0x48>
    2f4d:	8b 84 c3 04 fe ff ff 	mov    -0x1fc(%ebx,%eax,8),%eax
    2f54:	83 ec 04             	sub    $0x4,%esp
    2f57:	0f b7 f6             	movzwl %si,%esi
    2f5a:	6a 00                	push   $0x0
    2f5c:	57                   	push   %edi
    2f5d:	56                   	push   %esi
    2f5e:	ff d0                	call   *%eax
    2f60:	8d 44 24 1c          	lea    0x1c(%esp),%eax
    2f64:	8d 94 33 a0 13 00 00 	lea    0x13a0(%ebx,%esi,1),%edx
    2f6b:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
    2f72:	00 
    2f73:	83 c4 0c             	add    $0xc,%esp
    2f76:	57                   	push   %edi
    2f77:	52                   	push   %edx
    2f78:	50                   	push   %eax
    2f79:	e8 62 f6 ff ff       	call   25e0 <memcpy@plt>
    2f7e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    2f82:	83 c4 20             	add    $0x20,%esp
    2f85:	5b                   	pop    %ebx
    2f86:	5e                   	pop    %esi
    2f87:	5f                   	pop    %edi
    2f88:	c3                   	ret    
    2f89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2f90:	8d 83 0c fa fe ff    	lea    -0x105f4(%ebx),%eax
    2f96:	83 ec 04             	sub    $0x4,%esp
    2f99:	0f b7 f6             	movzwl %si,%esi
    2f9c:	56                   	push   %esi
    2f9d:	56                   	push   %esi
    2f9e:	50                   	push   %eax
    2f9f:	e8 1c f8 ff ff       	call   27c0 <printf@plt>
    2fa4:	8d 83 30 fa fe ff    	lea    -0x105d0(%ebx),%eax
    2faa:	50                   	push   %eax
    2fab:	8d 83 a8 f9 fe ff    	lea    -0x10658(%ebx),%eax
    2fb1:	6a 5e                	push   $0x5e
    2fb3:	50                   	push   %eax
    2fb4:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
    2fba:	50                   	push   %eax
    2fbb:	e8 d0 f8 ff ff       	call   2890 <__assert_fail@plt>
    2fc0:	8d 83 c0 83 fd ff    	lea    -0x27c40(%ebx),%eax
    2fc6:	eb 8c                	jmp    2f54 <pio_read+0x64>
    2fc8:	8d 83 30 fa fe ff    	lea    -0x105d0(%ebx),%eax
    2fce:	50                   	push   %eax
    2fcf:	8d 83 a8 f9 fe ff    	lea    -0x10658(%ebx),%eax
    2fd5:	6a 53                	push   $0x53
    2fd7:	50                   	push   %eax
    2fd8:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
    2fde:	50                   	push   %eax
    2fdf:	e8 ac f8 ff ff       	call   2890 <__assert_fail@plt>
    2fe4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2fea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00002ff0 <write_io_port>:
    2ff0:	53                   	push   %ebx
    2ff1:	e8 ca fc ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    2ff6:	81 c3 0a 80 02 00    	add    $0x2800a,%ebx
    2ffc:	83 ec 08             	sub    $0x8,%esp
    2fff:	0f b7 44 24 10       	movzwl 0x10(%esp),%eax
    3004:	8d 54 24 18          	lea    0x18(%esp),%edx
    3008:	83 ec 04             	sub    $0x4,%esp
    300b:	ff 74 24 18          	pushl  0x18(%esp)
    300f:	52                   	push   %edx
    3010:	8d 84 03 a0 13 00 00 	lea    0x13a0(%ebx,%eax,1),%eax
    3017:	50                   	push   %eax
    3018:	e8 c3 f5 ff ff       	call   25e0 <memcpy@plt>
    301d:	83 c4 18             	add    $0x18,%esp
    3020:	5b                   	pop    %ebx
    3021:	c3                   	ret    
    3022:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3029:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003030 <read_io_port>:
    3030:	53                   	push   %ebx
    3031:	e8 8a fc ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3036:	81 c3 ca 7f 02 00    	add    $0x27fca,%ebx
    303c:	83 ec 18             	sub    $0x18,%esp
    303f:	0f b7 54 24 20       	movzwl 0x20(%esp),%edx
    3044:	8d 44 24 0c          	lea    0xc(%esp),%eax
    3048:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    304f:	00 
    3050:	83 ec 04             	sub    $0x4,%esp
    3053:	ff 74 24 28          	pushl  0x28(%esp)
    3057:	8d 94 13 a0 13 00 00 	lea    0x13a0(%ebx,%edx,1),%edx
    305e:	52                   	push   %edx
    305f:	50                   	push   %eax
    3060:	e8 7b f5 ff ff       	call   25e0 <memcpy@plt>
    3065:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    3069:	83 c4 28             	add    $0x28,%esp
    306c:	5b                   	pop    %ebx
    306d:	c3                   	ret    
    306e:	66 90                	xchg   %ax,%ax

00003070 <add_mmio_map>:
    3070:	55                   	push   %ebp
    3071:	57                   	push   %edi
    3072:	e8 75 fd ff ff       	call   2dec <__x86.get_pc_thunk.dx>
    3077:	81 c2 89 7f 02 00    	add    $0x27f89,%edx
    307d:	56                   	push   %esi
    307e:	53                   	push   %ebx
    307f:	83 ec 0c             	sub    $0xc,%esp
    3082:	8b 8a a0 13 01 00    	mov    0x113a0(%edx),%ecx
    3088:	8b 6c 24 20          	mov    0x20(%esp),%ebp
    308c:	8b 74 24 24          	mov    0x24(%esp),%esi
    3090:	83 f9 07             	cmp    $0x7,%ecx
    3093:	7f 53                	jg     30e8 <add_mmio_map+0x78>
    3095:	8b 82 40 14 01 00    	mov    0x11440(%edx),%eax
    309b:	8d 3c 30             	lea    (%eax,%esi,1),%edi
    309e:	81 ff 00 00 04 00    	cmp    $0x40000,%edi
    30a4:	77 60                	ja     3106 <add_mmio_map+0x96>
    30a6:	89 cb                	mov    %ecx,%ebx
    30a8:	8d 74 35 ff          	lea    -0x1(%ebp,%esi,1),%esi
    30ac:	8d 84 02 60 14 01 00 	lea    0x11460(%edx,%eax,1),%eax
    30b3:	c1 e3 04             	shl    $0x4,%ebx
    30b6:	83 c1 01             	add    $0x1,%ecx
    30b9:	89 ba 40 14 01 00    	mov    %edi,0x11440(%edx)
    30bf:	89 ac 1a c0 13 01 00 	mov    %ebp,0x113c0(%edx,%ebx,1)
    30c6:	8d 9c 1a c0 13 01 00 	lea    0x113c0(%edx,%ebx,1),%ebx
    30cd:	89 8a a0 13 01 00    	mov    %ecx,0x113a0(%edx)
    30d3:	89 73 04             	mov    %esi,0x4(%ebx)
    30d6:	8b 74 24 28          	mov    0x28(%esp),%esi
    30da:	89 43 08             	mov    %eax,0x8(%ebx)
    30dd:	89 73 0c             	mov    %esi,0xc(%ebx)
    30e0:	83 c4 0c             	add    $0xc,%esp
    30e3:	5b                   	pop    %ebx
    30e4:	5e                   	pop    %esi
    30e5:	5f                   	pop    %edi
    30e6:	5d                   	pop    %ebp
    30e7:	c3                   	ret    
    30e8:	8d 82 b4 fa fe ff    	lea    -0x1054c(%edx),%eax
    30ee:	89 d3                	mov    %edx,%ebx
    30f0:	50                   	push   %eax
    30f1:	8d 82 46 fa fe ff    	lea    -0x105ba(%edx),%eax
    30f7:	6a 15                	push   $0x15
    30f9:	50                   	push   %eax
    30fa:	8d 82 5c fa fe ff    	lea    -0x105a4(%edx),%eax
    3100:	50                   	push   %eax
    3101:	e8 8a f7 ff ff       	call   2890 <__assert_fail@plt>
    3106:	8d 82 b4 fa fe ff    	lea    -0x1054c(%edx),%eax
    310c:	89 d3                	mov    %edx,%ebx
    310e:	50                   	push   %eax
    310f:	8d 82 46 fa fe ff    	lea    -0x105ba(%edx),%eax
    3115:	6a 16                	push   $0x16
    3117:	50                   	push   %eax
    3118:	8d 82 6c fa fe ff    	lea    -0x10594(%edx),%eax
    311e:	50                   	push   %eax
    311f:	e8 6c f7 ff ff       	call   2890 <__assert_fail@plt>
    3124:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    312a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00003130 <clear_mmio_map>:
    3130:	e8 b5 01 00 00       	call   32ea <__x86.get_pc_thunk.ax>
    3135:	05 cb 7e 02 00       	add    $0x27ecb,%eax
    313a:	c7 80 a0 13 01 00 00 	movl   $0x0,0x113a0(%eax)
    3141:	00 00 00 
    3144:	c7 80 40 14 01 00 00 	movl   $0x0,0x11440(%eax)
    314b:	00 00 00 
    314e:	c3                   	ret    
    314f:	90                   	nop

00003150 <is_mmio>:
    3150:	e8 95 01 00 00       	call   32ea <__x86.get_pc_thunk.ax>
    3155:	05 ab 7e 02 00       	add    $0x27eab,%eax
    315a:	53                   	push   %ebx
    315b:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    315f:	8b 98 a0 13 01 00    	mov    0x113a0(%eax),%ebx
    3165:	85 db                	test   %ebx,%ebx
    3167:	7e 22                	jle    318b <is_mmio+0x3b>
    3169:	8d 90 c0 13 01 00    	lea    0x113c0(%eax),%edx
    316f:	31 c0                	xor    %eax,%eax
    3171:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3178:	39 0a                	cmp    %ecx,(%edx)
    317a:	77 05                	ja     3181 <is_mmio+0x31>
    317c:	3b 4a 04             	cmp    0x4(%edx),%ecx
    317f:	76 0f                	jbe    3190 <is_mmio+0x40>
    3181:	83 c0 01             	add    $0x1,%eax
    3184:	83 c2 10             	add    $0x10,%edx
    3187:	39 d8                	cmp    %ebx,%eax
    3189:	75 ed                	jne    3178 <is_mmio+0x28>
    318b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3190:	5b                   	pop    %ebx
    3191:	c3                   	ret    
    3192:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3199:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000031a0 <mmio_read>:
    31a0:	55                   	push   %ebp
    31a1:	57                   	push   %edi
    31a2:	56                   	push   %esi
    31a3:	53                   	push   %ebx
    31a4:	e8 17 fb ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    31a9:	81 c3 57 7e 02 00    	add    $0x27e57,%ebx
    31af:	83 ec 0c             	sub    $0xc,%esp
    31b2:	8b 54 24 24          	mov    0x24(%esp),%edx
    31b6:	8b 74 24 20          	mov    0x20(%esp),%esi
    31ba:	8d 42 ff             	lea    -0x1(%edx),%eax
    31bd:	83 f8 01             	cmp    $0x1,%eax
    31c0:	76 05                	jbe    31c7 <mmio_read+0x27>
    31c2:	83 fa 04             	cmp    $0x4,%edx
    31c5:	75 42                	jne    3209 <mmio_read+0x69>
    31c7:	8b 44 24 28          	mov    0x28(%esp),%eax
    31cb:	89 f5                	mov    %esi,%ebp
    31cd:	b9 04 00 00 00       	mov    $0x4,%ecx
    31d2:	29 d1                	sub    %edx,%ecx
    31d4:	83 ec 04             	sub    $0x4,%esp
    31d7:	c1 e1 03             	shl    $0x3,%ecx
    31da:	c1 e0 04             	shl    $0x4,%eax
    31dd:	8d bc 03 c0 13 01 00 	lea    0x113c0(%ebx,%eax,1),%edi
    31e4:	2b ac 03 c0 13 01 00 	sub    0x113c0(%ebx,%eax,1),%ebp
    31eb:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    31f0:	d3 eb                	shr    %cl,%ebx
    31f2:	8b 47 08             	mov    0x8(%edi),%eax
    31f5:	23 1c 28             	and    (%eax,%ebp,1),%ebx
    31f8:	6a 00                	push   $0x0
    31fa:	52                   	push   %edx
    31fb:	56                   	push   %esi
    31fc:	ff 57 0c             	call   *0xc(%edi)
    31ff:	83 c4 1c             	add    $0x1c,%esp
    3202:	89 d8                	mov    %ebx,%eax
    3204:	5b                   	pop    %ebx
    3205:	5e                   	pop    %esi
    3206:	5f                   	pop    %edi
    3207:	5d                   	pop    %ebp
    3208:	c3                   	ret    
    3209:	8d 83 a8 fa fe ff    	lea    -0x10558(%ebx),%eax
    320f:	50                   	push   %eax
    3210:	8d 83 46 fa fe ff    	lea    -0x105ba(%ebx),%eax
    3216:	6a 33                	push   $0x33
    3218:	50                   	push   %eax
    3219:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
    321f:	50                   	push   %eax
    3220:	e8 6b f6 ff ff       	call   2890 <__assert_fail@plt>
    3225:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3229:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003230 <mmio_write>:
    3230:	55                   	push   %ebp
    3231:	57                   	push   %edi
    3232:	56                   	push   %esi
    3233:	53                   	push   %ebx
    3234:	e8 87 fa ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3239:	81 c3 c7 7d 02 00    	add    $0x27dc7,%ebx
    323f:	83 ec 1c             	sub    $0x1c,%esp
    3242:	8b 54 24 34          	mov    0x34(%esp),%edx
    3246:	8b 7c 24 30          	mov    0x30(%esp),%edi
    324a:	8d 42 ff             	lea    -0x1(%edx),%eax
    324d:	83 f8 01             	cmp    $0x1,%eax
    3250:	76 05                	jbe    3257 <mmio_write+0x27>
    3252:	83 fa 04             	cmp    $0x4,%edx
    3255:	75 77                	jne    32ce <mmio_write+0x9e>
    3257:	b9 04 00 00 00       	mov    $0x4,%ecx
    325c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3261:	89 fd                	mov    %edi,%ebp
    3263:	29 d1                	sub    %edx,%ecx
    3265:	c1 e1 03             	shl    $0x3,%ecx
    3268:	d3 e8                	shr    %cl,%eax
    326a:	8d 4c 24 0c          	lea    0xc(%esp),%ecx
    326e:	89 44 24 0c          	mov    %eax,0xc(%esp)
    3272:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    3276:	c1 e0 04             	shl    $0x4,%eax
    3279:	2b ac 03 c0 13 01 00 	sub    0x113c0(%ebx,%eax,1),%ebp
    3280:	8b b4 03 c8 13 01 00 	mov    0x113c8(%ebx,%eax,1),%esi
    3287:	31 c0                	xor    %eax,%eax
    3289:	01 ee                	add    %ebp,%esi
    328b:	85 d2                	test   %edx,%edx
    328d:	89 cd                	mov    %ecx,%ebp
    328f:	74 1d                	je     32ae <mmio_write+0x7e>
    3291:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3298:	80 7c 05 00 00       	cmpb   $0x0,0x0(%ebp,%eax,1)
    329d:	74 08                	je     32a7 <mmio_write+0x77>
    329f:	0f b6 4c 04 38       	movzbl 0x38(%esp,%eax,1),%ecx
    32a4:	88 0c 06             	mov    %cl,(%esi,%eax,1)
    32a7:	83 c0 01             	add    $0x1,%eax
    32aa:	39 d0                	cmp    %edx,%eax
    32ac:	75 ea                	jne    3298 <mmio_write+0x68>
    32ae:	83 ec 04             	sub    $0x4,%esp
    32b1:	8b 44 24 40          	mov    0x40(%esp),%eax
    32b5:	6a 01                	push   $0x1
    32b7:	52                   	push   %edx
    32b8:	57                   	push   %edi
    32b9:	c1 e0 04             	shl    $0x4,%eax
    32bc:	ff 94 03 cc 13 01 00 	call   *0x113cc(%ebx,%eax,1)
    32c3:	83 c4 10             	add    $0x10,%esp
    32c6:	83 c4 1c             	add    $0x1c,%esp
    32c9:	5b                   	pop    %ebx
    32ca:	5e                   	pop    %esi
    32cb:	5f                   	pop    %edi
    32cc:	5d                   	pop    %ebp
    32cd:	c3                   	ret    
    32ce:	8d 83 9c fa fe ff    	lea    -0x10564(%ebx),%eax
    32d4:	50                   	push   %eax
    32d5:	8d 83 46 fa fe ff    	lea    -0x105ba(%ebx),%eax
    32db:	6a 3c                	push   $0x3c
    32dd:	50                   	push   %eax
    32de:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
    32e4:	50                   	push   %eax
    32e5:	e8 a6 f5 ff ff       	call   2890 <__assert_fail@plt>

000032ea <__x86.get_pc_thunk.ax>:
    32ea:	8b 04 24             	mov    (%esp),%eax
    32ed:	c3                   	ret    
    32ee:	66 90                	xchg   %ax,%ax

000032f0 <i8259_query_intr_no>:
    32f0:	e8 f5 ff ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    32f5:	05 0b 7d 02 00       	add    $0x27d0b,%eax
    32fa:	0f b6 80 e8 00 00 00 	movzbl 0xe8(%eax),%eax
    3301:	c3                   	ret    
    3302:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3309:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003310 <i8259_raise_intr>:
    3310:	0f b6 44 24 04       	movzbl 0x4(%esp),%eax
    3315:	e8 d2 fa ff ff       	call   2dec <__x86.get_pc_thunk.dx>
    331a:	81 c2 e6 7c 02 00    	add    $0x27ce6,%edx
    3320:	83 c0 20             	add    $0x20,%eax
    3323:	88 82 e8 00 00 00    	mov    %al,0xe8(%edx)
    3329:	8d 82 60 1d 05 00    	lea    0x51d60(%edx),%eax
    332f:	c6 80 a0 00 00 00 01 	movb   $0x1,0xa0(%eax)
    3336:	c3                   	ret    
    3337:	89 f6                	mov    %esi,%esi
    3339:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003340 <i8259_ack_intr>:
    3340:	e8 a5 ff ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    3345:	05 bb 7c 02 00       	add    $0x27cbb,%eax
    334a:	c6 80 e8 00 00 00 ff 	movb   $0xff,0xe8(%eax)
    3351:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
    3357:	c6 80 a0 00 00 00 00 	movb   $0x0,0xa0(%eax)
    335e:	c3                   	ret    
    335f:	90                   	nop

00003360 <init_ide>:
    3360:	53                   	push   %ebx
    3361:	e8 5a f9 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3366:	81 c3 9a 7c 02 00    	add    $0x27c9a,%ebx
    336c:	83 ec 10             	sub    $0x10,%esp
    336f:	8d 83 c1 fa fe ff    	lea    -0x1053f(%ebx),%eax
    3375:	50                   	push   %eax
    3376:	ff 74 24 1c          	pushl  0x1c(%esp)
    337a:	e8 21 f5 ff ff       	call   28a0 <fopen@plt>
    337f:	83 c4 10             	add    $0x10,%esp
    3382:	85 c0                	test   %eax,%eax
    3384:	89 83 60 14 05 00    	mov    %eax,0x51460(%ebx)
    338a:	74 16                	je     33a2 <init_ide+0x42>
    338c:	83 ec 04             	sub    $0x4,%esp
    338f:	6a 40                	push   $0x40
    3391:	6a 01                	push   $0x1
    3393:	68 f7 01 00 00       	push   $0x1f7
    3398:	e8 53 fc ff ff       	call   2ff0 <write_io_port>
    339d:	83 c4 18             	add    $0x18,%esp
    33a0:	5b                   	pop    %ebx
    33a1:	c3                   	ret    
    33a2:	8d 83 10 fb fe ff    	lea    -0x104f0(%ebx),%eax
    33a8:	50                   	push   %eax
    33a9:	8d 83 c4 fa fe ff    	lea    -0x1053c(%ebx),%eax
    33af:	6a 0f                	push   $0xf
    33b1:	50                   	push   %eax
    33b2:	8d 83 d9 fa fe ff    	lea    -0x10527(%ebx),%eax
    33b8:	50                   	push   %eax
    33b9:	e8 d2 f4 ff ff       	call   2890 <__assert_fail@plt>
    33be:	66 90                	xchg   %ax,%ax

000033c0 <handler_ide>:
    33c0:	56                   	push   %esi
    33c1:	53                   	push   %ebx
    33c2:	e8 f9 f8 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    33c7:	81 c3 39 7c 02 00    	add    $0x27c39,%ebx
    33cd:	83 ec 24             	sub    $0x24,%esp
    33d0:	81 bb 68 14 05 00 00 	cmpl   $0x200,0x51468(%ebx)
    33d7:	02 00 00 
    33da:	8b 44 24 30          	mov    0x30(%esp),%eax
    33de:	8b 54 24 38          	mov    0x38(%esp),%edx
    33e2:	0f 87 09 02 00 00    	ja     35f1 <handler_ide+0x231>
    33e8:	84 d2                	test   %dl,%dl
    33ea:	75 64                	jne    3450 <handler_ide+0x90>
    33ec:	66 3d f0 01          	cmp    $0x1f0,%ax
    33f0:	75 58                	jne    344a <handler_ide+0x8a>
    33f2:	83 7c 24 34 04       	cmpl   $0x4,0x34(%esp)
    33f7:	75 51                	jne    344a <handler_ide+0x8a>
    33f9:	80 bb 64 14 05 00 00 	cmpb   $0x0,0x51464(%ebx)
    3400:	0f 85 07 02 00 00    	jne    360d <handler_ide+0x24d>
    3406:	ff b3 60 14 05 00    	pushl  0x51460(%ebx)
    340c:	6a 01                	push   $0x1
    340e:	6a 04                	push   $0x4
    3410:	8d 44 24 28          	lea    0x28(%esp),%eax
    3414:	50                   	push   %eax
    3415:	e8 86 f1 ff ff       	call   25a0 <fread@plt>
    341a:	83 c4 0c             	add    $0xc,%esp
    341d:	ff 74 24 20          	pushl  0x20(%esp)
    3421:	6a 04                	push   $0x4
    3423:	68 f0 01 00 00       	push   $0x1f0
    3428:	e8 c3 fb ff ff       	call   2ff0 <write_io_port>
    342d:	8b 83 68 14 05 00    	mov    0x51468(%ebx),%eax
    3433:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    3437:	83 c0 04             	add    $0x4,%eax
    343a:	83 c4 10             	add    $0x10,%esp
    343d:	3d 00 02 00 00       	cmp    $0x200,%eax
    3442:	89 83 68 14 05 00    	mov    %eax,0x51468(%ebx)
    3448:	74 64                	je     34ae <handler_ide+0xee>
    344a:	83 c4 24             	add    $0x24,%esp
    344d:	5b                   	pop    %ebx
    344e:	5e                   	pop    %esi
    344f:	c3                   	ret    
    3450:	66 3d f0 01          	cmp    $0x1f0,%ax
    3454:	75 72                	jne    34c8 <handler_ide+0x108>
    3456:	83 7c 24 34 04       	cmpl   $0x4,0x34(%esp)
    345b:	75 6b                	jne    34c8 <handler_ide+0x108>
    345d:	80 bb 64 14 05 00 00 	cmpb   $0x0,0x51464(%ebx)
    3464:	0f 84 bf 01 00 00    	je     3629 <handler_ide+0x269>
    346a:	83 ec 08             	sub    $0x8,%esp
    346d:	6a 04                	push   $0x4
    346f:	68 f0 01 00 00       	push   $0x1f0
    3474:	e8 b7 fb ff ff       	call   3030 <read_io_port>
    3479:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    347d:	ff b3 60 14 05 00    	pushl  0x51460(%ebx)
    3483:	6a 01                	push   $0x1
    3485:	6a 04                	push   $0x4
    3487:	8d 44 24 38          	lea    0x38(%esp),%eax
    348b:	50                   	push   %eax
    348c:	e8 3f f1 ff ff       	call   25d0 <fwrite@plt>
    3491:	8b 83 68 14 05 00    	mov    0x51468(%ebx),%eax
    3497:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    349b:	83 c0 04             	add    $0x4,%eax
    349e:	83 c4 20             	add    $0x20,%esp
    34a1:	3d 00 02 00 00       	cmp    $0x200,%eax
    34a6:	89 83 68 14 05 00    	mov    %eax,0x51468(%ebx)
    34ac:	75 9c                	jne    344a <handler_ide+0x8a>
    34ae:	83 ec 04             	sub    $0x4,%esp
    34b1:	6a 40                	push   $0x40
    34b3:	6a 01                	push   $0x1
    34b5:	68 f7 01 00 00       	push   $0x1f7
    34ba:	e8 31 fb ff ff       	call   2ff0 <write_io_port>
    34bf:	83 c4 10             	add    $0x10,%esp
    34c2:	eb 86                	jmp    344a <handler_ide+0x8a>
    34c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    34c8:	66 3d f7 01          	cmp    $0x1f7,%ax
    34cc:	0f 85 78 ff ff ff    	jne    344a <handler_ide+0x8a>
    34d2:	83 ec 08             	sub    $0x8,%esp
    34d5:	6a 01                	push   $0x1
    34d7:	68 f7 01 00 00       	push   $0x1f7
    34dc:	e8 4f fb ff ff       	call   3030 <read_io_port>
    34e1:	83 c4 10             	add    $0x10,%esp
    34e4:	83 f8 20             	cmp    $0x20,%eax
    34e7:	74 57                	je     3540 <handler_ide+0x180>
    34e9:	83 ec 08             	sub    $0x8,%esp
    34ec:	6a 01                	push   $0x1
    34ee:	68 f7 01 00 00       	push   $0x1f7
    34f3:	e8 38 fb ff ff       	call   3030 <read_io_port>
    34f8:	83 c4 10             	add    $0x10,%esp
    34fb:	83 f8 30             	cmp    $0x30,%eax
    34fe:	74 40                	je     3540 <handler_ide+0x180>
    3500:	83 ec 08             	sub    $0x8,%esp
    3503:	6a 01                	push   $0x1
    3505:	68 f7 01 00 00       	push   $0x1f7
    350a:	e8 21 fb ff ff       	call   3030 <read_io_port>
    350f:	83 c4 10             	add    $0x10,%esp
    3512:	3d c8 00 00 00       	cmp    $0xc8,%eax
    3517:	0f 84 2d ff ff ff    	je     344a <handler_ide+0x8a>
    351d:	8d 83 04 fb fe ff    	lea    -0x104fc(%ebx),%eax
    3523:	50                   	push   %eax
    3524:	8d 83 c4 fa fe ff    	lea    -0x1053c(%ebx),%eax
    352a:	6a 43                	push   $0x43
    352c:	50                   	push   %eax
    352d:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
    3533:	50                   	push   %eax
    3534:	e8 57 f3 ff ff       	call   2890 <__assert_fail@plt>
    3539:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3540:	83 ec 08             	sub    $0x8,%esp
    3543:	6a 01                	push   $0x1
    3545:	68 f6 01 00 00       	push   $0x1f6
    354a:	e8 e1 fa ff ff       	call   3030 <read_io_port>
    354f:	58                   	pop    %eax
    3550:	5a                   	pop    %edx
    3551:	6a 01                	push   $0x1
    3553:	68 f5 01 00 00       	push   $0x1f5
    3558:	e8 d3 fa ff ff       	call   3030 <read_io_port>
    355d:	59                   	pop    %ecx
    355e:	89 c6                	mov    %eax,%esi
    3560:	58                   	pop    %eax
    3561:	6a 01                	push   $0x1
    3563:	68 f4 01 00 00       	push   $0x1f4
    3568:	c1 e6 10             	shl    $0x10,%esi
    356b:	e8 c0 fa ff ff       	call   3030 <read_io_port>
    3570:	c1 e0 08             	shl    $0x8,%eax
    3573:	09 c6                	or     %eax,%esi
    3575:	58                   	pop    %eax
    3576:	5a                   	pop    %edx
    3577:	6a 01                	push   $0x1
    3579:	68 f3 01 00 00       	push   $0x1f3
    357e:	e8 ad fa ff ff       	call   3030 <read_io_port>
    3583:	09 f0                	or     %esi,%eax
    3585:	83 c4 0c             	add    $0xc,%esp
    3588:	c1 e0 09             	shl    $0x9,%eax
    358b:	6a 00                	push   $0x0
    358d:	50                   	push   %eax
    358e:	ff b3 60 14 05 00    	pushl  0x51460(%ebx)
    3594:	e8 27 f1 ff ff       	call   26c0 <fseek@plt>
    3599:	59                   	pop    %ecx
    359a:	5e                   	pop    %esi
    359b:	6a 01                	push   $0x1
    359d:	68 f7 01 00 00       	push   $0x1f7
    35a2:	c7 83 68 14 05 00 00 	movl   $0x0,0x51468(%ebx)
    35a9:	00 00 00 
    35ac:	e8 7f fa ff ff       	call   3030 <read_io_port>
    35b1:	83 c4 10             	add    $0x10,%esp
    35b4:	83 f8 20             	cmp    $0x20,%eax
    35b7:	74 0c                	je     35c5 <handler_ide+0x205>
    35b9:	c6 83 64 14 05 00 01 	movb   $0x1,0x51464(%ebx)
    35c0:	e9 85 fe ff ff       	jmp    344a <handler_ide+0x8a>
    35c5:	83 ec 04             	sub    $0x4,%esp
    35c8:	c6 83 64 14 05 00 00 	movb   $0x0,0x51464(%ebx)
    35cf:	6a 40                	push   $0x40
    35d1:	6a 01                	push   $0x1
    35d3:	68 f7 01 00 00       	push   $0x1f7
    35d8:	e8 13 fa ff ff       	call   2ff0 <write_io_port>
    35dd:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)
    35e4:	e8 27 fd ff ff       	call   3310 <i8259_raise_intr>
    35e9:	83 c4 10             	add    $0x10,%esp
    35ec:	e9 59 fe ff ff       	jmp    344a <handler_ide+0x8a>
    35f1:	8d 83 04 fb fe ff    	lea    -0x104fc(%ebx),%eax
    35f7:	50                   	push   %eax
    35f8:	8d 83 c4 fa fe ff    	lea    -0x1053c(%ebx),%eax
    35fe:	6a 16                	push   $0x16
    3600:	50                   	push   %eax
    3601:	8d 83 e6 fa fe ff    	lea    -0x1051a(%ebx),%eax
    3607:	50                   	push   %eax
    3608:	e8 83 f2 ff ff       	call   2890 <__assert_fail@plt>
    360d:	8d 83 04 fb fe ff    	lea    -0x104fc(%ebx),%eax
    3613:	50                   	push   %eax
    3614:	8d 83 c4 fa fe ff    	lea    -0x1053c(%ebx),%eax
    361a:	6a 4a                	push   $0x4a
    361c:	50                   	push   %eax
    361d:	8d 83 f6 fa fe ff    	lea    -0x1050a(%ebx),%eax
    3623:	50                   	push   %eax
    3624:	e8 67 f2 ff ff       	call   2890 <__assert_fail@plt>
    3629:	8d 83 04 fb fe ff    	lea    -0x104fc(%ebx),%eax
    362f:	50                   	push   %eax
    3630:	8d 83 c4 fa fe ff    	lea    -0x1053c(%ebx),%eax
    3636:	6a 1a                	push   $0x1a
    3638:	50                   	push   %eax
    3639:	8d 83 f7 fa fe ff    	lea    -0x10509(%ebx),%eax
    363f:	50                   	push   %eax
    3640:	e8 4b f2 ff ff       	call   2890 <__assert_fail@plt>
    3645:	66 90                	xchg   %ax,%ax
    3647:	66 90                	xchg   %ax,%ax
    3649:	66 90                	xchg   %ax,%ax
    364b:	66 90                	xchg   %ax,%ax
    364d:	66 90                	xchg   %ax,%ax
    364f:	90                   	nop

00003650 <handler_serial>:
    3650:	56                   	push   %esi
    3651:	53                   	push   %ebx
    3652:	e8 69 f6 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3657:	81 c3 a9 79 02 00    	add    $0x279a9,%ebx
    365d:	83 ec 04             	sub    $0x4,%esp
    3660:	80 7c 24 18 00       	cmpb   $0x0,0x18(%esp)
    3665:	8b 44 24 10          	mov    0x10(%esp),%eax
    3669:	74 0d                	je     3678 <handler_serial+0x28>
    366b:	83 7c 24 14 01       	cmpl   $0x1,0x14(%esp)
    3670:	75 41                	jne    36b3 <handler_serial+0x63>
    3672:	66 3d f8 03          	cmp    $0x3f8,%ax
    3676:	74 08                	je     3680 <handler_serial+0x30>
    3678:	83 c4 04             	add    $0x4,%esp
    367b:	5b                   	pop    %ebx
    367c:	5e                   	pop    %esi
    367d:	c3                   	ret    
    367e:	66 90                	xchg   %ax,%ax
    3680:	83 ec 08             	sub    $0x8,%esp
    3683:	6a 01                	push   $0x1
    3685:	68 f8 03 00 00       	push   $0x3f8
    368a:	e8 a1 f9 ff ff       	call   3030 <read_io_port>
    368f:	8b b3 d8 ff ff ff    	mov    -0x28(%ebx),%esi
    3695:	0f be c0             	movsbl %al,%eax
    3698:	5a                   	pop    %edx
    3699:	59                   	pop    %ecx
    369a:	ff 36                	pushl  (%esi)
    369c:	50                   	push   %eax
    369d:	e8 6e f1 ff ff       	call   2810 <_IO_putc@plt>
    36a2:	58                   	pop    %eax
    36a3:	ff 36                	pushl  (%esi)
    36a5:	e8 e6 ef ff ff       	call   2690 <fflush@plt>
    36aa:	83 c4 10             	add    $0x10,%esp
    36ad:	83 c4 04             	add    $0x4,%esp
    36b0:	5b                   	pop    %ebx
    36b1:	5e                   	pop    %esi
    36b2:	c3                   	ret    
    36b3:	8d 83 3c fb fe ff    	lea    -0x104c4(%ebx),%eax
    36b9:	50                   	push   %eax
    36ba:	8d 83 19 fb fe ff    	lea    -0x104e7(%ebx),%eax
    36c0:	6a 07                	push   $0x7
    36c2:	50                   	push   %eax
    36c3:	8d 83 31 fb fe ff    	lea    -0x104cf(%ebx),%eax
    36c9:	50                   	push   %eax
    36ca:	e8 c1 f1 ff ff       	call   2890 <__assert_fail@plt>
    36cf:	90                   	nop

000036d0 <init_serial>:
    36d0:	53                   	push   %ebx
    36d1:	e8 ea f5 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    36d6:	81 c3 2a 79 02 00    	add    $0x2792a,%ebx
    36dc:	83 ec 0c             	sub    $0xc,%esp
    36df:	6a 20                	push   $0x20
    36e1:	6a 01                	push   $0x1
    36e3:	68 fd 03 00 00       	push   $0x3fd
    36e8:	e8 03 f9 ff ff       	call   2ff0 <write_io_port>
    36ed:	83 c4 18             	add    $0x18,%esp
    36f0:	5b                   	pop    %ebx
    36f1:	c3                   	ret    
    36f2:	66 90                	xchg   %ax,%ax
    36f4:	66 90                	xchg   %ax,%ax
    36f6:	66 90                	xchg   %ax,%ax
    36f8:	66 90                	xchg   %ax,%ax
    36fa:	66 90                	xchg   %ax,%ax
    36fc:	66 90                	xchg   %ax,%ax
    36fe:	66 90                	xchg   %ax,%ax

00003700 <vga_vmem_io_handler>:
    3700:	53                   	push   %ebx
    3701:	e8 ba 03 00 00       	call   3ac0 <__x86.get_pc_thunk.cx>
    3706:	81 c1 fa 78 02 00    	add    $0x278fa,%ecx
    370c:	80 7c 24 10 00       	cmpb   $0x0,0x10(%esp)
    3711:	74 2f                	je     3742 <vga_vmem_io_handler+0x42>
    3713:	8b 44 24 08          	mov    0x8(%esp),%eax
    3717:	bb cd cc cc cc       	mov    $0xcccccccd,%ebx
    371c:	8d 90 00 00 f6 ff    	lea    -0xa0000(%eax),%edx
    3722:	89 d0                	mov    %edx,%eax
    3724:	f7 e3                	mul    %ebx
    3726:	c1 ea 08             	shr    $0x8,%edx
    3729:	81 fa c7 00 00 00    	cmp    $0xc7,%edx
    372f:	77 11                	ja     3742 <vga_vmem_io_handler+0x42>
    3731:	8d 81 40 1b 05 00    	lea    0x51b40(%ecx),%eax
    3737:	c6 81 6c 14 05 00 01 	movb   $0x1,0x5146c(%ecx)
    373e:	c6 04 10 01          	movb   $0x1,(%eax,%edx,1)
    3742:	5b                   	pop    %ebx
    3743:	c3                   	ret    
    3744:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    374a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00003750 <do_update_screen_graphic_mode>:
    3750:	55                   	push   %ebp
    3751:	57                   	push   %edi
    3752:	b9 80 02 00 00       	mov    $0x280,%ecx
    3757:	56                   	push   %esi
    3758:	53                   	push   %ebx
    3759:	31 f6                	xor    %esi,%esi
    375b:	e8 8a fb ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    3760:	05 a0 78 02 00       	add    $0x278a0,%eax
    3765:	83 ec 3c             	sub    $0x3c,%esp
    3768:	31 d2                	xor    %edx,%edx
    376a:	bb 02 00 00 00       	mov    $0x2,%ebx
    376f:	66 89 4c 24 2c       	mov    %cx,0x2c(%esp)
    3774:	8b 88 74 14 05 00    	mov    0x51474(%eax),%ecx
    377a:	8d b8 40 1b 05 00    	lea    0x51b40(%eax),%edi
    3780:	89 44 24 14          	mov    %eax,0x14(%esp)
    3784:	66 89 74 24 0e       	mov    %si,0xe(%esp)
    3789:	8d b0 10 1c 05 00    	lea    0x51c10(%eax),%esi
    378f:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    3793:	8d 88 08 1c 05 00    	lea    0x51c08(%eax),%ecx
    3799:	8d 80 0c 1c 05 00    	lea    0x51c0c(%eax),%eax
    379f:	89 7c 24 04          	mov    %edi,0x4(%esp)
    37a3:	81 c7 c8 00 00 00    	add    $0xc8,%edi
    37a9:	89 7c 24 10          	mov    %edi,0x10(%esp)
    37ad:	66 89 54 24 28       	mov    %dx,0x28(%esp)
    37b2:	bf 80 02 00 00       	mov    $0x280,%edi
    37b7:	66 89 5c 24 2e       	mov    %bx,0x2e(%esp)
    37bc:	89 4c 24 18          	mov    %ecx,0x18(%esp)
    37c0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    37c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    37c8:	8b 44 24 04          	mov    0x4(%esp),%eax
    37cc:	80 38 00             	cmpb   $0x0,(%eax)
    37cf:	74 66                	je     3837 <do_update_screen_graphic_mode+0xe7>
    37d1:	8d 87 80 fd ff ff    	lea    -0x280(%edi),%eax
    37d7:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    37db:	89 04 24             	mov    %eax,(%esp)
    37de:	31 c0                	xor    %eax,%eax
    37e0:	0f b6 11             	movzbl (%ecx),%edx
    37e3:	8b 1e                	mov    (%esi),%ebx
    37e5:	83 c1 01             	add    $0x1,%ecx
    37e8:	8b 2c 24             	mov    (%esp),%ebp
    37eb:	01 c3                	add    %eax,%ebx
    37ed:	88 14 2b             	mov    %dl,(%ebx,%ebp,1)
    37f0:	8b 1e                	mov    (%esi),%ebx
    37f2:	01 c3                	add    %eax,%ebx
    37f4:	83 c0 02             	add    $0x2,%eax
    37f7:	88 14 3b             	mov    %dl,(%ebx,%edi,1)
    37fa:	03 2e                	add    (%esi),%ebp
    37fc:	88 54 28 ff          	mov    %dl,-0x1(%eax,%ebp,1)
    3800:	8b 2e                	mov    (%esi),%ebp
    3802:	01 fd                	add    %edi,%ebp
    3804:	88 54 28 ff          	mov    %dl,-0x1(%eax,%ebp,1)
    3808:	3d 80 02 00 00       	cmp    $0x280,%eax
    380d:	75 d1                	jne    37e0 <do_update_screen_graphic_mode+0x90>
    380f:	0f b7 44 24 0e       	movzwl 0xe(%esp),%eax
    3814:	66 89 44 24 2a       	mov    %ax,0x2a(%esp)
    3819:	8d 44 24 28          	lea    0x28(%esp),%eax
    381d:	50                   	push   %eax
    381e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    3822:	ff 31                	pushl  (%ecx)
    3824:	50                   	push   %eax
    3825:	8b 44 24 28          	mov    0x28(%esp),%eax
    3829:	ff 30                	pushl  (%eax)
    382b:	8b 5c 24 24          	mov    0x24(%esp),%ebx
    382f:	e8 7c ee ff ff       	call   26b0 <SDL_UpperBlit@plt>
    3834:	83 c4 10             	add    $0x10,%esp
    3837:	83 44 24 04 01       	addl   $0x1,0x4(%esp)
    383c:	66 83 44 24 0e 02    	addw   $0x2,0xe(%esp)
    3842:	81 c7 00 05 00 00    	add    $0x500,%edi
    3848:	8b 44 24 04          	mov    0x4(%esp),%eax
    384c:	81 44 24 08 40 01 00 	addl   $0x140,0x8(%esp)
    3853:	00 
    3854:	3b 44 24 10          	cmp    0x10(%esp),%eax
    3858:	0f 85 6a ff ff ff    	jne    37c8 <do_update_screen_graphic_mode+0x78>
    385e:	83 ec 0c             	sub    $0xc,%esp
    3861:	8b 44 24 24          	mov    0x24(%esp),%eax
    3865:	ff 30                	pushl  (%eax)
    3867:	8b 5c 24 24          	mov    0x24(%esp),%ebx
    386b:	e8 50 ed ff ff       	call   25c0 <SDL_Flip@plt>
    3870:	83 c4 4c             	add    $0x4c,%esp
    3873:	5b                   	pop    %ebx
    3874:	5e                   	pop    %esi
    3875:	5f                   	pop    %edi
    3876:	5d                   	pop    %ebp
    3877:	c3                   	ret    
    3878:	90                   	nop
    3879:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00003880 <update_screen>:
    3880:	57                   	push   %edi
    3881:	53                   	push   %ebx
    3882:	e8 39 f4 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3887:	81 c3 79 77 02 00    	add    $0x27779,%ebx
    388d:	83 ec 04             	sub    $0x4,%esp
    3890:	80 bb 6c 14 05 00 00 	cmpb   $0x0,0x5146c(%ebx)
    3897:	74 37                	je     38d0 <update_screen+0x50>
    3899:	e8 b2 fe ff ff       	call   3750 <do_update_screen_graphic_mode>
    389e:	8d 8b 40 1b 05 00    	lea    0x51b40(%ebx),%ecx
    38a4:	c6 83 6c 14 05 00 00 	movb   $0x0,0x5146c(%ebx)
    38ab:	31 c0                	xor    %eax,%eax
    38ad:	8d 79 04             	lea    0x4(%ecx),%edi
    38b0:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
    38b6:	c7 81 c4 00 00 00 00 	movl   $0x0,0xc4(%ecx)
    38bd:	00 00 00 
    38c0:	83 e7 fc             	and    $0xfffffffc,%edi
    38c3:	29 f9                	sub    %edi,%ecx
    38c5:	81 c1 c8 00 00 00    	add    $0xc8,%ecx
    38cb:	c1 e9 02             	shr    $0x2,%ecx
    38ce:	f3 ab                	rep stos %eax,%es:(%edi)
    38d0:	83 c4 04             	add    $0x4,%esp
    38d3:	5b                   	pop    %ebx
    38d4:	5f                   	pop    %edi
    38d5:	c3                   	ret    
    38d6:	8d 76 00             	lea    0x0(%esi),%esi
    38d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000038e0 <vga_dac_io_handler>:
    38e0:	57                   	push   %edi
    38e1:	56                   	push   %esi
    38e2:	53                   	push   %ebx
    38e3:	8b 44 24 10          	mov    0x10(%esp),%eax
    38e7:	e8 d4 f3 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    38ec:	81 c3 14 77 02 00    	add    $0x27714,%ebx
    38f2:	80 7c 24 18 00       	cmpb   $0x0,0x18(%esp)
    38f7:	0f 95 c2             	setne  %dl
    38fa:	66 3d c8 03          	cmp    $0x3c8,%ax
    38fe:	75 04                	jne    3904 <vga_dac_io_handler+0x24>
    3900:	84 d2                	test   %dl,%dl
    3902:	75 5c                	jne    3960 <vga_dac_io_handler+0x80>
    3904:	66 3d c9 03          	cmp    $0x3c9,%ax
    3908:	75 49                	jne    3953 <vga_dac_io_handler+0x73>
    390a:	84 d2                	test   %dl,%dl
    390c:	74 45                	je     3953 <vga_dac_io_handler+0x73>
    390e:	8b b3 70 14 05 00    	mov    0x51470(%ebx),%esi
    3914:	83 ec 08             	sub    $0x8,%esp
    3917:	6a 01                	push   $0x1
    3919:	68 c9 03 00 00       	push   $0x3c9
    391e:	8d 46 01             	lea    0x1(%esi),%eax
    3921:	89 83 70 14 05 00    	mov    %eax,0x51470(%ebx)
    3927:	e8 04 f7 ff ff       	call   3030 <read_io_port>
    392c:	c1 e0 02             	shl    $0x2,%eax
    392f:	8b 93 70 14 05 00    	mov    0x51470(%ebx),%edx
    3935:	83 c4 10             	add    $0x10,%esp
    3938:	88 06                	mov    %al,(%esi)
    393a:	8d b3 0c 1c 05 00    	lea    0x51c0c(%ebx),%esi
    3940:	89 d1                	mov    %edx,%ecx
    3942:	8b 06                	mov    (%esi),%eax
    3944:	8b 40 04             	mov    0x4(%eax),%eax
    3947:	2b 08                	sub    (%eax),%ecx
    3949:	89 c8                	mov    %ecx,%eax
    394b:	83 e0 03             	and    $0x3,%eax
    394e:	83 f8 03             	cmp    $0x3,%eax
    3951:	74 35                	je     3988 <vga_dac_io_handler+0xa8>
    3953:	5b                   	pop    %ebx
    3954:	5e                   	pop    %esi
    3955:	5f                   	pop    %edi
    3956:	c3                   	ret    
    3957:	89 f6                	mov    %esi,%esi
    3959:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    3960:	83 ec 08             	sub    $0x8,%esp
    3963:	6a 01                	push   $0x1
    3965:	68 c8 03 00 00       	push   $0x3c8
    396a:	e8 c1 f6 ff ff       	call   3030 <read_io_port>
    396f:	8d 93 00 01 00 00    	lea    0x100(%ebx),%edx
    3975:	83 c4 10             	add    $0x10,%esp
    3978:	8d 04 82             	lea    (%edx,%eax,4),%eax
    397b:	89 83 70 14 05 00    	mov    %eax,0x51470(%ebx)
    3981:	5b                   	pop    %ebx
    3982:	5e                   	pop    %esi
    3983:	5f                   	pop    %edi
    3984:	c3                   	ret    
    3985:	8d 76 00             	lea    0x0(%esi),%esi
    3988:	8d bb 00 01 00 00    	lea    0x100(%ebx),%edi
    398e:	83 c2 01             	add    $0x1,%edx
    3991:	89 93 70 14 05 00    	mov    %edx,0x51470(%ebx)
    3997:	8d 87 00 04 00 00    	lea    0x400(%edi),%eax
    399d:	39 c2                	cmp    %eax,%edx
    399f:	75 b2                	jne    3953 <vga_dac_io_handler+0x73>
    39a1:	8d 83 08 1c 05 00    	lea    0x51c08(%ebx),%eax
    39a7:	83 ec 0c             	sub    $0xc,%esp
    39aa:	68 00 01 00 00       	push   $0x100
    39af:	6a 00                	push   $0x0
    39b1:	57                   	push   %edi
    39b2:	6a 03                	push   $0x3
    39b4:	ff 30                	pushl  (%eax)
    39b6:	e8 55 ed ff ff       	call   2710 <SDL_SetPalette@plt>
    39bb:	83 c4 14             	add    $0x14,%esp
    39be:	68 00 01 00 00       	push   $0x100
    39c3:	6a 00                	push   $0x0
    39c5:	57                   	push   %edi
    39c6:	6a 01                	push   $0x1
    39c8:	ff 36                	pushl  (%esi)
    39ca:	e8 41 ed ff ff       	call   2710 <SDL_SetPalette@plt>
    39cf:	83 c4 20             	add    $0x20,%esp
    39d2:	e9 7c ff ff ff       	jmp    3953 <vga_dac_io_handler+0x73>
    39d7:	89 f6                	mov    %esi,%esi
    39d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000039e0 <vga_crtc_io_handler>:
    39e0:	56                   	push   %esi
    39e1:	53                   	push   %ebx
    39e2:	e8 d9 f2 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    39e7:	81 c3 19 76 02 00    	add    $0x27619,%ebx
    39ed:	83 ec 04             	sub    $0x4,%esp
    39f0:	80 7c 24 18 00       	cmpb   $0x0,0x18(%esp)
    39f5:	8b 44 24 10          	mov    0x10(%esp),%eax
    39f9:	0f 95 c2             	setne  %dl
    39fc:	66 3d d4 03          	cmp    $0x3d4,%ax
    3a00:	75 04                	jne    3a06 <vga_crtc_io_handler+0x26>
    3a02:	84 d2                	test   %dl,%dl
    3a04:	75 3a                	jne    3a40 <vga_crtc_io_handler+0x60>
    3a06:	66 3d d5 03          	cmp    $0x3d5,%ax
    3a0a:	75 2d                	jne    3a39 <vga_crtc_io_handler+0x59>
    3a0c:	84 d2                	test   %dl,%dl
    3a0e:	74 29                	je     3a39 <vga_crtc_io_handler+0x59>
    3a10:	83 ec 08             	sub    $0x8,%esp
    3a13:	6a 01                	push   $0x1
    3a15:	68 d4 03 00 00       	push   $0x3d4
    3a1a:	e8 11 f6 ff ff       	call   3030 <read_io_port>
    3a1f:	89 c6                	mov    %eax,%esi
    3a21:	58                   	pop    %eax
    3a22:	5a                   	pop    %edx
    3a23:	6a 01                	push   $0x1
    3a25:	68 d5 03 00 00       	push   $0x3d5
    3a2a:	e8 01 f6 ff ff       	call   3030 <read_io_port>
    3a2f:	83 c4 10             	add    $0x10,%esp
    3a32:	88 84 33 78 14 05 00 	mov    %al,0x51478(%ebx,%esi,1)
    3a39:	83 c4 04             	add    $0x4,%esp
    3a3c:	5b                   	pop    %ebx
    3a3d:	5e                   	pop    %esi
    3a3e:	c3                   	ret    
    3a3f:	90                   	nop
    3a40:	83 ec 08             	sub    $0x8,%esp
    3a43:	6a 01                	push   $0x1
    3a45:	68 d4 03 00 00       	push   $0x3d4
    3a4a:	e8 e1 f5 ff ff       	call   3030 <read_io_port>
    3a4f:	0f b6 84 03 78 14 05 	movzbl 0x51478(%ebx,%eax,1),%eax
    3a56:	00 
    3a57:	83 c4 0c             	add    $0xc,%esp
    3a5a:	50                   	push   %eax
    3a5b:	6a 01                	push   $0x1
    3a5d:	68 d5 03 00 00       	push   $0x3d5
    3a62:	e8 89 f5 ff ff       	call   2ff0 <write_io_port>
    3a67:	83 c4 10             	add    $0x10,%esp
    3a6a:	83 c4 04             	add    $0x4,%esp
    3a6d:	5b                   	pop    %ebx
    3a6e:	5e                   	pop    %esi
    3a6f:	c3                   	ret    

00003a70 <init_vga>:
    3a70:	53                   	push   %ebx
    3a71:	e8 4a f2 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3a76:	81 c3 8a 75 02 00    	add    $0x2758a,%ebx
    3a7c:	83 ec 0c             	sub    $0xc,%esp
    3a7f:	8d 83 00 87 fd ff    	lea    -0x27900(%ebx),%eax
    3a85:	50                   	push   %eax
    3a86:	68 00 00 02 00       	push   $0x20000
    3a8b:	68 00 00 0a 00       	push   $0xa0000
    3a90:	e8 db f5 ff ff       	call   3070 <add_mmio_map>
    3a95:	89 83 74 14 05 00    	mov    %eax,0x51474(%ebx)
    3a9b:	83 c4 18             	add    $0x18,%esp
    3a9e:	5b                   	pop    %ebx
    3a9f:	c3                   	ret    

00003aa0 <close_vga>:
    3aa0:	53                   	push   %ebx
    3aa1:	e8 1a f2 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3aa6:	81 c3 5a 75 02 00    	add    $0x2755a,%ebx
    3aac:	83 ec 08             	sub    $0x8,%esp
    3aaf:	c6 83 6c 14 05 00 00 	movb   $0x0,0x5146c(%ebx)
    3ab6:	e8 75 f6 ff ff       	call   3130 <clear_mmio_map>
    3abb:	83 c4 08             	add    $0x8,%esp
    3abe:	5b                   	pop    %ebx
    3abf:	c3                   	ret    

00003ac0 <__x86.get_pc_thunk.cx>:
    3ac0:	8b 0c 24             	mov    (%esp),%ecx
    3ac3:	c3                   	ret    
    3ac4:	66 90                	xchg   %ax,%ax
    3ac6:	66 90                	xchg   %ax,%ax
    3ac8:	66 90                	xchg   %ax,%ax
    3aca:	66 90                	xchg   %ax,%ax
    3acc:	66 90                	xchg   %ax,%ax
    3ace:	66 90                	xchg   %ax,%ax

00003ad0 <keyboard_down>:
    3ad0:	53                   	push   %ebx
    3ad1:	e8 ea f1 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3ad6:	81 c3 2a 75 02 00    	add    $0x2752a,%ebx
    3adc:	83 ec 14             	sub    $0x14,%esp
    3adf:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    3ae3:	6a 01                	push   $0x1
    3ae5:	89 d0                	mov    %edx,%eax
    3ae7:	0f b6 d2             	movzbl %dl,%edx
    3aea:	c1 e8 08             	shr    $0x8,%eax
    3aed:	c1 e0 07             	shl    $0x7,%eax
    3af0:	01 d0                	add    %edx,%eax
    3af2:	0f b6 84 03 c0 fb fe 	movzbl -0x10440(%ebx,%eax,1),%eax
    3af9:	ff 
    3afa:	88 83 8b 14 05 00    	mov    %al,0x5148b(%ebx)
    3b00:	e8 0b f8 ff ff       	call   3310 <i8259_raise_intr>
    3b05:	83 c4 18             	add    $0x18,%esp
    3b08:	5b                   	pop    %ebx
    3b09:	c3                   	ret    
    3b0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00003b10 <keyboard_up>:
    3b10:	53                   	push   %ebx
    3b11:	e8 aa f1 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3b16:	81 c3 ea 74 02 00    	add    $0x274ea,%ebx
    3b1c:	83 ec 14             	sub    $0x14,%esp
    3b1f:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    3b23:	6a 01                	push   $0x1
    3b25:	89 d0                	mov    %edx,%eax
    3b27:	0f b6 d2             	movzbl %dl,%edx
    3b2a:	c1 e8 08             	shr    $0x8,%eax
    3b2d:	c1 e0 07             	shl    $0x7,%eax
    3b30:	01 d0                	add    %edx,%eax
    3b32:	0f b6 84 03 c0 fb fe 	movzbl -0x10440(%ebx,%eax,1),%eax
    3b39:	ff 
    3b3a:	83 c8 80             	or     $0xffffff80,%eax
    3b3d:	88 83 8b 14 05 00    	mov    %al,0x5148b(%ebx)
    3b43:	e8 c8 f7 ff ff       	call   3310 <i8259_raise_intr>
    3b48:	83 c4 18             	add    $0x18,%esp
    3b4b:	5b                   	pop    %ebx
    3b4c:	c3                   	ret    
    3b4d:	8d 76 00             	lea    0x0(%esi),%esi

00003b50 <handler_keyboard_data>:
    3b50:	53                   	push   %ebx
    3b51:	e8 6a f1 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3b56:	81 c3 aa 74 02 00    	add    $0x274aa,%ebx
    3b5c:	83 ec 08             	sub    $0x8,%esp
    3b5f:	80 7c 24 18 00       	cmpb   $0x0,0x18(%esp)
    3b64:	8b 44 24 10          	mov    0x10(%esp),%eax
    3b68:	75 1b                	jne    3b85 <handler_keyboard_data+0x35>
    3b6a:	0f b6 93 8b 14 05 00 	movzbl 0x5148b(%ebx),%edx
    3b71:	83 ec 04             	sub    $0x4,%esp
    3b74:	0f b7 c0             	movzwl %ax,%eax
    3b77:	52                   	push   %edx
    3b78:	ff 74 24 1c          	pushl  0x1c(%esp)
    3b7c:	50                   	push   %eax
    3b7d:	e8 6e f4 ff ff       	call   2ff0 <write_io_port>
    3b82:	83 c4 10             	add    $0x10,%esp
    3b85:	83 c4 08             	add    $0x8,%esp
    3b88:	5b                   	pop    %ebx
    3b89:	c3                   	ret    
    3b8a:	66 90                	xchg   %ax,%ax
    3b8c:	66 90                	xchg   %ax,%ax
    3b8e:	66 90                	xchg   %ax,%ax

00003b90 <timer_intr>:
    3b90:	53                   	push   %ebx
    3b91:	e8 2a f1 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3b96:	81 c3 6a 74 02 00    	add    $0x2746a,%ebx
    3b9c:	83 ec 08             	sub    $0x8,%esp
    3b9f:	8d 83 48 1e 05 00    	lea    0x51e48(%ebx),%eax
    3ba5:	83 38 01             	cmpl   $0x1,(%eax)
    3ba8:	74 06                	je     3bb0 <timer_intr+0x20>
    3baa:	83 c4 08             	add    $0x8,%esp
    3bad:	5b                   	pop    %ebx
    3bae:	c3                   	ret    
    3baf:	90                   	nop
    3bb0:	83 ec 0c             	sub    $0xc,%esp
    3bb3:	6a 00                	push   $0x0
    3bb5:	e8 56 f7 ff ff       	call   3310 <i8259_raise_intr>
    3bba:	83 c4 10             	add    $0x10,%esp
    3bbd:	83 c4 08             	add    $0x8,%esp
    3bc0:	5b                   	pop    %ebx
    3bc1:	c3                   	ret    
    3bc2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3bc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00003bd0 <handler_timer>:
    3bd0:	f3 c3                	repz ret 
    3bd2:	66 90                	xchg   %ax,%ax
    3bd4:	66 90                	xchg   %ax,%ax
    3bd6:	66 90                	xchg   %ax,%ax
    3bd8:	66 90                	xchg   %ax,%ax
    3bda:	66 90                	xchg   %ax,%ax
    3bdc:	66 90                	xchg   %ax,%ax
    3bde:	66 90                	xchg   %ax,%ax

00003be0 <NEMU_SDL_Thread>:
    3be0:	55                   	push   %ebp
    3be1:	57                   	push   %edi
    3be2:	56                   	push   %esi
    3be3:	53                   	push   %ebx
    3be4:	e8 d7 f0 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3be9:	81 c3 17 74 02 00    	add    $0x27417,%ebx
    3bef:	83 ec 48             	sub    $0x48,%esp
    3bf2:	68 20 00 10 00       	push   $0x100020
    3bf7:	e8 d4 ea ff ff       	call   26d0 <SDL_Init@plt>
    3bfc:	83 c4 10             	add    $0x10,%esp
    3bff:	85 c0                	test   %eax,%eax
    3c01:	0f 85 7b 01 00 00    	jne    3d82 <NEMU_SDL_Thread+0x1a2>
    3c07:	68 05 01 00 20       	push   $0x20000105
    3c0c:	6a 08                	push   $0x8
    3c0e:	68 90 01 00 00       	push   $0x190
    3c13:	68 80 02 00 00       	push   $0x280
    3c18:	e8 e3 ea ff ff       	call   2700 <SDL_SetVideoMode@plt>
    3c1d:	8d bb 08 1c 05 00    	lea    0x51c08(%ebx),%edi
    3c23:	89 07                	mov    %eax,(%edi)
    3c25:	8b 40 04             	mov    0x4(%eax),%eax
    3c28:	ff 70 1c             	pushl  0x1c(%eax)
    3c2b:	ff 70 18             	pushl  0x18(%eax)
    3c2e:	ff 70 14             	pushl  0x14(%eax)
    3c31:	ff 70 10             	pushl  0x10(%eax)
    3c34:	6a 08                	push   $0x8
    3c36:	68 90 01 00 00       	push   $0x190
    3c3b:	68 80 02 00 00       	push   $0x280
    3c40:	6a 00                	push   $0x0
    3c42:	e8 69 eb ff ff       	call   27b0 <SDL_CreateRGBSurface@plt>
    3c47:	8d ab 0c 1c 05 00    	lea    0x51c0c(%ebx),%ebp
    3c4d:	8b 50 14             	mov    0x14(%eax),%edx
    3c50:	83 c4 24             	add    $0x24,%esp
    3c53:	8d b3 00 01 00 00    	lea    0x100(%ebx),%esi
    3c59:	89 45 00             	mov    %eax,0x0(%ebp)
    3c5c:	8d 83 10 1c 05 00    	lea    0x51c10(%ebx),%eax
    3c62:	89 10                	mov    %edx,(%eax)
    3c64:	68 00 01 00 00       	push   $0x100
    3c69:	6a 00                	push   $0x0
    3c6b:	56                   	push   %esi
    3c6c:	6a 03                	push   $0x3
    3c6e:	ff 37                	pushl  (%edi)
    3c70:	31 ff                	xor    %edi,%edi
    3c72:	e8 99 ea ff ff       	call   2710 <SDL_SetPalette@plt>
    3c77:	83 c4 14             	add    $0x14,%esp
    3c7a:	68 00 01 00 00       	push   $0x100
    3c7f:	6a 00                	push   $0x0
    3c81:	56                   	push   %esi
    3c82:	6a 01                	push   $0x1
    3c84:	ff 75 00             	pushl  0x0(%ebp)
    3c87:	31 ed                	xor    %ebp,%ebp
    3c89:	e8 82 ea ff ff       	call   2710 <SDL_SetPalette@plt>
    3c8e:	8d 83 da fc fe ff    	lea    -0x10326(%ebx),%eax
    3c94:	83 c4 18             	add    $0x18,%esp
    3c97:	6a 00                	push   $0x0
    3c99:	50                   	push   %eax
    3c9a:	e8 81 ea ff ff       	call   2720 <SDL_WM_SetCaption@plt>
    3c9f:	58                   	pop    %eax
    3ca0:	5a                   	pop    %edx
    3ca1:	6a 1e                	push   $0x1e
    3ca3:	68 f4 01 00 00       	push   $0x1f4
    3ca8:	e8 53 e9 ff ff       	call   2600 <SDL_EnableKeyRepeat@plt>
    3cad:	8d 83 48 1e 05 00    	lea    0x51e48(%ebx),%eax
    3cb3:	83 c4 10             	add    $0x10,%esp
    3cb6:	c6 83 8c 14 05 00 01 	movb   $0x1,0x5148c(%ebx)
    3cbd:	8d 74 24 1c          	lea    0x1c(%esp),%esi
    3cc1:	89 44 24 0c          	mov    %eax,0xc(%esp)
    3cc5:	8d 76 00             	lea    0x0(%esi),%esi
    3cc8:	e8 c3 fe ff ff       	call   3b90 <timer_intr>
    3ccd:	89 f8                	mov    %edi,%eax
    3ccf:	83 e0 03             	and    $0x3,%eax
    3cd2:	85 c0                	test   %eax,%eax
    3cd4:	0f 84 9e 00 00 00    	je     3d78 <NEMU_SDL_Thread+0x198>
    3cda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3ce0:	83 ec 0c             	sub    $0xc,%esp
    3ce3:	56                   	push   %esi
    3ce4:	e8 37 e9 ff ff       	call   2620 <SDL_PollEvent@plt>
    3ce9:	83 c4 10             	add    $0x10,%esp
    3cec:	85 c0                	test   %eax,%eax
    3cee:	74 30                	je     3d20 <NEMU_SDL_Thread+0x140>
    3cf0:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
    3cf5:	3c 0c                	cmp    $0xc,%al
    3cf7:	74 57                	je     3d50 <NEMU_SDL_Thread+0x170>
    3cf9:	3c 02                	cmp    $0x2,%al
    3cfb:	74 63                	je     3d60 <NEMU_SDL_Thread+0x180>
    3cfd:	3c 03                	cmp    $0x3,%al
    3cff:	75 df                	jne    3ce0 <NEMU_SDL_Thread+0x100>
    3d01:	83 ec 0c             	sub    $0xc,%esp
    3d04:	ff 74 24 30          	pushl  0x30(%esp)
    3d08:	e8 03 fe ff ff       	call   3b10 <keyboard_up>
    3d0d:	83 c4 10             	add    $0x10,%esp
    3d10:	83 ec 0c             	sub    $0xc,%esp
    3d13:	56                   	push   %esi
    3d14:	e8 07 e9 ff ff       	call   2620 <SDL_PollEvent@plt>
    3d19:	83 c4 10             	add    $0x10,%esp
    3d1c:	85 c0                	test   %eax,%eax
    3d1e:	75 d0                	jne    3cf0 <NEMU_SDL_Thread+0x110>
    3d20:	83 c7 01             	add    $0x1,%edi
    3d23:	83 d5 00             	adc    $0x0,%ebp
    3d26:	83 ec 0c             	sub    $0xc,%esp
    3d29:	6a 0a                	push   $0xa
    3d2b:	e8 10 e9 ff ff       	call   2640 <SDL_Delay@plt>
    3d30:	83 c4 10             	add    $0x10,%esp
    3d33:	80 bb 8c 14 05 00 00 	cmpb   $0x0,0x5148c(%ebx)
    3d3a:	75 8c                	jne    3cc8 <NEMU_SDL_Thread+0xe8>
    3d3c:	e8 5f fd ff ff       	call   3aa0 <close_vga>
    3d41:	e8 6a e8 ff ff       	call   25b0 <SDL_Quit@plt>
    3d46:	83 c4 3c             	add    $0x3c,%esp
    3d49:	31 c0                	xor    %eax,%eax
    3d4b:	5b                   	pop    %ebx
    3d4c:	5e                   	pop    %esi
    3d4d:	5f                   	pop    %edi
    3d4e:	5d                   	pop    %ebp
    3d4f:	c3                   	ret    
    3d50:	8b 44 24 0c          	mov    0xc(%esp),%eax
    3d54:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    3d5a:	eb 84                	jmp    3ce0 <NEMU_SDL_Thread+0x100>
    3d5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3d60:	83 ec 0c             	sub    $0xc,%esp
    3d63:	ff 74 24 30          	pushl  0x30(%esp)
    3d67:	e8 64 fd ff ff       	call   3ad0 <keyboard_down>
    3d6c:	83 c4 10             	add    $0x10,%esp
    3d6f:	e9 6c ff ff ff       	jmp    3ce0 <NEMU_SDL_Thread+0x100>
    3d74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3d78:	e8 03 fb ff ff       	call   3880 <update_screen>
    3d7d:	e9 5e ff ff ff       	jmp    3ce0 <NEMU_SDL_Thread+0x100>
    3d82:	8d 83 00 fd fe ff    	lea    -0x10300(%ebx),%eax
    3d88:	50                   	push   %eax
    3d89:	8d 83 c0 fc fe ff    	lea    -0x10340(%ebx),%eax
    3d8f:	6a 1d                	push   $0x1d
    3d91:	50                   	push   %eax
    3d92:	8d 83 d1 fc fe ff    	lea    -0x1032f(%ebx),%eax
    3d98:	50                   	push   %eax
    3d99:	e8 f2 ea ff ff       	call   2890 <__assert_fail@plt>
    3d9e:	66 90                	xchg   %ax,%ax

00003da0 <close_sdl>:
    3da0:	e8 45 f5 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    3da5:	05 5b 72 02 00       	add    $0x2725b,%eax
    3daa:	80 b8 8c 14 05 00 00 	cmpb   $0x0,0x5148c(%eax)
    3db1:	74 07                	je     3dba <close_sdl+0x1a>
    3db3:	c6 80 8c 14 05 00 00 	movb   $0x0,0x5148c(%eax)
    3dba:	f3 c3                	repz ret 
    3dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00003dc0 <init_sdl>:
    3dc0:	53                   	push   %ebx
    3dc1:	e8 fa ee ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3dc6:	81 c3 3a 72 02 00    	add    $0x2723a,%ebx
    3dcc:	83 ec 08             	sub    $0x8,%esp
    3dcf:	80 bb 8c 14 05 00 00 	cmpb   $0x0,0x5148c(%ebx)
    3dd6:	74 08                	je     3de0 <init_sdl+0x20>
    3dd8:	83 c4 08             	add    $0x8,%esp
    3ddb:	5b                   	pop    %ebx
    3ddc:	c3                   	ret    
    3ddd:	8d 76 00             	lea    0x0(%esi),%esi
    3de0:	e8 8b fc ff ff       	call   3a70 <init_vga>
    3de5:	8d 83 e0 8b fd ff    	lea    -0x27420(%ebx),%eax
    3deb:	83 ec 08             	sub    $0x8,%esp
    3dee:	6a 00                	push   $0x0
    3df0:	50                   	push   %eax
    3df1:	e8 8a e8 ff ff       	call   2680 <SDL_CreateThread@plt>
    3df6:	83 c4 10             	add    $0x10,%esp
    3df9:	85 c0                	test   %eax,%eax
    3dfb:	75 db                	jne    3dd8 <init_sdl+0x18>
    3dfd:	e8 5e e8 ff ff       	call   2660 <SDL_GetError@plt>
    3e02:	52                   	push   %edx
    3e03:	52                   	push   %edx
    3e04:	50                   	push   %eax
    3e05:	8d 83 e0 fc fe ff    	lea    -0x10320(%ebx),%eax
    3e0b:	50                   	push   %eax
    3e0c:	e8 af e9 ff ff       	call   27c0 <printf@plt>
    3e11:	8d 83 10 fd fe ff    	lea    -0x102f0(%ebx),%eax
    3e17:	50                   	push   %eax
    3e18:	8d 83 c0 fc fe ff    	lea    -0x10340(%ebx),%eax
    3e1e:	6a 70                	push   $0x70
    3e20:	50                   	push   %eax
    3e21:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
    3e27:	50                   	push   %eax
    3e28:	e8 63 ea ff ff       	call   2890 <__assert_fail@plt>
    3e2d:	66 90                	xchg   %ax,%ax
    3e2f:	90                   	nop

00003e30 <print_asm_0>:
    3e30:	55                   	push   %ebp
    3e31:	57                   	push   %edi
    3e32:	56                   	push   %esi
    3e33:	53                   	push   %ebx
    3e34:	e8 87 ee ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3e39:	81 c3 c7 71 02 00    	add    $0x271c7,%ebx
    3e3f:	83 ec 1c             	sub    $0x1c,%esp
    3e42:	8d 83 8d 14 05 00    	lea    0x5148d(%ebx),%eax
    3e48:	8b 74 24 38          	mov    0x38(%esp),%esi
    3e4c:	80 38 00             	cmpb   $0x0,(%eax)
    3e4f:	0f 84 a8 00 00 00    	je     3efd <print_asm_0+0xcd>
    3e55:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    3e5b:	83 ec 08             	sub    $0x8,%esp
    3e5e:	8d ab 22 fd fe ff    	lea    -0x102de(%ebx),%ebp
    3e64:	89 44 24 14          	mov    %eax,0x14(%esp)
    3e68:	ff 70 20             	pushl  0x20(%eax)
    3e6b:	8d 83 19 fd fe ff    	lea    -0x102e7(%ebx),%eax
    3e71:	50                   	push   %eax
    3e72:	e8 49 e9 ff ff       	call   27c0 <printf@plt>
    3e77:	89 f0                	mov    %esi,%eax
    3e79:	83 c4 10             	add    $0x10,%esp
    3e7c:	3c 0d                	cmp    $0xd,%al
    3e7e:	b8 0d 00 00 00       	mov    $0xd,%eax
    3e83:	0f 46 c6             	cmovbe %esi,%eax
    3e86:	31 ff                	xor    %edi,%edi
    3e88:	0f b6 f0             	movzbl %al,%esi
    3e8b:	85 f6                	test   %esi,%esi
    3e8d:	74 76                	je     3f05 <print_asm_0+0xd5>
    3e8f:	90                   	nop
    3e90:	83 ec 08             	sub    $0x8,%esp
    3e93:	6a 01                	push   $0x1
    3e95:	8b 54 24 18          	mov    0x18(%esp),%edx
    3e99:	8b 42 20             	mov    0x20(%edx),%eax
    3e9c:	01 f8                	add    %edi,%eax
    3e9e:	83 c7 01             	add    $0x1,%edi
    3ea1:	50                   	push   %eax
    3ea2:	e8 39 64 01 00       	call   1a2e0 <instr_fetch>
    3ea7:	5a                   	pop    %edx
    3ea8:	59                   	pop    %ecx
    3ea9:	50                   	push   %eax
    3eaa:	55                   	push   %ebp
    3eab:	e8 10 e9 ff ff       	call   27c0 <printf@plt>
    3eb0:	83 c4 10             	add    $0x10,%esp
    3eb3:	39 f7                	cmp    %esi,%edi
    3eb5:	75 d9                	jne    3e90 <print_asm_0+0x60>
    3eb7:	be 0d 00 00 00       	mov    $0xd,%esi
    3ebc:	29 fe                	sub    %edi,%esi
    3ebe:	8d bb 1e fd fe ff    	lea    -0x102e2(%ebx),%edi
    3ec4:	31 ed                	xor    %ebp,%ebp
    3ec6:	8d 76 00             	lea    0x0(%esi),%esi
    3ec9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    3ed0:	83 ec 0c             	sub    $0xc,%esp
    3ed3:	83 c5 01             	add    $0x1,%ebp
    3ed6:	57                   	push   %edi
    3ed7:	e8 e4 e8 ff ff       	call   27c0 <printf@plt>
    3edc:	83 c4 10             	add    $0x10,%esp
    3edf:	39 f5                	cmp    %esi,%ebp
    3ee1:	7e ed                	jle    3ed0 <print_asm_0+0xa0>
    3ee3:	8d 83 28 fd fe ff    	lea    -0x102d8(%ebx),%eax
    3ee9:	83 ec 04             	sub    $0x4,%esp
    3eec:	ff 74 24 38          	pushl  0x38(%esp)
    3ef0:	ff 74 24 38          	pushl  0x38(%esp)
    3ef4:	50                   	push   %eax
    3ef5:	e8 c6 e8 ff ff       	call   27c0 <printf@plt>
    3efa:	83 c4 10             	add    $0x10,%esp
    3efd:	83 c4 1c             	add    $0x1c,%esp
    3f00:	5b                   	pop    %ebx
    3f01:	5e                   	pop    %esi
    3f02:	5f                   	pop    %edi
    3f03:	5d                   	pop    %ebp
    3f04:	c3                   	ret    
    3f05:	be 0d 00 00 00       	mov    $0xd,%esi
    3f0a:	eb b2                	jmp    3ebe <print_asm_0+0x8e>
    3f0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00003f10 <print_asm_1>:
    3f10:	55                   	push   %ebp
    3f11:	57                   	push   %edi
    3f12:	56                   	push   %esi
    3f13:	53                   	push   %ebx
    3f14:	e8 a7 ed ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    3f19:	81 c3 e7 70 02 00    	add    $0x270e7,%ebx
    3f1f:	83 ec 1c             	sub    $0x1c,%esp
    3f22:	8d 83 8d 14 05 00    	lea    0x5148d(%ebx),%eax
    3f28:	8b 74 24 38          	mov    0x38(%esp),%esi
    3f2c:	80 38 00             	cmpb   $0x0,(%eax)
    3f2f:	0f 84 b9 00 00 00    	je     3fee <print_asm_1+0xde>
    3f35:	8d 83 a0 1c 05 00    	lea    0x51ca0(%ebx),%eax
    3f3b:	83 ec 08             	sub    $0x8,%esp
    3f3e:	89 44 24 14          	mov    %eax,0x14(%esp)
    3f42:	50                   	push   %eax
    3f43:	ff 74 24 48          	pushl  0x48(%esp)
    3f47:	e8 74 0a 00 00       	call   49c0 <parse_operand_address>
    3f4c:	5f                   	pop    %edi
    3f4d:	5d                   	pop    %ebp
    3f4e:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    3f54:	8d ab 22 fd fe ff    	lea    -0x102de(%ebx),%ebp
    3f5a:	89 44 24 10          	mov    %eax,0x10(%esp)
    3f5e:	ff 70 20             	pushl  0x20(%eax)
    3f61:	8d 83 19 fd fe ff    	lea    -0x102e7(%ebx),%eax
    3f67:	50                   	push   %eax
    3f68:	e8 53 e8 ff ff       	call   27c0 <printf@plt>
    3f6d:	89 f0                	mov    %esi,%eax
    3f6f:	83 c4 10             	add    $0x10,%esp
    3f72:	3c 0d                	cmp    $0xd,%al
    3f74:	b8 0d 00 00 00       	mov    $0xd,%eax
    3f79:	0f 46 c6             	cmovbe %esi,%eax
    3f7c:	31 ff                	xor    %edi,%edi
    3f7e:	0f b6 f0             	movzbl %al,%esi
    3f81:	85 f6                	test   %esi,%esi
    3f83:	74 71                	je     3ff6 <print_asm_1+0xe6>
    3f85:	8d 76 00             	lea    0x0(%esi),%esi
    3f88:	83 ec 08             	sub    $0x8,%esp
    3f8b:	6a 01                	push   $0x1
    3f8d:	8b 54 24 14          	mov    0x14(%esp),%edx
    3f91:	8b 42 20             	mov    0x20(%edx),%eax
    3f94:	01 f8                	add    %edi,%eax
    3f96:	83 c7 01             	add    $0x1,%edi
    3f99:	50                   	push   %eax
    3f9a:	e8 41 63 01 00       	call   1a2e0 <instr_fetch>
    3f9f:	5a                   	pop    %edx
    3fa0:	59                   	pop    %ecx
    3fa1:	50                   	push   %eax
    3fa2:	55                   	push   %ebp
    3fa3:	e8 18 e8 ff ff       	call   27c0 <printf@plt>
    3fa8:	83 c4 10             	add    $0x10,%esp
    3fab:	39 f7                	cmp    %esi,%edi
    3fad:	75 d9                	jne    3f88 <print_asm_1+0x78>
    3faf:	be 0d 00 00 00       	mov    $0xd,%esi
    3fb4:	29 fe                	sub    %edi,%esi
    3fb6:	8d bb 1e fd fe ff    	lea    -0x102e2(%ebx),%edi
    3fbc:	31 ed                	xor    %ebp,%ebp
    3fbe:	66 90                	xchg   %ax,%ax
    3fc0:	83 ec 0c             	sub    $0xc,%esp
    3fc3:	83 c5 01             	add    $0x1,%ebp
    3fc6:	57                   	push   %edi
    3fc7:	e8 f4 e7 ff ff       	call   27c0 <printf@plt>
    3fcc:	83 c4 10             	add    $0x10,%esp
    3fcf:	39 f5                	cmp    %esi,%ebp
    3fd1:	7e ed                	jle    3fc0 <print_asm_1+0xb0>
    3fd3:	8d 83 2e fd fe ff    	lea    -0x102d2(%ebx),%eax
    3fd9:	ff 74 24 0c          	pushl  0xc(%esp)
    3fdd:	ff 74 24 38          	pushl  0x38(%esp)
    3fe1:	ff 74 24 38          	pushl  0x38(%esp)
    3fe5:	50                   	push   %eax
    3fe6:	e8 d5 e7 ff ff       	call   27c0 <printf@plt>
    3feb:	83 c4 10             	add    $0x10,%esp
    3fee:	83 c4 1c             	add    $0x1c,%esp
    3ff1:	5b                   	pop    %ebx
    3ff2:	5e                   	pop    %esi
    3ff3:	5f                   	pop    %edi
    3ff4:	5d                   	pop    %ebp
    3ff5:	c3                   	ret    
    3ff6:	be 0d 00 00 00       	mov    $0xd,%esi
    3ffb:	eb b9                	jmp    3fb6 <print_asm_1+0xa6>
    3ffd:	8d 76 00             	lea    0x0(%esi),%esi

00004000 <print_asm_2>:
    4000:	55                   	push   %ebp
    4001:	57                   	push   %edi
    4002:	56                   	push   %esi
    4003:	53                   	push   %ebx
    4004:	e8 b7 ec ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4009:	81 c3 f7 6f 02 00    	add    $0x26ff7,%ebx
    400f:	83 ec 1c             	sub    $0x1c,%esp
    4012:	8d 83 8d 14 05 00    	lea    0x5148d(%ebx),%eax
    4018:	8b 74 24 38          	mov    0x38(%esp),%esi
    401c:	80 38 00             	cmpb   $0x0,(%eax)
    401f:	0f 84 e0 00 00 00    	je     4105 <print_asm_2+0x105>
    4025:	8d 83 a0 1c 05 00    	lea    0x51ca0(%ebx),%eax
    402b:	83 ec 08             	sub    $0x8,%esp
    402e:	89 44 24 10          	mov    %eax,0x10(%esp)
    4032:	50                   	push   %eax
    4033:	ff 74 24 48          	pushl  0x48(%esp)
    4037:	e8 84 09 00 00       	call   49c0 <parse_operand_address>
    403c:	5f                   	pop    %edi
    403d:	5d                   	pop    %ebp
    403e:	8d 83 60 1c 05 00    	lea    0x51c60(%ebx),%eax
    4044:	8d ab 22 fd fe ff    	lea    -0x102de(%ebx),%ebp
    404a:	89 44 24 14          	mov    %eax,0x14(%esp)
    404e:	50                   	push   %eax
    404f:	ff 74 24 4c          	pushl  0x4c(%esp)
    4053:	e8 68 09 00 00       	call   49c0 <parse_operand_address>
    4058:	58                   	pop    %eax
    4059:	5a                   	pop    %edx
    405a:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4060:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4064:	ff 70 20             	pushl  0x20(%eax)
    4067:	8d 83 19 fd fe ff    	lea    -0x102e7(%ebx),%eax
    406d:	50                   	push   %eax
    406e:	e8 4d e7 ff ff       	call   27c0 <printf@plt>
    4073:	89 f0                	mov    %esi,%eax
    4075:	83 c4 10             	add    $0x10,%esp
    4078:	3c 0d                	cmp    $0xd,%al
    407a:	b8 0d 00 00 00       	mov    $0xd,%eax
    407f:	0f 46 c6             	cmovbe %esi,%eax
    4082:	31 ff                	xor    %edi,%edi
    4084:	0f b6 f0             	movzbl %al,%esi
    4087:	85 f6                	test   %esi,%esi
    4089:	0f 84 7e 00 00 00    	je     410d <print_asm_2+0x10d>
    408f:	90                   	nop
    4090:	83 ec 08             	sub    $0x8,%esp
    4093:	6a 01                	push   $0x1
    4095:	8b 54 24 10          	mov    0x10(%esp),%edx
    4099:	8b 42 20             	mov    0x20(%edx),%eax
    409c:	01 f8                	add    %edi,%eax
    409e:	83 c7 01             	add    $0x1,%edi
    40a1:	50                   	push   %eax
    40a2:	e8 39 62 01 00       	call   1a2e0 <instr_fetch>
    40a7:	5a                   	pop    %edx
    40a8:	59                   	pop    %ecx
    40a9:	50                   	push   %eax
    40aa:	55                   	push   %ebp
    40ab:	e8 10 e7 ff ff       	call   27c0 <printf@plt>
    40b0:	83 c4 10             	add    $0x10,%esp
    40b3:	39 f7                	cmp    %esi,%edi
    40b5:	75 d9                	jne    4090 <print_asm_2+0x90>
    40b7:	be 0d 00 00 00       	mov    $0xd,%esi
    40bc:	29 fe                	sub    %edi,%esi
    40be:	8d bb 1e fd fe ff    	lea    -0x102e2(%ebx),%edi
    40c4:	31 ed                	xor    %ebp,%ebp
    40c6:	8d 76 00             	lea    0x0(%esi),%esi
    40c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    40d0:	83 ec 0c             	sub    $0xc,%esp
    40d3:	83 c5 01             	add    $0x1,%ebp
    40d6:	57                   	push   %edi
    40d7:	e8 e4 e6 ff ff       	call   27c0 <printf@plt>
    40dc:	83 c4 10             	add    $0x10,%esp
    40df:	39 f5                	cmp    %esi,%ebp
    40e1:	7e ed                	jle    40d0 <print_asm_2+0xd0>
    40e3:	8d 83 37 fd fe ff    	lea    -0x102c9(%ebx),%eax
    40e9:	83 ec 0c             	sub    $0xc,%esp
    40ec:	ff 74 24 18          	pushl  0x18(%esp)
    40f0:	ff 74 24 18          	pushl  0x18(%esp)
    40f4:	ff 74 24 48          	pushl  0x48(%esp)
    40f8:	ff 74 24 48          	pushl  0x48(%esp)
    40fc:	50                   	push   %eax
    40fd:	e8 be e6 ff ff       	call   27c0 <printf@plt>
    4102:	83 c4 20             	add    $0x20,%esp
    4105:	83 c4 1c             	add    $0x1c,%esp
    4108:	5b                   	pop    %ebx
    4109:	5e                   	pop    %esi
    410a:	5f                   	pop    %edi
    410b:	5d                   	pop    %ebp
    410c:	c3                   	ret    
    410d:	be 0d 00 00 00       	mov    $0xd,%esi
    4112:	eb aa                	jmp    40be <print_asm_2+0xbe>
    4114:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    411a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00004120 <print_asm_3>:
    4120:	55                   	push   %ebp
    4121:	57                   	push   %edi
    4122:	56                   	push   %esi
    4123:	53                   	push   %ebx
    4124:	e8 97 eb ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4129:	81 c3 d7 6e 02 00    	add    $0x26ed7,%ebx
    412f:	83 ec 1c             	sub    $0x1c,%esp
    4132:	8d 83 8d 14 05 00    	lea    0x5148d(%ebx),%eax
    4138:	8b 74 24 38          	mov    0x38(%esp),%esi
    413c:	80 38 00             	cmpb   $0x0,(%eax)
    413f:	0f 84 f4 00 00 00    	je     4239 <print_asm_3+0x119>
    4145:	8d 83 a0 1c 05 00    	lea    0x51ca0(%ebx),%eax
    414b:	83 ec 08             	sub    $0x8,%esp
    414e:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4152:	50                   	push   %eax
    4153:	ff 74 24 48          	pushl  0x48(%esp)
    4157:	e8 64 08 00 00       	call   49c0 <parse_operand_address>
    415c:	5f                   	pop    %edi
    415d:	5d                   	pop    %ebp
    415e:	8d 83 60 1c 05 00    	lea    0x51c60(%ebx),%eax
    4164:	8d ab 22 fd fe ff    	lea    -0x102de(%ebx),%ebp
    416a:	89 44 24 10          	mov    %eax,0x10(%esp)
    416e:	50                   	push   %eax
    416f:	ff 74 24 4c          	pushl  0x4c(%esp)
    4173:	e8 48 08 00 00       	call   49c0 <parse_operand_address>
    4178:	58                   	pop    %eax
    4179:	5a                   	pop    %edx
    417a:	8d 83 20 1c 05 00    	lea    0x51c20(%ebx),%eax
    4180:	89 44 24 14          	mov    %eax,0x14(%esp)
    4184:	50                   	push   %eax
    4185:	ff 74 24 50          	pushl  0x50(%esp)
    4189:	e8 32 08 00 00       	call   49c0 <parse_operand_address>
    418e:	59                   	pop    %ecx
    418f:	5f                   	pop    %edi
    4190:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4196:	89 44 24 08          	mov    %eax,0x8(%esp)
    419a:	ff 70 20             	pushl  0x20(%eax)
    419d:	8d 83 19 fd fe ff    	lea    -0x102e7(%ebx),%eax
    41a3:	50                   	push   %eax
    41a4:	e8 17 e6 ff ff       	call   27c0 <printf@plt>
    41a9:	89 f0                	mov    %esi,%eax
    41ab:	83 c4 10             	add    $0x10,%esp
    41ae:	3c 0d                	cmp    $0xd,%al
    41b0:	b8 0d 00 00 00       	mov    $0xd,%eax
    41b5:	0f 46 c6             	cmovbe %esi,%eax
    41b8:	31 ff                	xor    %edi,%edi
    41ba:	0f b6 f0             	movzbl %al,%esi
    41bd:	85 f6                	test   %esi,%esi
    41bf:	0f 84 7c 00 00 00    	je     4241 <print_asm_3+0x121>
    41c5:	8d 76 00             	lea    0x0(%esi),%esi
    41c8:	83 ec 08             	sub    $0x8,%esp
    41cb:	6a 01                	push   $0x1
    41cd:	8b 54 24 0c          	mov    0xc(%esp),%edx
    41d1:	8b 42 20             	mov    0x20(%edx),%eax
    41d4:	01 f8                	add    %edi,%eax
    41d6:	83 c7 01             	add    $0x1,%edi
    41d9:	50                   	push   %eax
    41da:	e8 01 61 01 00       	call   1a2e0 <instr_fetch>
    41df:	5a                   	pop    %edx
    41e0:	59                   	pop    %ecx
    41e1:	50                   	push   %eax
    41e2:	55                   	push   %ebp
    41e3:	e8 d8 e5 ff ff       	call   27c0 <printf@plt>
    41e8:	83 c4 10             	add    $0x10,%esp
    41eb:	39 f7                	cmp    %esi,%edi
    41ed:	75 d9                	jne    41c8 <print_asm_3+0xa8>
    41ef:	be 0d 00 00 00       	mov    $0xd,%esi
    41f4:	29 fe                	sub    %edi,%esi
    41f6:	8d bb 1e fd fe ff    	lea    -0x102e2(%ebx),%edi
    41fc:	31 ed                	xor    %ebp,%ebp
    41fe:	66 90                	xchg   %ax,%ax
    4200:	83 ec 0c             	sub    $0xc,%esp
    4203:	83 c5 01             	add    $0x1,%ebp
    4206:	57                   	push   %edi
    4207:	e8 b4 e5 ff ff       	call   27c0 <printf@plt>
    420c:	83 c4 10             	add    $0x10,%esp
    420f:	39 f5                	cmp    %esi,%ebp
    4211:	7e ed                	jle    4200 <print_asm_3+0xe0>
    4213:	8d 83 44 fd fe ff    	lea    -0x102bc(%ebx),%eax
    4219:	83 ec 08             	sub    $0x8,%esp
    421c:	ff 74 24 14          	pushl  0x14(%esp)
    4220:	ff 74 24 14          	pushl  0x14(%esp)
    4224:	ff 74 24 14          	pushl  0x14(%esp)
    4228:	ff 74 24 48          	pushl  0x48(%esp)
    422c:	ff 74 24 48          	pushl  0x48(%esp)
    4230:	50                   	push   %eax
    4231:	e8 8a e5 ff ff       	call   27c0 <printf@plt>
    4236:	83 c4 20             	add    $0x20,%esp
    4239:	83 c4 1c             	add    $0x1c,%esp
    423c:	5b                   	pop    %ebx
    423d:	5e                   	pop    %esi
    423e:	5f                   	pop    %edi
    423f:	5d                   	pop    %ebp
    4240:	c3                   	ret    
    4241:	be 0d 00 00 00       	mov    $0xd,%esi
    4246:	eb ae                	jmp    41f6 <print_asm_3+0xd6>
    4248:	66 90                	xchg   %ax,%ax
    424a:	66 90                	xchg   %ax,%ax
    424c:	66 90                	xchg   %ax,%ax
    424e:	66 90                	xchg   %ax,%ax

00004250 <case_mod_00>:
    4250:	56                   	push   %esi
    4251:	53                   	push   %ebx
    4252:	e8 69 ea ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4257:	81 c3 a9 6d 02 00    	add    $0x26da9,%ebx
    425d:	83 ec 04             	sub    $0x4,%esp
    4260:	0f b6 44 24 14       	movzbl 0x14(%esp),%eax
    4265:	8b 74 24 18          	mov    0x18(%esp),%esi
    4269:	83 e0 07             	and    $0x7,%eax
    426c:	3c 04                	cmp    $0x4,%al
    426e:	74 60                	je     42d0 <case_mod_00+0x80>
    4270:	3c 05                	cmp    $0x5,%al
    4272:	74 2c                	je     42a0 <case_mod_00+0x50>
    4274:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    427a:	0f b6 c0             	movzbl %al,%eax
    427d:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
    4283:	c6 46 08 03          	movb   $0x3,0x8(%esi)
    4287:	8b 14 82             	mov    (%edx,%eax,4),%edx
    428a:	89 46 18             	mov    %eax,0x18(%esi)
    428d:	31 c0                	xor    %eax,%eax
    428f:	89 56 04             	mov    %edx,0x4(%esi)
    4292:	83 c4 04             	add    $0x4,%esp
    4295:	5b                   	pop    %ebx
    4296:	5e                   	pop    %esi
    4297:	c3                   	ret    
    4298:	90                   	nop
    4299:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    42a0:	83 ec 08             	sub    $0x8,%esp
    42a3:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
    42a9:	c6 46 08 03          	movb   $0x3,0x8(%esi)
    42ad:	6a 04                	push   $0x4
    42af:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    42b3:	83 c0 01             	add    $0x1,%eax
    42b6:	50                   	push   %eax
    42b7:	e8 24 60 01 00       	call   1a2e0 <instr_fetch>
    42bc:	83 c4 10             	add    $0x10,%esp
    42bf:	89 46 04             	mov    %eax,0x4(%esi)
    42c2:	89 46 14             	mov    %eax,0x14(%esi)
    42c5:	83 c4 04             	add    $0x4,%esp
    42c8:	b8 04 00 00 00       	mov    $0x4,%eax
    42cd:	5b                   	pop    %ebx
    42ce:	5e                   	pop    %esi
    42cf:	c3                   	ret    
    42d0:	83 ec 04             	sub    $0x4,%esp
    42d3:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
    42d9:	56                   	push   %esi
    42da:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    42de:	c1 e8 06             	shr    $0x6,%eax
    42e1:	83 e0 03             	and    $0x3,%eax
    42e4:	50                   	push   %eax
    42e5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    42e9:	83 c0 01             	add    $0x1,%eax
    42ec:	50                   	push   %eax
    42ed:	e8 ae 09 00 00       	call   4ca0 <parse_sib>
    42f2:	83 c4 10             	add    $0x10,%esp
    42f5:	83 c4 04             	add    $0x4,%esp
    42f8:	5b                   	pop    %ebx
    42f9:	5e                   	pop    %esi
    42fa:	c3                   	ret    
    42fb:	90                   	nop
    42fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004300 <case_mod_01>:
    4300:	55                   	push   %ebp
    4301:	57                   	push   %edi
    4302:	56                   	push   %esi
    4303:	53                   	push   %ebx
    4304:	e8 b7 e9 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4309:	81 c3 f7 6c 02 00    	add    $0x26cf7,%ebx
    430f:	83 ec 0c             	sub    $0xc,%esp
    4312:	8b 44 24 24          	mov    0x24(%esp),%eax
    4316:	8b 74 24 28          	mov    0x28(%esp),%esi
    431a:	8b 6c 24 20          	mov    0x20(%esp),%ebp
    431e:	89 c7                	mov    %eax,%edi
    4320:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
    4326:	83 e7 07             	and    $0x7,%edi
    4329:	89 f9                	mov    %edi,%ecx
    432b:	80 f9 04             	cmp    $0x4,%cl
    432e:	74 48                	je     4378 <case_mod_01+0x78>
    4330:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    4336:	0f b6 c1             	movzbl %cl,%eax
    4339:	83 ec 08             	sub    $0x8,%esp
    433c:	83 c5 01             	add    $0x1,%ebp
    433f:	8b 14 82             	mov    (%edx,%eax,4),%edx
    4342:	89 46 18             	mov    %eax,0x18(%esi)
    4345:	89 56 04             	mov    %edx,0x4(%esi)
    4348:	6a 01                	push   $0x1
    434a:	55                   	push   %ebp
    434b:	e8 90 5f 01 00       	call   1a2e0 <instr_fetch>
    4350:	0f be d0             	movsbl %al,%edx
    4353:	89 f8                	mov    %edi,%eax
    4355:	83 c4 10             	add    $0x10,%esp
    4358:	3c 05                	cmp    $0x5,%al
    435a:	74 5c                	je     43b8 <case_mod_01+0xb8>
    435c:	c6 46 08 03          	movb   $0x3,0x8(%esi)
    4360:	01 56 04             	add    %edx,0x4(%esi)
    4363:	b8 01 00 00 00       	mov    $0x1,%eax
    4368:	89 56 14             	mov    %edx,0x14(%esi)
    436b:	83 c4 0c             	add    $0xc,%esp
    436e:	5b                   	pop    %ebx
    436f:	5e                   	pop    %esi
    4370:	5f                   	pop    %edi
    4371:	5d                   	pop    %ebp
    4372:	c3                   	ret    
    4373:	90                   	nop
    4374:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4378:	c1 e8 06             	shr    $0x6,%eax
    437b:	83 ec 04             	sub    $0x4,%esp
    437e:	83 e0 03             	and    $0x3,%eax
    4381:	56                   	push   %esi
    4382:	50                   	push   %eax
    4383:	8d 45 01             	lea    0x1(%ebp),%eax
    4386:	83 c5 02             	add    $0x2,%ebp
    4389:	50                   	push   %eax
    438a:	e8 11 09 00 00       	call   4ca0 <parse_sib>
    438f:	89 c7                	mov    %eax,%edi
    4391:	58                   	pop    %eax
    4392:	5a                   	pop    %edx
    4393:	6a 01                	push   $0x1
    4395:	55                   	push   %ebp
    4396:	e8 45 5f 01 00       	call   1a2e0 <instr_fetch>
    439b:	83 c4 10             	add    $0x10,%esp
    439e:	0f be d0             	movsbl %al,%edx
    43a1:	01 56 04             	add    %edx,0x4(%esi)
    43a4:	89 56 14             	mov    %edx,0x14(%esi)
    43a7:	83 c4 0c             	add    $0xc,%esp
    43aa:	8d 47 01             	lea    0x1(%edi),%eax
    43ad:	5b                   	pop    %ebx
    43ae:	5e                   	pop    %esi
    43af:	5f                   	pop    %edi
    43b0:	5d                   	pop    %ebp
    43b1:	c3                   	ret    
    43b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    43b8:	c6 46 08 02          	movb   $0x2,0x8(%esi)
    43bc:	01 56 04             	add    %edx,0x4(%esi)
    43bf:	b8 01 00 00 00       	mov    $0x1,%eax
    43c4:	89 56 14             	mov    %edx,0x14(%esi)
    43c7:	83 c4 0c             	add    $0xc,%esp
    43ca:	5b                   	pop    %ebx
    43cb:	5e                   	pop    %esi
    43cc:	5f                   	pop    %edi
    43cd:	5d                   	pop    %ebp
    43ce:	c3                   	ret    
    43cf:	90                   	nop

000043d0 <case_mod_10>:
    43d0:	55                   	push   %ebp
    43d1:	57                   	push   %edi
    43d2:	56                   	push   %esi
    43d3:	53                   	push   %ebx
    43d4:	e8 e7 e8 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    43d9:	81 c3 27 6c 02 00    	add    $0x26c27,%ebx
    43df:	83 ec 0c             	sub    $0xc,%esp
    43e2:	8b 44 24 24          	mov    0x24(%esp),%eax
    43e6:	8b 74 24 28          	mov    0x28(%esp),%esi
    43ea:	8b 7c 24 20          	mov    0x20(%esp),%edi
    43ee:	89 c5                	mov    %eax,%ebp
    43f0:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
    43f6:	83 e5 07             	and    $0x7,%ebp
    43f9:	89 e9                	mov    %ebp,%ecx
    43fb:	80 f9 04             	cmp    $0x4,%cl
    43fe:	74 48                	je     4448 <case_mod_10+0x78>
    4400:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    4406:	0f b6 c1             	movzbl %cl,%eax
    4409:	83 ec 08             	sub    $0x8,%esp
    440c:	83 c7 01             	add    $0x1,%edi
    440f:	8b 14 82             	mov    (%edx,%eax,4),%edx
    4412:	89 46 18             	mov    %eax,0x18(%esi)
    4415:	89 56 04             	mov    %edx,0x4(%esi)
    4418:	6a 04                	push   $0x4
    441a:	57                   	push   %edi
    441b:	e8 c0 5e 01 00       	call   1a2e0 <instr_fetch>
    4420:	89 c2                	mov    %eax,%edx
    4422:	89 e8                	mov    %ebp,%eax
    4424:	83 c4 10             	add    $0x10,%esp
    4427:	3c 05                	cmp    $0x5,%al
    4429:	74 5d                	je     4488 <case_mod_10+0xb8>
    442b:	c6 46 08 03          	movb   $0x3,0x8(%esi)
    442f:	01 56 04             	add    %edx,0x4(%esi)
    4432:	b8 04 00 00 00       	mov    $0x4,%eax
    4437:	89 56 14             	mov    %edx,0x14(%esi)
    443a:	83 c4 0c             	add    $0xc,%esp
    443d:	5b                   	pop    %ebx
    443e:	5e                   	pop    %esi
    443f:	5f                   	pop    %edi
    4440:	5d                   	pop    %ebp
    4441:	c3                   	ret    
    4442:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4448:	c1 e8 06             	shr    $0x6,%eax
    444b:	83 ec 04             	sub    $0x4,%esp
    444e:	83 e0 03             	and    $0x3,%eax
    4451:	56                   	push   %esi
    4452:	50                   	push   %eax
    4453:	8d 47 01             	lea    0x1(%edi),%eax
    4456:	83 c7 02             	add    $0x2,%edi
    4459:	50                   	push   %eax
    445a:	e8 41 08 00 00       	call   4ca0 <parse_sib>
    445f:	89 c5                	mov    %eax,%ebp
    4461:	58                   	pop    %eax
    4462:	5a                   	pop    %edx
    4463:	6a 04                	push   $0x4
    4465:	57                   	push   %edi
    4466:	e8 75 5e 01 00       	call   1a2e0 <instr_fetch>
    446b:	83 c4 10             	add    $0x10,%esp
    446e:	89 c2                	mov    %eax,%edx
    4470:	01 56 04             	add    %edx,0x4(%esi)
    4473:	89 56 14             	mov    %edx,0x14(%esi)
    4476:	83 c4 0c             	add    $0xc,%esp
    4479:	8d 45 04             	lea    0x4(%ebp),%eax
    447c:	5b                   	pop    %ebx
    447d:	5e                   	pop    %esi
    447e:	5f                   	pop    %edi
    447f:	5d                   	pop    %ebp
    4480:	c3                   	ret    
    4481:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4488:	c6 46 08 02          	movb   $0x2,0x8(%esi)
    448c:	01 56 04             	add    %edx,0x4(%esi)
    448f:	b8 04 00 00 00       	mov    $0x4,%eax
    4494:	89 56 14             	mov    %edx,0x14(%esi)
    4497:	83 c4 0c             	add    $0xc,%esp
    449a:	5b                   	pop    %ebx
    449b:	5e                   	pop    %esi
    449c:	5f                   	pop    %edi
    449d:	5d                   	pop    %ebp
    449e:	c3                   	ret    
    449f:	90                   	nop

000044a0 <case_mod_11>:
    44a0:	8b 44 24 08          	mov    0x8(%esp),%eax
    44a4:	8b 54 24 0c          	mov    0xc(%esp),%edx
    44a8:	83 e0 07             	and    $0x7,%eax
    44ab:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
    44b1:	89 42 04             	mov    %eax,0x4(%edx)
    44b4:	31 c0                	xor    %eax,%eax
    44b6:	c3                   	ret    
    44b7:	89 f6                	mov    %esi,%esi
    44b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000044c0 <parse_rm_32>:
    44c0:	57                   	push   %edi
    44c1:	56                   	push   %esi
    44c2:	53                   	push   %ebx
    44c3:	e8 f8 e7 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    44c8:	81 c3 38 6b 02 00    	add    $0x26b38,%ebx
    44ce:	83 ec 10             	sub    $0x10,%esp
    44d1:	8b 7c 24 24          	mov    0x24(%esp),%edi
    44d5:	8d 93 8d 14 05 00    	lea    0x5148d(%ebx),%edx
    44db:	8b 74 24 28          	mov    0x28(%esp),%esi
    44df:	89 f8                	mov    %edi,%eax
    44e1:	c1 e8 06             	shr    $0x6,%eax
    44e4:	83 e0 03             	and    $0x3,%eax
    44e7:	80 3a 00             	cmpb   $0x0,(%edx)
    44ea:	75 4c                	jne    4538 <parse_rm_32+0x78>
    44ec:	3c 02                	cmp    $0x2,%al
    44ee:	74 61                	je     4551 <parse_rm_32+0x91>
    44f0:	77 7e                	ja     4570 <parse_rm_32+0xb0>
    44f2:	3c 01                	cmp    $0x1,%al
    44f4:	74 22                	je     4518 <parse_rm_32+0x58>
    44f6:	83 ec 04             	sub    $0x4,%esp
    44f9:	56                   	push   %esi
    44fa:	57                   	push   %edi
    44fb:	ff 74 24 2c          	pushl  0x2c(%esp)
    44ff:	e8 4c fd ff ff       	call   4250 <case_mod_00>
    4504:	83 c4 10             	add    $0x10,%esp
    4507:	83 c0 01             	add    $0x1,%eax
    450a:	83 c4 10             	add    $0x10,%esp
    450d:	5b                   	pop    %ebx
    450e:	5e                   	pop    %esi
    450f:	5f                   	pop    %edi
    4510:	c3                   	ret    
    4511:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4518:	83 ec 04             	sub    $0x4,%esp
    451b:	56                   	push   %esi
    451c:	57                   	push   %edi
    451d:	ff 74 24 2c          	pushl  0x2c(%esp)
    4521:	e8 da fd ff ff       	call   4300 <case_mod_01>
    4526:	83 c4 10             	add    $0x10,%esp
    4529:	83 c0 01             	add    $0x1,%eax
    452c:	83 c4 10             	add    $0x10,%esp
    452f:	5b                   	pop    %ebx
    4530:	5e                   	pop    %esi
    4531:	5f                   	pop    %edi
    4532:	c3                   	ret    
    4533:	90                   	nop
    4534:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4538:	88 44 24 0f          	mov    %al,0xf(%esp)
    453c:	83 ec 0c             	sub    $0xc,%esp
    453f:	56                   	push   %esi
    4540:	e8 2b 07 00 00       	call   4c70 <clear_operand_mem_addr>
    4545:	83 c4 10             	add    $0x10,%esp
    4548:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    454d:	3c 02                	cmp    $0x2,%al
    454f:	75 9f                	jne    44f0 <parse_rm_32+0x30>
    4551:	83 ec 04             	sub    $0x4,%esp
    4554:	56                   	push   %esi
    4555:	57                   	push   %edi
    4556:	ff 74 24 2c          	pushl  0x2c(%esp)
    455a:	e8 71 fe ff ff       	call   43d0 <case_mod_10>
    455f:	83 c4 10             	add    $0x10,%esp
    4562:	83 c0 01             	add    $0x1,%eax
    4565:	83 c4 10             	add    $0x10,%esp
    4568:	5b                   	pop    %ebx
    4569:	5e                   	pop    %esi
    456a:	5f                   	pop    %edi
    456b:	c3                   	ret    
    456c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4570:	83 e7 07             	and    $0x7,%edi
    4573:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
    4579:	b8 01 00 00 00       	mov    $0x1,%eax
    457e:	89 7e 04             	mov    %edi,0x4(%esi)
    4581:	83 c4 10             	add    $0x10,%esp
    4584:	5b                   	pop    %ebx
    4585:	5e                   	pop    %esi
    4586:	5f                   	pop    %edi
    4587:	c3                   	ret    
    4588:	90                   	nop
    4589:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004590 <modrm_r_rm>:
    4590:	57                   	push   %edi
    4591:	56                   	push   %esi
    4592:	53                   	push   %ebx
    4593:	8b 74 24 10          	mov    0x10(%esp),%esi
    4597:	8b 7c 24 14          	mov    0x14(%esp),%edi
    459b:	83 ec 08             	sub    $0x8,%esp
    459e:	6a 01                	push   $0x1
    45a0:	56                   	push   %esi
    45a1:	e8 1a e7 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    45a6:	81 c3 5a 6a 02 00    	add    $0x26a5a,%ebx
    45ac:	e8 2f 5d 01 00       	call   1a2e0 <instr_fetch>
    45b1:	31 d2                	xor    %edx,%edx
    45b3:	83 c4 0c             	add    $0xc,%esp
    45b6:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
    45bc:	88 c2                	mov    %al,%dl
    45be:	89 d0                	mov    %edx,%eax
    45c0:	c1 e8 03             	shr    $0x3,%eax
    45c3:	83 e0 07             	and    $0x7,%eax
    45c6:	89 47 04             	mov    %eax,0x4(%edi)
    45c9:	ff 74 24 1c          	pushl  0x1c(%esp)
    45cd:	52                   	push   %edx
    45ce:	56                   	push   %esi
    45cf:	e8 ec fe ff ff       	call   44c0 <parse_rm_32>
    45d4:	83 c4 10             	add    $0x10,%esp
    45d7:	5b                   	pop    %ebx
    45d8:	5e                   	pop    %esi
    45d9:	5f                   	pop    %edi
    45da:	c3                   	ret    
    45db:	90                   	nop
    45dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000045e0 <modrm_opcode_rm>:
    45e0:	56                   	push   %esi
    45e1:	53                   	push   %ebx
    45e2:	e8 d9 e6 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    45e7:	81 c3 19 6a 02 00    	add    $0x26a19,%ebx
    45ed:	83 ec 0c             	sub    $0xc,%esp
    45f0:	8b 74 24 18          	mov    0x18(%esp),%esi
    45f4:	6a 01                	push   $0x1
    45f6:	56                   	push   %esi
    45f7:	e8 e4 5c 01 00       	call   1a2e0 <instr_fetch>
    45fc:	31 d2                	xor    %edx,%edx
    45fe:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    4602:	83 c4 0c             	add    $0xc,%esp
    4605:	88 c2                	mov    %al,%dl
    4607:	89 d0                	mov    %edx,%eax
    4609:	c1 e8 03             	shr    $0x3,%eax
    460c:	83 e0 07             	and    $0x7,%eax
    460f:	88 01                	mov    %al,(%ecx)
    4611:	ff 74 24 1c          	pushl  0x1c(%esp)
    4615:	52                   	push   %edx
    4616:	56                   	push   %esi
    4617:	e8 a4 fe ff ff       	call   44c0 <parse_rm_32>
    461c:	83 c4 14             	add    $0x14,%esp
    461f:	5b                   	pop    %ebx
    4620:	5e                   	pop    %esi
    4621:	c3                   	ret    
    4622:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00004630 <modrm_opcode>:
    4630:	53                   	push   %ebx
    4631:	e8 8a e6 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4636:	81 c3 ca 69 02 00    	add    $0x269ca,%ebx
    463c:	83 ec 10             	sub    $0x10,%esp
    463f:	6a 01                	push   $0x1
    4641:	ff 74 24 1c          	pushl  0x1c(%esp)
    4645:	e8 96 5c 01 00       	call   1a2e0 <instr_fetch>
    464a:	8b 54 24 24          	mov    0x24(%esp),%edx
    464e:	c1 e8 03             	shr    $0x3,%eax
    4651:	83 e0 07             	and    $0x7,%eax
    4654:	88 02                	mov    %al,(%edx)
    4656:	83 c4 18             	add    $0x18,%esp
    4659:	b8 01 00 00 00       	mov    $0x1,%eax
    465e:	5b                   	pop    %ebx
    465f:	c3                   	ret    

00004660 <modrm_rm>:
    4660:	56                   	push   %esi
    4661:	53                   	push   %ebx
    4662:	e8 59 e6 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4667:	81 c3 99 69 02 00    	add    $0x26999,%ebx
    466d:	83 ec 0c             	sub    $0xc,%esp
    4670:	8b 74 24 18          	mov    0x18(%esp),%esi
    4674:	6a 01                	push   $0x1
    4676:	56                   	push   %esi
    4677:	e8 64 5c 01 00       	call   1a2e0 <instr_fetch>
    467c:	31 d2                	xor    %edx,%edx
    467e:	83 c4 0c             	add    $0xc,%esp
    4681:	88 c2                	mov    %al,%dl
    4683:	ff 74 24 18          	pushl  0x18(%esp)
    4687:	52                   	push   %edx
    4688:	56                   	push   %esi
    4689:	e8 32 fe ff ff       	call   44c0 <parse_rm_32>
    468e:	83 c4 14             	add    $0x14,%esp
    4691:	5b                   	pop    %ebx
    4692:	5e                   	pop    %esi
    4693:	c3                   	ret    
    4694:	66 90                	xchg   %ax,%ax
    4696:	66 90                	xchg   %ax,%ax
    4698:	66 90                	xchg   %ax,%ax
    469a:	66 90                	xchg   %ax,%ax
    469c:	66 90                	xchg   %ax,%ax
    469e:	66 90                	xchg   %ax,%ax

000046a0 <operand_read>:
    46a0:	56                   	push   %esi
    46a1:	53                   	push   %ebx
    46a2:	e8 19 e6 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    46a7:	81 c3 59 69 02 00    	add    $0x26959,%ebx
    46ad:	83 ec 04             	sub    $0x4,%esp
    46b0:	8b 74 24 10          	mov    0x10(%esp),%esi
    46b4:	83 3e 04             	cmpl   $0x4,(%esi)
    46b7:	77 2d                	ja     46e6 <.L8+0x16>
    46b9:	8b 06                	mov    (%esi),%eax
    46bb:	8b 8c 83 90 fe fe ff 	mov    -0x10170(%ebx,%eax,4),%ecx
    46c2:	01 d9                	add    %ebx,%ecx
    46c4:	ff e1                	jmp    *%ecx
    46c6:	8d 76 00             	lea    0x0(%esi),%esi
    46c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000046d0 <.L8>:
    46d0:	8b 46 04             	mov    0x4(%esi),%eax
    46d3:	83 c0 03             	add    $0x3,%eax
    46d6:	c1 e0 04             	shl    $0x4,%eax
    46d9:	03 83 dc ff ff ff    	add    -0x24(%ebx),%eax
    46df:	0f b7 40 08          	movzwl 0x8(%eax),%eax
    46e3:	89 46 0c             	mov    %eax,0xc(%esi)
    46e6:	8b 46 10             	mov    0x10(%esi),%eax
    46e9:	83 f8 10             	cmp    $0x10,%eax
    46ec:	74 5a                	je     4748 <.L8+0x78>
    46ee:	83 f8 20             	cmp    $0x20,%eax
    46f1:	74 48                	je     473b <.L8+0x6b>
    46f3:	83 f8 08             	cmp    $0x8,%eax
    46f6:	74 38                	je     4730 <.L8+0x60>
    46f8:	83 ec 08             	sub    $0x8,%esp
    46fb:	0f b6 c0             	movzbl %al,%eax
    46fe:	50                   	push   %eax
    46ff:	8d 83 88 fd fe ff    	lea    -0x10278(%ebx),%eax
    4705:	50                   	push   %eax
    4706:	e8 b5 e0 ff ff       	call   27c0 <printf@plt>
    470b:	8d 83 f4 fe fe ff    	lea    -0x1010c(%ebx),%eax
    4711:	50                   	push   %eax
    4712:	6a 32                	push   $0x32
    4714:	8d 83 f9 fd fe ff    	lea    -0x10207(%ebx),%eax
    471a:	50                   	push   %eax
    471b:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
    4721:	50                   	push   %eax
    4722:	e8 69 e1 ff ff       	call   2890 <__assert_fail@plt>
    4727:	89 f6                	mov    %esi,%esi
    4729:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    4730:	8b 46 0c             	mov    0xc(%esi),%eax
    4733:	25 ff 00 00 00       	and    $0xff,%eax
    4738:	89 46 0c             	mov    %eax,0xc(%esi)
    473b:	83 c4 04             	add    $0x4,%esp
    473e:	5b                   	pop    %ebx
    473f:	5e                   	pop    %esi
    4740:	c3                   	ret    
    4741:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4748:	81 66 0c ff ff 00 00 	andl   $0xffff,0xc(%esi)
    474f:	83 c4 04             	add    $0x4,%esp
    4752:	5b                   	pop    %ebx
    4753:	5e                   	pop    %esi
    4754:	c3                   	ret    
    4755:	8d 76 00             	lea    0x0(%esi),%esi

00004758 <.L7>:
    4758:	8b 46 04             	mov    0x4(%esi),%eax
    475b:	85 c0                	test   %eax,%eax
    475d:	0f 84 8d 00 00 00    	je     47f0 <.L6+0x30>
    4763:	83 f8 03             	cmp    $0x3,%eax
    4766:	75 68                	jne    47d0 <.L6+0x10>
    4768:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    476e:	8b 40 34             	mov    0x34(%eax),%eax
    4771:	89 46 0c             	mov    %eax,0xc(%esi)
    4774:	8b 46 10             	mov    0x10(%esi),%eax
    4777:	e9 6d ff ff ff       	jmp    46e9 <.L8+0x19>
    477c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004780 <.L3>:
    4780:	83 ec 04             	sub    $0x4,%esp
    4783:	6a 04                	push   $0x4
    4785:	6a 01                	push   $0x1
    4787:	ff 76 04             	pushl  0x4(%esi)
    478a:	e8 21 5a 01 00       	call   1a1b0 <vaddr_read>
    478f:	83 c4 10             	add    $0x10,%esp
    4792:	89 46 0c             	mov    %eax,0xc(%esi)
    4795:	8b 46 10             	mov    0x10(%esi),%eax
    4798:	e9 4c ff ff ff       	jmp    46e9 <.L8+0x19>
    479d:	8d 76 00             	lea    0x0(%esi),%esi

000047a0 <.L5>:
    47a0:	8b 46 10             	mov    0x10(%esi),%eax
    47a3:	83 f8 08             	cmp    $0x8,%eax
    47a6:	74 60                	je     4808 <.L6+0x48>
    47a8:	8b 4e 04             	mov    0x4(%esi),%ecx
    47ab:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    47b1:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
    47b4:	89 56 0c             	mov    %edx,0xc(%esi)
    47b7:	e9 2d ff ff ff       	jmp    46e9 <.L8+0x19>
    47bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000047c0 <.L6>:
    47c0:	83 ec 04             	sub    $0x4,%esp
    47c3:	6a 04                	push   $0x4
    47c5:	0f b6 46 08          	movzbl 0x8(%esi),%eax
    47c9:	50                   	push   %eax
    47ca:	eb bb                	jmp    4787 <.L3+0x7>
    47cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    47d0:	83 ec 08             	sub    $0x8,%esp
    47d3:	50                   	push   %eax
    47d4:	8d 83 58 fd fe ff    	lea    -0x102a8(%ebx),%eax
    47da:	50                   	push   %eax
    47db:	e8 e0 df ff ff       	call   27c0 <printf@plt>
    47e0:	8d 83 f4 fe fe ff    	lea    -0x1010c(%ebx),%eax
    47e6:	50                   	push   %eax
    47e7:	6a 20                	push   $0x20
    47e9:	e9 26 ff ff ff       	jmp    4714 <.L8+0x44>
    47ee:	66 90                	xchg   %ax,%ax
    47f0:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    47f6:	8b 40 30             	mov    0x30(%eax),%eax
    47f9:	89 46 0c             	mov    %eax,0xc(%esi)
    47fc:	8b 46 10             	mov    0x10(%esi),%eax
    47ff:	e9 e5 fe ff ff       	jmp    46e9 <.L8+0x19>
    4804:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4808:	8b 56 04             	mov    0x4(%esi),%edx
    480b:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
    4811:	89 d0                	mov    %edx,%eax
    4813:	c1 ea 02             	shr    $0x2,%edx
    4816:	83 e0 03             	and    $0x3,%eax
    4819:	8d 04 81             	lea    (%ecx,%eax,4),%eax
    481c:	0f b6 04 10          	movzbl (%eax,%edx,1),%eax
    4820:	e9 0e ff ff ff       	jmp    4733 <.L8+0x63>
    4825:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4829:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00004830 <operand_write>:
    4830:	53                   	push   %ebx
    4831:	e8 8a e4 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4836:	81 c3 ca 67 02 00    	add    $0x267ca,%ebx
    483c:	83 ec 08             	sub    $0x8,%esp
    483f:	8b 44 24 10          	mov    0x10(%esp),%eax
    4843:	83 38 04             	cmpl   $0x4,(%eax)
    4846:	77 3b                	ja     4883 <.L39+0x2b>
    4848:	8b 10                	mov    (%eax),%edx
    484a:	8b 8c 93 a4 fe fe ff 	mov    -0x1015c(%ebx,%edx,4),%ecx
    4851:	01 d9                	add    %ebx,%ecx
    4853:	ff e1                	jmp    *%ecx
    4855:	8d 76 00             	lea    0x0(%esi),%esi

00004858 <.L39>:
    4858:	8b 50 04             	mov    0x4(%eax),%edx
    485b:	85 d2                	test   %edx,%edx
    485d:	0f 84 ed 00 00 00    	je     4950 <.L38+0x40>
    4863:	83 fa 03             	cmp    $0x3,%edx
    4866:	0f 85 c4 00 00 00    	jne    4930 <.L38+0x20>
    486c:	8b 48 0c             	mov    0xc(%eax),%ecx
    486f:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4875:	89 48 34             	mov    %ecx,0x34(%eax)
    4878:	83 c2 03             	add    $0x3,%edx
    487b:	c1 e2 04             	shl    $0x4,%edx
    487e:	66 89 4c 10 08       	mov    %cx,0x8(%eax,%edx,1)
    4883:	83 c4 08             	add    $0x8,%esp
    4886:	5b                   	pop    %ebx
    4887:	c3                   	ret    
    4888:	90                   	nop
    4889:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004890 <.L40>:
    4890:	8b 48 0c             	mov    0xc(%eax),%ecx
    4893:	8b 50 04             	mov    0x4(%eax),%edx
    4896:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    489c:	eb da                	jmp    4878 <.L39+0x20>
    489e:	66 90                	xchg   %ax,%ax

000048a0 <.L35>:
    48a0:	8d 83 a8 fd fe ff    	lea    -0x10258(%ebx),%eax
    48a6:	83 ec 0c             	sub    $0xc,%esp
    48a9:	50                   	push   %eax
    48aa:	e8 51 df ff ff       	call   2800 <puts@plt>
    48af:	8d 83 e4 fe fe ff    	lea    -0x1011c(%ebx),%eax
    48b5:	50                   	push   %eax
    48b6:	6a 54                	push   $0x54
    48b8:	8d 83 f9 fd fe ff    	lea    -0x10207(%ebx),%eax
    48be:	50                   	push   %eax
    48bf:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
    48c5:	50                   	push   %eax
    48c6:	e8 c5 df ff ff       	call   2890 <__assert_fail@plt>
    48cb:	90                   	nop
    48cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000048d0 <.L37>:
    48d0:	8b 50 10             	mov    0x10(%eax),%edx
    48d3:	83 fa 10             	cmp    $0x10,%edx
    48d6:	0f 84 8c 00 00 00    	je     4968 <.L38+0x58>
    48dc:	83 fa 20             	cmp    $0x20,%edx
    48df:	0f 84 bb 00 00 00    	je     49a0 <.L38+0x90>
    48e5:	83 fa 08             	cmp    $0x8,%edx
    48e8:	0f 84 92 00 00 00    	je     4980 <.L38+0x70>
    48ee:	8d 83 12 fe fe ff    	lea    -0x101ee(%ebx),%eax
    48f4:	83 ec 08             	sub    $0x8,%esp
    48f7:	0f b6 d2             	movzbl %dl,%edx
    48fa:	52                   	push   %edx
    48fb:	50                   	push   %eax
    48fc:	e8 bf de ff ff       	call   27c0 <printf@plt>
    4901:	8d 83 e4 fe fe ff    	lea    -0x1011c(%ebx),%eax
    4907:	50                   	push   %eax
    4908:	6a 4e                	push   $0x4e
    490a:	eb ac                	jmp    48b8 <.L35+0x18>
    490c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004910 <.L38>:
    4910:	ff 70 0c             	pushl  0xc(%eax)
    4913:	8b 50 10             	mov    0x10(%eax),%edx
    4916:	c1 ea 03             	shr    $0x3,%edx
    4919:	52                   	push   %edx
    491a:	0f b6 50 08          	movzbl 0x8(%eax),%edx
    491e:	52                   	push   %edx
    491f:	ff 70 04             	pushl  0x4(%eax)
    4922:	e8 09 59 01 00       	call   1a230 <vaddr_write>
    4927:	83 c4 10             	add    $0x10,%esp
    492a:	83 c4 08             	add    $0x8,%esp
    492d:	5b                   	pop    %ebx
    492e:	c3                   	ret    
    492f:	90                   	nop
    4930:	8d 83 cc fd fe ff    	lea    -0x10234(%ebx),%eax
    4936:	83 ec 08             	sub    $0x8,%esp
    4939:	52                   	push   %edx
    493a:	50                   	push   %eax
    493b:	e8 80 de ff ff       	call   27c0 <printf@plt>
    4940:	8d 83 e4 fe fe ff    	lea    -0x1011c(%ebx),%eax
    4946:	50                   	push   %eax
    4947:	6a 60                	push   $0x60
    4949:	e9 6a ff ff ff       	jmp    48b8 <.L35+0x18>
    494e:	66 90                	xchg   %ax,%ax
    4950:	8b 48 0c             	mov    0xc(%eax),%ecx
    4953:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4959:	89 48 30             	mov    %ecx,0x30(%eax)
    495c:	e9 17 ff ff ff       	jmp    4878 <.L39+0x20>
    4961:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4968:	8b 50 04             	mov    0x4(%eax),%edx
    496b:	8b 48 0c             	mov    0xc(%eax),%ecx
    496e:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4974:	66 89 0c 90          	mov    %cx,(%eax,%edx,4)
    4978:	e9 06 ff ff ff       	jmp    4883 <.L39+0x2b>
    497d:	8d 76 00             	lea    0x0(%esi),%esi
    4980:	8b 48 04             	mov    0x4(%eax),%ecx
    4983:	8b 40 0c             	mov    0xc(%eax),%eax
    4986:	89 ca                	mov    %ecx,%edx
    4988:	c1 e9 02             	shr    $0x2,%ecx
    498b:	83 e2 03             	and    $0x3,%edx
    498e:	c1 e2 02             	shl    $0x2,%edx
    4991:	03 93 dc ff ff ff    	add    -0x24(%ebx),%edx
    4997:	88 04 0a             	mov    %al,(%edx,%ecx,1)
    499a:	e9 e4 fe ff ff       	jmp    4883 <.L39+0x2b>
    499f:	90                   	nop
    49a0:	8b 50 04             	mov    0x4(%eax),%edx
    49a3:	8b 48 0c             	mov    0xc(%eax),%ecx
    49a6:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    49ac:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
    49af:	e9 cf fe ff ff       	jmp    4883 <.L39+0x2b>
    49b4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    49ba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000049c0 <parse_operand_address>:
    49c0:	55                   	push   %ebp
    49c1:	57                   	push   %edi
    49c2:	31 c0                	xor    %eax,%eax
    49c4:	56                   	push   %esi
    49c5:	53                   	push   %ebx
    49c6:	b9 09 00 00 00       	mov    $0x9,%ecx
    49cb:	e8 f0 e2 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    49d0:	81 c3 30 66 02 00    	add    $0x26630,%ebx
    49d6:	83 ec 4c             	sub    $0x4c,%esp
    49d9:	8b 74 24 60          	mov    0x60(%esp),%esi
    49dd:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
    49e1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    49e8:	00 
    49e9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    49f0:	00 
    49f1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    49f8:	00 
    49f9:	f3 ab                	rep stos %eax,%es:(%edi)
    49fb:	8b 06                	mov    (%esi),%eax
    49fd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    4a04:	00 
    4a05:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    4a0c:	00 
    4a0d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    4a14:	00 
    4a15:	83 f8 04             	cmp    $0x4,%eax
    4a18:	0f 87 72 01 00 00    	ja     4b90 <.L61+0x90>
    4a1e:	8b 94 83 b8 fe fe ff 	mov    -0x10148(%ebx,%eax,4),%edx
    4a25:	01 da                	add    %ebx,%edx
    4a27:	ff e2                	jmp    *%edx
    4a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004a30 <.L62>:
    4a30:	8d 83 4a fe fe ff    	lea    -0x101b6(%ebx),%eax
    4a36:	83 ec 04             	sub    $0x4,%esp
    4a39:	ff 76 04             	pushl  0x4(%esi)
    4a3c:	50                   	push   %eax
    4a3d:	ff 74 24 70          	pushl  0x70(%esp)
    4a41:	e8 ea db ff ff       	call   2630 <sprintf@plt>
    4a46:	83 c4 10             	add    $0x10,%esp
    4a49:	83 c4 4c             	add    $0x4c,%esp
    4a4c:	5b                   	pop    %ebx
    4a4d:	5e                   	pop    %esi
    4a4e:	5f                   	pop    %edi
    4a4f:	5d                   	pop    %ebp
    4a50:	c3                   	ret    
    4a51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004a58 <.L63>:
    4a58:	8b 56 04             	mov    0x4(%esi),%edx
    4a5b:	8d 83 a0 0f 00 00    	lea    0xfa0(%ebx),%eax
    4a61:	83 ec 08             	sub    $0x8,%esp
    4a64:	ff 34 90             	pushl  (%eax,%edx,4)
    4a67:	ff 74 24 70          	pushl  0x70(%esp)
    4a6b:	e8 10 de ff ff       	call   2880 <strcpy@plt>
    4a70:	83 c4 10             	add    $0x10,%esp
    4a73:	83 c4 4c             	add    $0x4c,%esp
    4a76:	5b                   	pop    %ebx
    4a77:	5e                   	pop    %esi
    4a78:	5f                   	pop    %edi
    4a79:	5d                   	pop    %ebp
    4a7a:	c3                   	ret    
    4a7b:	90                   	nop
    4a7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004a80 <.L58>:
    4a80:	83 ec 0c             	sub    $0xc,%esp
    4a83:	56                   	push   %esi
    4a84:	e8 17 fc ff ff       	call   46a0 <operand_read>
    4a89:	8d 83 44 fe fe ff    	lea    -0x101bc(%ebx),%eax
    4a8f:	83 c4 0c             	add    $0xc,%esp
    4a92:	ff 76 0c             	pushl  0xc(%esi)
    4a95:	50                   	push   %eax
    4a96:	ff 74 24 70          	pushl  0x70(%esp)
    4a9a:	e8 91 db ff ff       	call   2630 <sprintf@plt>
    4a9f:	83 c4 10             	add    $0x10,%esp
    4aa2:	83 c4 4c             	add    $0x4c,%esp
    4aa5:	5b                   	pop    %ebx
    4aa6:	5e                   	pop    %esi
    4aa7:	5f                   	pop    %edi
    4aa8:	5d                   	pop    %ebp
    4aa9:	c3                   	ret    
    4aaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00004ab0 <.L60>:
    4ab0:	8b 46 10             	mov    0x10(%esi),%eax
    4ab3:	83 f8 10             	cmp    $0x10,%eax
    4ab6:	0f 84 54 01 00 00    	je     4c10 <.L61+0x110>
    4abc:	83 f8 20             	cmp    $0x20,%eax
    4abf:	0f 84 8b 01 00 00    	je     4c50 <.L61+0x150>
    4ac5:	83 f8 08             	cmp    $0x8,%eax
    4ac8:	0f 84 62 01 00 00    	je     4c30 <.L61+0x130>
    4ace:	83 ec 08             	sub    $0x8,%esp
    4ad1:	50                   	push   %eax
    4ad2:	8d 83 2b fe fe ff    	lea    -0x101d5(%ebx),%eax
    4ad8:	50                   	push   %eax
    4ad9:	e8 e2 dc ff ff       	call   27c0 <printf@plt>
    4ade:	8d 83 cc fe fe ff    	lea    -0x10134(%ebx),%eax
    4ae4:	50                   	push   %eax
    4ae5:	8d 83 f9 fd fe ff    	lea    -0x10207(%ebx),%eax
    4aeb:	6a 76                	push   $0x76
    4aed:	50                   	push   %eax
    4aee:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
    4af4:	50                   	push   %eax
    4af5:	e8 96 dd ff ff       	call   2890 <__assert_fail@plt>
    4afa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00004b00 <.L61>:
    4b00:	8b 46 14             	mov    0x14(%esi),%eax
    4b03:	8d 7c 24 04          	lea    0x4(%esp),%edi
    4b07:	83 f8 ff             	cmp    $0xffffffff,%eax
    4b0a:	74 2a                	je     4b36 <.L61+0x36>
    4b0c:	99                   	cltd   
    4b0d:	89 d1                	mov    %edx,%ecx
    4b0f:	31 c1                	xor    %eax,%ecx
    4b11:	29 d1                	sub    %edx,%ecx
    4b13:	85 c0                	test   %eax,%eax
    4b15:	8d 93 29 fe fe ff    	lea    -0x101d7(%ebx),%edx
    4b1b:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    4b21:	51                   	push   %ecx
    4b22:	0f 48 c2             	cmovs  %edx,%eax
    4b25:	50                   	push   %eax
    4b26:	8d 83 51 fe fe ff    	lea    -0x101af(%ebx),%eax
    4b2c:	50                   	push   %eax
    4b2d:	57                   	push   %edi
    4b2e:	e8 fd da ff ff       	call   2630 <sprintf@plt>
    4b33:	83 c4 10             	add    $0x10,%esp
    4b36:	8b 46 18             	mov    0x18(%esi),%eax
    4b39:	83 f8 ff             	cmp    $0xffffffff,%eax
    4b3c:	0f 84 9e 00 00 00    	je     4be0 <.L61+0xe0>
    4b42:	8b 56 1c             	mov    0x1c(%esi),%edx
    4b45:	83 fa ff             	cmp    $0xffffffff,%edx
    4b48:	74 07                	je     4b51 <.L61+0x51>
    4b4a:	8b 4e 20             	mov    0x20(%esi),%ecx
    4b4d:	85 c9                	test   %ecx,%ecx
    4b4f:	75 5f                	jne    4bb0 <.L61+0xb0>
    4b51:	8d 93 00 10 00 00    	lea    0x1000(%ebx),%edx
    4b57:	83 ec 04             	sub    $0x4,%esp
    4b5a:	ff 34 82             	pushl  (%edx,%eax,4)
    4b5d:	8d 83 58 fe fe ff    	lea    -0x101a8(%ebx),%eax
    4b63:	50                   	push   %eax
    4b64:	8d 6c 24 24          	lea    0x24(%esp),%ebp
    4b68:	55                   	push   %ebp
    4b69:	e8 c2 da ff ff       	call   2630 <sprintf@plt>
    4b6e:	83 c4 10             	add    $0x10,%esp
    4b71:	8d 83 71 fe fe ff    	lea    -0x1018f(%ebx),%eax
    4b77:	55                   	push   %ebp
    4b78:	57                   	push   %edi
    4b79:	50                   	push   %eax
    4b7a:	ff 74 24 70          	pushl  0x70(%esp)
    4b7e:	e8 ad da ff ff       	call   2630 <sprintf@plt>
    4b83:	83 c4 10             	add    $0x10,%esp
    4b86:	83 c4 4c             	add    $0x4c,%esp
    4b89:	5b                   	pop    %ebx
    4b8a:	5e                   	pop    %esi
    4b8b:	5f                   	pop    %edi
    4b8c:	5d                   	pop    %ebp
    4b8d:	c3                   	ret    
    4b8e:	66 90                	xchg   %ax,%ax
    4b90:	83 ec 08             	sub    $0x8,%esp
    4b93:	50                   	push   %eax
    4b94:	8d 83 76 fe fe ff    	lea    -0x1018a(%ebx),%eax
    4b9a:	50                   	push   %eax
    4b9b:	e8 20 dc ff ff       	call   27c0 <printf@plt>
    4ba0:	83 c4 10             	add    $0x10,%esp
    4ba3:	83 c4 4c             	add    $0x4c,%esp
    4ba6:	5b                   	pop    %ebx
    4ba7:	5e                   	pop    %esi
    4ba8:	5f                   	pop    %edi
    4ba9:	5d                   	pop    %ebp
    4baa:	c3                   	ret    
    4bab:	90                   	nop
    4bac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4bb0:	83 ec 0c             	sub    $0xc,%esp
    4bb3:	51                   	push   %ecx
    4bb4:	8d 8b 00 10 00 00    	lea    0x1000(%ebx),%ecx
    4bba:	ff 34 91             	pushl  (%ecx,%edx,4)
    4bbd:	ff 34 81             	pushl  (%ecx,%eax,4)
    4bc0:	8d 83 66 fe fe ff    	lea    -0x1019a(%ebx),%eax
    4bc6:	50                   	push   %eax
    4bc7:	8d 6c 24 34          	lea    0x34(%esp),%ebp
    4bcb:	55                   	push   %ebp
    4bcc:	e8 5f da ff ff       	call   2630 <sprintf@plt>
    4bd1:	83 c4 20             	add    $0x20,%esp
    4bd4:	eb 9b                	jmp    4b71 <.L61+0x71>
    4bd6:	8d 76 00             	lea    0x0(%esi),%esi
    4bd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    4be0:	8b 46 1c             	mov    0x1c(%esi),%eax
    4be3:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    4be7:	83 f8 ff             	cmp    $0xffffffff,%eax
    4bea:	74 85                	je     4b71 <.L61+0x71>
    4bec:	8d 93 00 10 00 00    	lea    0x1000(%ebx),%edx
    4bf2:	ff 76 20             	pushl  0x20(%esi)
    4bf5:	ff 34 82             	pushl  (%edx,%eax,4)
    4bf8:	8d 83 5d fe fe ff    	lea    -0x101a3(%ebx),%eax
    4bfe:	50                   	push   %eax
    4bff:	55                   	push   %ebp
    4c00:	e8 2b da ff ff       	call   2630 <sprintf@plt>
    4c05:	83 c4 10             	add    $0x10,%esp
    4c08:	e9 64 ff ff ff       	jmp    4b71 <.L61+0x71>
    4c0d:	8d 76 00             	lea    0x0(%esi),%esi
    4c10:	8b 56 04             	mov    0x4(%esi),%edx
    4c13:	8d 83 e0 0f 00 00    	lea    0xfe0(%ebx),%eax
    4c19:	83 ec 08             	sub    $0x8,%esp
    4c1c:	ff 34 90             	pushl  (%eax,%edx,4)
    4c1f:	ff 74 24 70          	pushl  0x70(%esp)
    4c23:	e8 58 dc ff ff       	call   2880 <strcpy@plt>
    4c28:	83 c4 10             	add    $0x10,%esp
    4c2b:	e9 19 fe ff ff       	jmp    4a49 <.L62+0x19>
    4c30:	8b 56 04             	mov    0x4(%esi),%edx
    4c33:	8d 83 c0 0f 00 00    	lea    0xfc0(%ebx),%eax
    4c39:	83 ec 08             	sub    $0x8,%esp
    4c3c:	ff 34 90             	pushl  (%eax,%edx,4)
    4c3f:	ff 74 24 70          	pushl  0x70(%esp)
    4c43:	e8 38 dc ff ff       	call   2880 <strcpy@plt>
    4c48:	83 c4 10             	add    $0x10,%esp
    4c4b:	e9 f9 fd ff ff       	jmp    4a49 <.L62+0x19>
    4c50:	8b 56 04             	mov    0x4(%esi),%edx
    4c53:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax
    4c59:	83 ec 08             	sub    $0x8,%esp
    4c5c:	ff 34 90             	pushl  (%eax,%edx,4)
    4c5f:	ff 74 24 70          	pushl  0x70(%esp)
    4c63:	e8 18 dc ff ff       	call   2880 <strcpy@plt>
    4c68:	83 c4 10             	add    $0x10,%esp
    4c6b:	e9 d9 fd ff ff       	jmp    4a49 <.L62+0x19>

00004c70 <clear_operand_mem_addr>:
    4c70:	8b 44 24 04          	mov    0x4(%esp),%eax
    4c74:	c7 40 14 ff ff ff ff 	movl   $0xffffffff,0x14(%eax)
    4c7b:	c7 40 18 ff ff ff ff 	movl   $0xffffffff,0x18(%eax)
    4c82:	c7 40 1c ff ff ff ff 	movl   $0xffffffff,0x1c(%eax)
    4c89:	c7 40 20 ff ff ff ff 	movl   $0xffffffff,0x20(%eax)
    4c90:	c3                   	ret    
    4c91:	66 90                	xchg   %ax,%ax
    4c93:	66 90                	xchg   %ax,%ax
    4c95:	66 90                	xchg   %ax,%ax
    4c97:	66 90                	xchg   %ax,%ax
    4c99:	66 90                	xchg   %ax,%ax
    4c9b:	66 90                	xchg   %ax,%ax
    4c9d:	66 90                	xchg   %ax,%ax
    4c9f:	90                   	nop

00004ca0 <parse_sib>:
    4ca0:	55                   	push   %ebp
    4ca1:	57                   	push   %edi
    4ca2:	56                   	push   %esi
    4ca3:	53                   	push   %ebx
    4ca4:	e8 17 e0 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4ca9:	81 c3 57 63 02 00    	add    $0x26357,%ebx
    4caf:	83 ec 24             	sub    $0x24,%esp
    4cb2:	8b 7c 24 40          	mov    0x40(%esp),%edi
    4cb6:	8b 74 24 3c          	mov    0x3c(%esp),%esi
    4cba:	6a 01                	push   $0x1
    4cbc:	ff 74 24 3c          	pushl  0x3c(%esp)
    4cc0:	e8 1b 56 01 00       	call   1a2e0 <instr_fetch>
    4cc5:	89 c1                	mov    %eax,%ecx
    4cc7:	31 d2                	xor    %edx,%edx
    4cc9:	83 e1 07             	and    $0x7,%ecx
    4ccc:	88 c2                	mov    %al,%dl
    4cce:	8d 69 fc             	lea    -0x4(%ecx),%ebp
    4cd1:	88 4c 24 1f          	mov    %cl,0x1f(%esp)
    4cd5:	83 c4 10             	add    $0x10,%esp
    4cd8:	89 e9                	mov    %ebp,%ecx
    4cda:	80 f9 02             	cmp    $0x2,%cl
    4cdd:	0f 93 c1             	setae  %cl
    4ce0:	83 e0 38             	and    $0x38,%eax
    4ce3:	89 cd                	mov    %ecx,%ebp
    4ce5:	83 c5 02             	add    $0x2,%ebp
    4ce8:	89 e9                	mov    %ebp,%ecx
    4cea:	31 ed                	xor    %ebp,%ebp
    4cec:	3c 20                	cmp    $0x20,%al
    4cee:	88 4f 08             	mov    %cl,0x8(%edi)
    4cf1:	74 3d                	je     4d30 <parse_sib+0x90>
    4cf3:	89 d0                	mov    %edx,%eax
    4cf5:	8d ab 60 1d 05 00    	lea    0x51d60(%ebx),%ebp
    4cfb:	c1 e8 03             	shr    $0x3,%eax
    4cfe:	83 e0 07             	and    $0x7,%eax
    4d01:	8b 6c 85 00          	mov    0x0(%ebp,%eax,4),%ebp
    4d05:	89 47 1c             	mov    %eax,0x1c(%edi)
    4d08:	89 d0                	mov    %edx,%eax
    4d0a:	c1 e8 06             	shr    $0x6,%eax
    4d0d:	3c 02                	cmp    $0x2,%al
    4d0f:	0f 84 cb 00 00 00    	je     4de0 <parse_sib+0x140>
    4d15:	0f 87 b5 00 00 00    	ja     4dd0 <parse_sib+0x130>
    4d1b:	3c 01                	cmp    $0x1,%al
    4d1d:	0f 85 9d 00 00 00    	jne    4dc0 <parse_sib+0x120>
    4d23:	01 ed                	add    %ebp,%ebp
    4d25:	c7 47 20 02 00 00 00 	movl   $0x2,0x20(%edi)
    4d2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4d30:	85 f6                	test   %esi,%esi
    4d32:	74 5c                	je     4d90 <parse_sib+0xf0>
    4d34:	83 fe 02             	cmp    $0x2,%esi
    4d37:	77 27                	ja     4d60 <parse_sib+0xc0>
    4d39:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4d3f:	83 e2 07             	and    $0x7,%edx
    4d42:	03 2c 90             	add    (%eax,%edx,4),%ebp
    4d45:	89 57 18             	mov    %edx,0x18(%edi)
    4d48:	b8 01 00 00 00       	mov    $0x1,%eax
    4d4d:	89 6f 04             	mov    %ebp,0x4(%edi)
    4d50:	83 c4 1c             	add    $0x1c,%esp
    4d53:	5b                   	pop    %ebx
    4d54:	5e                   	pop    %esi
    4d55:	5f                   	pop    %edi
    4d56:	5d                   	pop    %ebp
    4d57:	c3                   	ret    
    4d58:	90                   	nop
    4d59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4d60:	8d 83 01 ff fe ff    	lea    -0x100ff(%ebx),%eax
    4d66:	83 ec 0c             	sub    $0xc,%esp
    4d69:	50                   	push   %eax
    4d6a:	e8 91 da ff ff       	call   2800 <puts@plt>
    4d6f:	8d 83 2c ff fe ff    	lea    -0x100d4(%ebx),%eax
    4d75:	50                   	push   %eax
    4d76:	8d 83 17 ff fe ff    	lea    -0x100e9(%ebx),%eax
    4d7c:	6a 5a                	push   $0x5a
    4d7e:	50                   	push   %eax
    4d7f:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
    4d85:	50                   	push   %eax
    4d86:	e8 05 db ff ff       	call   2890 <__assert_fail@plt>
    4d8b:	90                   	nop
    4d8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4d90:	80 7c 24 0f 05       	cmpb   $0x5,0xf(%esp)
    4d95:	75 a2                	jne    4d39 <parse_sib+0x99>
    4d97:	83 ec 08             	sub    $0x8,%esp
    4d9a:	6a 04                	push   $0x4
    4d9c:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    4da0:	83 c0 01             	add    $0x1,%eax
    4da3:	50                   	push   %eax
    4da4:	e8 37 55 01 00       	call   1a2e0 <instr_fetch>
    4da9:	01 c5                	add    %eax,%ebp
    4dab:	89 47 14             	mov    %eax,0x14(%edi)
    4dae:	83 c4 10             	add    $0x10,%esp
    4db1:	89 6f 04             	mov    %ebp,0x4(%edi)
    4db4:	b8 05 00 00 00       	mov    $0x5,%eax
    4db9:	eb 95                	jmp    4d50 <parse_sib+0xb0>
    4dbb:	90                   	nop
    4dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4dc0:	c7 47 20 01 00 00 00 	movl   $0x1,0x20(%edi)
    4dc7:	e9 64 ff ff ff       	jmp    4d30 <parse_sib+0x90>
    4dcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4dd0:	c1 e5 03             	shl    $0x3,%ebp
    4dd3:	c7 47 20 08 00 00 00 	movl   $0x8,0x20(%edi)
    4dda:	e9 51 ff ff ff       	jmp    4d30 <parse_sib+0x90>
    4ddf:	90                   	nop
    4de0:	c1 e5 02             	shl    $0x2,%ebp
    4de3:	c7 47 20 04 00 00 00 	movl   $0x4,0x20(%edi)
    4dea:	e9 41 ff ff ff       	jmp    4d30 <parse_sib+0x90>
    4def:	90                   	nop

00004df0 <print_reg>:
    4df0:	56                   	push   %esi
    4df1:	53                   	push   %ebx
    4df2:	e8 c9 de ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4df7:	81 c3 09 62 02 00    	add    $0x26209,%ebx
    4dfd:	83 ec 0c             	sub    $0xc,%esp
    4e00:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
    4e06:	8d 83 36 ff fe ff    	lea    -0x100ca(%ebx),%eax
    4e0c:	ff 36                	pushl  (%esi)
    4e0e:	50                   	push   %eax
    4e0f:	e8 ac d9 ff ff       	call   27c0 <printf@plt>
    4e14:	58                   	pop    %eax
    4e15:	8d 83 42 ff fe ff    	lea    -0x100be(%ebx),%eax
    4e1b:	5a                   	pop    %edx
    4e1c:	ff 76 04             	pushl  0x4(%esi)
    4e1f:	50                   	push   %eax
    4e20:	e8 9b d9 ff ff       	call   27c0 <printf@plt>
    4e25:	59                   	pop    %ecx
    4e26:	58                   	pop    %eax
    4e27:	8d 83 4e ff fe ff    	lea    -0x100b2(%ebx),%eax
    4e2d:	ff 76 08             	pushl  0x8(%esi)
    4e30:	50                   	push   %eax
    4e31:	e8 8a d9 ff ff       	call   27c0 <printf@plt>
    4e36:	58                   	pop    %eax
    4e37:	8d 83 5a ff fe ff    	lea    -0x100a6(%ebx),%eax
    4e3d:	5a                   	pop    %edx
    4e3e:	ff 76 0c             	pushl  0xc(%esi)
    4e41:	50                   	push   %eax
    4e42:	e8 79 d9 ff ff       	call   27c0 <printf@plt>
    4e47:	59                   	pop    %ecx
    4e48:	58                   	pop    %eax
    4e49:	8d 83 66 ff fe ff    	lea    -0x1009a(%ebx),%eax
    4e4f:	ff 76 10             	pushl  0x10(%esi)
    4e52:	50                   	push   %eax
    4e53:	e8 68 d9 ff ff       	call   27c0 <printf@plt>
    4e58:	58                   	pop    %eax
    4e59:	8d 83 72 ff fe ff    	lea    -0x1008e(%ebx),%eax
    4e5f:	5a                   	pop    %edx
    4e60:	ff 76 14             	pushl  0x14(%esi)
    4e63:	50                   	push   %eax
    4e64:	e8 57 d9 ff ff       	call   27c0 <printf@plt>
    4e69:	59                   	pop    %ecx
    4e6a:	58                   	pop    %eax
    4e6b:	8d 83 7e ff fe ff    	lea    -0x10082(%ebx),%eax
    4e71:	ff 76 18             	pushl  0x18(%esi)
    4e74:	50                   	push   %eax
    4e75:	e8 46 d9 ff ff       	call   27c0 <printf@plt>
    4e7a:	58                   	pop    %eax
    4e7b:	8d 83 8a ff fe ff    	lea    -0x10076(%ebx),%eax
    4e81:	5a                   	pop    %edx
    4e82:	ff 76 1c             	pushl  0x1c(%esi)
    4e85:	50                   	push   %eax
    4e86:	e8 35 d9 ff ff       	call   27c0 <printf@plt>
    4e8b:	59                   	pop    %ecx
    4e8c:	58                   	pop    %eax
    4e8d:	8d 83 96 ff fe ff    	lea    -0x1006a(%ebx),%eax
    4e93:	ff 76 20             	pushl  0x20(%esi)
    4e96:	50                   	push   %eax
    4e97:	e8 24 d9 ff ff       	call   27c0 <printf@plt>
    4e9c:	83 c4 14             	add    $0x14,%esp
    4e9f:	5b                   	pop    %ebx
    4ea0:	5e                   	pop    %esi
    4ea1:	c3                   	ret    
    4ea2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4ea9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00004eb0 <get_reg_val>:
    4eb0:	55                   	push   %ebp
    4eb1:	57                   	push   %edi
    4eb2:	31 ff                	xor    %edi,%edi
    4eb4:	56                   	push   %esi
    4eb5:	53                   	push   %ebx
    4eb6:	e8 05 de ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    4ebb:	81 c3 45 61 02 00    	add    $0x26145,%ebx
    4ec1:	83 ec 1c             	sub    $0x1c,%esp
    4ec4:	8b 6c 24 34          	mov    0x34(%esp),%ebp
    4ec8:	8b 74 24 30          	mov    0x30(%esp),%esi
    4ecc:	c6 45 00 01          	movb   $0x1,0x0(%ebp)
    4ed0:	83 ec 08             	sub    $0x8,%esp
    4ed3:	8b 84 bb 00 10 00 00 	mov    0x1000(%ebx,%edi,4),%eax
    4eda:	56                   	push   %esi
    4edb:	89 44 24 18          	mov    %eax,0x18(%esp)
    4edf:	83 c0 01             	add    $0x1,%eax
    4ee2:	50                   	push   %eax
    4ee3:	e8 68 d7 ff ff       	call   2650 <strcmp@plt>
    4ee8:	83 c4 10             	add    $0x10,%esp
    4eeb:	85 c0                	test   %eax,%eax
    4eed:	0f 84 b5 00 00 00    	je     4fa8 <get_reg_val+0xf8>
    4ef3:	83 c7 01             	add    $0x1,%edi
    4ef6:	83 ff 08             	cmp    $0x8,%edi
    4ef9:	75 d5                	jne    4ed0 <get_reg_val+0x20>
    4efb:	31 ff                	xor    %edi,%edi
    4efd:	8d 76 00             	lea    0x0(%esi),%esi
    4f00:	83 ec 08             	sub    $0x8,%esp
    4f03:	8b 84 bb e0 0f 00 00 	mov    0xfe0(%ebx,%edi,4),%eax
    4f0a:	56                   	push   %esi
    4f0b:	89 44 24 18          	mov    %eax,0x18(%esp)
    4f0f:	83 c0 01             	add    $0x1,%eax
    4f12:	50                   	push   %eax
    4f13:	e8 38 d7 ff ff       	call   2650 <strcmp@plt>
    4f18:	83 c4 10             	add    $0x10,%esp
    4f1b:	85 c0                	test   %eax,%eax
    4f1d:	0f 84 ad 00 00 00    	je     4fd0 <get_reg_val+0x120>
    4f23:	83 c7 01             	add    $0x1,%edi
    4f26:	83 ff 08             	cmp    $0x8,%edi
    4f29:	75 d5                	jne    4f00 <get_reg_val+0x50>
    4f2b:	31 ff                	xor    %edi,%edi
    4f2d:	8d 76 00             	lea    0x0(%esi),%esi
    4f30:	83 ec 08             	sub    $0x8,%esp
    4f33:	8b 84 bb c0 0f 00 00 	mov    0xfc0(%ebx,%edi,4),%eax
    4f3a:	56                   	push   %esi
    4f3b:	89 44 24 18          	mov    %eax,0x18(%esp)
    4f3f:	83 c0 01             	add    $0x1,%eax
    4f42:	50                   	push   %eax
    4f43:	e8 08 d7 ff ff       	call   2650 <strcmp@plt>
    4f48:	83 c4 10             	add    $0x10,%esp
    4f4b:	85 c0                	test   %eax,%eax
    4f4d:	0f 84 95 00 00 00    	je     4fe8 <get_reg_val+0x138>
    4f53:	83 c7 01             	add    $0x1,%edi
    4f56:	83 ff 08             	cmp    $0x8,%edi
    4f59:	75 d5                	jne    4f30 <get_reg_val+0x80>
    4f5b:	80 3e 65             	cmpb   $0x65,(%esi)
    4f5e:	75 28                	jne    4f88 <get_reg_val+0xd8>
    4f60:	80 7e 01 69          	cmpb   $0x69,0x1(%esi)
    4f64:	75 22                	jne    4f88 <get_reg_val+0xd8>
    4f66:	80 7e 02 70          	cmpb   $0x70,0x2(%esi)
    4f6a:	75 1c                	jne    4f88 <get_reg_val+0xd8>
    4f6c:	80 7e 03 00          	cmpb   $0x0,0x3(%esi)
    4f70:	75 16                	jne    4f88 <get_reg_val+0xd8>
    4f72:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4f78:	8b 40 20             	mov    0x20(%eax),%eax
    4f7b:	83 c4 1c             	add    $0x1c,%esp
    4f7e:	5b                   	pop    %ebx
    4f7f:	5e                   	pop    %esi
    4f80:	5f                   	pop    %edi
    4f81:	5d                   	pop    %ebp
    4f82:	c3                   	ret    
    4f83:	90                   	nop
    4f84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4f88:	8d bb a2 ff fe ff    	lea    -0x1005e(%ebx),%edi
    4f8e:	b9 07 00 00 00       	mov    $0x7,%ecx
    4f93:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
    4f95:	74 29                	je     4fc0 <get_reg_val+0x110>
    4f97:	c6 45 00 00          	movb   $0x0,0x0(%ebp)
    4f9b:	83 c4 1c             	add    $0x1c,%esp
    4f9e:	31 c0                	xor    %eax,%eax
    4fa0:	5b                   	pop    %ebx
    4fa1:	5e                   	pop    %esi
    4fa2:	5f                   	pop    %edi
    4fa3:	5d                   	pop    %ebp
    4fa4:	c3                   	ret    
    4fa5:	8d 76 00             	lea    0x0(%esi),%esi
    4fa8:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4fae:	8b 04 b8             	mov    (%eax,%edi,4),%eax
    4fb1:	83 c4 1c             	add    $0x1c,%esp
    4fb4:	5b                   	pop    %ebx
    4fb5:	5e                   	pop    %esi
    4fb6:	5f                   	pop    %edi
    4fb7:	5d                   	pop    %ebp
    4fb8:	c3                   	ret    
    4fb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4fc0:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4fc6:	8b 40 24             	mov    0x24(%eax),%eax
    4fc9:	eb e6                	jmp    4fb1 <get_reg_val+0x101>
    4fcb:	90                   	nop
    4fcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4fd0:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    4fd6:	0f b7 04 b8          	movzwl (%eax,%edi,4),%eax
    4fda:	83 c4 1c             	add    $0x1c,%esp
    4fdd:	5b                   	pop    %ebx
    4fde:	5e                   	pop    %esi
    4fdf:	5f                   	pop    %edi
    4fe0:	5d                   	pop    %ebp
    4fe1:	c3                   	ret    
    4fe2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4fe8:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    4fee:	89 f8                	mov    %edi,%eax
    4ff0:	c1 ff 02             	sar    $0x2,%edi
    4ff3:	83 e0 03             	and    $0x3,%eax
    4ff6:	8d 04 82             	lea    (%edx,%eax,4),%eax
    4ff9:	0f b6 04 38          	movzbl (%eax,%edi,1),%eax
    4ffd:	83 c4 1c             	add    $0x1c,%esp
    5000:	5b                   	pop    %ebx
    5001:	5e                   	pop    %esi
    5002:	5f                   	pop    %edi
    5003:	5d                   	pop    %ebp
    5004:	c3                   	ret    
    5005:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5009:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005010 <reg_test>:
    5010:	55                   	push   %ebp
    5011:	57                   	push   %edi
    5012:	31 ff                	xor    %edi,%edi
    5014:	56                   	push   %esi
    5015:	53                   	push   %ebx
    5016:	e8 a5 dc ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    501b:	81 c3 e5 5f 02 00    	add    $0x25fe5,%ebx
    5021:	83 ec 78             	sub    $0x78,%esp
    5024:	8d 83 a9 ff fe ff    	lea    -0x10057(%ebx),%eax
    502a:	50                   	push   %eax
    502b:	e8 d0 d7 ff ff       	call   2800 <puts@plt>
    5030:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    5037:	e8 34 d6 ff ff       	call   2670 <time@plt>
    503c:	89 04 24             	mov    %eax,(%esp)
    503f:	e8 ac d6 ff ff       	call   26f0 <srand@plt>
    5044:	e8 07 d7 ff ff       	call   2750 <rand@plt>
    5049:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
    504f:	89 44 24 18          	mov    %eax,0x18(%esp)
    5053:	c7 44 24 4c 01 00 00 	movl   $0x1,0x4c(%esp)
    505a:	00 
    505b:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    505f:	83 c4 10             	add    $0x10,%esp
    5062:	89 41 20             	mov    %eax,0x20(%ecx)
    5065:	8d 44 24 1c          	lea    0x1c(%esp),%eax
    5069:	8d 74 24 3c          	lea    0x3c(%esp),%esi
    506d:	89 44 24 04          	mov    %eax,0x4(%esp)
    5071:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5078:	e8 d3 d6 ff ff       	call   2750 <rand@plt>
    507d:	89 c5                	mov    %eax,%ebp
    507f:	8b 44 24 04          	mov    0x4(%esp),%eax
    5083:	c7 44 24 4c 20 00 00 	movl   $0x20,0x4c(%esp)
    508a:	00 
    508b:	89 6c 24 48          	mov    %ebp,0x48(%esp)
    508f:	89 7c 24 40          	mov    %edi,0x40(%esp)
    5093:	83 ec 0c             	sub    $0xc,%esp
    5096:	89 2c b8             	mov    %ebp,(%eax,%edi,4)
    5099:	56                   	push   %esi
    509a:	0f b7 ed             	movzwl %bp,%ebp
    509d:	e8 8e f7 ff ff       	call   4830 <operand_write>
    50a2:	c7 44 24 5c 10 00 00 	movl   $0x10,0x5c(%esp)
    50a9:	00 
    50aa:	89 34 24             	mov    %esi,(%esp)
    50ad:	e8 ee f5 ff ff       	call   46a0 <operand_read>
    50b2:	83 c4 10             	add    $0x10,%esp
    50b5:	39 6c 24 48          	cmp    %ebp,0x48(%esp)
    50b9:	0f 85 d2 01 00 00    	jne    5291 <reg_test+0x281>
    50bf:	83 c7 01             	add    $0x1,%edi
    50c2:	83 ff 08             	cmp    $0x8,%edi
    50c5:	75 b1                	jne    5078 <reg_test+0x68>
    50c7:	c7 44 24 4c 08 00 00 	movl   $0x8,0x4c(%esp)
    50ce:	00 
    50cf:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
    50d6:	00 
    50d7:	83 ec 0c             	sub    $0xc,%esp
    50da:	56                   	push   %esi
    50db:	e8 c0 f5 ff ff       	call   46a0 <operand_read>
    50e0:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
    50e4:	83 c4 10             	add    $0x10,%esp
    50e7:	89 e8                	mov    %ebp,%eax
    50e9:	0f b6 c0             	movzbl %al,%eax
    50ec:	39 44 24 48          	cmp    %eax,0x48(%esp)
    50f0:	0f 85 77 03 00 00    	jne    546d <reg_test+0x45d>
    50f6:	c7 44 24 40 04 00 00 	movl   $0x4,0x40(%esp)
    50fd:	00 
    50fe:	83 ec 0c             	sub    $0xc,%esp
    5101:	56                   	push   %esi
    5102:	e8 99 f5 ff ff       	call   46a0 <operand_read>
    5107:	89 e8                	mov    %ebp,%eax
    5109:	83 c4 10             	add    $0x10,%esp
    510c:	0f b6 c4             	movzbl %ah,%eax
    510f:	39 44 24 48          	cmp    %eax,0x48(%esp)
    5113:	0f 85 38 03 00 00    	jne    5451 <reg_test+0x441>
    5119:	c7 44 24 40 03 00 00 	movl   $0x3,0x40(%esp)
    5120:	00 
    5121:	83 ec 0c             	sub    $0xc,%esp
    5124:	56                   	push   %esi
    5125:	e8 76 f5 ff ff       	call   46a0 <operand_read>
    512a:	8b 44 24 38          	mov    0x38(%esp),%eax
    512e:	83 c4 10             	add    $0x10,%esp
    5131:	89 c7                	mov    %eax,%edi
    5133:	0f b6 c0             	movzbl %al,%eax
    5136:	39 44 24 48          	cmp    %eax,0x48(%esp)
    513a:	0f 85 f5 02 00 00    	jne    5435 <reg_test+0x425>
    5140:	c7 44 24 40 07 00 00 	movl   $0x7,0x40(%esp)
    5147:	00 
    5148:	83 ec 0c             	sub    $0xc,%esp
    514b:	56                   	push   %esi
    514c:	e8 4f f5 ff ff       	call   46a0 <operand_read>
    5151:	89 f8                	mov    %edi,%eax
    5153:	83 c4 10             	add    $0x10,%esp
    5156:	0f b6 c4             	movzbl %ah,%eax
    5159:	39 44 24 48          	cmp    %eax,0x48(%esp)
    515d:	0f 85 b6 02 00 00    	jne    5419 <reg_test+0x409>
    5163:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
    516a:	00 
    516b:	83 ec 0c             	sub    $0xc,%esp
    516e:	56                   	push   %esi
    516f:	e8 2c f5 ff ff       	call   46a0 <operand_read>
    5174:	8b 44 24 30          	mov    0x30(%esp),%eax
    5178:	89 44 24 14          	mov    %eax,0x14(%esp)
    517c:	83 c4 10             	add    $0x10,%esp
    517f:	0f b6 c0             	movzbl %al,%eax
    5182:	39 44 24 48          	cmp    %eax,0x48(%esp)
    5186:	0f 85 71 02 00 00    	jne    53fd <reg_test+0x3ed>
    518c:	c7 44 24 40 05 00 00 	movl   $0x5,0x40(%esp)
    5193:	00 
    5194:	83 ec 0c             	sub    $0xc,%esp
    5197:	56                   	push   %esi
    5198:	e8 03 f5 ff ff       	call   46a0 <operand_read>
    519d:	8b 44 24 14          	mov    0x14(%esp),%eax
    51a1:	83 c4 10             	add    $0x10,%esp
    51a4:	0f b6 c4             	movzbl %ah,%eax
    51a7:	39 44 24 48          	cmp    %eax,0x48(%esp)
    51ab:	0f 85 30 02 00 00    	jne    53e1 <reg_test+0x3d1>
    51b1:	c7 44 24 40 02 00 00 	movl   $0x2,0x40(%esp)
    51b8:	00 
    51b9:	83 ec 0c             	sub    $0xc,%esp
    51bc:	56                   	push   %esi
    51bd:	e8 de f4 ff ff       	call   46a0 <operand_read>
    51c2:	8b 44 24 34          	mov    0x34(%esp),%eax
    51c6:	83 c4 10             	add    $0x10,%esp
    51c9:	0f b6 d0             	movzbl %al,%edx
    51cc:	39 54 24 48          	cmp    %edx,0x48(%esp)
    51d0:	0f 85 ef 01 00 00    	jne    53c5 <reg_test+0x3b5>
    51d6:	89 44 24 0c          	mov    %eax,0xc(%esp)
    51da:	c7 44 24 40 06 00 00 	movl   $0x6,0x40(%esp)
    51e1:	00 
    51e2:	83 ec 0c             	sub    $0xc,%esp
    51e5:	56                   	push   %esi
    51e6:	e8 b5 f4 ff ff       	call   46a0 <operand_read>
    51eb:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    51ef:	83 c4 10             	add    $0x10,%esp
    51f2:	0f b6 d4             	movzbl %ah,%edx
    51f5:	39 54 24 48          	cmp    %edx,0x48(%esp)
    51f9:	0f 85 aa 01 00 00    	jne    53a9 <reg_test+0x399>
    51ff:	8b 14 24             	mov    (%esp),%edx
    5202:	3b 2a                	cmp    (%edx),%ebp
    5204:	0f 85 83 01 00 00    	jne    538d <reg_test+0x37d>
    520a:	8b 0c 24             	mov    (%esp),%ecx
    520d:	8b 54 24 04          	mov    0x4(%esp),%edx
    5211:	3b 51 04             	cmp    0x4(%ecx),%edx
    5214:	0f 85 57 01 00 00    	jne    5371 <reg_test+0x361>
    521a:	8b 0c 24             	mov    (%esp),%ecx
    521d:	3b 41 08             	cmp    0x8(%ecx),%eax
    5220:	0f 85 2f 01 00 00    	jne    5355 <reg_test+0x345>
    5226:	8b 04 24             	mov    (%esp),%eax
    5229:	3b 78 0c             	cmp    0xc(%eax),%edi
    522c:	0f 85 07 01 00 00    	jne    5339 <reg_test+0x329>
    5232:	8b 04 24             	mov    (%esp),%eax
    5235:	8b 40 10             	mov    0x10(%eax),%eax
    5238:	39 44 24 2c          	cmp    %eax,0x2c(%esp)
    523c:	0f 85 db 00 00 00    	jne    531d <reg_test+0x30d>
    5242:	8b 04 24             	mov    (%esp),%eax
    5245:	8b 40 14             	mov    0x14(%eax),%eax
    5248:	39 44 24 30          	cmp    %eax,0x30(%esp)
    524c:	0f 85 af 00 00 00    	jne    5301 <reg_test+0x2f1>
    5252:	8b 04 24             	mov    (%esp),%eax
    5255:	8b 40 18             	mov    0x18(%eax),%eax
    5258:	39 44 24 34          	cmp    %eax,0x34(%esp)
    525c:	0f 85 83 00 00 00    	jne    52e5 <reg_test+0x2d5>
    5262:	8b 04 24             	mov    (%esp),%eax
    5265:	8b 40 1c             	mov    0x1c(%eax),%eax
    5268:	39 44 24 38          	cmp    %eax,0x38(%esp)
    526c:	75 5b                	jne    52c9 <reg_test+0x2b9>
    526e:	8b 04 24             	mov    (%esp),%eax
    5271:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    5275:	3b 48 20             	cmp    0x20(%eax),%ecx
    5278:	75 33                	jne    52ad <reg_test+0x29d>
    527a:	8d 83 a0 02 ff ff    	lea    -0xfd60(%ebx),%eax
    5280:	83 ec 0c             	sub    $0xc,%esp
    5283:	50                   	push   %eax
    5284:	e8 77 d5 ff ff       	call   2800 <puts@plt>
    5289:	83 c4 7c             	add    $0x7c,%esp
    528c:	5b                   	pop    %ebx
    528d:	5e                   	pop    %esi
    528e:	5f                   	pop    %edi
    528f:	5d                   	pop    %ebp
    5290:	c3                   	ret    
    5291:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    5297:	50                   	push   %eax
    5298:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    529e:	6a 4c                	push   $0x4c
    52a0:	50                   	push   %eax
    52a1:	8d 83 d3 ff fe ff    	lea    -0x1002d(%ebx),%eax
    52a7:	50                   	push   %eax
    52a8:	e8 e3 d5 ff ff       	call   2890 <__assert_fail@plt>
    52ad:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    52b3:	50                   	push   %eax
    52b4:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    52ba:	6a 71                	push   $0x71
    52bc:	50                   	push   %eax
    52bd:	8d 83 c9 00 ff ff    	lea    -0xff37(%ebx),%eax
    52c3:	50                   	push   %eax
    52c4:	e8 c7 d5 ff ff       	call   2890 <__assert_fail@plt>
    52c9:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    52cf:	50                   	push   %eax
    52d0:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    52d6:	6a 6f                	push   $0x6f
    52d8:	50                   	push   %eax
    52d9:	8d 83 ae 00 ff ff    	lea    -0xff52(%ebx),%eax
    52df:	50                   	push   %eax
    52e0:	e8 ab d5 ff ff       	call   2890 <__assert_fail@plt>
    52e5:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    52eb:	50                   	push   %eax
    52ec:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    52f2:	6a 6e                	push   $0x6e
    52f4:	50                   	push   %eax
    52f5:	8d 83 93 00 ff ff    	lea    -0xff6d(%ebx),%eax
    52fb:	50                   	push   %eax
    52fc:	e8 8f d5 ff ff       	call   2890 <__assert_fail@plt>
    5301:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    5307:	50                   	push   %eax
    5308:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    530e:	6a 6d                	push   $0x6d
    5310:	50                   	push   %eax
    5311:	8d 83 78 00 ff ff    	lea    -0xff88(%ebx),%eax
    5317:	50                   	push   %eax
    5318:	e8 73 d5 ff ff       	call   2890 <__assert_fail@plt>
    531d:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    5323:	50                   	push   %eax
    5324:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    532a:	6a 6c                	push   $0x6c
    532c:	50                   	push   %eax
    532d:	8d 83 5d 00 ff ff    	lea    -0xffa3(%ebx),%eax
    5333:	50                   	push   %eax
    5334:	e8 57 d5 ff ff       	call   2890 <__assert_fail@plt>
    5339:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    533f:	50                   	push   %eax
    5340:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    5346:	6a 6b                	push   $0x6b
    5348:	50                   	push   %eax
    5349:	8d 83 42 00 ff ff    	lea    -0xffbe(%ebx),%eax
    534f:	50                   	push   %eax
    5350:	e8 3b d5 ff ff       	call   2890 <__assert_fail@plt>
    5355:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    535b:	50                   	push   %eax
    535c:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    5362:	6a 6a                	push   $0x6a
    5364:	50                   	push   %eax
    5365:	8d 83 27 00 ff ff    	lea    -0xffd9(%ebx),%eax
    536b:	50                   	push   %eax
    536c:	e8 1f d5 ff ff       	call   2890 <__assert_fail@plt>
    5371:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    5377:	50                   	push   %eax
    5378:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    537e:	6a 69                	push   $0x69
    5380:	50                   	push   %eax
    5381:	8d 83 0c 00 ff ff    	lea    -0xfff4(%ebx),%eax
    5387:	50                   	push   %eax
    5388:	e8 03 d5 ff ff       	call   2890 <__assert_fail@plt>
    538d:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    5393:	50                   	push   %eax
    5394:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    539a:	6a 68                	push   $0x68
    539c:	50                   	push   %eax
    539d:	8d 83 f1 ff fe ff    	lea    -0x1000f(%ebx),%eax
    53a3:	50                   	push   %eax
    53a4:	e8 e7 d4 ff ff       	call   2890 <__assert_fail@plt>
    53a9:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    53af:	50                   	push   %eax
    53b0:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    53b6:	6a 66                	push   $0x66
    53b8:	50                   	push   %eax
    53b9:	8d 83 74 02 ff ff    	lea    -0xfd8c(%ebx),%eax
    53bf:	50                   	push   %eax
    53c0:	e8 cb d4 ff ff       	call   2890 <__assert_fail@plt>
    53c5:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    53cb:	50                   	push   %eax
    53cc:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    53d2:	6a 63                	push   $0x63
    53d4:	50                   	push   %eax
    53d5:	8d 83 50 02 ff ff    	lea    -0xfdb0(%ebx),%eax
    53db:	50                   	push   %eax
    53dc:	e8 af d4 ff ff       	call   2890 <__assert_fail@plt>
    53e1:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    53e7:	50                   	push   %eax
    53e8:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    53ee:	6a 60                	push   $0x60
    53f0:	50                   	push   %eax
    53f1:	8d 83 24 02 ff ff    	lea    -0xfddc(%ebx),%eax
    53f7:	50                   	push   %eax
    53f8:	e8 93 d4 ff ff       	call   2890 <__assert_fail@plt>
    53fd:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    5403:	50                   	push   %eax
    5404:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    540a:	6a 5d                	push   $0x5d
    540c:	50                   	push   %eax
    540d:	8d 83 00 02 ff ff    	lea    -0xfe00(%ebx),%eax
    5413:	50                   	push   %eax
    5414:	e8 77 d4 ff ff       	call   2890 <__assert_fail@plt>
    5419:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    541f:	50                   	push   %eax
    5420:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    5426:	6a 5a                	push   $0x5a
    5428:	50                   	push   %eax
    5429:	8d 83 d4 01 ff ff    	lea    -0xfe2c(%ebx),%eax
    542f:	50                   	push   %eax
    5430:	e8 5b d4 ff ff       	call   2890 <__assert_fail@plt>
    5435:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    543b:	50                   	push   %eax
    543c:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    5442:	6a 57                	push   $0x57
    5444:	50                   	push   %eax
    5445:	8d 83 b0 01 ff ff    	lea    -0xfe50(%ebx),%eax
    544b:	50                   	push   %eax
    544c:	e8 3f d4 ff ff       	call   2890 <__assert_fail@plt>
    5451:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    5457:	50                   	push   %eax
    5458:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    545e:	6a 54                	push   $0x54
    5460:	50                   	push   %eax
    5461:	8d 83 84 01 ff ff    	lea    -0xfe7c(%ebx),%eax
    5467:	50                   	push   %eax
    5468:	e8 23 d4 ff ff       	call   2890 <__assert_fail@plt>
    546d:	8d 83 c0 02 ff ff    	lea    -0xfd40(%ebx),%eax
    5473:	50                   	push   %eax
    5474:	8d 83 c5 ff fe ff    	lea    -0x1003b(%ebx),%eax
    547a:	6a 51                	push   $0x51
    547c:	50                   	push   %eax
    547d:	8d 83 60 01 ff ff    	lea    -0xfea0(%ebx),%eax
    5483:	50                   	push   %eax
    5484:	e8 07 d4 ff ff       	call   2890 <__assert_fail@plt>
    5489:	66 90                	xchg   %ax,%ax
    548b:	66 90                	xchg   %ax,%ax
    548d:	66 90                	xchg   %ax,%ax
    548f:	90                   	nop

00005490 <init_cpu>:
    5490:	e8 55 de ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    5495:	05 6b 5b 02 00       	add    $0x25b6b,%eax
    549a:	55                   	push   %ebp
    549b:	57                   	push   %edi
    549c:	31 c9                	xor    %ecx,%ecx
    549e:	56                   	push   %esi
    549f:	8d 90 20 1e 05 00    	lea    0x51e20(%eax),%edx
    54a5:	53                   	push   %ebx
    54a6:	8d 98 60 1d 05 00    	lea    0x51d60(%eax),%ebx
    54ac:	31 c0                	xor    %eax,%eax
    54ae:	66 89 4a 20          	mov    %cx,0x20(%edx)
    54b2:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    54b9:	c6 83 a0 00 00 00 00 	movb   $0x0,0xa0(%ebx)
    54c0:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)
    54c7:	c7 04 03 00 00 00 00 	movl   $0x0,(%ebx,%eax,1)
    54ce:	83 c0 04             	add    $0x4,%eax
    54d1:	83 f8 20             	cmp    $0x20,%eax
    54d4:	75 ea                	jne    54c0 <init_cpu+0x30>
    54d6:	8b 44 24 14          	mov    0x14(%esp),%eax
    54da:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    54df:	c7 43 10 f0 ff ff 07 	movl   $0x7fffff0,0x10(%ebx)
    54e6:	66 89 53 28          	mov    %dx,0x28(%ebx)
    54ea:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
    54f1:	89 da                	mov    %ebx,%edx
    54f3:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
    54fa:	31 f6                	xor    %esi,%esi
    54fc:	89 43 20             	mov    %eax,0x20(%ebx)
    54ff:	90                   	nop
    5500:	31 c0                	xor    %eax,%eax
    5502:	c7 42 3c 00 00 00 00 	movl   $0x0,0x3c(%edx)
    5509:	c7 42 40 ff ff ff ff 	movl   $0xffffffff,0x40(%edx)
    5510:	66 89 42 38          	mov    %ax,0x38(%edx)
    5514:	8d 46 03             	lea    0x3(%esi),%eax
    5517:	83 c6 01             	add    $0x1,%esi
    551a:	83 c2 10             	add    $0x10,%edx
    551d:	c1 e0 04             	shl    $0x4,%eax
    5520:	01 d8                	add    %ebx,%eax
    5522:	83 fe 06             	cmp    $0x6,%esi
    5525:	c6 40 14 00          	movb   $0x0,0x14(%eax)
    5529:	75 d5                	jne    5500 <init_cpu+0x70>
    552b:	5b                   	pop    %ebx
    552c:	5e                   	pop    %esi
    552d:	5f                   	pop    %edi
    552e:	5d                   	pop    %ebp
    552f:	c3                   	ret    

00005530 <exec_inst>:
    5530:	56                   	push   %esi
    5531:	53                   	push   %ebx
    5532:	e8 89 d7 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    5537:	81 c3 c9 5a 02 00    	add    $0x25ac9,%ebx
    553d:	83 ec 0c             	sub    $0xc,%esp
    5540:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
    5546:	6a 01                	push   $0x1
    5548:	ff 76 20             	pushl  0x20(%esi)
    554b:	e8 90 4d 01 00       	call   1a2e0 <instr_fetch>
    5550:	5a                   	pop    %edx
    5551:	59                   	pop    %ecx
    5552:	0f b6 c0             	movzbl %al,%eax
    5555:	8d 93 a0 0b 00 00    	lea    0xba0(%ebx),%edx
    555b:	50                   	push   %eax
    555c:	ff 76 20             	pushl  0x20(%esi)
    555f:	ff 14 82             	call   *(%edx,%eax,4)
    5562:	83 c4 14             	add    $0x14,%esp
    5565:	5b                   	pop    %ebx
    5566:	5e                   	pop    %esi
    5567:	c3                   	ret    
    5568:	90                   	nop
    5569:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005570 <exec>:
    5570:	55                   	push   %ebp
    5571:	57                   	push   %edi
    5572:	56                   	push   %esi
    5573:	53                   	push   %ebx
    5574:	e8 47 d7 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    5579:	81 c3 87 5a 02 00    	add    $0x25a87,%ebx
    557f:	83 ec 1c             	sub    $0x1c,%esp
    5582:	81 7c 24 30 a0 86 01 	cmpl   $0x186a0,0x30(%esp)
    5589:	00 
    558a:	8d 93 48 1e 05 00    	lea    0x51e48(%ebx),%edx
    5590:	8b 74 24 30          	mov    0x30(%esp),%esi
    5594:	89 14 24             	mov    %edx,(%esp)
    5597:	0f 96 c0             	setbe  %al
    559a:	83 3a 03             	cmpl   $0x3,(%edx)
    559d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
    55a3:	88 83 8d 14 05 00    	mov    %al,0x5148d(%ebx)
    55a9:	0f 94 c1             	sete   %cl
    55ac:	85 f6                	test   %esi,%esi
    55ae:	0f 84 8e 01 00 00    	je     5742 <exec+0x1d2>
    55b4:	89 cd                	mov    %ecx,%ebp
    55b6:	8d 8b e0 1c 05 00    	lea    0x51ce0(%ebx),%ecx
    55bc:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
    55c2:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    55c6:	8d 8b 20 1d 05 00    	lea    0x51d20(%ebx),%ecx
    55cc:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    55d0:	89 e9                	mov    %ebp,%ecx
    55d2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
    55d6:	88 4c 24 07          	mov    %cl,0x7(%esp)
    55da:	e9 80 00 00 00       	jmp    565f <exec+0xef>
    55df:	90                   	nop
    55e0:	e8 4b ff ff ff       	call   5530 <exec_inst>
    55e5:	83 ed 01             	sub    $0x1,%ebp
    55e8:	01 46 20             	add    %eax,0x20(%esi)
    55eb:	80 7c 24 07 00       	cmpb   $0x0,0x7(%esp)
    55f0:	89 c7                	mov    %eax,%edi
    55f2:	0f 85 a8 00 00 00    	jne    56a0 <exec+0x130>
    55f8:	8b 04 24             	mov    (%esp),%eax
    55fb:	83 38 03             	cmpl   $0x3,(%eax)
    55fe:	0f 84 ad 00 00 00    	je     56b1 <exec+0x141>
    5604:	e8 57 2c 01 00       	call   18260 <scan_watchpoint>
    5609:	85 c0                	test   %eax,%eax
    560b:	0f 85 df 00 00 00    	jne    56f0 <exec+0x180>
    5611:	80 be a0 00 00 00 00 	cmpb   $0x0,0xa0(%esi)
    5618:	74 23                	je     563d <exec+0xcd>
    561a:	f6 46 25 02          	testb  $0x2,0x25(%esi)
    561e:	74 1d                	je     563d <exec+0xcd>
    5620:	e8 cb dc ff ff       	call   32f0 <i8259_query_intr_no>
    5625:	89 c7                	mov    %eax,%edi
    5627:	e8 14 dd ff ff       	call   3340 <i8259_ack_intr>
    562c:	89 f8                	mov    %edi,%eax
    562e:	83 ec 0c             	sub    $0xc,%esp
    5631:	0f b6 f8             	movzbl %al,%edi
    5634:	57                   	push   %edi
    5635:	e8 66 67 00 00       	call   bda0 <raise_intr>
    563a:	83 c4 10             	add    $0x10,%esp
    563d:	85 ed                	test   %ebp,%ebp
    563f:	8b 04 24             	mov    (%esp),%eax
    5642:	0f 84 38 01 00 00    	je     5780 <exec+0x210>
    5648:	8b 00                	mov    (%eax),%eax
    564a:	83 f8 01             	cmp    $0x1,%eax
    564d:	0f 85 05 01 00 00    	jne    5758 <exec+0x1e8>
    5653:	0f b6 83 8d 14 05 00 	movzbl 0x5148d(%ebx),%eax
    565a:	c6 44 24 07 00       	movb   $0x0,0x7(%esp)
    565f:	84 c0                	test   %al,%al
    5661:	0f 84 79 ff ff ff    	je     55e0 <exec+0x70>
    5667:	83 ec 0c             	sub    $0xc,%esp
    566a:	ff 74 24 14          	pushl  0x14(%esp)
    566e:	e8 fd f5 ff ff       	call   4c70 <clear_operand_mem_addr>
    5673:	83 c4 10             	add    $0x10,%esp
    5676:	80 bb 8d 14 05 00 00 	cmpb   $0x0,0x5148d(%ebx)
    567d:	0f 84 5d ff ff ff    	je     55e0 <exec+0x70>
    5683:	83 ec 0c             	sub    $0xc,%esp
    5686:	ff 74 24 18          	pushl  0x18(%esp)
    568a:	e8 e1 f5 ff ff       	call   4c70 <clear_operand_mem_addr>
    568f:	83 c4 10             	add    $0x10,%esp
    5692:	e9 49 ff ff ff       	jmp    55e0 <exec+0x70>
    5697:	89 f6                	mov    %esi,%esi
    5699:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    56a0:	e8 ab 2a 01 00       	call   18150 <resume_breakpoints>
    56a5:	8b 04 24             	mov    (%esp),%eax
    56a8:	83 38 03             	cmpl   $0x3,(%eax)
    56ab:	0f 85 53 ff ff ff    	jne    5604 <exec+0x94>
    56b1:	8b 46 20             	mov    0x20(%esi),%eax
    56b4:	83 ec 0c             	sub    $0xc,%esp
    56b7:	83 e8 01             	sub    $0x1,%eax
    56ba:	50                   	push   %eax
    56bb:	e8 30 2a 01 00       	call   180f0 <find_breakpoint>
    56c0:	83 c4 10             	add    $0x10,%esp
    56c3:	85 c0                	test   %eax,%eax
    56c5:	0f 84 39 ff ff ff    	je     5604 <exec+0x94>
    56cb:	0f b6 10             	movzbl (%eax),%edx
    56ce:	52                   	push   %edx
    56cf:	6a 01                	push   $0x1
    56d1:	6a 01                	push   $0x1
    56d3:	ff 70 04             	pushl  0x4(%eax)
    56d6:	e8 55 4b 01 00       	call   1a230 <vaddr_write>
    56db:	83 c4 10             	add    $0x10,%esp
    56de:	83 6e 20 01          	subl   $0x1,0x20(%esi)
    56e2:	e8 79 2b 01 00       	call   18260 <scan_watchpoint>
    56e7:	85 c0                	test   %eax,%eax
    56e9:	0f 84 22 ff ff ff    	je     5611 <exec+0xa1>
    56ef:	90                   	nop
    56f0:	89 6c 24 30          	mov    %ebp,0x30(%esp)
    56f4:	ff 70 04             	pushl  0x4(%eax)
    56f7:	89 c5                	mov    %eax,%ebp
    56f9:	8b 46 20             	mov    0x20(%esi),%eax
    56fc:	29 f8                	sub    %edi,%eax
    56fe:	50                   	push   %eax
    56ff:	8b 45 00             	mov    0x0(%ebp),%eax
    5702:	c1 f8 0a             	sar    $0xa,%eax
    5705:	50                   	push   %eax
    5706:	8d 83 cc 02 ff ff    	lea    -0xfd34(%ebx),%eax
    570c:	50                   	push   %eax
    570d:	e8 ae d0 ff ff       	call   27c0 <printf@plt>
    5712:	8d 83 00 03 ff ff    	lea    -0xfd00(%ebx),%eax
    5718:	83 c4 0c             	add    $0xc,%esp
    571b:	ff 75 0c             	pushl  0xc(%ebp)
    571e:	ff 75 08             	pushl  0x8(%ebp)
    5721:	50                   	push   %eax
    5722:	e8 99 d0 ff ff       	call   27c0 <printf@plt>
    5727:	8b 45 0c             	mov    0xc(%ebp),%eax
    572a:	89 45 08             	mov    %eax,0x8(%ebp)
    572d:	8b 44 24 10          	mov    0x10(%esp),%eax
    5731:	83 c4 10             	add    $0x10,%esp
    5734:	8b 54 24 30          	mov    0x30(%esp),%edx
    5738:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
    573e:	85 d2                	test   %edx,%edx
    5740:	75 09                	jne    574b <exec+0x1db>
    5742:	8b 04 24             	mov    (%esp),%eax
    5745:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
    574b:	83 c4 1c             	add    $0x1c,%esp
    574e:	5b                   	pop    %ebx
    574f:	5e                   	pop    %esi
    5750:	5f                   	pop    %edi
    5751:	5d                   	pop    %ebp
    5752:	c3                   	ret    
    5753:	90                   	nop
    5754:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5758:	85 c0                	test   %eax,%eax
    575a:	75 ef                	jne    574b <exec+0x1db>
    575c:	8d 83 25 03 ff ff    	lea    -0xfcdb(%ebx),%eax
    5762:	83 ec 0c             	sub    $0xc,%esp
    5765:	50                   	push   %eax
    5766:	e8 95 d0 ff ff       	call   2800 <puts@plt>
    576b:	83 c4 10             	add    $0x10,%esp
    576e:	83 c4 1c             	add    $0x1c,%esp
    5771:	5b                   	pop    %ebx
    5772:	5e                   	pop    %esi
    5773:	5f                   	pop    %edi
    5774:	5d                   	pop    %ebp
    5775:	c3                   	ret    
    5776:	8d 76 00             	lea    0x0(%esi),%esi
    5779:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    5780:	8b 00                	mov    (%eax),%eax
    5782:	85 c0                	test   %eax,%eax
    5784:	75 bc                	jne    5742 <exec+0x1d2>
    5786:	eb d4                	jmp    575c <exec+0x1ec>
    5788:	66 90                	xchg   %ax,%ax
    578a:	66 90                	xchg   %ax,%ax
    578c:	66 90                	xchg   %ax,%ax
    578e:	66 90                	xchg   %ax,%ax

00005790 <alu_test_add>:
    5790:	55                   	push   %ebp
    5791:	57                   	push   %edi
    5792:	56                   	push   %esi
    5793:	53                   	push   %ebx
    5794:	e8 21 3a 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    5799:	81 c5 67 58 02 00    	add    $0x25867,%ebp
    579f:	83 ec 4c             	sub    $0x4c,%esp
    57a2:	8d 7c 24 40          	lea    0x40(%esp),%edi
    57a6:	8d 44 24 28          	lea    0x28(%esp),%eax
    57aa:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    57b1:	10 
    57b2:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    57b9:	ff 
    57ba:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    57c1:	ff 
    57c2:	89 7c 24 14          	mov    %edi,0x14(%esp)
    57c6:	8d bd 60 1d 05 00    	lea    0x51d60(%ebp),%edi
    57cc:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    57d3:	ff 
    57d4:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    57db:	00 
    57dc:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    57e3:	00 
    57e4:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    57eb:	00 
    57ec:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    57f0:	89 44 24 18          	mov    %eax,0x18(%esp)
    57f4:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    57fb:	10 
    57fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5800:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    5804:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    5809:	eb 0a                	jmp    5815 <alu_test_add+0x85>
    580b:	90                   	nop
    580c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5810:	8b 0e                	mov    (%esi),%ecx
    5812:	83 c6 04             	add    $0x4,%esi
    5815:	83 ec 08             	sub    $0x8,%esp
    5818:	89 eb                	mov    %ebp,%ebx
    581a:	ff 74 24 14          	pushl  0x14(%esp)
    581e:	51                   	push   %ecx
    581f:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    5823:	e8 68 58 00 00       	call   b090 <alu_add>
    5828:	89 c3                	mov    %eax,%ebx
    582a:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    582e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    5832:	83 c4 10             	add    $0x10,%esp
    5835:	01 c8                	add    %ecx,%eax
    5837:	9c                   	pushf  
    5838:	5a                   	pop    %edx
    5839:	39 c3                	cmp    %eax,%ebx
    583b:	0f 85 70 02 00 00    	jne    5ab1 <alu_test_add+0x321>
    5841:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    5845:	89 d1                	mov    %edx,%ecx
    5847:	83 e1 01             	and    $0x1,%ecx
    584a:	89 c3                	mov    %eax,%ebx
    584c:	83 e3 01             	and    $0x1,%ebx
    584f:	38 cb                	cmp    %cl,%bl
    5851:	0f 85 4f 02 00 00    	jne    5aa6 <alu_test_add+0x316>
    5857:	89 c3                	mov    %eax,%ebx
    5859:	89 d1                	mov    %edx,%ecx
    585b:	c0 eb 02             	shr    $0x2,%bl
    585e:	c1 e9 02             	shr    $0x2,%ecx
    5861:	83 e3 01             	and    $0x1,%ebx
    5864:	83 e1 01             	and    $0x1,%ecx
    5867:	38 cb                	cmp    %cl,%bl
    5869:	0f 85 2c 02 00 00    	jne    5a9b <alu_test_add+0x30b>
    586f:	89 d1                	mov    %edx,%ecx
    5871:	89 c3                	mov    %eax,%ebx
    5873:	c1 e9 07             	shr    $0x7,%ecx
    5876:	c0 eb 07             	shr    $0x7,%bl
    5879:	83 e1 01             	and    $0x1,%ecx
    587c:	38 cb                	cmp    %cl,%bl
    587e:	0f 85 0c 02 00 00    	jne    5a90 <alu_test_add+0x300>
    5884:	89 d1                	mov    %edx,%ecx
    5886:	c0 e8 06             	shr    $0x6,%al
    5889:	c1 e9 06             	shr    $0x6,%ecx
    588c:	83 e0 01             	and    $0x1,%eax
    588f:	83 e1 01             	and    $0x1,%ecx
    5892:	38 c8                	cmp    %cl,%al
    5894:	0f 85 e8 01 00 00    	jne    5a82 <alu_test_add+0x2f2>
    589a:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    589e:	c1 ea 0b             	shr    $0xb,%edx
    58a1:	83 e2 01             	and    $0x1,%edx
    58a4:	c0 e8 03             	shr    $0x3,%al
    58a7:	83 e0 01             	and    $0x1,%eax
    58aa:	38 d0                	cmp    %dl,%al
    58ac:	0f 85 c2 01 00 00    	jne    5a74 <alu_test_add+0x2e4>
    58b2:	3b 74 24 14          	cmp    0x14(%esp),%esi
    58b6:	0f 85 54 ff ff ff    	jne    5810 <alu_test_add+0x80>
    58bc:	8b 44 24 18          	mov    0x18(%esp),%eax
    58c0:	39 44 24 14          	cmp    %eax,0x14(%esp)
    58c4:	74 1a                	je     58e0 <alu_test_add+0x150>
    58c6:	8b 30                	mov    (%eax),%esi
    58c8:	83 c0 04             	add    $0x4,%eax
    58cb:	89 44 24 18          	mov    %eax,0x18(%esp)
    58cf:	89 74 24 0c          	mov    %esi,0xc(%esp)
    58d3:	e9 28 ff ff ff       	jmp    5800 <alu_test_add+0x70>
    58d8:	90                   	nop
    58d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    58e0:	83 ec 0c             	sub    $0xc,%esp
    58e3:	89 eb                	mov    %ebp,%ebx
    58e5:	6a 00                	push   $0x0
    58e7:	e8 84 cd ff ff       	call   2670 <time@plt>
    58ec:	89 04 24             	mov    %eax,(%esp)
    58ef:	e8 fc cd ff ff       	call   26f0 <srand@plt>
    58f4:	83 c4 10             	add    $0x10,%esp
    58f7:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    58fe:	00 
    58ff:	90                   	nop
    5900:	89 eb                	mov    %ebp,%ebx
    5902:	e8 49 ce ff ff       	call   2750 <rand@plt>
    5907:	89 c6                	mov    %eax,%esi
    5909:	e8 42 ce ff ff       	call   2750 <rand@plt>
    590e:	83 ec 08             	sub    $0x8,%esp
    5911:	56                   	push   %esi
    5912:	50                   	push   %eax
    5913:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    5917:	e8 74 57 00 00       	call   b090 <alu_add>
    591c:	89 c3                	mov    %eax,%ebx
    591e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    5922:	89 f0                	mov    %esi,%eax
    5924:	83 c4 10             	add    $0x10,%esp
    5927:	01 c8                	add    %ecx,%eax
    5929:	9c                   	pushf  
    592a:	5a                   	pop    %edx
    592b:	39 c3                	cmp    %eax,%ebx
    592d:	0f 85 8d 00 00 00    	jne    59c0 <alu_test_add+0x230>
    5933:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    5937:	89 d1                	mov    %edx,%ecx
    5939:	83 e1 01             	and    $0x1,%ecx
    593c:	89 c3                	mov    %eax,%ebx
    593e:	83 e3 01             	and    $0x1,%ebx
    5941:	38 cb                	cmp    %cl,%bl
    5943:	0f 85 0d 01 00 00    	jne    5a56 <alu_test_add+0x2c6>
    5949:	89 c3                	mov    %eax,%ebx
    594b:	89 d1                	mov    %edx,%ecx
    594d:	c0 eb 02             	shr    $0x2,%bl
    5950:	c1 e9 02             	shr    $0x2,%ecx
    5953:	83 e3 01             	and    $0x1,%ebx
    5956:	83 e1 01             	and    $0x1,%ecx
    5959:	38 cb                	cmp    %cl,%bl
    595b:	0f 85 d7 00 00 00    	jne    5a38 <alu_test_add+0x2a8>
    5961:	89 d1                	mov    %edx,%ecx
    5963:	89 c3                	mov    %eax,%ebx
    5965:	c1 e9 07             	shr    $0x7,%ecx
    5968:	c0 eb 07             	shr    $0x7,%bl
    596b:	83 e1 01             	and    $0x1,%ecx
    596e:	38 cb                	cmp    %cl,%bl
    5970:	0f 85 a4 00 00 00    	jne    5a1a <alu_test_add+0x28a>
    5976:	89 d1                	mov    %edx,%ecx
    5978:	c0 e8 06             	shr    $0x6,%al
    597b:	c1 e9 06             	shr    $0x6,%ecx
    597e:	83 e0 01             	and    $0x1,%eax
    5981:	83 e1 01             	and    $0x1,%ecx
    5984:	38 c8                	cmp    %cl,%al
    5986:	75 74                	jne    59fc <alu_test_add+0x26c>
    5988:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    598c:	c1 ea 0b             	shr    $0xb,%edx
    598f:	83 e2 01             	and    $0x1,%edx
    5992:	c0 e8 03             	shr    $0x3,%al
    5995:	83 e0 01             	and    $0x1,%eax
    5998:	38 d0                	cmp    %dl,%al
    599a:	75 42                	jne    59de <alu_test_add+0x24e>
    599c:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    59a1:	0f 85 59 ff ff ff    	jne    5900 <alu_test_add+0x170>
    59a7:	8d 85 38 04 ff ff    	lea    -0xfbc8(%ebp),%eax
    59ad:	83 ec 0c             	sub    $0xc,%esp
    59b0:	89 eb                	mov    %ebp,%ebx
    59b2:	50                   	push   %eax
    59b3:	e8 48 ce ff ff       	call   2800 <puts@plt>
    59b8:	83 c4 5c             	add    $0x5c,%esp
    59bb:	5b                   	pop    %ebx
    59bc:	5e                   	pop    %esi
    59bd:	5f                   	pop    %edi
    59be:	5d                   	pop    %ebp
    59bf:	c3                   	ret    
    59c0:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    59c6:	50                   	push   %eax
    59c7:	6a 50                	push   $0x50
    59c9:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    59cf:	89 eb                	mov    %ebp,%ebx
    59d1:	50                   	push   %eax
    59d2:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    59d8:	50                   	push   %eax
    59d9:	e8 b2 ce ff ff       	call   2890 <__assert_fail@plt>
    59de:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    59e4:	50                   	push   %eax
    59e5:	6a 55                	push   $0x55
    59e7:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    59ed:	89 eb                	mov    %ebp,%ebx
    59ef:	50                   	push   %eax
    59f0:	8d 85 18 04 ff ff    	lea    -0xfbe8(%ebp),%eax
    59f6:	50                   	push   %eax
    59f7:	e8 94 ce ff ff       	call   2890 <__assert_fail@plt>
    59fc:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5a02:	50                   	push   %eax
    5a03:	6a 54                	push   $0x54
    5a05:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5a0b:	89 eb                	mov    %ebp,%ebx
    5a0d:	50                   	push   %eax
    5a0e:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    5a14:	50                   	push   %eax
    5a15:	e8 76 ce ff ff       	call   2890 <__assert_fail@plt>
    5a1a:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5a20:	50                   	push   %eax
    5a21:	6a 53                	push   $0x53
    5a23:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5a29:	89 eb                	mov    %ebp,%ebx
    5a2b:	50                   	push   %eax
    5a2c:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    5a32:	50                   	push   %eax
    5a33:	e8 58 ce ff ff       	call   2890 <__assert_fail@plt>
    5a38:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5a3e:	50                   	push   %eax
    5a3f:	6a 52                	push   $0x52
    5a41:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5a47:	89 eb                	mov    %ebp,%ebx
    5a49:	50                   	push   %eax
    5a4a:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    5a50:	50                   	push   %eax
    5a51:	e8 3a ce ff ff       	call   2890 <__assert_fail@plt>
    5a56:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5a5c:	50                   	push   %eax
    5a5d:	6a 51                	push   $0x51
    5a5f:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5a65:	89 eb                	mov    %ebp,%ebx
    5a67:	50                   	push   %eax
    5a68:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    5a6e:	50                   	push   %eax
    5a6f:	e8 1c ce ff ff       	call   2890 <__assert_fail@plt>
    5a74:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5a7a:	50                   	push   %eax
    5a7b:	6a 40                	push   $0x40
    5a7d:	e9 65 ff ff ff       	jmp    59e7 <alu_test_add+0x257>
    5a82:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5a88:	50                   	push   %eax
    5a89:	6a 3f                	push   $0x3f
    5a8b:	e9 75 ff ff ff       	jmp    5a05 <alu_test_add+0x275>
    5a90:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5a96:	50                   	push   %eax
    5a97:	6a 3e                	push   $0x3e
    5a99:	eb 88                	jmp    5a23 <alu_test_add+0x293>
    5a9b:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5aa1:	50                   	push   %eax
    5aa2:	6a 3d                	push   $0x3d
    5aa4:	eb 9b                	jmp    5a41 <alu_test_add+0x2b1>
    5aa6:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5aac:	50                   	push   %eax
    5aad:	6a 3c                	push   $0x3c
    5aaf:	eb ae                	jmp    5a5f <alu_test_add+0x2cf>
    5ab1:	8d 85 44 08 ff ff    	lea    -0xf7bc(%ebp),%eax
    5ab7:	50                   	push   %eax
    5ab8:	6a 3b                	push   $0x3b
    5aba:	e9 0a ff ff ff       	jmp    59c9 <alu_test_add+0x239>
    5abf:	90                   	nop

00005ac0 <alu_test_adc>:
    5ac0:	55                   	push   %ebp
    5ac1:	57                   	push   %edi
    5ac2:	56                   	push   %esi
    5ac3:	53                   	push   %ebx
    5ac4:	e8 f1 36 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    5ac9:	81 c5 37 55 02 00    	add    $0x25537,%ebp
    5acf:	83 ec 4c             	sub    $0x4c,%esp
    5ad2:	8d 7c 24 40          	lea    0x40(%esp),%edi
    5ad6:	8d 44 24 28          	lea    0x28(%esp),%eax
    5ada:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    5ae1:	10 
    5ae2:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    5ae9:	ff 
    5aea:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    5af1:	ff 
    5af2:	89 7c 24 18          	mov    %edi,0x18(%esp)
    5af6:	8d bd 60 1d 05 00    	lea    0x51d60(%ebp),%edi
    5afc:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    5b03:	ff 
    5b04:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    5b0b:	00 
    5b0c:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    5b13:	00 
    5b14:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    5b1b:	00 
    5b1c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    5b20:	89 44 24 14          	mov    %eax,0x14(%esp)
    5b24:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    5b2b:	10 
    5b2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5b30:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    5b34:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    5b39:	eb 0a                	jmp    5b45 <alu_test_adc+0x85>
    5b3b:	90                   	nop
    5b3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5b40:	8b 0e                	mov    (%esi),%ecx
    5b42:	83 c6 04             	add    $0x4,%esi
    5b45:	83 ec 08             	sub    $0x8,%esp
    5b48:	80 67 24 fe          	andb   $0xfe,0x24(%edi)
    5b4c:	89 eb                	mov    %ebp,%ebx
    5b4e:	ff 74 24 14          	pushl  0x14(%esp)
    5b52:	51                   	push   %ecx
    5b53:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    5b57:	e8 e4 55 00 00       	call   b140 <alu_adc>
    5b5c:	89 c3                	mov    %eax,%ebx
    5b5e:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    5b62:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    5b66:	83 c4 10             	add    $0x10,%esp
    5b69:	f8                   	clc    
    5b6a:	11 c8                	adc    %ecx,%eax
    5b6c:	9c                   	pushf  
    5b6d:	5a                   	pop    %edx
    5b6e:	39 c3                	cmp    %eax,%ebx
    5b70:	0f 85 6d 04 00 00    	jne    5fe3 <alu_test_adc+0x523>
    5b76:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    5b7a:	89 d1                	mov    %edx,%ecx
    5b7c:	83 e1 01             	and    $0x1,%ecx
    5b7f:	89 c3                	mov    %eax,%ebx
    5b81:	83 e3 01             	and    $0x1,%ebx
    5b84:	38 cb                	cmp    %cl,%bl
    5b86:	0f 85 49 04 00 00    	jne    5fd5 <alu_test_adc+0x515>
    5b8c:	89 c3                	mov    %eax,%ebx
    5b8e:	89 d1                	mov    %edx,%ecx
    5b90:	c0 eb 02             	shr    $0x2,%bl
    5b93:	c1 e9 02             	shr    $0x2,%ecx
    5b96:	83 e3 01             	and    $0x1,%ebx
    5b99:	83 e1 01             	and    $0x1,%ecx
    5b9c:	38 cb                	cmp    %cl,%bl
    5b9e:	0f 85 23 04 00 00    	jne    5fc7 <alu_test_adc+0x507>
    5ba4:	89 d1                	mov    %edx,%ecx
    5ba6:	89 c3                	mov    %eax,%ebx
    5ba8:	c1 e9 07             	shr    $0x7,%ecx
    5bab:	c0 eb 07             	shr    $0x7,%bl
    5bae:	83 e1 01             	and    $0x1,%ecx
    5bb1:	38 cb                	cmp    %cl,%bl
    5bb3:	0f 85 00 04 00 00    	jne    5fb9 <alu_test_adc+0x4f9>
    5bb9:	89 d1                	mov    %edx,%ecx
    5bbb:	c0 e8 06             	shr    $0x6,%al
    5bbe:	c1 e9 06             	shr    $0x6,%ecx
    5bc1:	83 e0 01             	and    $0x1,%eax
    5bc4:	83 e1 01             	and    $0x1,%ecx
    5bc7:	38 c8                	cmp    %cl,%al
    5bc9:	0f 85 dc 03 00 00    	jne    5fab <alu_test_adc+0x4eb>
    5bcf:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    5bd3:	c1 ea 0b             	shr    $0xb,%edx
    5bd6:	83 e2 01             	and    $0x1,%edx
    5bd9:	c0 e8 03             	shr    $0x3,%al
    5bdc:	83 e0 01             	and    $0x1,%eax
    5bdf:	38 d0                	cmp    %dl,%al
    5be1:	0f 85 b6 03 00 00    	jne    5f9d <alu_test_adc+0x4dd>
    5be7:	3b 74 24 18          	cmp    0x18(%esp),%esi
    5beb:	0f 85 4f ff ff ff    	jne    5b40 <alu_test_adc+0x80>
    5bf1:	8b 44 24 14          	mov    0x14(%esp),%eax
    5bf5:	39 44 24 18          	cmp    %eax,0x18(%esp)
    5bf9:	74 15                	je     5c10 <alu_test_adc+0x150>
    5bfb:	8b 30                	mov    (%eax),%esi
    5bfd:	83 c0 04             	add    $0x4,%eax
    5c00:	89 44 24 14          	mov    %eax,0x14(%esp)
    5c04:	89 74 24 0c          	mov    %esi,0xc(%esp)
    5c08:	e9 23 ff ff ff       	jmp    5b30 <alu_test_adc+0x70>
    5c0d:	8d 76 00             	lea    0x0(%esi),%esi
    5c10:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    5c14:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    5c1b:	10 
    5c1c:	89 44 24 18          	mov    %eax,0x18(%esp)
    5c20:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    5c24:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    5c29:	eb 0a                	jmp    5c35 <alu_test_adc+0x175>
    5c2b:	90                   	nop
    5c2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5c30:	8b 0e                	mov    (%esi),%ecx
    5c32:	83 c6 04             	add    $0x4,%esi
    5c35:	83 ec 08             	sub    $0x8,%esp
    5c38:	80 4f 24 01          	orb    $0x1,0x24(%edi)
    5c3c:	89 eb                	mov    %ebp,%ebx
    5c3e:	ff 74 24 14          	pushl  0x14(%esp)
    5c42:	51                   	push   %ecx
    5c43:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    5c47:	e8 f4 54 00 00       	call   b140 <alu_adc>
    5c4c:	89 c3                	mov    %eax,%ebx
    5c4e:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    5c52:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    5c56:	83 c4 10             	add    $0x10,%esp
    5c59:	f9                   	stc    
    5c5a:	11 c8                	adc    %ecx,%eax
    5c5c:	9c                   	pushf  
    5c5d:	5a                   	pop    %edx
    5c5e:	39 c3                	cmp    %eax,%ebx
    5c60:	0f 85 be 03 00 00    	jne    6024 <alu_test_adc+0x564>
    5c66:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    5c6a:	89 d1                	mov    %edx,%ecx
    5c6c:	83 e1 01             	and    $0x1,%ecx
    5c6f:	89 c3                	mov    %eax,%ebx
    5c71:	83 e3 01             	and    $0x1,%ebx
    5c74:	38 cb                	cmp    %cl,%bl
    5c76:	0f 85 fd 03 00 00    	jne    6079 <alu_test_adc+0x5b9>
    5c7c:	89 c3                	mov    %eax,%ebx
    5c7e:	89 d1                	mov    %edx,%ecx
    5c80:	c0 eb 02             	shr    $0x2,%bl
    5c83:	c1 e9 02             	shr    $0x2,%ecx
    5c86:	83 e3 01             	and    $0x1,%ebx
    5c89:	83 e1 01             	and    $0x1,%ecx
    5c8c:	38 cb                	cmp    %cl,%bl
    5c8e:	0f 85 d4 03 00 00    	jne    6068 <alu_test_adc+0x5a8>
    5c94:	89 d1                	mov    %edx,%ecx
    5c96:	89 c3                	mov    %eax,%ebx
    5c98:	c1 e9 07             	shr    $0x7,%ecx
    5c9b:	c0 eb 07             	shr    $0x7,%bl
    5c9e:	83 e1 01             	and    $0x1,%ecx
    5ca1:	38 cb                	cmp    %cl,%bl
    5ca3:	0f 85 ae 03 00 00    	jne    6057 <alu_test_adc+0x597>
    5ca9:	89 d1                	mov    %edx,%ecx
    5cab:	c0 e8 06             	shr    $0x6,%al
    5cae:	c1 e9 06             	shr    $0x6,%ecx
    5cb1:	83 e0 01             	and    $0x1,%eax
    5cb4:	83 e1 01             	and    $0x1,%ecx
    5cb7:	38 c8                	cmp    %cl,%al
    5cb9:	0f 85 87 03 00 00    	jne    6046 <alu_test_adc+0x586>
    5cbf:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    5cc3:	c1 ea 0b             	shr    $0xb,%edx
    5cc6:	83 e2 01             	and    $0x1,%edx
    5cc9:	c0 e8 03             	shr    $0x3,%al
    5ccc:	83 e0 01             	and    $0x1,%eax
    5ccf:	38 d0                	cmp    %dl,%al
    5cd1:	0f 85 5e 03 00 00    	jne    6035 <alu_test_adc+0x575>
    5cd7:	3b 74 24 14          	cmp    0x14(%esp),%esi
    5cdb:	0f 85 4f ff ff ff    	jne    5c30 <alu_test_adc+0x170>
    5ce1:	8b 44 24 18          	mov    0x18(%esp),%eax
    5ce5:	8b 74 24 14          	mov    0x14(%esp),%esi
    5ce9:	39 f0                	cmp    %esi,%eax
    5ceb:	74 13                	je     5d00 <alu_test_adc+0x240>
    5ced:	8b 30                	mov    (%eax),%esi
    5cef:	83 c0 04             	add    $0x4,%eax
    5cf2:	89 44 24 18          	mov    %eax,0x18(%esp)
    5cf6:	89 74 24 0c          	mov    %esi,0xc(%esp)
    5cfa:	e9 21 ff ff ff       	jmp    5c20 <alu_test_adc+0x160>
    5cff:	90                   	nop
    5d00:	83 ec 0c             	sub    $0xc,%esp
    5d03:	89 eb                	mov    %ebp,%ebx
    5d05:	6a 00                	push   $0x0
    5d07:	e8 64 c9 ff ff       	call   2670 <time@plt>
    5d0c:	89 04 24             	mov    %eax,(%esp)
    5d0f:	e8 dc c9 ff ff       	call   26f0 <srand@plt>
    5d14:	83 c4 10             	add    $0x10,%esp
    5d17:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    5d1e:	00 
    5d1f:	90                   	nop
    5d20:	89 eb                	mov    %ebp,%ebx
    5d22:	e8 29 ca ff ff       	call   2750 <rand@plt>
    5d27:	89 c6                	mov    %eax,%esi
    5d29:	e8 22 ca ff ff       	call   2750 <rand@plt>
    5d2e:	83 ec 08             	sub    $0x8,%esp
    5d31:	80 67 24 fe          	andb   $0xfe,0x24(%edi)
    5d35:	56                   	push   %esi
    5d36:	50                   	push   %eax
    5d37:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    5d3b:	e8 00 54 00 00       	call   b140 <alu_adc>
    5d40:	89 c3                	mov    %eax,%ebx
    5d42:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    5d46:	89 f0                	mov    %esi,%eax
    5d48:	83 c4 10             	add    $0x10,%esp
    5d4b:	f8                   	clc    
    5d4c:	11 c8                	adc    %ecx,%eax
    5d4e:	9c                   	pushf  
    5d4f:	5a                   	pop    %edx
    5d50:	39 c3                	cmp    %eax,%ebx
    5d52:	0f 85 55 01 00 00    	jne    5ead <alu_test_adc+0x3ed>
    5d58:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    5d5c:	89 d1                	mov    %edx,%ecx
    5d5e:	83 e1 01             	and    $0x1,%ecx
    5d61:	89 c3                	mov    %eax,%ebx
    5d63:	83 e3 01             	and    $0x1,%ebx
    5d66:	38 cb                	cmp    %cl,%bl
    5d68:	0f 85 e4 01 00 00    	jne    5f52 <alu_test_adc+0x492>
    5d6e:	89 c3                	mov    %eax,%ebx
    5d70:	89 d1                	mov    %edx,%ecx
    5d72:	c0 eb 02             	shr    $0x2,%bl
    5d75:	c1 e9 02             	shr    $0x2,%ecx
    5d78:	83 e3 01             	and    $0x1,%ebx
    5d7b:	83 e1 01             	and    $0x1,%ecx
    5d7e:	38 cb                	cmp    %cl,%bl
    5d80:	0f 85 ab 01 00 00    	jne    5f31 <alu_test_adc+0x471>
    5d86:	89 d1                	mov    %edx,%ecx
    5d88:	89 c3                	mov    %eax,%ebx
    5d8a:	c1 e9 07             	shr    $0x7,%ecx
    5d8d:	c0 eb 07             	shr    $0x7,%bl
    5d90:	83 e1 01             	and    $0x1,%ecx
    5d93:	38 cb                	cmp    %cl,%bl
    5d95:	0f 85 75 01 00 00    	jne    5f10 <alu_test_adc+0x450>
    5d9b:	89 d1                	mov    %edx,%ecx
    5d9d:	c0 e8 06             	shr    $0x6,%al
    5da0:	c1 e9 06             	shr    $0x6,%ecx
    5da3:	83 e0 01             	and    $0x1,%eax
    5da6:	83 e1 01             	and    $0x1,%ecx
    5da9:	38 c8                	cmp    %cl,%al
    5dab:	0f 85 3e 01 00 00    	jne    5eef <alu_test_adc+0x42f>
    5db1:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    5db5:	c1 ea 0b             	shr    $0xb,%edx
    5db8:	83 e2 01             	and    $0x1,%edx
    5dbb:	c0 e8 03             	shr    $0x3,%al
    5dbe:	83 e0 01             	and    $0x1,%eax
    5dc1:	38 d0                	cmp    %dl,%al
    5dc3:	0f 85 05 01 00 00    	jne    5ece <alu_test_adc+0x40e>
    5dc9:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    5dce:	0f 85 4c ff ff ff    	jne    5d20 <alu_test_adc+0x260>
    5dd4:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    5ddb:	00 
    5ddc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5de0:	89 eb                	mov    %ebp,%ebx
    5de2:	e8 69 c9 ff ff       	call   2750 <rand@plt>
    5de7:	89 c6                	mov    %eax,%esi
    5de9:	e8 62 c9 ff ff       	call   2750 <rand@plt>
    5dee:	83 ec 08             	sub    $0x8,%esp
    5df1:	80 4f 24 01          	orb    $0x1,0x24(%edi)
    5df5:	56                   	push   %esi
    5df6:	50                   	push   %eax
    5df7:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    5dfb:	e8 40 53 00 00       	call   b140 <alu_adc>
    5e00:	89 c3                	mov    %eax,%ebx
    5e02:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    5e06:	89 f0                	mov    %esi,%eax
    5e08:	83 c4 10             	add    $0x10,%esp
    5e0b:	f9                   	stc    
    5e0c:	11 c8                	adc    %ecx,%eax
    5e0e:	9c                   	pushf  
    5e0f:	5a                   	pop    %edx
    5e10:	39 c3                	cmp    %eax,%ebx
    5e12:	0f 85 fb 01 00 00    	jne    6013 <alu_test_adc+0x553>
    5e18:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    5e1c:	89 d1                	mov    %edx,%ecx
    5e1e:	83 e1 01             	and    $0x1,%ecx
    5e21:	89 c3                	mov    %eax,%ebx
    5e23:	83 e3 01             	and    $0x1,%ebx
    5e26:	38 cb                	cmp    %cl,%bl
    5e28:	0f 85 45 01 00 00    	jne    5f73 <alu_test_adc+0x4b3>
    5e2e:	89 c3                	mov    %eax,%ebx
    5e30:	89 d1                	mov    %edx,%ecx
    5e32:	c0 eb 02             	shr    $0x2,%bl
    5e35:	c1 e9 02             	shr    $0x2,%ecx
    5e38:	83 e3 01             	and    $0x1,%ebx
    5e3b:	83 e1 01             	and    $0x1,%ecx
    5e3e:	38 cb                	cmp    %cl,%bl
    5e40:	0f 85 49 01 00 00    	jne    5f8f <alu_test_adc+0x4cf>
    5e46:	89 d1                	mov    %edx,%ecx
    5e48:	89 c3                	mov    %eax,%ebx
    5e4a:	c1 e9 07             	shr    $0x7,%ecx
    5e4d:	c0 eb 07             	shr    $0x7,%bl
    5e50:	83 e1 01             	and    $0x1,%ecx
    5e53:	38 cb                	cmp    %cl,%bl
    5e55:	0f 85 26 01 00 00    	jne    5f81 <alu_test_adc+0x4c1>
    5e5b:	89 d1                	mov    %edx,%ecx
    5e5d:	c0 e8 06             	shr    $0x6,%al
    5e60:	c1 e9 06             	shr    $0x6,%ecx
    5e63:	83 e0 01             	and    $0x1,%eax
    5e66:	83 e1 01             	and    $0x1,%ecx
    5e69:	38 c8                	cmp    %cl,%al
    5e6b:	0f 85 91 01 00 00    	jne    6002 <alu_test_adc+0x542>
    5e71:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    5e75:	c1 ea 0b             	shr    $0xb,%edx
    5e78:	83 e2 01             	and    $0x1,%edx
    5e7b:	c0 e8 03             	shr    $0x3,%al
    5e7e:	83 e0 01             	and    $0x1,%eax
    5e81:	38 d0                	cmp    %dl,%al
    5e83:	0f 85 68 01 00 00    	jne    5ff1 <alu_test_adc+0x531>
    5e89:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    5e8e:	0f 85 4c ff ff ff    	jne    5de0 <alu_test_adc+0x320>
    5e94:	8d 85 58 04 ff ff    	lea    -0xfba8(%ebp),%eax
    5e9a:	83 ec 0c             	sub    $0xc,%esp
    5e9d:	89 eb                	mov    %ebp,%ebx
    5e9f:	50                   	push   %eax
    5ea0:	e8 5b c9 ff ff       	call   2800 <puts@plt>
    5ea5:	83 c4 5c             	add    $0x5c,%esp
    5ea8:	5b                   	pop    %ebx
    5ea9:	5e                   	pop    %esi
    5eaa:	5f                   	pop    %edi
    5eab:	5d                   	pop    %ebp
    5eac:	c3                   	ret    
    5ead:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5eb3:	50                   	push   %eax
    5eb4:	68 a7 00 00 00       	push   $0xa7
    5eb9:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5ebf:	89 eb                	mov    %ebp,%ebx
    5ec1:	50                   	push   %eax
    5ec2:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    5ec8:	50                   	push   %eax
    5ec9:	e8 c2 c9 ff ff       	call   2890 <__assert_fail@plt>
    5ece:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5ed4:	50                   	push   %eax
    5ed5:	68 ac 00 00 00       	push   $0xac
    5eda:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5ee0:	89 eb                	mov    %ebp,%ebx
    5ee2:	50                   	push   %eax
    5ee3:	8d 85 18 04 ff ff    	lea    -0xfbe8(%ebp),%eax
    5ee9:	50                   	push   %eax
    5eea:	e8 a1 c9 ff ff       	call   2890 <__assert_fail@plt>
    5eef:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5ef5:	50                   	push   %eax
    5ef6:	68 ab 00 00 00       	push   $0xab
    5efb:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5f01:	89 eb                	mov    %ebp,%ebx
    5f03:	50                   	push   %eax
    5f04:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    5f0a:	50                   	push   %eax
    5f0b:	e8 80 c9 ff ff       	call   2890 <__assert_fail@plt>
    5f10:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5f16:	50                   	push   %eax
    5f17:	68 aa 00 00 00       	push   $0xaa
    5f1c:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5f22:	89 eb                	mov    %ebp,%ebx
    5f24:	50                   	push   %eax
    5f25:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    5f2b:	50                   	push   %eax
    5f2c:	e8 5f c9 ff ff       	call   2890 <__assert_fail@plt>
    5f31:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5f37:	50                   	push   %eax
    5f38:	68 a9 00 00 00       	push   $0xa9
    5f3d:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5f43:	89 eb                	mov    %ebp,%ebx
    5f45:	50                   	push   %eax
    5f46:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    5f4c:	50                   	push   %eax
    5f4d:	e8 3e c9 ff ff       	call   2890 <__assert_fail@plt>
    5f52:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5f58:	50                   	push   %eax
    5f59:	68 a8 00 00 00       	push   $0xa8
    5f5e:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    5f64:	89 eb                	mov    %ebp,%ebx
    5f66:	50                   	push   %eax
    5f67:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    5f6d:	50                   	push   %eax
    5f6e:	e8 1d c9 ff ff       	call   2890 <__assert_fail@plt>
    5f73:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5f79:	50                   	push   %eax
    5f7a:	68 bd 00 00 00       	push   $0xbd
    5f7f:	eb dd                	jmp    5f5e <alu_test_adc+0x49e>
    5f81:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5f87:	50                   	push   %eax
    5f88:	68 bf 00 00 00       	push   $0xbf
    5f8d:	eb 8d                	jmp    5f1c <alu_test_adc+0x45c>
    5f8f:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5f95:	50                   	push   %eax
    5f96:	68 be 00 00 00       	push   $0xbe
    5f9b:	eb a0                	jmp    5f3d <alu_test_adc+0x47d>
    5f9d:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5fa3:	50                   	push   %eax
    5fa4:	6a 79                	push   $0x79
    5fa6:	e9 2f ff ff ff       	jmp    5eda <alu_test_adc+0x41a>
    5fab:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5fb1:	50                   	push   %eax
    5fb2:	6a 78                	push   $0x78
    5fb4:	e9 42 ff ff ff       	jmp    5efb <alu_test_adc+0x43b>
    5fb9:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5fbf:	50                   	push   %eax
    5fc0:	6a 77                	push   $0x77
    5fc2:	e9 55 ff ff ff       	jmp    5f1c <alu_test_adc+0x45c>
    5fc7:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5fcd:	50                   	push   %eax
    5fce:	6a 76                	push   $0x76
    5fd0:	e9 68 ff ff ff       	jmp    5f3d <alu_test_adc+0x47d>
    5fd5:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5fdb:	50                   	push   %eax
    5fdc:	6a 75                	push   $0x75
    5fde:	e9 7b ff ff ff       	jmp    5f5e <alu_test_adc+0x49e>
    5fe3:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5fe9:	50                   	push   %eax
    5fea:	6a 74                	push   $0x74
    5fec:	e9 c8 fe ff ff       	jmp    5eb9 <alu_test_adc+0x3f9>
    5ff1:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    5ff7:	50                   	push   %eax
    5ff8:	68 c1 00 00 00       	push   $0xc1
    5ffd:	e9 d8 fe ff ff       	jmp    5eda <alu_test_adc+0x41a>
    6002:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    6008:	50                   	push   %eax
    6009:	68 c0 00 00 00       	push   $0xc0
    600e:	e9 e8 fe ff ff       	jmp    5efb <alu_test_adc+0x43b>
    6013:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    6019:	50                   	push   %eax
    601a:	68 bc 00 00 00       	push   $0xbc
    601f:	e9 95 fe ff ff       	jmp    5eb9 <alu_test_adc+0x3f9>
    6024:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    602a:	50                   	push   %eax
    602b:	68 90 00 00 00       	push   $0x90
    6030:	e9 84 fe ff ff       	jmp    5eb9 <alu_test_adc+0x3f9>
    6035:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    603b:	50                   	push   %eax
    603c:	68 95 00 00 00       	push   $0x95
    6041:	e9 94 fe ff ff       	jmp    5eda <alu_test_adc+0x41a>
    6046:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    604c:	50                   	push   %eax
    604d:	68 94 00 00 00       	push   $0x94
    6052:	e9 a4 fe ff ff       	jmp    5efb <alu_test_adc+0x43b>
    6057:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    605d:	50                   	push   %eax
    605e:	68 93 00 00 00       	push   $0x93
    6063:	e9 b4 fe ff ff       	jmp    5f1c <alu_test_adc+0x45c>
    6068:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    606e:	50                   	push   %eax
    606f:	68 92 00 00 00       	push   $0x92
    6074:	e9 c4 fe ff ff       	jmp    5f3d <alu_test_adc+0x47d>
    6079:	8d 85 34 08 ff ff    	lea    -0xf7cc(%ebp),%eax
    607f:	50                   	push   %eax
    6080:	68 91 00 00 00       	push   $0x91
    6085:	e9 d4 fe ff ff       	jmp    5f5e <alu_test_adc+0x49e>
    608a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00006090 <alu_test_sub>:
    6090:	55                   	push   %ebp
    6091:	57                   	push   %edi
    6092:	56                   	push   %esi
    6093:	53                   	push   %ebx
    6094:	e8 21 31 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    6099:	81 c5 67 4f 02 00    	add    $0x24f67,%ebp
    609f:	83 ec 4c             	sub    $0x4c,%esp
    60a2:	8d 7c 24 40          	lea    0x40(%esp),%edi
    60a6:	8d 44 24 28          	lea    0x28(%esp),%eax
    60aa:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    60b1:	10 
    60b2:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    60b9:	ff 
    60ba:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    60c1:	ff 
    60c2:	89 7c 24 14          	mov    %edi,0x14(%esp)
    60c6:	8d bd 60 1d 05 00    	lea    0x51d60(%ebp),%edi
    60cc:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    60d3:	ff 
    60d4:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    60db:	00 
    60dc:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    60e3:	00 
    60e4:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    60eb:	00 
    60ec:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    60f0:	89 44 24 18          	mov    %eax,0x18(%esp)
    60f4:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    60fb:	10 
    60fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6100:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    6104:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    6109:	eb 0a                	jmp    6115 <alu_test_sub+0x85>
    610b:	90                   	nop
    610c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6110:	8b 0e                	mov    (%esi),%ecx
    6112:	83 c6 04             	add    $0x4,%esi
    6115:	83 ec 08             	sub    $0x8,%esp
    6118:	89 eb                	mov    %ebp,%ebx
    611a:	ff 74 24 14          	pushl  0x14(%esp)
    611e:	51                   	push   %ecx
    611f:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    6123:	e8 c8 51 00 00       	call   b2f0 <alu_sub>
    6128:	89 c3                	mov    %eax,%ebx
    612a:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    612e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    6132:	83 c4 10             	add    $0x10,%esp
    6135:	29 c8                	sub    %ecx,%eax
    6137:	9c                   	pushf  
    6138:	5a                   	pop    %edx
    6139:	39 c3                	cmp    %eax,%ebx
    613b:	0f 85 94 02 00 00    	jne    63d5 <alu_test_sub+0x345>
    6141:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    6145:	89 d1                	mov    %edx,%ecx
    6147:	83 e1 01             	and    $0x1,%ecx
    614a:	89 c3                	mov    %eax,%ebx
    614c:	83 e3 01             	and    $0x1,%ebx
    614f:	38 cb                	cmp    %cl,%bl
    6151:	0f 85 70 02 00 00    	jne    63c7 <alu_test_sub+0x337>
    6157:	89 c3                	mov    %eax,%ebx
    6159:	89 d1                	mov    %edx,%ecx
    615b:	c0 eb 02             	shr    $0x2,%bl
    615e:	c1 e9 02             	shr    $0x2,%ecx
    6161:	83 e3 01             	and    $0x1,%ebx
    6164:	83 e1 01             	and    $0x1,%ecx
    6167:	38 cb                	cmp    %cl,%bl
    6169:	0f 85 4a 02 00 00    	jne    63b9 <alu_test_sub+0x329>
    616f:	89 d1                	mov    %edx,%ecx
    6171:	89 c3                	mov    %eax,%ebx
    6173:	c1 e9 07             	shr    $0x7,%ecx
    6176:	c0 eb 07             	shr    $0x7,%bl
    6179:	83 e1 01             	and    $0x1,%ecx
    617c:	38 cb                	cmp    %cl,%bl
    617e:	0f 85 24 02 00 00    	jne    63a8 <alu_test_sub+0x318>
    6184:	89 d1                	mov    %edx,%ecx
    6186:	c0 e8 06             	shr    $0x6,%al
    6189:	c1 e9 06             	shr    $0x6,%ecx
    618c:	83 e0 01             	and    $0x1,%eax
    618f:	83 e1 01             	and    $0x1,%ecx
    6192:	38 c8                	cmp    %cl,%al
    6194:	0f 85 fd 01 00 00    	jne    6397 <alu_test_sub+0x307>
    619a:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    619e:	c1 ea 0b             	shr    $0xb,%edx
    61a1:	83 e2 01             	and    $0x1,%edx
    61a4:	c0 e8 03             	shr    $0x3,%al
    61a7:	83 e0 01             	and    $0x1,%eax
    61aa:	38 d0                	cmp    %dl,%al
    61ac:	0f 85 d4 01 00 00    	jne    6386 <alu_test_sub+0x2f6>
    61b2:	3b 74 24 14          	cmp    0x14(%esp),%esi
    61b6:	0f 85 54 ff ff ff    	jne    6110 <alu_test_sub+0x80>
    61bc:	8b 44 24 18          	mov    0x18(%esp),%eax
    61c0:	39 44 24 14          	cmp    %eax,0x14(%esp)
    61c4:	74 1a                	je     61e0 <alu_test_sub+0x150>
    61c6:	8b 30                	mov    (%eax),%esi
    61c8:	83 c0 04             	add    $0x4,%eax
    61cb:	89 44 24 18          	mov    %eax,0x18(%esp)
    61cf:	89 74 24 0c          	mov    %esi,0xc(%esp)
    61d3:	e9 28 ff ff ff       	jmp    6100 <alu_test_sub+0x70>
    61d8:	90                   	nop
    61d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    61e0:	83 ec 0c             	sub    $0xc,%esp
    61e3:	89 eb                	mov    %ebp,%ebx
    61e5:	6a 00                	push   $0x0
    61e7:	e8 84 c4 ff ff       	call   2670 <time@plt>
    61ec:	89 04 24             	mov    %eax,(%esp)
    61ef:	e8 fc c4 ff ff       	call   26f0 <srand@plt>
    61f4:	83 c4 10             	add    $0x10,%esp
    61f7:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    61fe:	00 
    61ff:	90                   	nop
    6200:	89 eb                	mov    %ebp,%ebx
    6202:	e8 49 c5 ff ff       	call   2750 <rand@plt>
    6207:	89 c6                	mov    %eax,%esi
    6209:	e8 42 c5 ff ff       	call   2750 <rand@plt>
    620e:	83 ec 08             	sub    $0x8,%esp
    6211:	56                   	push   %esi
    6212:	50                   	push   %eax
    6213:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    6217:	e8 d4 50 00 00       	call   b2f0 <alu_sub>
    621c:	89 c3                	mov    %eax,%ebx
    621e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    6222:	89 f0                	mov    %esi,%eax
    6224:	83 c4 10             	add    $0x10,%esp
    6227:	29 c8                	sub    %ecx,%eax
    6229:	9c                   	pushf  
    622a:	5a                   	pop    %edx
    622b:	39 c3                	cmp    %eax,%ebx
    622d:	0f 85 8d 00 00 00    	jne    62c0 <alu_test_sub+0x230>
    6233:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    6237:	89 d1                	mov    %edx,%ecx
    6239:	83 e1 01             	and    $0x1,%ecx
    623c:	89 c3                	mov    %eax,%ebx
    623e:	83 e3 01             	and    $0x1,%ebx
    6241:	38 cb                	cmp    %cl,%bl
    6243:	0f 85 1c 01 00 00    	jne    6365 <alu_test_sub+0x2d5>
    6249:	89 c3                	mov    %eax,%ebx
    624b:	89 d1                	mov    %edx,%ecx
    624d:	c0 eb 02             	shr    $0x2,%bl
    6250:	c1 e9 02             	shr    $0x2,%ecx
    6253:	83 e3 01             	and    $0x1,%ebx
    6256:	83 e1 01             	and    $0x1,%ecx
    6259:	38 cb                	cmp    %cl,%bl
    625b:	0f 85 e3 00 00 00    	jne    6344 <alu_test_sub+0x2b4>
    6261:	89 d1                	mov    %edx,%ecx
    6263:	89 c3                	mov    %eax,%ebx
    6265:	c1 e9 07             	shr    $0x7,%ecx
    6268:	c0 eb 07             	shr    $0x7,%bl
    626b:	83 e1 01             	and    $0x1,%ecx
    626e:	38 cb                	cmp    %cl,%bl
    6270:	0f 85 ad 00 00 00    	jne    6323 <alu_test_sub+0x293>
    6276:	89 d1                	mov    %edx,%ecx
    6278:	c0 e8 06             	shr    $0x6,%al
    627b:	c1 e9 06             	shr    $0x6,%ecx
    627e:	83 e0 01             	and    $0x1,%eax
    6281:	83 e1 01             	and    $0x1,%ecx
    6284:	38 c8                	cmp    %cl,%al
    6286:	75 7a                	jne    6302 <alu_test_sub+0x272>
    6288:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    628c:	c1 ea 0b             	shr    $0xb,%edx
    628f:	83 e2 01             	and    $0x1,%edx
    6292:	c0 e8 03             	shr    $0x3,%al
    6295:	83 e0 01             	and    $0x1,%eax
    6298:	38 d0                	cmp    %dl,%al
    629a:	75 45                	jne    62e1 <alu_test_sub+0x251>
    629c:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    62a1:	0f 85 59 ff ff ff    	jne    6200 <alu_test_sub+0x170>
    62a7:	8d 85 78 04 ff ff    	lea    -0xfb88(%ebp),%eax
    62ad:	83 ec 0c             	sub    $0xc,%esp
    62b0:	89 eb                	mov    %ebp,%ebx
    62b2:	50                   	push   %eax
    62b3:	e8 48 c5 ff ff       	call   2800 <puts@plt>
    62b8:	83 c4 5c             	add    $0x5c,%esp
    62bb:	5b                   	pop    %ebx
    62bc:	5e                   	pop    %esi
    62bd:	5f                   	pop    %edi
    62be:	5d                   	pop    %ebp
    62bf:	c3                   	ret    
    62c0:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    62c6:	50                   	push   %eax
    62c7:	68 f5 00 00 00       	push   $0xf5
    62cc:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    62d2:	89 eb                	mov    %ebp,%ebx
    62d4:	50                   	push   %eax
    62d5:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    62db:	50                   	push   %eax
    62dc:	e8 af c5 ff ff       	call   2890 <__assert_fail@plt>
    62e1:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    62e7:	50                   	push   %eax
    62e8:	68 fa 00 00 00       	push   $0xfa
    62ed:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    62f3:	89 eb                	mov    %ebp,%ebx
    62f5:	50                   	push   %eax
    62f6:	8d 85 18 04 ff ff    	lea    -0xfbe8(%ebp),%eax
    62fc:	50                   	push   %eax
    62fd:	e8 8e c5 ff ff       	call   2890 <__assert_fail@plt>
    6302:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    6308:	50                   	push   %eax
    6309:	68 f9 00 00 00       	push   $0xf9
    630e:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6314:	89 eb                	mov    %ebp,%ebx
    6316:	50                   	push   %eax
    6317:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    631d:	50                   	push   %eax
    631e:	e8 6d c5 ff ff       	call   2890 <__assert_fail@plt>
    6323:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    6329:	50                   	push   %eax
    632a:	68 f8 00 00 00       	push   $0xf8
    632f:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6335:	89 eb                	mov    %ebp,%ebx
    6337:	50                   	push   %eax
    6338:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    633e:	50                   	push   %eax
    633f:	e8 4c c5 ff ff       	call   2890 <__assert_fail@plt>
    6344:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    634a:	50                   	push   %eax
    634b:	68 f7 00 00 00       	push   $0xf7
    6350:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6356:	89 eb                	mov    %ebp,%ebx
    6358:	50                   	push   %eax
    6359:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    635f:	50                   	push   %eax
    6360:	e8 2b c5 ff ff       	call   2890 <__assert_fail@plt>
    6365:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    636b:	50                   	push   %eax
    636c:	68 f6 00 00 00       	push   $0xf6
    6371:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6377:	89 eb                	mov    %ebp,%ebx
    6379:	50                   	push   %eax
    637a:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    6380:	50                   	push   %eax
    6381:	e8 0a c5 ff ff       	call   2890 <__assert_fail@plt>
    6386:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    638c:	50                   	push   %eax
    638d:	68 e4 00 00 00       	push   $0xe4
    6392:	e9 56 ff ff ff       	jmp    62ed <alu_test_sub+0x25d>
    6397:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    639d:	50                   	push   %eax
    639e:	68 e3 00 00 00       	push   $0xe3
    63a3:	e9 66 ff ff ff       	jmp    630e <alu_test_sub+0x27e>
    63a8:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    63ae:	50                   	push   %eax
    63af:	68 e2 00 00 00       	push   $0xe2
    63b4:	e9 76 ff ff ff       	jmp    632f <alu_test_sub+0x29f>
    63b9:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    63bf:	50                   	push   %eax
    63c0:	68 e1 00 00 00       	push   $0xe1
    63c5:	eb 89                	jmp    6350 <alu_test_sub+0x2c0>
    63c7:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    63cd:	50                   	push   %eax
    63ce:	68 e0 00 00 00       	push   $0xe0
    63d3:	eb 9c                	jmp    6371 <alu_test_sub+0x2e1>
    63d5:	8d 85 24 08 ff ff    	lea    -0xf7dc(%ebp),%eax
    63db:	50                   	push   %eax
    63dc:	68 df 00 00 00       	push   $0xdf
    63e1:	e9 e6 fe ff ff       	jmp    62cc <alu_test_sub+0x23c>
    63e6:	8d 76 00             	lea    0x0(%esi),%esi
    63e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000063f0 <alu_test_sbb>:
    63f0:	55                   	push   %ebp
    63f1:	57                   	push   %edi
    63f2:	56                   	push   %esi
    63f3:	53                   	push   %ebx
    63f4:	e8 c1 2d 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    63f9:	81 c5 07 4c 02 00    	add    $0x24c07,%ebp
    63ff:	83 ec 4c             	sub    $0x4c,%esp
    6402:	8d 7c 24 40          	lea    0x40(%esp),%edi
    6406:	8d 44 24 24          	lea    0x24(%esp),%eax
    640a:	c7 44 24 20 00 00 00 	movl   $0x10000000,0x20(%esp)
    6411:	10 
    6412:	c7 44 24 24 fd ff ff 	movl   $0xfffffffd,0x24(%esp)
    6419:	ff 
    641a:	c7 44 24 28 fe ff ff 	movl   $0xfffffffe,0x28(%esp)
    6421:	ff 
    6422:	89 7c 24 18          	mov    %edi,0x18(%esp)
    6426:	8d bd 60 1d 05 00    	lea    0x51d60(%ebp),%edi
    642c:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
    6433:	ff 
    6434:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
    643b:	00 
    643c:	c7 44 24 34 01 00 00 	movl   $0x1,0x34(%esp)
    6443:	00 
    6444:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
    644b:	00 
    644c:	c7 44 24 3c 00 00 00 	movl   $0x80000000,0x3c(%esp)
    6453:	80 
    6454:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    6458:	89 44 24 14          	mov    %eax,0x14(%esp)
    645c:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    6463:	10 
    6464:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6468:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    646c:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    6471:	eb 0a                	jmp    647d <alu_test_sbb+0x8d>
    6473:	90                   	nop
    6474:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6478:	8b 0e                	mov    (%esi),%ecx
    647a:	83 c6 04             	add    $0x4,%esi
    647d:	83 ec 08             	sub    $0x8,%esp
    6480:	80 67 24 fe          	andb   $0xfe,0x24(%edi)
    6484:	89 eb                	mov    %ebp,%ebx
    6486:	ff 74 24 14          	pushl  0x14(%esp)
    648a:	51                   	push   %ecx
    648b:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    648f:	e8 0c 4f 00 00       	call   b3a0 <alu_sbb>
    6494:	89 c3                	mov    %eax,%ebx
    6496:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    649a:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    649e:	83 c4 10             	add    $0x10,%esp
    64a1:	f8                   	clc    
    64a2:	19 c8                	sbb    %ecx,%eax
    64a4:	9c                   	pushf  
    64a5:	5a                   	pop    %edx
    64a6:	39 c3                	cmp    %eax,%ebx
    64a8:	0f 85 5a 04 00 00    	jne    6908 <alu_test_sbb+0x518>
    64ae:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    64b2:	89 d1                	mov    %edx,%ecx
    64b4:	83 e1 01             	and    $0x1,%ecx
    64b7:	89 c3                	mov    %eax,%ebx
    64b9:	83 e3 01             	and    $0x1,%ebx
    64bc:	38 cb                	cmp    %cl,%bl
    64be:	0f 85 33 04 00 00    	jne    68f7 <alu_test_sbb+0x507>
    64c4:	89 c3                	mov    %eax,%ebx
    64c6:	89 d1                	mov    %edx,%ecx
    64c8:	c0 eb 02             	shr    $0x2,%bl
    64cb:	c1 e9 02             	shr    $0x2,%ecx
    64ce:	83 e3 01             	and    $0x1,%ebx
    64d1:	83 e1 01             	and    $0x1,%ecx
    64d4:	38 cb                	cmp    %cl,%bl
    64d6:	0f 85 0a 04 00 00    	jne    68e6 <alu_test_sbb+0x4f6>
    64dc:	89 d1                	mov    %edx,%ecx
    64de:	89 c3                	mov    %eax,%ebx
    64e0:	c1 e9 07             	shr    $0x7,%ecx
    64e3:	c0 eb 07             	shr    $0x7,%bl
    64e6:	83 e1 01             	and    $0x1,%ecx
    64e9:	38 cb                	cmp    %cl,%bl
    64eb:	0f 85 e4 03 00 00    	jne    68d5 <alu_test_sbb+0x4e5>
    64f1:	89 d1                	mov    %edx,%ecx
    64f3:	c0 e8 06             	shr    $0x6,%al
    64f6:	c1 e9 06             	shr    $0x6,%ecx
    64f9:	83 e0 01             	and    $0x1,%eax
    64fc:	83 e1 01             	and    $0x1,%ecx
    64ff:	38 c8                	cmp    %cl,%al
    6501:	0f 85 bd 03 00 00    	jne    68c4 <alu_test_sbb+0x4d4>
    6507:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    650b:	c1 ea 0b             	shr    $0xb,%edx
    650e:	83 e2 01             	and    $0x1,%edx
    6511:	c0 e8 03             	shr    $0x3,%al
    6514:	83 e0 01             	and    $0x1,%eax
    6517:	38 d0                	cmp    %dl,%al
    6519:	0f 85 94 03 00 00    	jne    68b3 <alu_test_sbb+0x4c3>
    651f:	3b 74 24 18          	cmp    0x18(%esp),%esi
    6523:	0f 85 4f ff ff ff    	jne    6478 <alu_test_sbb+0x88>
    6529:	8b 44 24 14          	mov    0x14(%esp),%eax
    652d:	39 44 24 18          	cmp    %eax,0x18(%esp)
    6531:	74 15                	je     6548 <alu_test_sbb+0x158>
    6533:	8b 30                	mov    (%eax),%esi
    6535:	83 c0 04             	add    $0x4,%eax
    6538:	89 44 24 14          	mov    %eax,0x14(%esp)
    653c:	89 74 24 0c          	mov    %esi,0xc(%esp)
    6540:	e9 23 ff ff ff       	jmp    6468 <alu_test_sbb+0x78>
    6545:	8d 76 00             	lea    0x0(%esi),%esi
    6548:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    654c:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    6553:	10 
    6554:	89 44 24 18          	mov    %eax,0x18(%esp)
    6558:	90                   	nop
    6559:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6560:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    6564:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    6569:	eb 0a                	jmp    6575 <alu_test_sbb+0x185>
    656b:	90                   	nop
    656c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6570:	8b 0e                	mov    (%esi),%ecx
    6572:	83 c6 04             	add    $0x4,%esi
    6575:	83 ec 08             	sub    $0x8,%esp
    6578:	80 4f 24 01          	orb    $0x1,0x24(%edi)
    657c:	89 eb                	mov    %ebp,%ebx
    657e:	ff 74 24 14          	pushl  0x14(%esp)
    6582:	51                   	push   %ecx
    6583:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    6587:	e8 14 4e 00 00       	call   b3a0 <alu_sbb>
    658c:	89 c3                	mov    %eax,%ebx
    658e:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    6592:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    6596:	83 c4 10             	add    $0x10,%esp
    6599:	f9                   	stc    
    659a:	19 c8                	sbb    %ecx,%eax
    659c:	9c                   	pushf  
    659d:	5a                   	pop    %edx
    659e:	39 c3                	cmp    %eax,%ebx
    65a0:	0f 85 c5 03 00 00    	jne    696b <alu_test_sbb+0x57b>
    65a6:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    65aa:	89 d1                	mov    %edx,%ecx
    65ac:	83 e1 01             	and    $0x1,%ecx
    65af:	89 c3                	mov    %eax,%ebx
    65b1:	83 e3 01             	and    $0x1,%ebx
    65b4:	38 cb                	cmp    %cl,%bl
    65b6:	0f 85 9e 03 00 00    	jne    695a <alu_test_sbb+0x56a>
    65bc:	89 c3                	mov    %eax,%ebx
    65be:	89 d1                	mov    %edx,%ecx
    65c0:	c0 eb 02             	shr    $0x2,%bl
    65c3:	c1 e9 02             	shr    $0x2,%ecx
    65c6:	83 e3 01             	and    $0x1,%ebx
    65c9:	83 e1 01             	and    $0x1,%ecx
    65cc:	38 cb                	cmp    %cl,%bl
    65ce:	0f 85 64 03 00 00    	jne    6938 <alu_test_sbb+0x548>
    65d4:	89 d1                	mov    %edx,%ecx
    65d6:	89 c3                	mov    %eax,%ebx
    65d8:	c1 e9 07             	shr    $0x7,%ecx
    65db:	c0 eb 07             	shr    $0x7,%bl
    65de:	83 e1 01             	and    $0x1,%ecx
    65e1:	38 cb                	cmp    %cl,%bl
    65e3:	0f 85 b5 03 00 00    	jne    699e <alu_test_sbb+0x5ae>
    65e9:	89 d1                	mov    %edx,%ecx
    65eb:	c0 e8 06             	shr    $0x6,%al
    65ee:	c1 e9 06             	shr    $0x6,%ecx
    65f1:	83 e0 01             	and    $0x1,%eax
    65f4:	83 e1 01             	and    $0x1,%ecx
    65f7:	38 c8                	cmp    %cl,%al
    65f9:	0f 85 4a 03 00 00    	jne    6949 <alu_test_sbb+0x559>
    65ff:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    6603:	c1 ea 0b             	shr    $0xb,%edx
    6606:	83 e2 01             	and    $0x1,%edx
    6609:	c0 e8 03             	shr    $0x3,%al
    660c:	83 e0 01             	and    $0x1,%eax
    660f:	38 d0                	cmp    %dl,%al
    6611:	0f 85 76 03 00 00    	jne    698d <alu_test_sbb+0x59d>
    6617:	3b 74 24 14          	cmp    0x14(%esp),%esi
    661b:	0f 85 4f ff ff ff    	jne    6570 <alu_test_sbb+0x180>
    6621:	8b 44 24 18          	mov    0x18(%esp),%eax
    6625:	8b 74 24 14          	mov    0x14(%esp),%esi
    6629:	39 f0                	cmp    %esi,%eax
    662b:	74 13                	je     6640 <alu_test_sbb+0x250>
    662d:	8b 30                	mov    (%eax),%esi
    662f:	83 c0 04             	add    $0x4,%eax
    6632:	89 44 24 18          	mov    %eax,0x18(%esp)
    6636:	89 74 24 0c          	mov    %esi,0xc(%esp)
    663a:	e9 21 ff ff ff       	jmp    6560 <alu_test_sbb+0x170>
    663f:	90                   	nop
    6640:	83 ec 0c             	sub    $0xc,%esp
    6643:	89 eb                	mov    %ebp,%ebx
    6645:	6a 00                	push   $0x0
    6647:	e8 24 c0 ff ff       	call   2670 <time@plt>
    664c:	89 04 24             	mov    %eax,(%esp)
    664f:	e8 9c c0 ff ff       	call   26f0 <srand@plt>
    6654:	83 c4 10             	add    $0x10,%esp
    6657:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    665e:	00 
    665f:	90                   	nop
    6660:	89 eb                	mov    %ebp,%ebx
    6662:	e8 e9 c0 ff ff       	call   2750 <rand@plt>
    6667:	89 c6                	mov    %eax,%esi
    6669:	e8 e2 c0 ff ff       	call   2750 <rand@plt>
    666e:	83 ec 08             	sub    $0x8,%esp
    6671:	80 67 24 fe          	andb   $0xfe,0x24(%edi)
    6675:	56                   	push   %esi
    6676:	50                   	push   %eax
    6677:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    667b:	e8 20 4d 00 00       	call   b3a0 <alu_sbb>
    6680:	89 c3                	mov    %eax,%ebx
    6682:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    6686:	89 f0                	mov    %esi,%eax
    6688:	83 c4 10             	add    $0x10,%esp
    668b:	f8                   	clc    
    668c:	19 c8                	sbb    %ecx,%eax
    668e:	9c                   	pushf  
    668f:	5a                   	pop    %edx
    6690:	39 c3                	cmp    %eax,%ebx
    6692:	0f 85 fa 01 00 00    	jne    6892 <alu_test_sbb+0x4a2>
    6698:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    669c:	89 d1                	mov    %edx,%ecx
    669e:	83 e1 01             	and    $0x1,%ecx
    66a1:	89 c3                	mov    %eax,%ebx
    66a3:	83 e3 01             	and    $0x1,%ebx
    66a6:	38 cb                	cmp    %cl,%bl
    66a8:	0f 85 c3 01 00 00    	jne    6871 <alu_test_sbb+0x481>
    66ae:	89 c3                	mov    %eax,%ebx
    66b0:	89 d1                	mov    %edx,%ecx
    66b2:	c0 eb 02             	shr    $0x2,%bl
    66b5:	c1 e9 02             	shr    $0x2,%ecx
    66b8:	83 e3 01             	and    $0x1,%ebx
    66bb:	83 e1 01             	and    $0x1,%ecx
    66be:	38 cb                	cmp    %cl,%bl
    66c0:	0f 85 8a 01 00 00    	jne    6850 <alu_test_sbb+0x460>
    66c6:	89 d1                	mov    %edx,%ecx
    66c8:	89 c3                	mov    %eax,%ebx
    66ca:	c1 e9 07             	shr    $0x7,%ecx
    66cd:	c0 eb 07             	shr    $0x7,%bl
    66d0:	83 e1 01             	and    $0x1,%ecx
    66d3:	38 cb                	cmp    %cl,%bl
    66d5:	0f 85 54 01 00 00    	jne    682f <alu_test_sbb+0x43f>
    66db:	89 d1                	mov    %edx,%ecx
    66dd:	c0 e8 06             	shr    $0x6,%al
    66e0:	c1 e9 06             	shr    $0x6,%ecx
    66e3:	83 e0 01             	and    $0x1,%eax
    66e6:	83 e1 01             	and    $0x1,%ecx
    66e9:	38 c8                	cmp    %cl,%al
    66eb:	0f 85 1d 01 00 00    	jne    680e <alu_test_sbb+0x41e>
    66f1:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    66f5:	c1 ea 0b             	shr    $0xb,%edx
    66f8:	83 e2 01             	and    $0x1,%edx
    66fb:	c0 e8 03             	shr    $0x3,%al
    66fe:	83 e0 01             	and    $0x1,%eax
    6701:	38 d0                	cmp    %dl,%al
    6703:	0f 85 e4 00 00 00    	jne    67ed <alu_test_sbb+0x3fd>
    6709:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    670e:	0f 85 4c ff ff ff    	jne    6660 <alu_test_sbb+0x270>
    6714:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    671b:	00 
    671c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6720:	89 eb                	mov    %ebp,%ebx
    6722:	e8 29 c0 ff ff       	call   2750 <rand@plt>
    6727:	89 c6                	mov    %eax,%esi
    6729:	e8 22 c0 ff ff       	call   2750 <rand@plt>
    672e:	83 ec 08             	sub    $0x8,%esp
    6731:	80 4f 24 01          	orb    $0x1,0x24(%edi)
    6735:	56                   	push   %esi
    6736:	50                   	push   %eax
    6737:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    673b:	e8 60 4c 00 00       	call   b3a0 <alu_sbb>
    6740:	89 c3                	mov    %eax,%ebx
    6742:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    6746:	89 f0                	mov    %esi,%eax
    6748:	83 c4 10             	add    $0x10,%esp
    674b:	f9                   	stc    
    674c:	19 c8                	sbb    %ecx,%eax
    674e:	9c                   	pushf  
    674f:	5a                   	pop    %edx
    6750:	39 c3                	cmp    %eax,%ebx
    6752:	0f 85 24 02 00 00    	jne    697c <alu_test_sbb+0x58c>
    6758:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    675c:	89 d1                	mov    %edx,%ecx
    675e:	83 e1 01             	and    $0x1,%ecx
    6761:	89 c3                	mov    %eax,%ebx
    6763:	83 e3 01             	and    $0x1,%ebx
    6766:	38 cb                	cmp    %cl,%bl
    6768:	0f 85 b9 01 00 00    	jne    6927 <alu_test_sbb+0x537>
    676e:	89 c3                	mov    %eax,%ebx
    6770:	89 d1                	mov    %edx,%ecx
    6772:	c0 eb 02             	shr    $0x2,%bl
    6775:	c1 e9 02             	shr    $0x2,%ecx
    6778:	83 e3 01             	and    $0x1,%ebx
    677b:	83 e1 01             	and    $0x1,%ecx
    677e:	38 cb                	cmp    %cl,%bl
    6780:	0f 85 4b 02 00 00    	jne    69d1 <alu_test_sbb+0x5e1>
    6786:	89 d1                	mov    %edx,%ecx
    6788:	89 c3                	mov    %eax,%ebx
    678a:	c1 e9 07             	shr    $0x7,%ecx
    678d:	c0 eb 07             	shr    $0x7,%bl
    6790:	83 e1 01             	and    $0x1,%ecx
    6793:	38 cb                	cmp    %cl,%bl
    6795:	0f 85 25 02 00 00    	jne    69c0 <alu_test_sbb+0x5d0>
    679b:	89 d1                	mov    %edx,%ecx
    679d:	c0 e8 06             	shr    $0x6,%al
    67a0:	c1 e9 06             	shr    $0x6,%ecx
    67a3:	83 e0 01             	and    $0x1,%eax
    67a6:	83 e1 01             	and    $0x1,%ecx
    67a9:	38 c8                	cmp    %cl,%al
    67ab:	0f 85 fe 01 00 00    	jne    69af <alu_test_sbb+0x5bf>
    67b1:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    67b5:	c1 ea 0b             	shr    $0xb,%edx
    67b8:	83 e2 01             	and    $0x1,%edx
    67bb:	c0 e8 03             	shr    $0x3,%al
    67be:	83 e0 01             	and    $0x1,%eax
    67c1:	38 d0                	cmp    %dl,%al
    67c3:	0f 85 4d 01 00 00    	jne    6916 <alu_test_sbb+0x526>
    67c9:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    67ce:	0f 85 4c ff ff ff    	jne    6720 <alu_test_sbb+0x330>
    67d4:	8d 85 98 04 ff ff    	lea    -0xfb68(%ebp),%eax
    67da:	83 ec 0c             	sub    $0xc,%esp
    67dd:	89 eb                	mov    %ebp,%ebx
    67df:	50                   	push   %eax
    67e0:	e8 1b c0 ff ff       	call   2800 <puts@plt>
    67e5:	83 c4 5c             	add    $0x5c,%esp
    67e8:	5b                   	pop    %ebx
    67e9:	5e                   	pop    %esi
    67ea:	5f                   	pop    %edi
    67eb:	5d                   	pop    %ebp
    67ec:	c3                   	ret    
    67ed:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    67f3:	50                   	push   %eax
    67f4:	68 53 01 00 00       	push   $0x153
    67f9:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    67ff:	89 eb                	mov    %ebp,%ebx
    6801:	50                   	push   %eax
    6802:	8d 85 18 04 ff ff    	lea    -0xfbe8(%ebp),%eax
    6808:	50                   	push   %eax
    6809:	e8 82 c0 ff ff       	call   2890 <__assert_fail@plt>
    680e:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6814:	50                   	push   %eax
    6815:	68 52 01 00 00       	push   $0x152
    681a:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6820:	89 eb                	mov    %ebp,%ebx
    6822:	50                   	push   %eax
    6823:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    6829:	50                   	push   %eax
    682a:	e8 61 c0 ff ff       	call   2890 <__assert_fail@plt>
    682f:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6835:	50                   	push   %eax
    6836:	68 51 01 00 00       	push   $0x151
    683b:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6841:	89 eb                	mov    %ebp,%ebx
    6843:	50                   	push   %eax
    6844:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    684a:	50                   	push   %eax
    684b:	e8 40 c0 ff ff       	call   2890 <__assert_fail@plt>
    6850:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6856:	50                   	push   %eax
    6857:	68 50 01 00 00       	push   $0x150
    685c:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6862:	89 eb                	mov    %ebp,%ebx
    6864:	50                   	push   %eax
    6865:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    686b:	50                   	push   %eax
    686c:	e8 1f c0 ff ff       	call   2890 <__assert_fail@plt>
    6871:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6877:	50                   	push   %eax
    6878:	68 4f 01 00 00       	push   $0x14f
    687d:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6883:	89 eb                	mov    %ebp,%ebx
    6885:	50                   	push   %eax
    6886:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    688c:	50                   	push   %eax
    688d:	e8 fe bf ff ff       	call   2890 <__assert_fail@plt>
    6892:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6898:	50                   	push   %eax
    6899:	68 4e 01 00 00       	push   $0x14e
    689e:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    68a4:	89 eb                	mov    %ebp,%ebx
    68a6:	50                   	push   %eax
    68a7:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    68ad:	50                   	push   %eax
    68ae:	e8 dd bf ff ff       	call   2890 <__assert_fail@plt>
    68b3:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    68b9:	50                   	push   %eax
    68ba:	68 1f 01 00 00       	push   $0x11f
    68bf:	e9 35 ff ff ff       	jmp    67f9 <alu_test_sbb+0x409>
    68c4:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    68ca:	50                   	push   %eax
    68cb:	68 1e 01 00 00       	push   $0x11e
    68d0:	e9 45 ff ff ff       	jmp    681a <alu_test_sbb+0x42a>
    68d5:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    68db:	50                   	push   %eax
    68dc:	68 1d 01 00 00       	push   $0x11d
    68e1:	e9 55 ff ff ff       	jmp    683b <alu_test_sbb+0x44b>
    68e6:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    68ec:	50                   	push   %eax
    68ed:	68 1c 01 00 00       	push   $0x11c
    68f2:	e9 65 ff ff ff       	jmp    685c <alu_test_sbb+0x46c>
    68f7:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    68fd:	50                   	push   %eax
    68fe:	68 1b 01 00 00       	push   $0x11b
    6903:	e9 75 ff ff ff       	jmp    687d <alu_test_sbb+0x48d>
    6908:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    690e:	50                   	push   %eax
    690f:	68 1a 01 00 00       	push   $0x11a
    6914:	eb 88                	jmp    689e <alu_test_sbb+0x4ae>
    6916:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    691c:	50                   	push   %eax
    691d:	68 69 01 00 00       	push   $0x169
    6922:	e9 d2 fe ff ff       	jmp    67f9 <alu_test_sbb+0x409>
    6927:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    692d:	50                   	push   %eax
    692e:	68 65 01 00 00       	push   $0x165
    6933:	e9 45 ff ff ff       	jmp    687d <alu_test_sbb+0x48d>
    6938:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    693e:	50                   	push   %eax
    693f:	68 38 01 00 00       	push   $0x138
    6944:	e9 13 ff ff ff       	jmp    685c <alu_test_sbb+0x46c>
    6949:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    694f:	50                   	push   %eax
    6950:	68 3a 01 00 00       	push   $0x13a
    6955:	e9 c0 fe ff ff       	jmp    681a <alu_test_sbb+0x42a>
    695a:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6960:	50                   	push   %eax
    6961:	68 37 01 00 00       	push   $0x137
    6966:	e9 12 ff ff ff       	jmp    687d <alu_test_sbb+0x48d>
    696b:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6971:	50                   	push   %eax
    6972:	68 36 01 00 00       	push   $0x136
    6977:	e9 22 ff ff ff       	jmp    689e <alu_test_sbb+0x4ae>
    697c:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6982:	50                   	push   %eax
    6983:	68 64 01 00 00       	push   $0x164
    6988:	e9 11 ff ff ff       	jmp    689e <alu_test_sbb+0x4ae>
    698d:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    6993:	50                   	push   %eax
    6994:	68 3b 01 00 00       	push   $0x13b
    6999:	e9 5b fe ff ff       	jmp    67f9 <alu_test_sbb+0x409>
    699e:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    69a4:	50                   	push   %eax
    69a5:	68 39 01 00 00       	push   $0x139
    69aa:	e9 8c fe ff ff       	jmp    683b <alu_test_sbb+0x44b>
    69af:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    69b5:	50                   	push   %eax
    69b6:	68 68 01 00 00       	push   $0x168
    69bb:	e9 5a fe ff ff       	jmp    681a <alu_test_sbb+0x42a>
    69c0:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    69c6:	50                   	push   %eax
    69c7:	68 67 01 00 00       	push   $0x167
    69cc:	e9 6a fe ff ff       	jmp    683b <alu_test_sbb+0x44b>
    69d1:	8d 85 14 08 ff ff    	lea    -0xf7ec(%ebp),%eax
    69d7:	50                   	push   %eax
    69d8:	68 66 01 00 00       	push   $0x166
    69dd:	e9 7a fe ff ff       	jmp    685c <alu_test_sbb+0x46c>
    69e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    69e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000069f0 <alu_test_and>:
    69f0:	55                   	push   %ebp
    69f1:	57                   	push   %edi
    69f2:	56                   	push   %esi
    69f3:	53                   	push   %ebx
    69f4:	e8 c1 27 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    69f9:	81 c5 07 46 02 00    	add    $0x24607,%ebp
    69ff:	83 ec 4c             	sub    $0x4c,%esp
    6a02:	8d 7c 24 40          	lea    0x40(%esp),%edi
    6a06:	8d 44 24 28          	lea    0x28(%esp),%eax
    6a0a:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    6a11:	10 
    6a12:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    6a19:	ff 
    6a1a:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    6a21:	ff 
    6a22:	89 7c 24 14          	mov    %edi,0x14(%esp)
    6a26:	8d bd 60 1d 05 00    	lea    0x51d60(%ebp),%edi
    6a2c:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    6a33:	ff 
    6a34:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    6a3b:	00 
    6a3c:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    6a43:	00 
    6a44:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    6a4b:	00 
    6a4c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    6a50:	89 44 24 18          	mov    %eax,0x18(%esp)
    6a54:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    6a5b:	10 
    6a5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6a60:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    6a64:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    6a69:	eb 0a                	jmp    6a75 <alu_test_and+0x85>
    6a6b:	90                   	nop
    6a6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6a70:	8b 0e                	mov    (%esi),%ecx
    6a72:	83 c6 04             	add    $0x4,%esi
    6a75:	83 ec 08             	sub    $0x8,%esp
    6a78:	89 eb                	mov    %ebp,%ebx
    6a7a:	ff 74 24 14          	pushl  0x14(%esp)
    6a7e:	51                   	push   %ecx
    6a7f:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    6a83:	e8 48 4b 00 00       	call   b5d0 <alu_and>
    6a88:	89 c3                	mov    %eax,%ebx
    6a8a:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    6a8e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    6a92:	83 c4 10             	add    $0x10,%esp
    6a95:	21 c8                	and    %ecx,%eax
    6a97:	9c                   	pushf  
    6a98:	5a                   	pop    %edx
    6a99:	39 c3                	cmp    %eax,%ebx
    6a9b:	0f 85 94 02 00 00    	jne    6d35 <alu_test_and+0x345>
    6aa1:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    6aa5:	89 d1                	mov    %edx,%ecx
    6aa7:	83 e1 01             	and    $0x1,%ecx
    6aaa:	89 c3                	mov    %eax,%ebx
    6aac:	83 e3 01             	and    $0x1,%ebx
    6aaf:	38 cb                	cmp    %cl,%bl
    6ab1:	0f 85 70 02 00 00    	jne    6d27 <alu_test_and+0x337>
    6ab7:	89 c3                	mov    %eax,%ebx
    6ab9:	89 d1                	mov    %edx,%ecx
    6abb:	c0 eb 02             	shr    $0x2,%bl
    6abe:	c1 e9 02             	shr    $0x2,%ecx
    6ac1:	83 e3 01             	and    $0x1,%ebx
    6ac4:	83 e1 01             	and    $0x1,%ecx
    6ac7:	38 cb                	cmp    %cl,%bl
    6ac9:	0f 85 4a 02 00 00    	jne    6d19 <alu_test_and+0x329>
    6acf:	89 d1                	mov    %edx,%ecx
    6ad1:	89 c3                	mov    %eax,%ebx
    6ad3:	c1 e9 07             	shr    $0x7,%ecx
    6ad6:	c0 eb 07             	shr    $0x7,%bl
    6ad9:	83 e1 01             	and    $0x1,%ecx
    6adc:	38 cb                	cmp    %cl,%bl
    6ade:	0f 85 24 02 00 00    	jne    6d08 <alu_test_and+0x318>
    6ae4:	89 d1                	mov    %edx,%ecx
    6ae6:	c0 e8 06             	shr    $0x6,%al
    6ae9:	c1 e9 06             	shr    $0x6,%ecx
    6aec:	83 e0 01             	and    $0x1,%eax
    6aef:	83 e1 01             	and    $0x1,%ecx
    6af2:	38 c8                	cmp    %cl,%al
    6af4:	0f 85 fd 01 00 00    	jne    6cf7 <alu_test_and+0x307>
    6afa:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    6afe:	c1 ea 0b             	shr    $0xb,%edx
    6b01:	83 e2 01             	and    $0x1,%edx
    6b04:	c0 e8 03             	shr    $0x3,%al
    6b07:	83 e0 01             	and    $0x1,%eax
    6b0a:	38 d0                	cmp    %dl,%al
    6b0c:	0f 85 d4 01 00 00    	jne    6ce6 <alu_test_and+0x2f6>
    6b12:	3b 74 24 14          	cmp    0x14(%esp),%esi
    6b16:	0f 85 54 ff ff ff    	jne    6a70 <alu_test_and+0x80>
    6b1c:	8b 44 24 18          	mov    0x18(%esp),%eax
    6b20:	39 44 24 14          	cmp    %eax,0x14(%esp)
    6b24:	74 1a                	je     6b40 <alu_test_and+0x150>
    6b26:	8b 30                	mov    (%eax),%esi
    6b28:	83 c0 04             	add    $0x4,%eax
    6b2b:	89 44 24 18          	mov    %eax,0x18(%esp)
    6b2f:	89 74 24 0c          	mov    %esi,0xc(%esp)
    6b33:	e9 28 ff ff ff       	jmp    6a60 <alu_test_and+0x70>
    6b38:	90                   	nop
    6b39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6b40:	83 ec 0c             	sub    $0xc,%esp
    6b43:	89 eb                	mov    %ebp,%ebx
    6b45:	6a 00                	push   $0x0
    6b47:	e8 24 bb ff ff       	call   2670 <time@plt>
    6b4c:	89 04 24             	mov    %eax,(%esp)
    6b4f:	e8 9c bb ff ff       	call   26f0 <srand@plt>
    6b54:	83 c4 10             	add    $0x10,%esp
    6b57:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    6b5e:	00 
    6b5f:	90                   	nop
    6b60:	89 eb                	mov    %ebp,%ebx
    6b62:	e8 e9 bb ff ff       	call   2750 <rand@plt>
    6b67:	89 c6                	mov    %eax,%esi
    6b69:	e8 e2 bb ff ff       	call   2750 <rand@plt>
    6b6e:	83 ec 08             	sub    $0x8,%esp
    6b71:	56                   	push   %esi
    6b72:	50                   	push   %eax
    6b73:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    6b77:	e8 54 4a 00 00       	call   b5d0 <alu_and>
    6b7c:	89 c3                	mov    %eax,%ebx
    6b7e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    6b82:	89 f0                	mov    %esi,%eax
    6b84:	83 c4 10             	add    $0x10,%esp
    6b87:	21 c8                	and    %ecx,%eax
    6b89:	9c                   	pushf  
    6b8a:	5a                   	pop    %edx
    6b8b:	39 c3                	cmp    %eax,%ebx
    6b8d:	0f 85 8d 00 00 00    	jne    6c20 <alu_test_and+0x230>
    6b93:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    6b97:	89 d1                	mov    %edx,%ecx
    6b99:	83 e1 01             	and    $0x1,%ecx
    6b9c:	89 c3                	mov    %eax,%ebx
    6b9e:	83 e3 01             	and    $0x1,%ebx
    6ba1:	38 cb                	cmp    %cl,%bl
    6ba3:	0f 85 1c 01 00 00    	jne    6cc5 <alu_test_and+0x2d5>
    6ba9:	89 c3                	mov    %eax,%ebx
    6bab:	89 d1                	mov    %edx,%ecx
    6bad:	c0 eb 02             	shr    $0x2,%bl
    6bb0:	c1 e9 02             	shr    $0x2,%ecx
    6bb3:	83 e3 01             	and    $0x1,%ebx
    6bb6:	83 e1 01             	and    $0x1,%ecx
    6bb9:	38 cb                	cmp    %cl,%bl
    6bbb:	0f 85 e3 00 00 00    	jne    6ca4 <alu_test_and+0x2b4>
    6bc1:	89 d1                	mov    %edx,%ecx
    6bc3:	89 c3                	mov    %eax,%ebx
    6bc5:	c1 e9 07             	shr    $0x7,%ecx
    6bc8:	c0 eb 07             	shr    $0x7,%bl
    6bcb:	83 e1 01             	and    $0x1,%ecx
    6bce:	38 cb                	cmp    %cl,%bl
    6bd0:	0f 85 ad 00 00 00    	jne    6c83 <alu_test_and+0x293>
    6bd6:	89 d1                	mov    %edx,%ecx
    6bd8:	c0 e8 06             	shr    $0x6,%al
    6bdb:	c1 e9 06             	shr    $0x6,%ecx
    6bde:	83 e0 01             	and    $0x1,%eax
    6be1:	83 e1 01             	and    $0x1,%ecx
    6be4:	38 c8                	cmp    %cl,%al
    6be6:	75 7a                	jne    6c62 <alu_test_and+0x272>
    6be8:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    6bec:	c1 ea 0b             	shr    $0xb,%edx
    6bef:	83 e2 01             	and    $0x1,%edx
    6bf2:	c0 e8 03             	shr    $0x3,%al
    6bf5:	83 e0 01             	and    $0x1,%eax
    6bf8:	38 d0                	cmp    %dl,%al
    6bfa:	75 45                	jne    6c41 <alu_test_and+0x251>
    6bfc:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    6c01:	0f 85 59 ff ff ff    	jne    6b60 <alu_test_and+0x170>
    6c07:	8d 85 b8 04 ff ff    	lea    -0xfb48(%ebp),%eax
    6c0d:	83 ec 0c             	sub    $0xc,%esp
    6c10:	89 eb                	mov    %ebp,%ebx
    6c12:	50                   	push   %eax
    6c13:	e8 e8 bb ff ff       	call   2800 <puts@plt>
    6c18:	83 c4 5c             	add    $0x5c,%esp
    6c1b:	5b                   	pop    %ebx
    6c1c:	5e                   	pop    %esi
    6c1d:	5f                   	pop    %edi
    6c1e:	5d                   	pop    %ebp
    6c1f:	c3                   	ret    
    6c20:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6c26:	50                   	push   %eax
    6c27:	68 9d 01 00 00       	push   $0x19d
    6c2c:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6c32:	89 eb                	mov    %ebp,%ebx
    6c34:	50                   	push   %eax
    6c35:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    6c3b:	50                   	push   %eax
    6c3c:	e8 4f bc ff ff       	call   2890 <__assert_fail@plt>
    6c41:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6c47:	50                   	push   %eax
    6c48:	68 a2 01 00 00       	push   $0x1a2
    6c4d:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6c53:	89 eb                	mov    %ebp,%ebx
    6c55:	50                   	push   %eax
    6c56:	8d 85 18 04 ff ff    	lea    -0xfbe8(%ebp),%eax
    6c5c:	50                   	push   %eax
    6c5d:	e8 2e bc ff ff       	call   2890 <__assert_fail@plt>
    6c62:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6c68:	50                   	push   %eax
    6c69:	68 a1 01 00 00       	push   $0x1a1
    6c6e:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6c74:	89 eb                	mov    %ebp,%ebx
    6c76:	50                   	push   %eax
    6c77:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    6c7d:	50                   	push   %eax
    6c7e:	e8 0d bc ff ff       	call   2890 <__assert_fail@plt>
    6c83:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6c89:	50                   	push   %eax
    6c8a:	68 a0 01 00 00       	push   $0x1a0
    6c8f:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6c95:	89 eb                	mov    %ebp,%ebx
    6c97:	50                   	push   %eax
    6c98:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    6c9e:	50                   	push   %eax
    6c9f:	e8 ec bb ff ff       	call   2890 <__assert_fail@plt>
    6ca4:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6caa:	50                   	push   %eax
    6cab:	68 9f 01 00 00       	push   $0x19f
    6cb0:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6cb6:	89 eb                	mov    %ebp,%ebx
    6cb8:	50                   	push   %eax
    6cb9:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    6cbf:	50                   	push   %eax
    6cc0:	e8 cb bb ff ff       	call   2890 <__assert_fail@plt>
    6cc5:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6ccb:	50                   	push   %eax
    6ccc:	68 9e 01 00 00       	push   $0x19e
    6cd1:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6cd7:	89 eb                	mov    %ebp,%ebx
    6cd9:	50                   	push   %eax
    6cda:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    6ce0:	50                   	push   %eax
    6ce1:	e8 aa bb ff ff       	call   2890 <__assert_fail@plt>
    6ce6:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6cec:	50                   	push   %eax
    6ced:	68 8d 01 00 00       	push   $0x18d
    6cf2:	e9 56 ff ff ff       	jmp    6c4d <alu_test_and+0x25d>
    6cf7:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6cfd:	50                   	push   %eax
    6cfe:	68 8c 01 00 00       	push   $0x18c
    6d03:	e9 66 ff ff ff       	jmp    6c6e <alu_test_and+0x27e>
    6d08:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6d0e:	50                   	push   %eax
    6d0f:	68 8b 01 00 00       	push   $0x18b
    6d14:	e9 76 ff ff ff       	jmp    6c8f <alu_test_and+0x29f>
    6d19:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6d1f:	50                   	push   %eax
    6d20:	68 8a 01 00 00       	push   $0x18a
    6d25:	eb 89                	jmp    6cb0 <alu_test_and+0x2c0>
    6d27:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6d2d:	50                   	push   %eax
    6d2e:	68 89 01 00 00       	push   $0x189
    6d33:	eb 9c                	jmp    6cd1 <alu_test_and+0x2e1>
    6d35:	8d 85 04 08 ff ff    	lea    -0xf7fc(%ebp),%eax
    6d3b:	50                   	push   %eax
    6d3c:	68 88 01 00 00       	push   $0x188
    6d41:	e9 e6 fe ff ff       	jmp    6c2c <alu_test_and+0x23c>
    6d46:	8d 76 00             	lea    0x0(%esi),%esi
    6d49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006d50 <alu_test_or>:
    6d50:	55                   	push   %ebp
    6d51:	57                   	push   %edi
    6d52:	56                   	push   %esi
    6d53:	53                   	push   %ebx
    6d54:	e8 61 24 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    6d59:	81 c5 a7 42 02 00    	add    $0x242a7,%ebp
    6d5f:	83 ec 4c             	sub    $0x4c,%esp
    6d62:	8d 7c 24 40          	lea    0x40(%esp),%edi
    6d66:	8d 44 24 28          	lea    0x28(%esp),%eax
    6d6a:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    6d71:	10 
    6d72:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    6d79:	ff 
    6d7a:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    6d81:	ff 
    6d82:	89 7c 24 14          	mov    %edi,0x14(%esp)
    6d86:	8d bd 60 1d 05 00    	lea    0x51d60(%ebp),%edi
    6d8c:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    6d93:	ff 
    6d94:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    6d9b:	00 
    6d9c:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    6da3:	00 
    6da4:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    6dab:	00 
    6dac:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    6db0:	89 44 24 18          	mov    %eax,0x18(%esp)
    6db4:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    6dbb:	10 
    6dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6dc0:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    6dc4:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    6dc9:	eb 0a                	jmp    6dd5 <alu_test_or+0x85>
    6dcb:	90                   	nop
    6dcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6dd0:	8b 0e                	mov    (%esi),%ecx
    6dd2:	83 c6 04             	add    $0x4,%esi
    6dd5:	83 ec 08             	sub    $0x8,%esp
    6dd8:	89 eb                	mov    %ebp,%ebx
    6dda:	ff 74 24 14          	pushl  0x14(%esp)
    6dde:	51                   	push   %ecx
    6ddf:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    6de3:	e8 d8 48 00 00       	call   b6c0 <alu_or>
    6de8:	89 c3                	mov    %eax,%ebx
    6dea:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    6dee:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    6df2:	83 c4 10             	add    $0x10,%esp
    6df5:	09 c8                	or     %ecx,%eax
    6df7:	9c                   	pushf  
    6df8:	5a                   	pop    %edx
    6df9:	39 c3                	cmp    %eax,%ebx
    6dfb:	0f 85 94 02 00 00    	jne    7095 <alu_test_or+0x345>
    6e01:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    6e05:	89 d1                	mov    %edx,%ecx
    6e07:	83 e1 01             	and    $0x1,%ecx
    6e0a:	89 c3                	mov    %eax,%ebx
    6e0c:	83 e3 01             	and    $0x1,%ebx
    6e0f:	38 cb                	cmp    %cl,%bl
    6e11:	0f 85 70 02 00 00    	jne    7087 <alu_test_or+0x337>
    6e17:	89 c3                	mov    %eax,%ebx
    6e19:	89 d1                	mov    %edx,%ecx
    6e1b:	c0 eb 02             	shr    $0x2,%bl
    6e1e:	c1 e9 02             	shr    $0x2,%ecx
    6e21:	83 e3 01             	and    $0x1,%ebx
    6e24:	83 e1 01             	and    $0x1,%ecx
    6e27:	38 cb                	cmp    %cl,%bl
    6e29:	0f 85 4a 02 00 00    	jne    7079 <alu_test_or+0x329>
    6e2f:	89 d1                	mov    %edx,%ecx
    6e31:	89 c3                	mov    %eax,%ebx
    6e33:	c1 e9 07             	shr    $0x7,%ecx
    6e36:	c0 eb 07             	shr    $0x7,%bl
    6e39:	83 e1 01             	and    $0x1,%ecx
    6e3c:	38 cb                	cmp    %cl,%bl
    6e3e:	0f 85 24 02 00 00    	jne    7068 <alu_test_or+0x318>
    6e44:	89 d1                	mov    %edx,%ecx
    6e46:	c0 e8 06             	shr    $0x6,%al
    6e49:	c1 e9 06             	shr    $0x6,%ecx
    6e4c:	83 e0 01             	and    $0x1,%eax
    6e4f:	83 e1 01             	and    $0x1,%ecx
    6e52:	38 c8                	cmp    %cl,%al
    6e54:	0f 85 fd 01 00 00    	jne    7057 <alu_test_or+0x307>
    6e5a:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    6e5e:	c1 ea 0b             	shr    $0xb,%edx
    6e61:	83 e2 01             	and    $0x1,%edx
    6e64:	c0 e8 03             	shr    $0x3,%al
    6e67:	83 e0 01             	and    $0x1,%eax
    6e6a:	38 d0                	cmp    %dl,%al
    6e6c:	0f 85 d4 01 00 00    	jne    7046 <alu_test_or+0x2f6>
    6e72:	3b 74 24 14          	cmp    0x14(%esp),%esi
    6e76:	0f 85 54 ff ff ff    	jne    6dd0 <alu_test_or+0x80>
    6e7c:	8b 44 24 18          	mov    0x18(%esp),%eax
    6e80:	39 44 24 14          	cmp    %eax,0x14(%esp)
    6e84:	74 1a                	je     6ea0 <alu_test_or+0x150>
    6e86:	8b 30                	mov    (%eax),%esi
    6e88:	83 c0 04             	add    $0x4,%eax
    6e8b:	89 44 24 18          	mov    %eax,0x18(%esp)
    6e8f:	89 74 24 0c          	mov    %esi,0xc(%esp)
    6e93:	e9 28 ff ff ff       	jmp    6dc0 <alu_test_or+0x70>
    6e98:	90                   	nop
    6e99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6ea0:	83 ec 0c             	sub    $0xc,%esp
    6ea3:	89 eb                	mov    %ebp,%ebx
    6ea5:	6a 00                	push   $0x0
    6ea7:	e8 c4 b7 ff ff       	call   2670 <time@plt>
    6eac:	89 04 24             	mov    %eax,(%esp)
    6eaf:	e8 3c b8 ff ff       	call   26f0 <srand@plt>
    6eb4:	83 c4 10             	add    $0x10,%esp
    6eb7:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    6ebe:	00 
    6ebf:	90                   	nop
    6ec0:	89 eb                	mov    %ebp,%ebx
    6ec2:	e8 89 b8 ff ff       	call   2750 <rand@plt>
    6ec7:	89 c6                	mov    %eax,%esi
    6ec9:	e8 82 b8 ff ff       	call   2750 <rand@plt>
    6ece:	83 ec 08             	sub    $0x8,%esp
    6ed1:	56                   	push   %esi
    6ed2:	50                   	push   %eax
    6ed3:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    6ed7:	e8 e4 47 00 00       	call   b6c0 <alu_or>
    6edc:	89 c3                	mov    %eax,%ebx
    6ede:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    6ee2:	89 f0                	mov    %esi,%eax
    6ee4:	83 c4 10             	add    $0x10,%esp
    6ee7:	09 c8                	or     %ecx,%eax
    6ee9:	9c                   	pushf  
    6eea:	5a                   	pop    %edx
    6eeb:	39 c3                	cmp    %eax,%ebx
    6eed:	0f 85 8d 00 00 00    	jne    6f80 <alu_test_or+0x230>
    6ef3:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    6ef7:	89 d1                	mov    %edx,%ecx
    6ef9:	83 e1 01             	and    $0x1,%ecx
    6efc:	89 c3                	mov    %eax,%ebx
    6efe:	83 e3 01             	and    $0x1,%ebx
    6f01:	38 cb                	cmp    %cl,%bl
    6f03:	0f 85 1c 01 00 00    	jne    7025 <alu_test_or+0x2d5>
    6f09:	89 c3                	mov    %eax,%ebx
    6f0b:	89 d1                	mov    %edx,%ecx
    6f0d:	c0 eb 02             	shr    $0x2,%bl
    6f10:	c1 e9 02             	shr    $0x2,%ecx
    6f13:	83 e3 01             	and    $0x1,%ebx
    6f16:	83 e1 01             	and    $0x1,%ecx
    6f19:	38 cb                	cmp    %cl,%bl
    6f1b:	0f 85 e3 00 00 00    	jne    7004 <alu_test_or+0x2b4>
    6f21:	89 d1                	mov    %edx,%ecx
    6f23:	89 c3                	mov    %eax,%ebx
    6f25:	c1 e9 07             	shr    $0x7,%ecx
    6f28:	c0 eb 07             	shr    $0x7,%bl
    6f2b:	83 e1 01             	and    $0x1,%ecx
    6f2e:	38 cb                	cmp    %cl,%bl
    6f30:	0f 85 ad 00 00 00    	jne    6fe3 <alu_test_or+0x293>
    6f36:	89 d1                	mov    %edx,%ecx
    6f38:	c0 e8 06             	shr    $0x6,%al
    6f3b:	c1 e9 06             	shr    $0x6,%ecx
    6f3e:	83 e0 01             	and    $0x1,%eax
    6f41:	83 e1 01             	and    $0x1,%ecx
    6f44:	38 c8                	cmp    %cl,%al
    6f46:	75 7a                	jne    6fc2 <alu_test_or+0x272>
    6f48:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    6f4c:	c1 ea 0b             	shr    $0xb,%edx
    6f4f:	83 e2 01             	and    $0x1,%edx
    6f52:	c0 e8 03             	shr    $0x3,%al
    6f55:	83 e0 01             	and    $0x1,%eax
    6f58:	38 d0                	cmp    %dl,%al
    6f5a:	75 45                	jne    6fa1 <alu_test_or+0x251>
    6f5c:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    6f61:	0f 85 59 ff ff ff    	jne    6ec0 <alu_test_or+0x170>
    6f67:	8d 85 d8 04 ff ff    	lea    -0xfb28(%ebp),%eax
    6f6d:	83 ec 0c             	sub    $0xc,%esp
    6f70:	89 eb                	mov    %ebp,%ebx
    6f72:	50                   	push   %eax
    6f73:	e8 88 b8 ff ff       	call   2800 <puts@plt>
    6f78:	83 c4 5c             	add    $0x5c,%esp
    6f7b:	5b                   	pop    %ebx
    6f7c:	5e                   	pop    %esi
    6f7d:	5f                   	pop    %edi
    6f7e:	5d                   	pop    %ebp
    6f7f:	c3                   	ret    
    6f80:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    6f86:	50                   	push   %eax
    6f87:	68 d6 01 00 00       	push   $0x1d6
    6f8c:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6f92:	89 eb                	mov    %ebp,%ebx
    6f94:	50                   	push   %eax
    6f95:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    6f9b:	50                   	push   %eax
    6f9c:	e8 ef b8 ff ff       	call   2890 <__assert_fail@plt>
    6fa1:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    6fa7:	50                   	push   %eax
    6fa8:	68 db 01 00 00       	push   $0x1db
    6fad:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6fb3:	89 eb                	mov    %ebp,%ebx
    6fb5:	50                   	push   %eax
    6fb6:	8d 85 18 04 ff ff    	lea    -0xfbe8(%ebp),%eax
    6fbc:	50                   	push   %eax
    6fbd:	e8 ce b8 ff ff       	call   2890 <__assert_fail@plt>
    6fc2:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    6fc8:	50                   	push   %eax
    6fc9:	68 da 01 00 00       	push   $0x1da
    6fce:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6fd4:	89 eb                	mov    %ebp,%ebx
    6fd6:	50                   	push   %eax
    6fd7:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    6fdd:	50                   	push   %eax
    6fde:	e8 ad b8 ff ff       	call   2890 <__assert_fail@plt>
    6fe3:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    6fe9:	50                   	push   %eax
    6fea:	68 d9 01 00 00       	push   $0x1d9
    6fef:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    6ff5:	89 eb                	mov    %ebp,%ebx
    6ff7:	50                   	push   %eax
    6ff8:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    6ffe:	50                   	push   %eax
    6fff:	e8 8c b8 ff ff       	call   2890 <__assert_fail@plt>
    7004:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    700a:	50                   	push   %eax
    700b:	68 d8 01 00 00       	push   $0x1d8
    7010:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7016:	89 eb                	mov    %ebp,%ebx
    7018:	50                   	push   %eax
    7019:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    701f:	50                   	push   %eax
    7020:	e8 6b b8 ff ff       	call   2890 <__assert_fail@plt>
    7025:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    702b:	50                   	push   %eax
    702c:	68 d7 01 00 00       	push   $0x1d7
    7031:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7037:	89 eb                	mov    %ebp,%ebx
    7039:	50                   	push   %eax
    703a:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    7040:	50                   	push   %eax
    7041:	e8 4a b8 ff ff       	call   2890 <__assert_fail@plt>
    7046:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    704c:	50                   	push   %eax
    704d:	68 c5 01 00 00       	push   $0x1c5
    7052:	e9 56 ff ff ff       	jmp    6fad <alu_test_or+0x25d>
    7057:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    705d:	50                   	push   %eax
    705e:	68 c4 01 00 00       	push   $0x1c4
    7063:	e9 66 ff ff ff       	jmp    6fce <alu_test_or+0x27e>
    7068:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    706e:	50                   	push   %eax
    706f:	68 c3 01 00 00       	push   $0x1c3
    7074:	e9 76 ff ff ff       	jmp    6fef <alu_test_or+0x29f>
    7079:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    707f:	50                   	push   %eax
    7080:	68 c2 01 00 00       	push   $0x1c2
    7085:	eb 89                	jmp    7010 <alu_test_or+0x2c0>
    7087:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    708d:	50                   	push   %eax
    708e:	68 c1 01 00 00       	push   $0x1c1
    7093:	eb 9c                	jmp    7031 <alu_test_or+0x2e1>
    7095:	8d 85 f8 07 ff ff    	lea    -0xf808(%ebp),%eax
    709b:	50                   	push   %eax
    709c:	68 c0 01 00 00       	push   $0x1c0
    70a1:	e9 e6 fe ff ff       	jmp    6f8c <alu_test_or+0x23c>
    70a6:	8d 76 00             	lea    0x0(%esi),%esi
    70a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000070b0 <alu_test_xor>:
    70b0:	55                   	push   %ebp
    70b1:	57                   	push   %edi
    70b2:	56                   	push   %esi
    70b3:	53                   	push   %ebx
    70b4:	e8 01 21 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    70b9:	81 c5 47 3f 02 00    	add    $0x23f47,%ebp
    70bf:	83 ec 4c             	sub    $0x4c,%esp
    70c2:	8d 7c 24 40          	lea    0x40(%esp),%edi
    70c6:	8d 44 24 28          	lea    0x28(%esp),%eax
    70ca:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    70d1:	10 
    70d2:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    70d9:	ff 
    70da:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    70e1:	ff 
    70e2:	89 7c 24 14          	mov    %edi,0x14(%esp)
    70e6:	8d bd 60 1d 05 00    	lea    0x51d60(%ebp),%edi
    70ec:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    70f3:	ff 
    70f4:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    70fb:	00 
    70fc:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    7103:	00 
    7104:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    710b:	00 
    710c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    7110:	89 44 24 18          	mov    %eax,0x18(%esp)
    7114:	c7 44 24 0c 00 00 00 	movl   $0x10000000,0xc(%esp)
    711b:	10 
    711c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7120:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    7124:	b9 00 00 00 10       	mov    $0x10000000,%ecx
    7129:	eb 0a                	jmp    7135 <alu_test_xor+0x85>
    712b:	90                   	nop
    712c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7130:	8b 0e                	mov    (%esi),%ecx
    7132:	83 c6 04             	add    $0x4,%esi
    7135:	83 ec 08             	sub    $0x8,%esp
    7138:	89 eb                	mov    %ebp,%ebx
    713a:	ff 74 24 14          	pushl  0x14(%esp)
    713e:	51                   	push   %ecx
    713f:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    7143:	e8 f8 44 00 00       	call   b640 <alu_xor>
    7148:	89 c3                	mov    %eax,%ebx
    714a:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    714e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    7152:	83 c4 10             	add    $0x10,%esp
    7155:	31 c8                	xor    %ecx,%eax
    7157:	9c                   	pushf  
    7158:	5a                   	pop    %edx
    7159:	39 c3                	cmp    %eax,%ebx
    715b:	0f 85 94 02 00 00    	jne    73f5 <alu_test_xor+0x345>
    7161:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    7165:	89 d1                	mov    %edx,%ecx
    7167:	83 e1 01             	and    $0x1,%ecx
    716a:	89 c3                	mov    %eax,%ebx
    716c:	83 e3 01             	and    $0x1,%ebx
    716f:	38 cb                	cmp    %cl,%bl
    7171:	0f 85 70 02 00 00    	jne    73e7 <alu_test_xor+0x337>
    7177:	89 c3                	mov    %eax,%ebx
    7179:	89 d1                	mov    %edx,%ecx
    717b:	c0 eb 02             	shr    $0x2,%bl
    717e:	c1 e9 02             	shr    $0x2,%ecx
    7181:	83 e3 01             	and    $0x1,%ebx
    7184:	83 e1 01             	and    $0x1,%ecx
    7187:	38 cb                	cmp    %cl,%bl
    7189:	0f 85 4a 02 00 00    	jne    73d9 <alu_test_xor+0x329>
    718f:	89 d1                	mov    %edx,%ecx
    7191:	89 c3                	mov    %eax,%ebx
    7193:	c1 e9 07             	shr    $0x7,%ecx
    7196:	c0 eb 07             	shr    $0x7,%bl
    7199:	83 e1 01             	and    $0x1,%ecx
    719c:	38 cb                	cmp    %cl,%bl
    719e:	0f 85 24 02 00 00    	jne    73c8 <alu_test_xor+0x318>
    71a4:	89 d1                	mov    %edx,%ecx
    71a6:	c0 e8 06             	shr    $0x6,%al
    71a9:	c1 e9 06             	shr    $0x6,%ecx
    71ac:	83 e0 01             	and    $0x1,%eax
    71af:	83 e1 01             	and    $0x1,%ecx
    71b2:	38 c8                	cmp    %cl,%al
    71b4:	0f 85 fd 01 00 00    	jne    73b7 <alu_test_xor+0x307>
    71ba:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    71be:	c1 ea 0b             	shr    $0xb,%edx
    71c1:	83 e2 01             	and    $0x1,%edx
    71c4:	c0 e8 03             	shr    $0x3,%al
    71c7:	83 e0 01             	and    $0x1,%eax
    71ca:	38 d0                	cmp    %dl,%al
    71cc:	0f 85 d4 01 00 00    	jne    73a6 <alu_test_xor+0x2f6>
    71d2:	3b 74 24 14          	cmp    0x14(%esp),%esi
    71d6:	0f 85 54 ff ff ff    	jne    7130 <alu_test_xor+0x80>
    71dc:	8b 44 24 18          	mov    0x18(%esp),%eax
    71e0:	39 44 24 14          	cmp    %eax,0x14(%esp)
    71e4:	74 1a                	je     7200 <alu_test_xor+0x150>
    71e6:	8b 30                	mov    (%eax),%esi
    71e8:	83 c0 04             	add    $0x4,%eax
    71eb:	89 44 24 18          	mov    %eax,0x18(%esp)
    71ef:	89 74 24 0c          	mov    %esi,0xc(%esp)
    71f3:	e9 28 ff ff ff       	jmp    7120 <alu_test_xor+0x70>
    71f8:	90                   	nop
    71f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7200:	83 ec 0c             	sub    $0xc,%esp
    7203:	89 eb                	mov    %ebp,%ebx
    7205:	6a 00                	push   $0x0
    7207:	e8 64 b4 ff ff       	call   2670 <time@plt>
    720c:	89 04 24             	mov    %eax,(%esp)
    720f:	e8 dc b4 ff ff       	call   26f0 <srand@plt>
    7214:	83 c4 10             	add    $0x10,%esp
    7217:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    721e:	00 
    721f:	90                   	nop
    7220:	89 eb                	mov    %ebp,%ebx
    7222:	e8 29 b5 ff ff       	call   2750 <rand@plt>
    7227:	89 c6                	mov    %eax,%esi
    7229:	e8 22 b5 ff ff       	call   2750 <rand@plt>
    722e:	83 ec 08             	sub    $0x8,%esp
    7231:	56                   	push   %esi
    7232:	50                   	push   %eax
    7233:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    7237:	e8 04 44 00 00       	call   b640 <alu_xor>
    723c:	89 c3                	mov    %eax,%ebx
    723e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    7242:	89 f0                	mov    %esi,%eax
    7244:	83 c4 10             	add    $0x10,%esp
    7247:	31 c8                	xor    %ecx,%eax
    7249:	9c                   	pushf  
    724a:	5a                   	pop    %edx
    724b:	39 c3                	cmp    %eax,%ebx
    724d:	0f 85 8d 00 00 00    	jne    72e0 <alu_test_xor+0x230>
    7253:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    7257:	89 d1                	mov    %edx,%ecx
    7259:	83 e1 01             	and    $0x1,%ecx
    725c:	89 c3                	mov    %eax,%ebx
    725e:	83 e3 01             	and    $0x1,%ebx
    7261:	38 cb                	cmp    %cl,%bl
    7263:	0f 85 1c 01 00 00    	jne    7385 <alu_test_xor+0x2d5>
    7269:	89 c3                	mov    %eax,%ebx
    726b:	89 d1                	mov    %edx,%ecx
    726d:	c0 eb 02             	shr    $0x2,%bl
    7270:	c1 e9 02             	shr    $0x2,%ecx
    7273:	83 e3 01             	and    $0x1,%ebx
    7276:	83 e1 01             	and    $0x1,%ecx
    7279:	38 cb                	cmp    %cl,%bl
    727b:	0f 85 e3 00 00 00    	jne    7364 <alu_test_xor+0x2b4>
    7281:	89 d1                	mov    %edx,%ecx
    7283:	89 c3                	mov    %eax,%ebx
    7285:	c1 e9 07             	shr    $0x7,%ecx
    7288:	c0 eb 07             	shr    $0x7,%bl
    728b:	83 e1 01             	and    $0x1,%ecx
    728e:	38 cb                	cmp    %cl,%bl
    7290:	0f 85 ad 00 00 00    	jne    7343 <alu_test_xor+0x293>
    7296:	89 d1                	mov    %edx,%ecx
    7298:	c0 e8 06             	shr    $0x6,%al
    729b:	c1 e9 06             	shr    $0x6,%ecx
    729e:	83 e0 01             	and    $0x1,%eax
    72a1:	83 e1 01             	and    $0x1,%ecx
    72a4:	38 c8                	cmp    %cl,%al
    72a6:	75 7a                	jne    7322 <alu_test_xor+0x272>
    72a8:	0f b6 47 25          	movzbl 0x25(%edi),%eax
    72ac:	c1 ea 0b             	shr    $0xb,%edx
    72af:	83 e2 01             	and    $0x1,%edx
    72b2:	c0 e8 03             	shr    $0x3,%al
    72b5:	83 e0 01             	and    $0x1,%eax
    72b8:	38 d0                	cmp    %dl,%al
    72ba:	75 45                	jne    7301 <alu_test_xor+0x251>
    72bc:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    72c1:	0f 85 59 ff ff ff    	jne    7220 <alu_test_xor+0x170>
    72c7:	8d 85 f8 04 ff ff    	lea    -0xfb08(%ebp),%eax
    72cd:	83 ec 0c             	sub    $0xc,%esp
    72d0:	89 eb                	mov    %ebp,%ebx
    72d2:	50                   	push   %eax
    72d3:	e8 28 b5 ff ff       	call   2800 <puts@plt>
    72d8:	83 c4 5c             	add    $0x5c,%esp
    72db:	5b                   	pop    %ebx
    72dc:	5e                   	pop    %esi
    72dd:	5f                   	pop    %edi
    72de:	5d                   	pop    %ebp
    72df:	c3                   	ret    
    72e0:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    72e6:	50                   	push   %eax
    72e7:	68 0f 02 00 00       	push   $0x20f
    72ec:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    72f2:	89 eb                	mov    %ebp,%ebx
    72f4:	50                   	push   %eax
    72f5:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    72fb:	50                   	push   %eax
    72fc:	e8 8f b5 ff ff       	call   2890 <__assert_fail@plt>
    7301:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    7307:	50                   	push   %eax
    7308:	68 14 02 00 00       	push   $0x214
    730d:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7313:	89 eb                	mov    %ebp,%ebx
    7315:	50                   	push   %eax
    7316:	8d 85 18 04 ff ff    	lea    -0xfbe8(%ebp),%eax
    731c:	50                   	push   %eax
    731d:	e8 6e b5 ff ff       	call   2890 <__assert_fail@plt>
    7322:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    7328:	50                   	push   %eax
    7329:	68 13 02 00 00       	push   $0x213
    732e:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7334:	89 eb                	mov    %ebp,%ebx
    7336:	50                   	push   %eax
    7337:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    733d:	50                   	push   %eax
    733e:	e8 4d b5 ff ff       	call   2890 <__assert_fail@plt>
    7343:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    7349:	50                   	push   %eax
    734a:	68 12 02 00 00       	push   $0x212
    734f:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7355:	89 eb                	mov    %ebp,%ebx
    7357:	50                   	push   %eax
    7358:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    735e:	50                   	push   %eax
    735f:	e8 2c b5 ff ff       	call   2890 <__assert_fail@plt>
    7364:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    736a:	50                   	push   %eax
    736b:	68 11 02 00 00       	push   $0x211
    7370:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7376:	89 eb                	mov    %ebp,%ebx
    7378:	50                   	push   %eax
    7379:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    737f:	50                   	push   %eax
    7380:	e8 0b b5 ff ff       	call   2890 <__assert_fail@plt>
    7385:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    738b:	50                   	push   %eax
    738c:	68 10 02 00 00       	push   $0x210
    7391:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7397:	89 eb                	mov    %ebp,%ebx
    7399:	50                   	push   %eax
    739a:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    73a0:	50                   	push   %eax
    73a1:	e8 ea b4 ff ff       	call   2890 <__assert_fail@plt>
    73a6:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    73ac:	50                   	push   %eax
    73ad:	68 fe 01 00 00       	push   $0x1fe
    73b2:	e9 56 ff ff ff       	jmp    730d <alu_test_xor+0x25d>
    73b7:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    73bd:	50                   	push   %eax
    73be:	68 fd 01 00 00       	push   $0x1fd
    73c3:	e9 66 ff ff ff       	jmp    732e <alu_test_xor+0x27e>
    73c8:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    73ce:	50                   	push   %eax
    73cf:	68 fc 01 00 00       	push   $0x1fc
    73d4:	e9 76 ff ff ff       	jmp    734f <alu_test_xor+0x29f>
    73d9:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    73df:	50                   	push   %eax
    73e0:	68 fb 01 00 00       	push   $0x1fb
    73e5:	eb 89                	jmp    7370 <alu_test_xor+0x2c0>
    73e7:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    73ed:	50                   	push   %eax
    73ee:	68 fa 01 00 00       	push   $0x1fa
    73f3:	eb 9c                	jmp    7391 <alu_test_xor+0x2e1>
    73f5:	8d 85 e8 07 ff ff    	lea    -0xf818(%ebp),%eax
    73fb:	50                   	push   %eax
    73fc:	68 f9 01 00 00       	push   $0x1f9
    7401:	e9 e6 fe ff ff       	jmp    72ec <alu_test_xor+0x23c>
    7406:	8d 76 00             	lea    0x0(%esi),%esi
    7409:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007410 <alu_test_shl>:
    7410:	55                   	push   %ebp
    7411:	57                   	push   %edi
    7412:	56                   	push   %esi
    7413:	53                   	push   %ebx
    7414:	e8 a1 1d 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    7419:	81 c5 e7 3b 02 00    	add    $0x23be7,%ebp
    741f:	83 ec 5c             	sub    $0x5c,%esp
    7422:	8d 44 24 40          	lea    0x40(%esp),%eax
    7426:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
    742d:	00 
    742e:	c7 44 24 44 02 00 00 	movl   $0x2,0x44(%esp)
    7435:	00 
    7436:	c7 44 24 48 03 00 00 	movl   $0x3,0x48(%esp)
    743d:	00 
    743e:	c7 44 24 4c 04 00 00 	movl   $0x4,0x4c(%esp)
    7445:	00 
    7446:	89 44 24 14          	mov    %eax,0x14(%esp)
    744a:	8d 85 60 1d 05 00    	lea    0x51d60(%ebp),%eax
    7450:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%esp)
    7457:	ff 
    7458:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
    745f:	00 
    7460:	c7 44 24 30 10 10 10 	movl   $0x10101010,0x30(%esp)
    7467:	10 
    7468:	c7 44 24 34 08 00 00 	movl   $0x8,0x34(%esp)
    746f:	00 
    7470:	c7 44 24 38 10 00 00 	movl   $0x10,0x38(%esp)
    7477:	00 
    7478:	c7 44 24 3c 20 00 00 	movl   $0x20,0x3c(%esp)
    747f:	00 
    7480:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
    7487:	00 
    7488:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    748f:	00 
    7490:	89 44 24 10          	mov    %eax,0x10(%esp)
    7494:	be ff ff ff ff       	mov    $0xffffffff,%esi
    7499:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    74a0:	00 
    74a1:	8d 44 24 50          	lea    0x50(%esp),%eax
    74a5:	8b 7c 24 14          	mov    0x14(%esp),%edi
    74a9:	b9 01 00 00 00       	mov    $0x1,%ecx
    74ae:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    74b2:	83 ec 04             	sub    $0x4,%esp
    74b5:	89 eb                	mov    %ebp,%ebx
    74b7:	ff 74 24 0c          	pushl  0xc(%esp)
    74bb:	56                   	push   %esi
    74bc:	51                   	push   %ecx
    74bd:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
    74c1:	e8 6a 42 00 00       	call   b730 <alu_shl>
    74c6:	83 c4 10             	add    $0x10,%esp
    74c9:	89 c3                	mov    %eax,%ebx
    74cb:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    74cf:	8b 44 24 04          	mov    0x4(%esp),%eax
    74d3:	83 f8 01             	cmp    $0x1,%eax
    74d6:	0f 84 94 00 00 00    	je     7570 <alu_test_shl+0x160>
    74dc:	83 f8 02             	cmp    $0x2,%eax
    74df:	89 f0                	mov    %esi,%eax
    74e1:	75 7d                	jne    7560 <alu_test_shl+0x150>
    74e3:	d3 e0                	shl    %cl,%eax
    74e5:	9c                   	pushf  
    74e6:	5a                   	pop    %edx
    74e7:	39 d8                	cmp    %ebx,%eax
    74e9:	0f 85 9d 02 00 00    	jne    778c <alu_test_shl+0x37c>
    74ef:	8b 44 24 10          	mov    0x10(%esp),%eax
    74f3:	89 d1                	mov    %edx,%ecx
    74f5:	83 e1 01             	and    $0x1,%ecx
    74f8:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    74fc:	89 c3                	mov    %eax,%ebx
    74fe:	83 e3 01             	and    $0x1,%ebx
    7501:	38 cb                	cmp    %cl,%bl
    7503:	0f 85 33 02 00 00    	jne    773c <alu_test_shl+0x32c>
    7509:	89 c3                	mov    %eax,%ebx
    750b:	89 d1                	mov    %edx,%ecx
    750d:	c0 eb 02             	shr    $0x2,%bl
    7510:	c1 e9 02             	shr    $0x2,%ecx
    7513:	83 e3 01             	and    $0x1,%ebx
    7516:	83 e1 01             	and    $0x1,%ecx
    7519:	38 cb                	cmp    %cl,%bl
    751b:	0f 85 fa 01 00 00    	jne    771b <alu_test_shl+0x30b>
    7521:	89 d1                	mov    %edx,%ecx
    7523:	89 c3                	mov    %eax,%ebx
    7525:	c1 e9 07             	shr    $0x7,%ecx
    7528:	c0 eb 07             	shr    $0x7,%bl
    752b:	83 e1 01             	and    $0x1,%ecx
    752e:	38 cb                	cmp    %cl,%bl
    7530:	0f 85 c4 01 00 00    	jne    76fa <alu_test_shl+0x2ea>
    7536:	c0 e8 06             	shr    $0x6,%al
    7539:	c1 ea 06             	shr    $0x6,%edx
    753c:	83 e0 01             	and    $0x1,%eax
    753f:	83 e2 01             	and    $0x1,%edx
    7542:	38 d0                	cmp    %dl,%al
    7544:	0f 85 8f 01 00 00    	jne    76d9 <alu_test_shl+0x2c9>
    754a:	83 c7 04             	add    $0x4,%edi
    754d:	3b 7c 24 1c          	cmp    0x1c(%esp),%edi
    7551:	74 2d                	je     7580 <alu_test_shl+0x170>
    7553:	8b 0f                	mov    (%edi),%ecx
    7555:	e9 58 ff ff ff       	jmp    74b2 <alu_test_shl+0xa2>
    755a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7560:	d2 e0                	shl    %cl,%al
    7562:	9c                   	pushf  
    7563:	5a                   	pop    %edx
    7564:	e9 7e ff ff ff       	jmp    74e7 <alu_test_shl+0xd7>
    7569:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7570:	89 f0                	mov    %esi,%eax
    7572:	66 d3 e0             	shl    %cl,%ax
    7575:	9c                   	pushf  
    7576:	5a                   	pop    %edx
    7577:	e9 6b ff ff ff       	jmp    74e7 <alu_test_shl+0xd7>
    757c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7580:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
    7585:	8b 44 24 18          	mov    0x18(%esp),%eax
    7589:	83 f8 03             	cmp    $0x3,%eax
    758c:	0f 85 3e 01 00 00    	jne    76d0 <alu_test_shl+0x2c0>
    7592:	83 ec 0c             	sub    $0xc,%esp
    7595:	89 eb                	mov    %ebp,%ebx
    7597:	6a 00                	push   $0x0
    7599:	e8 d2 b0 ff ff       	call   2670 <time@plt>
    759e:	89 04 24             	mov    %eax,(%esp)
    75a1:	e8 4a b1 ff ff       	call   26f0 <srand@plt>
    75a6:	83 c4 10             	add    $0x10,%esp
    75a9:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
    75b0:	00 
    75b1:	89 7c 24 18          	mov    %edi,0x18(%esp)
    75b5:	8b 7c 24 14          	mov    0x14(%esp),%edi
    75b9:	be 01 00 00 00       	mov    $0x1,%esi
    75be:	89 eb                	mov    %ebp,%ebx
    75c0:	e8 8b b1 ff ff       	call   2750 <rand@plt>
    75c5:	83 ec 04             	sub    $0x4,%esp
    75c8:	ff 74 24 0c          	pushl  0xc(%esp)
    75cc:	50                   	push   %eax
    75cd:	89 44 24 18          	mov    %eax,0x18(%esp)
    75d1:	56                   	push   %esi
    75d2:	e8 59 41 00 00       	call   b730 <alu_shl>
    75d7:	83 c4 10             	add    $0x10,%esp
    75da:	89 c3                	mov    %eax,%ebx
    75dc:	8b 54 24 0c          	mov    0xc(%esp),%edx
    75e0:	8b 44 24 04          	mov    0x4(%esp),%eax
    75e4:	83 f8 01             	cmp    $0x1,%eax
    75e7:	0f 84 93 00 00 00    	je     7680 <alu_test_shl+0x270>
    75ed:	83 f8 02             	cmp    $0x2,%eax
    75f0:	89 f1                	mov    %esi,%ecx
    75f2:	89 d0                	mov    %edx,%eax
    75f4:	75 7a                	jne    7670 <alu_test_shl+0x260>
    75f6:	d3 e0                	shl    %cl,%eax
    75f8:	9c                   	pushf  
    75f9:	5a                   	pop    %edx
    75fa:	39 d8                	cmp    %ebx,%eax
    75fc:	0f 85 5b 01 00 00    	jne    775d <alu_test_shl+0x34d>
    7602:	8b 44 24 10          	mov    0x10(%esp),%eax
    7606:	89 d1                	mov    %edx,%ecx
    7608:	83 e1 01             	and    $0x1,%ecx
    760b:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    760f:	89 c3                	mov    %eax,%ebx
    7611:	83 e3 01             	and    $0x1,%ebx
    7614:	38 cb                	cmp    %cl,%bl
    7616:	0f 85 62 01 00 00    	jne    777e <alu_test_shl+0x36e>
    761c:	89 c3                	mov    %eax,%ebx
    761e:	89 d1                	mov    %edx,%ecx
    7620:	c0 eb 02             	shr    $0x2,%bl
    7623:	c1 e9 02             	shr    $0x2,%ecx
    7626:	83 e3 01             	and    $0x1,%ebx
    7629:	83 e1 01             	and    $0x1,%ecx
    762c:	38 cb                	cmp    %cl,%bl
    762e:	0f 85 77 01 00 00    	jne    77ab <alu_test_shl+0x39b>
    7634:	89 d1                	mov    %edx,%ecx
    7636:	89 c3                	mov    %eax,%ebx
    7638:	c1 e9 07             	shr    $0x7,%ecx
    763b:	c0 eb 07             	shr    $0x7,%bl
    763e:	83 e1 01             	and    $0x1,%ecx
    7641:	38 cb                	cmp    %cl,%bl
    7643:	0f 85 73 01 00 00    	jne    77bc <alu_test_shl+0x3ac>
    7649:	c0 e8 06             	shr    $0x6,%al
    764c:	c1 ea 06             	shr    $0x6,%edx
    764f:	83 e0 01             	and    $0x1,%eax
    7652:	83 e2 01             	and    $0x1,%edx
    7655:	38 d0                	cmp    %dl,%al
    7657:	0f 85 3d 01 00 00    	jne    779a <alu_test_shl+0x38a>
    765d:	83 c7 04             	add    $0x4,%edi
    7660:	39 7c 24 18          	cmp    %edi,0x18(%esp)
    7664:	74 2a                	je     7690 <alu_test_shl+0x280>
    7666:	8b 37                	mov    (%edi),%esi
    7668:	e9 51 ff ff ff       	jmp    75be <alu_test_shl+0x1ae>
    766d:	8d 76 00             	lea    0x0(%esi),%esi
    7670:	d2 e0                	shl    %cl,%al
    7672:	9c                   	pushf  
    7673:	5a                   	pop    %edx
    7674:	eb 84                	jmp    75fa <alu_test_shl+0x1ea>
    7676:	8d 76 00             	lea    0x0(%esi),%esi
    7679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    7680:	89 d0                	mov    %edx,%eax
    7682:	89 f1                	mov    %esi,%ecx
    7684:	66 d3 e0             	shl    %cl,%ax
    7687:	9c                   	pushf  
    7688:	5a                   	pop    %edx
    7689:	e9 6c ff ff ff       	jmp    75fa <alu_test_shl+0x1ea>
    768e:	66 90                	xchg   %ax,%ax
    7690:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
    7695:	0f 85 1a ff ff ff    	jne    75b5 <alu_test_shl+0x1a5>
    769b:	83 44 24 04 01       	addl   $0x1,0x4(%esp)
    76a0:	8b 44 24 04          	mov    0x4(%esp),%eax
    76a4:	83 f8 03             	cmp    $0x3,%eax
    76a7:	0f 85 20 01 00 00    	jne    77cd <alu_test_shl+0x3bd>
    76ad:	8d 85 18 05 ff ff    	lea    -0xfae8(%ebp),%eax
    76b3:	83 ec 0c             	sub    $0xc,%esp
    76b6:	89 eb                	mov    %ebp,%ebx
    76b8:	50                   	push   %eax
    76b9:	e8 42 b1 ff ff       	call   2800 <puts@plt>
    76be:	83 c4 6c             	add    $0x6c,%esp
    76c1:	5b                   	pop    %ebx
    76c2:	5e                   	pop    %esi
    76c3:	5f                   	pop    %edi
    76c4:	5d                   	pop    %ebp
    76c5:	c3                   	ret    
    76c6:	8d 76 00             	lea    0x0(%esi),%esi
    76c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    76d0:	8b 74 84 28          	mov    0x28(%esp,%eax,4),%esi
    76d4:	e9 c8 fd ff ff       	jmp    74a1 <alu_test_shl+0x91>
    76d9:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    76df:	50                   	push   %eax
    76e0:	68 4f 02 00 00       	push   $0x24f
    76e5:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    76eb:	89 eb                	mov    %ebp,%ebx
    76ed:	50                   	push   %eax
    76ee:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    76f4:	50                   	push   %eax
    76f5:	e8 96 b1 ff ff       	call   2890 <__assert_fail@plt>
    76fa:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    7700:	50                   	push   %eax
    7701:	68 4e 02 00 00       	push   $0x24e
    7706:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    770c:	89 eb                	mov    %ebp,%ebx
    770e:	50                   	push   %eax
    770f:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    7715:	50                   	push   %eax
    7716:	e8 75 b1 ff ff       	call   2890 <__assert_fail@plt>
    771b:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    7721:	50                   	push   %eax
    7722:	68 4d 02 00 00       	push   $0x24d
    7727:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    772d:	89 eb                	mov    %ebp,%ebx
    772f:	50                   	push   %eax
    7730:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    7736:	50                   	push   %eax
    7737:	e8 54 b1 ff ff       	call   2890 <__assert_fail@plt>
    773c:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    7742:	50                   	push   %eax
    7743:	68 4c 02 00 00       	push   $0x24c
    7748:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    774e:	89 eb                	mov    %ebp,%ebx
    7750:	50                   	push   %eax
    7751:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    7757:	50                   	push   %eax
    7758:	e8 33 b1 ff ff       	call   2890 <__assert_fail@plt>
    775d:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    7763:	50                   	push   %eax
    7764:	68 75 02 00 00       	push   $0x275
    7769:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    776f:	89 eb                	mov    %ebp,%ebx
    7771:	50                   	push   %eax
    7772:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    7778:	50                   	push   %eax
    7779:	e8 12 b1 ff ff       	call   2890 <__assert_fail@plt>
    777e:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    7784:	50                   	push   %eax
    7785:	68 76 02 00 00       	push   $0x276
    778a:	eb bc                	jmp    7748 <alu_test_shl+0x338>
    778c:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    7792:	50                   	push   %eax
    7793:	68 4b 02 00 00       	push   $0x24b
    7798:	eb cf                	jmp    7769 <alu_test_shl+0x359>
    779a:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    77a0:	50                   	push   %eax
    77a1:	68 79 02 00 00       	push   $0x279
    77a6:	e9 3a ff ff ff       	jmp    76e5 <alu_test_shl+0x2d5>
    77ab:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    77b1:	50                   	push   %eax
    77b2:	68 77 02 00 00       	push   $0x277
    77b7:	e9 6b ff ff ff       	jmp    7727 <alu_test_shl+0x317>
    77bc:	8d 85 d8 07 ff ff    	lea    -0xf828(%ebp),%eax
    77c2:	50                   	push   %eax
    77c3:	68 78 02 00 00       	push   $0x278
    77c8:	e9 39 ff ff ff       	jmp    7706 <alu_test_shl+0x2f6>
    77cd:	8b 44 84 34          	mov    0x34(%esp,%eax,4),%eax
    77d1:	89 44 24 08          	mov    %eax,0x8(%esp)
    77d5:	e9 ba fc ff ff       	jmp    7494 <alu_test_shl+0x84>
    77da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000077e0 <alu_test_shr>:
    77e0:	55                   	push   %ebp
    77e1:	57                   	push   %edi
    77e2:	56                   	push   %esi
    77e3:	53                   	push   %ebx
    77e4:	e8 d1 19 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    77e9:	81 c5 17 38 02 00    	add    $0x23817,%ebp
    77ef:	83 ec 5c             	sub    $0x5c,%esp
    77f2:	8d 44 24 40          	lea    0x40(%esp),%eax
    77f6:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
    77fd:	00 
    77fe:	c7 44 24 44 02 00 00 	movl   $0x2,0x44(%esp)
    7805:	00 
    7806:	c7 44 24 48 03 00 00 	movl   $0x3,0x48(%esp)
    780d:	00 
    780e:	c7 44 24 4c 04 00 00 	movl   $0x4,0x4c(%esp)
    7815:	00 
    7816:	89 44 24 14          	mov    %eax,0x14(%esp)
    781a:	8d 85 60 1d 05 00    	lea    0x51d60(%ebp),%eax
    7820:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%esp)
    7827:	ff 
    7828:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
    782f:	00 
    7830:	c7 44 24 30 10 10 10 	movl   $0x10101010,0x30(%esp)
    7837:	10 
    7838:	c7 44 24 34 08 00 00 	movl   $0x8,0x34(%esp)
    783f:	00 
    7840:	c7 44 24 38 10 00 00 	movl   $0x10,0x38(%esp)
    7847:	00 
    7848:	c7 44 24 3c 20 00 00 	movl   $0x20,0x3c(%esp)
    784f:	00 
    7850:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
    7857:	00 
    7858:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    785f:	00 
    7860:	89 44 24 10          	mov    %eax,0x10(%esp)
    7864:	be ff ff ff ff       	mov    $0xffffffff,%esi
    7869:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    7870:	00 
    7871:	8d 44 24 50          	lea    0x50(%esp),%eax
    7875:	8b 7c 24 14          	mov    0x14(%esp),%edi
    7879:	b9 01 00 00 00       	mov    $0x1,%ecx
    787e:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    7882:	83 ec 04             	sub    $0x4,%esp
    7885:	89 eb                	mov    %ebp,%ebx
    7887:	ff 74 24 0c          	pushl  0xc(%esp)
    788b:	56                   	push   %esi
    788c:	51                   	push   %ecx
    788d:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
    7891:	e8 ca 40 00 00       	call   b960 <alu_shr>
    7896:	83 c4 10             	add    $0x10,%esp
    7899:	89 c3                	mov    %eax,%ebx
    789b:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    789f:	8b 44 24 04          	mov    0x4(%esp),%eax
    78a3:	83 f8 01             	cmp    $0x1,%eax
    78a6:	0f 84 94 00 00 00    	je     7940 <alu_test_shr+0x160>
    78ac:	83 f8 02             	cmp    $0x2,%eax
    78af:	89 f0                	mov    %esi,%eax
    78b1:	75 7d                	jne    7930 <alu_test_shr+0x150>
    78b3:	d3 e8                	shr    %cl,%eax
    78b5:	9c                   	pushf  
    78b6:	5a                   	pop    %edx
    78b7:	39 d8                	cmp    %ebx,%eax
    78b9:	0f 85 9d 02 00 00    	jne    7b5c <alu_test_shr+0x37c>
    78bf:	8b 44 24 10          	mov    0x10(%esp),%eax
    78c3:	89 d1                	mov    %edx,%ecx
    78c5:	83 e1 01             	and    $0x1,%ecx
    78c8:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    78cc:	89 c3                	mov    %eax,%ebx
    78ce:	83 e3 01             	and    $0x1,%ebx
    78d1:	38 cb                	cmp    %cl,%bl
    78d3:	0f 85 33 02 00 00    	jne    7b0c <alu_test_shr+0x32c>
    78d9:	89 c3                	mov    %eax,%ebx
    78db:	89 d1                	mov    %edx,%ecx
    78dd:	c0 eb 02             	shr    $0x2,%bl
    78e0:	c1 e9 02             	shr    $0x2,%ecx
    78e3:	83 e3 01             	and    $0x1,%ebx
    78e6:	83 e1 01             	and    $0x1,%ecx
    78e9:	38 cb                	cmp    %cl,%bl
    78eb:	0f 85 fa 01 00 00    	jne    7aeb <alu_test_shr+0x30b>
    78f1:	89 d1                	mov    %edx,%ecx
    78f3:	89 c3                	mov    %eax,%ebx
    78f5:	c1 e9 07             	shr    $0x7,%ecx
    78f8:	c0 eb 07             	shr    $0x7,%bl
    78fb:	83 e1 01             	and    $0x1,%ecx
    78fe:	38 cb                	cmp    %cl,%bl
    7900:	0f 85 c4 01 00 00    	jne    7aca <alu_test_shr+0x2ea>
    7906:	c0 e8 06             	shr    $0x6,%al
    7909:	c1 ea 06             	shr    $0x6,%edx
    790c:	83 e0 01             	and    $0x1,%eax
    790f:	83 e2 01             	and    $0x1,%edx
    7912:	38 d0                	cmp    %dl,%al
    7914:	0f 85 8f 01 00 00    	jne    7aa9 <alu_test_shr+0x2c9>
    791a:	83 c7 04             	add    $0x4,%edi
    791d:	3b 7c 24 1c          	cmp    0x1c(%esp),%edi
    7921:	74 2d                	je     7950 <alu_test_shr+0x170>
    7923:	8b 0f                	mov    (%edi),%ecx
    7925:	e9 58 ff ff ff       	jmp    7882 <alu_test_shr+0xa2>
    792a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7930:	d2 e8                	shr    %cl,%al
    7932:	9c                   	pushf  
    7933:	5a                   	pop    %edx
    7934:	e9 7e ff ff ff       	jmp    78b7 <alu_test_shr+0xd7>
    7939:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7940:	89 f0                	mov    %esi,%eax
    7942:	66 d3 e8             	shr    %cl,%ax
    7945:	9c                   	pushf  
    7946:	5a                   	pop    %edx
    7947:	e9 6b ff ff ff       	jmp    78b7 <alu_test_shr+0xd7>
    794c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7950:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
    7955:	8b 44 24 18          	mov    0x18(%esp),%eax
    7959:	83 f8 03             	cmp    $0x3,%eax
    795c:	0f 85 3e 01 00 00    	jne    7aa0 <alu_test_shr+0x2c0>
    7962:	83 ec 0c             	sub    $0xc,%esp
    7965:	89 eb                	mov    %ebp,%ebx
    7967:	6a 00                	push   $0x0
    7969:	e8 02 ad ff ff       	call   2670 <time@plt>
    796e:	89 04 24             	mov    %eax,(%esp)
    7971:	e8 7a ad ff ff       	call   26f0 <srand@plt>
    7976:	83 c4 10             	add    $0x10,%esp
    7979:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
    7980:	00 
    7981:	89 7c 24 18          	mov    %edi,0x18(%esp)
    7985:	8b 7c 24 14          	mov    0x14(%esp),%edi
    7989:	be 01 00 00 00       	mov    $0x1,%esi
    798e:	89 eb                	mov    %ebp,%ebx
    7990:	e8 bb ad ff ff       	call   2750 <rand@plt>
    7995:	83 ec 04             	sub    $0x4,%esp
    7998:	ff 74 24 0c          	pushl  0xc(%esp)
    799c:	50                   	push   %eax
    799d:	89 44 24 18          	mov    %eax,0x18(%esp)
    79a1:	56                   	push   %esi
    79a2:	e8 b9 3f 00 00       	call   b960 <alu_shr>
    79a7:	83 c4 10             	add    $0x10,%esp
    79aa:	89 c3                	mov    %eax,%ebx
    79ac:	8b 54 24 0c          	mov    0xc(%esp),%edx
    79b0:	8b 44 24 04          	mov    0x4(%esp),%eax
    79b4:	83 f8 01             	cmp    $0x1,%eax
    79b7:	0f 84 93 00 00 00    	je     7a50 <alu_test_shr+0x270>
    79bd:	83 f8 02             	cmp    $0x2,%eax
    79c0:	89 f1                	mov    %esi,%ecx
    79c2:	89 d0                	mov    %edx,%eax
    79c4:	75 7a                	jne    7a40 <alu_test_shr+0x260>
    79c6:	d3 e8                	shr    %cl,%eax
    79c8:	9c                   	pushf  
    79c9:	5a                   	pop    %edx
    79ca:	39 d8                	cmp    %ebx,%eax
    79cc:	0f 85 5b 01 00 00    	jne    7b2d <alu_test_shr+0x34d>
    79d2:	8b 44 24 10          	mov    0x10(%esp),%eax
    79d6:	89 d1                	mov    %edx,%ecx
    79d8:	83 e1 01             	and    $0x1,%ecx
    79db:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    79df:	89 c3                	mov    %eax,%ebx
    79e1:	83 e3 01             	and    $0x1,%ebx
    79e4:	38 cb                	cmp    %cl,%bl
    79e6:	0f 85 62 01 00 00    	jne    7b4e <alu_test_shr+0x36e>
    79ec:	89 c3                	mov    %eax,%ebx
    79ee:	89 d1                	mov    %edx,%ecx
    79f0:	c0 eb 02             	shr    $0x2,%bl
    79f3:	c1 e9 02             	shr    $0x2,%ecx
    79f6:	83 e3 01             	and    $0x1,%ebx
    79f9:	83 e1 01             	and    $0x1,%ecx
    79fc:	38 cb                	cmp    %cl,%bl
    79fe:	0f 85 77 01 00 00    	jne    7b7b <alu_test_shr+0x39b>
    7a04:	89 d1                	mov    %edx,%ecx
    7a06:	89 c3                	mov    %eax,%ebx
    7a08:	c1 e9 07             	shr    $0x7,%ecx
    7a0b:	c0 eb 07             	shr    $0x7,%bl
    7a0e:	83 e1 01             	and    $0x1,%ecx
    7a11:	38 cb                	cmp    %cl,%bl
    7a13:	0f 85 73 01 00 00    	jne    7b8c <alu_test_shr+0x3ac>
    7a19:	c0 e8 06             	shr    $0x6,%al
    7a1c:	c1 ea 06             	shr    $0x6,%edx
    7a1f:	83 e0 01             	and    $0x1,%eax
    7a22:	83 e2 01             	and    $0x1,%edx
    7a25:	38 d0                	cmp    %dl,%al
    7a27:	0f 85 3d 01 00 00    	jne    7b6a <alu_test_shr+0x38a>
    7a2d:	83 c7 04             	add    $0x4,%edi
    7a30:	39 7c 24 18          	cmp    %edi,0x18(%esp)
    7a34:	74 2a                	je     7a60 <alu_test_shr+0x280>
    7a36:	8b 37                	mov    (%edi),%esi
    7a38:	e9 51 ff ff ff       	jmp    798e <alu_test_shr+0x1ae>
    7a3d:	8d 76 00             	lea    0x0(%esi),%esi
    7a40:	d2 e8                	shr    %cl,%al
    7a42:	9c                   	pushf  
    7a43:	5a                   	pop    %edx
    7a44:	eb 84                	jmp    79ca <alu_test_shr+0x1ea>
    7a46:	8d 76 00             	lea    0x0(%esi),%esi
    7a49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    7a50:	89 d0                	mov    %edx,%eax
    7a52:	89 f1                	mov    %esi,%ecx
    7a54:	66 d3 e8             	shr    %cl,%ax
    7a57:	9c                   	pushf  
    7a58:	5a                   	pop    %edx
    7a59:	e9 6c ff ff ff       	jmp    79ca <alu_test_shr+0x1ea>
    7a5e:	66 90                	xchg   %ax,%ax
    7a60:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
    7a65:	0f 85 1a ff ff ff    	jne    7985 <alu_test_shr+0x1a5>
    7a6b:	83 44 24 04 01       	addl   $0x1,0x4(%esp)
    7a70:	8b 44 24 04          	mov    0x4(%esp),%eax
    7a74:	83 f8 03             	cmp    $0x3,%eax
    7a77:	0f 85 20 01 00 00    	jne    7b9d <alu_test_shr+0x3bd>
    7a7d:	8d 85 38 05 ff ff    	lea    -0xfac8(%ebp),%eax
    7a83:	83 ec 0c             	sub    $0xc,%esp
    7a86:	89 eb                	mov    %ebp,%ebx
    7a88:	50                   	push   %eax
    7a89:	e8 72 ad ff ff       	call   2800 <puts@plt>
    7a8e:	83 c4 6c             	add    $0x6c,%esp
    7a91:	5b                   	pop    %ebx
    7a92:	5e                   	pop    %esi
    7a93:	5f                   	pop    %edi
    7a94:	5d                   	pop    %ebp
    7a95:	c3                   	ret    
    7a96:	8d 76 00             	lea    0x0(%esi),%esi
    7a99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    7aa0:	8b 74 84 28          	mov    0x28(%esp,%eax,4),%esi
    7aa4:	e9 c8 fd ff ff       	jmp    7871 <alu_test_shr+0x91>
    7aa9:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7aaf:	50                   	push   %eax
    7ab0:	68 b5 02 00 00       	push   $0x2b5
    7ab5:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7abb:	89 eb                	mov    %ebp,%ebx
    7abd:	50                   	push   %eax
    7abe:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    7ac4:	50                   	push   %eax
    7ac5:	e8 c6 ad ff ff       	call   2890 <__assert_fail@plt>
    7aca:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7ad0:	50                   	push   %eax
    7ad1:	68 b4 02 00 00       	push   $0x2b4
    7ad6:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7adc:	89 eb                	mov    %ebp,%ebx
    7ade:	50                   	push   %eax
    7adf:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    7ae5:	50                   	push   %eax
    7ae6:	e8 a5 ad ff ff       	call   2890 <__assert_fail@plt>
    7aeb:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7af1:	50                   	push   %eax
    7af2:	68 b3 02 00 00       	push   $0x2b3
    7af7:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7afd:	89 eb                	mov    %ebp,%ebx
    7aff:	50                   	push   %eax
    7b00:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    7b06:	50                   	push   %eax
    7b07:	e8 84 ad ff ff       	call   2890 <__assert_fail@plt>
    7b0c:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7b12:	50                   	push   %eax
    7b13:	68 b2 02 00 00       	push   $0x2b2
    7b18:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7b1e:	89 eb                	mov    %ebp,%ebx
    7b20:	50                   	push   %eax
    7b21:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    7b27:	50                   	push   %eax
    7b28:	e8 63 ad ff ff       	call   2890 <__assert_fail@plt>
    7b2d:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7b33:	50                   	push   %eax
    7b34:	68 db 02 00 00       	push   $0x2db
    7b39:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7b3f:	89 eb                	mov    %ebp,%ebx
    7b41:	50                   	push   %eax
    7b42:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    7b48:	50                   	push   %eax
    7b49:	e8 42 ad ff ff       	call   2890 <__assert_fail@plt>
    7b4e:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7b54:	50                   	push   %eax
    7b55:	68 dc 02 00 00       	push   $0x2dc
    7b5a:	eb bc                	jmp    7b18 <alu_test_shr+0x338>
    7b5c:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7b62:	50                   	push   %eax
    7b63:	68 b1 02 00 00       	push   $0x2b1
    7b68:	eb cf                	jmp    7b39 <alu_test_shr+0x359>
    7b6a:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7b70:	50                   	push   %eax
    7b71:	68 df 02 00 00       	push   $0x2df
    7b76:	e9 3a ff ff ff       	jmp    7ab5 <alu_test_shr+0x2d5>
    7b7b:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7b81:	50                   	push   %eax
    7b82:	68 dd 02 00 00       	push   $0x2dd
    7b87:	e9 6b ff ff ff       	jmp    7af7 <alu_test_shr+0x317>
    7b8c:	8d 85 c8 07 ff ff    	lea    -0xf838(%ebp),%eax
    7b92:	50                   	push   %eax
    7b93:	68 de 02 00 00       	push   $0x2de
    7b98:	e9 39 ff ff ff       	jmp    7ad6 <alu_test_shr+0x2f6>
    7b9d:	8b 44 84 34          	mov    0x34(%esp,%eax,4),%eax
    7ba1:	89 44 24 08          	mov    %eax,0x8(%esp)
    7ba5:	e9 ba fc ff ff       	jmp    7864 <alu_test_shr+0x84>
    7baa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00007bb0 <alu_test_sal>:
    7bb0:	55                   	push   %ebp
    7bb1:	57                   	push   %edi
    7bb2:	56                   	push   %esi
    7bb3:	53                   	push   %ebx
    7bb4:	e8 01 16 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    7bb9:	81 c5 47 34 02 00    	add    $0x23447,%ebp
    7bbf:	83 ec 5c             	sub    $0x5c,%esp
    7bc2:	8d 44 24 40          	lea    0x40(%esp),%eax
    7bc6:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
    7bcd:	00 
    7bce:	c7 44 24 44 02 00 00 	movl   $0x2,0x44(%esp)
    7bd5:	00 
    7bd6:	c7 44 24 48 03 00 00 	movl   $0x3,0x48(%esp)
    7bdd:	00 
    7bde:	c7 44 24 4c 04 00 00 	movl   $0x4,0x4c(%esp)
    7be5:	00 
    7be6:	89 44 24 14          	mov    %eax,0x14(%esp)
    7bea:	8d 85 60 1d 05 00    	lea    0x51d60(%ebp),%eax
    7bf0:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%esp)
    7bf7:	ff 
    7bf8:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
    7bff:	00 
    7c00:	c7 44 24 30 10 10 10 	movl   $0x10101010,0x30(%esp)
    7c07:	10 
    7c08:	c7 44 24 34 08 00 00 	movl   $0x8,0x34(%esp)
    7c0f:	00 
    7c10:	c7 44 24 38 10 00 00 	movl   $0x10,0x38(%esp)
    7c17:	00 
    7c18:	c7 44 24 3c 20 00 00 	movl   $0x20,0x3c(%esp)
    7c1f:	00 
    7c20:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
    7c27:	00 
    7c28:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    7c2f:	00 
    7c30:	89 44 24 10          	mov    %eax,0x10(%esp)
    7c34:	be ff ff ff ff       	mov    $0xffffffff,%esi
    7c39:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    7c40:	00 
    7c41:	8d 44 24 50          	lea    0x50(%esp),%eax
    7c45:	8b 7c 24 14          	mov    0x14(%esp),%edi
    7c49:	b9 01 00 00 00       	mov    $0x1,%ecx
    7c4e:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    7c52:	83 ec 04             	sub    $0x4,%esp
    7c55:	89 eb                	mov    %ebp,%ebx
    7c57:	ff 74 24 0c          	pushl  0xc(%esp)
    7c5b:	56                   	push   %esi
    7c5c:	51                   	push   %ecx
    7c5d:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
    7c61:	e8 2a 41 00 00       	call   bd90 <alu_sal>
    7c66:	83 c4 10             	add    $0x10,%esp
    7c69:	89 c3                	mov    %eax,%ebx
    7c6b:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    7c6f:	8b 44 24 04          	mov    0x4(%esp),%eax
    7c73:	83 f8 01             	cmp    $0x1,%eax
    7c76:	0f 84 94 00 00 00    	je     7d10 <alu_test_sal+0x160>
    7c7c:	83 f8 02             	cmp    $0x2,%eax
    7c7f:	89 f0                	mov    %esi,%eax
    7c81:	75 7d                	jne    7d00 <alu_test_sal+0x150>
    7c83:	d3 e0                	shl    %cl,%eax
    7c85:	9c                   	pushf  
    7c86:	5a                   	pop    %edx
    7c87:	39 d8                	cmp    %ebx,%eax
    7c89:	0f 85 9d 02 00 00    	jne    7f2c <alu_test_sal+0x37c>
    7c8f:	8b 44 24 10          	mov    0x10(%esp),%eax
    7c93:	89 d1                	mov    %edx,%ecx
    7c95:	83 e1 01             	and    $0x1,%ecx
    7c98:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    7c9c:	89 c3                	mov    %eax,%ebx
    7c9e:	83 e3 01             	and    $0x1,%ebx
    7ca1:	38 cb                	cmp    %cl,%bl
    7ca3:	0f 85 33 02 00 00    	jne    7edc <alu_test_sal+0x32c>
    7ca9:	89 c3                	mov    %eax,%ebx
    7cab:	89 d1                	mov    %edx,%ecx
    7cad:	c0 eb 02             	shr    $0x2,%bl
    7cb0:	c1 e9 02             	shr    $0x2,%ecx
    7cb3:	83 e3 01             	and    $0x1,%ebx
    7cb6:	83 e1 01             	and    $0x1,%ecx
    7cb9:	38 cb                	cmp    %cl,%bl
    7cbb:	0f 85 fa 01 00 00    	jne    7ebb <alu_test_sal+0x30b>
    7cc1:	89 d1                	mov    %edx,%ecx
    7cc3:	89 c3                	mov    %eax,%ebx
    7cc5:	c1 e9 07             	shr    $0x7,%ecx
    7cc8:	c0 eb 07             	shr    $0x7,%bl
    7ccb:	83 e1 01             	and    $0x1,%ecx
    7cce:	38 cb                	cmp    %cl,%bl
    7cd0:	0f 85 c4 01 00 00    	jne    7e9a <alu_test_sal+0x2ea>
    7cd6:	c0 e8 06             	shr    $0x6,%al
    7cd9:	c1 ea 06             	shr    $0x6,%edx
    7cdc:	83 e0 01             	and    $0x1,%eax
    7cdf:	83 e2 01             	and    $0x1,%edx
    7ce2:	38 d0                	cmp    %dl,%al
    7ce4:	0f 85 8f 01 00 00    	jne    7e79 <alu_test_sal+0x2c9>
    7cea:	83 c7 04             	add    $0x4,%edi
    7ced:	3b 7c 24 1c          	cmp    0x1c(%esp),%edi
    7cf1:	74 2d                	je     7d20 <alu_test_sal+0x170>
    7cf3:	8b 0f                	mov    (%edi),%ecx
    7cf5:	e9 58 ff ff ff       	jmp    7c52 <alu_test_sal+0xa2>
    7cfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7d00:	d2 e0                	shl    %cl,%al
    7d02:	9c                   	pushf  
    7d03:	5a                   	pop    %edx
    7d04:	e9 7e ff ff ff       	jmp    7c87 <alu_test_sal+0xd7>
    7d09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7d10:	89 f0                	mov    %esi,%eax
    7d12:	66 d3 e0             	shl    %cl,%ax
    7d15:	9c                   	pushf  
    7d16:	5a                   	pop    %edx
    7d17:	e9 6b ff ff ff       	jmp    7c87 <alu_test_sal+0xd7>
    7d1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7d20:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
    7d25:	8b 44 24 18          	mov    0x18(%esp),%eax
    7d29:	83 f8 03             	cmp    $0x3,%eax
    7d2c:	0f 85 3e 01 00 00    	jne    7e70 <alu_test_sal+0x2c0>
    7d32:	83 ec 0c             	sub    $0xc,%esp
    7d35:	89 eb                	mov    %ebp,%ebx
    7d37:	6a 00                	push   $0x0
    7d39:	e8 32 a9 ff ff       	call   2670 <time@plt>
    7d3e:	89 04 24             	mov    %eax,(%esp)
    7d41:	e8 aa a9 ff ff       	call   26f0 <srand@plt>
    7d46:	83 c4 10             	add    $0x10,%esp
    7d49:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
    7d50:	00 
    7d51:	89 7c 24 18          	mov    %edi,0x18(%esp)
    7d55:	8b 7c 24 14          	mov    0x14(%esp),%edi
    7d59:	be 01 00 00 00       	mov    $0x1,%esi
    7d5e:	89 eb                	mov    %ebp,%ebx
    7d60:	e8 eb a9 ff ff       	call   2750 <rand@plt>
    7d65:	83 ec 04             	sub    $0x4,%esp
    7d68:	ff 74 24 0c          	pushl  0xc(%esp)
    7d6c:	50                   	push   %eax
    7d6d:	89 44 24 18          	mov    %eax,0x18(%esp)
    7d71:	56                   	push   %esi
    7d72:	e8 19 40 00 00       	call   bd90 <alu_sal>
    7d77:	83 c4 10             	add    $0x10,%esp
    7d7a:	89 c3                	mov    %eax,%ebx
    7d7c:	8b 54 24 0c          	mov    0xc(%esp),%edx
    7d80:	8b 44 24 04          	mov    0x4(%esp),%eax
    7d84:	83 f8 01             	cmp    $0x1,%eax
    7d87:	0f 84 93 00 00 00    	je     7e20 <alu_test_sal+0x270>
    7d8d:	83 f8 02             	cmp    $0x2,%eax
    7d90:	89 f1                	mov    %esi,%ecx
    7d92:	89 d0                	mov    %edx,%eax
    7d94:	75 7a                	jne    7e10 <alu_test_sal+0x260>
    7d96:	d3 e0                	shl    %cl,%eax
    7d98:	9c                   	pushf  
    7d99:	5a                   	pop    %edx
    7d9a:	39 d8                	cmp    %ebx,%eax
    7d9c:	0f 85 5b 01 00 00    	jne    7efd <alu_test_sal+0x34d>
    7da2:	8b 44 24 10          	mov    0x10(%esp),%eax
    7da6:	89 d1                	mov    %edx,%ecx
    7da8:	83 e1 01             	and    $0x1,%ecx
    7dab:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    7daf:	89 c3                	mov    %eax,%ebx
    7db1:	83 e3 01             	and    $0x1,%ebx
    7db4:	38 cb                	cmp    %cl,%bl
    7db6:	0f 85 62 01 00 00    	jne    7f1e <alu_test_sal+0x36e>
    7dbc:	89 c3                	mov    %eax,%ebx
    7dbe:	89 d1                	mov    %edx,%ecx
    7dc0:	c0 eb 02             	shr    $0x2,%bl
    7dc3:	c1 e9 02             	shr    $0x2,%ecx
    7dc6:	83 e3 01             	and    $0x1,%ebx
    7dc9:	83 e1 01             	and    $0x1,%ecx
    7dcc:	38 cb                	cmp    %cl,%bl
    7dce:	0f 85 77 01 00 00    	jne    7f4b <alu_test_sal+0x39b>
    7dd4:	89 d1                	mov    %edx,%ecx
    7dd6:	89 c3                	mov    %eax,%ebx
    7dd8:	c1 e9 07             	shr    $0x7,%ecx
    7ddb:	c0 eb 07             	shr    $0x7,%bl
    7dde:	83 e1 01             	and    $0x1,%ecx
    7de1:	38 cb                	cmp    %cl,%bl
    7de3:	0f 85 73 01 00 00    	jne    7f5c <alu_test_sal+0x3ac>
    7de9:	c0 e8 06             	shr    $0x6,%al
    7dec:	c1 ea 06             	shr    $0x6,%edx
    7def:	83 e0 01             	and    $0x1,%eax
    7df2:	83 e2 01             	and    $0x1,%edx
    7df5:	38 d0                	cmp    %dl,%al
    7df7:	0f 85 3d 01 00 00    	jne    7f3a <alu_test_sal+0x38a>
    7dfd:	83 c7 04             	add    $0x4,%edi
    7e00:	39 7c 24 18          	cmp    %edi,0x18(%esp)
    7e04:	74 2a                	je     7e30 <alu_test_sal+0x280>
    7e06:	8b 37                	mov    (%edi),%esi
    7e08:	e9 51 ff ff ff       	jmp    7d5e <alu_test_sal+0x1ae>
    7e0d:	8d 76 00             	lea    0x0(%esi),%esi
    7e10:	d2 e0                	shl    %cl,%al
    7e12:	9c                   	pushf  
    7e13:	5a                   	pop    %edx
    7e14:	eb 84                	jmp    7d9a <alu_test_sal+0x1ea>
    7e16:	8d 76 00             	lea    0x0(%esi),%esi
    7e19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    7e20:	89 d0                	mov    %edx,%eax
    7e22:	89 f1                	mov    %esi,%ecx
    7e24:	66 d3 e0             	shl    %cl,%ax
    7e27:	9c                   	pushf  
    7e28:	5a                   	pop    %edx
    7e29:	e9 6c ff ff ff       	jmp    7d9a <alu_test_sal+0x1ea>
    7e2e:	66 90                	xchg   %ax,%ax
    7e30:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
    7e35:	0f 85 1a ff ff ff    	jne    7d55 <alu_test_sal+0x1a5>
    7e3b:	83 44 24 04 01       	addl   $0x1,0x4(%esp)
    7e40:	8b 44 24 04          	mov    0x4(%esp),%eax
    7e44:	83 f8 03             	cmp    $0x3,%eax
    7e47:	0f 85 20 01 00 00    	jne    7f6d <alu_test_sal+0x3bd>
    7e4d:	8d 85 58 05 ff ff    	lea    -0xfaa8(%ebp),%eax
    7e53:	83 ec 0c             	sub    $0xc,%esp
    7e56:	89 eb                	mov    %ebp,%ebx
    7e58:	50                   	push   %eax
    7e59:	e8 a2 a9 ff ff       	call   2800 <puts@plt>
    7e5e:	83 c4 6c             	add    $0x6c,%esp
    7e61:	5b                   	pop    %ebx
    7e62:	5e                   	pop    %esi
    7e63:	5f                   	pop    %edi
    7e64:	5d                   	pop    %ebp
    7e65:	c3                   	ret    
    7e66:	8d 76 00             	lea    0x0(%esi),%esi
    7e69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    7e70:	8b 74 84 28          	mov    0x28(%esp,%eax,4),%esi
    7e74:	e9 c8 fd ff ff       	jmp    7c41 <alu_test_sal+0x91>
    7e79:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7e7f:	50                   	push   %eax
    7e80:	68 1a 03 00 00       	push   $0x31a
    7e85:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7e8b:	89 eb                	mov    %ebp,%ebx
    7e8d:	50                   	push   %eax
    7e8e:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    7e94:	50                   	push   %eax
    7e95:	e8 f6 a9 ff ff       	call   2890 <__assert_fail@plt>
    7e9a:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7ea0:	50                   	push   %eax
    7ea1:	68 19 03 00 00       	push   $0x319
    7ea6:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7eac:	89 eb                	mov    %ebp,%ebx
    7eae:	50                   	push   %eax
    7eaf:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    7eb5:	50                   	push   %eax
    7eb6:	e8 d5 a9 ff ff       	call   2890 <__assert_fail@plt>
    7ebb:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7ec1:	50                   	push   %eax
    7ec2:	68 18 03 00 00       	push   $0x318
    7ec7:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7ecd:	89 eb                	mov    %ebp,%ebx
    7ecf:	50                   	push   %eax
    7ed0:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    7ed6:	50                   	push   %eax
    7ed7:	e8 b4 a9 ff ff       	call   2890 <__assert_fail@plt>
    7edc:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7ee2:	50                   	push   %eax
    7ee3:	68 17 03 00 00       	push   $0x317
    7ee8:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7eee:	89 eb                	mov    %ebp,%ebx
    7ef0:	50                   	push   %eax
    7ef1:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    7ef7:	50                   	push   %eax
    7ef8:	e8 93 a9 ff ff       	call   2890 <__assert_fail@plt>
    7efd:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7f03:	50                   	push   %eax
    7f04:	68 40 03 00 00       	push   $0x340
    7f09:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    7f0f:	89 eb                	mov    %ebp,%ebx
    7f11:	50                   	push   %eax
    7f12:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    7f18:	50                   	push   %eax
    7f19:	e8 72 a9 ff ff       	call   2890 <__assert_fail@plt>
    7f1e:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7f24:	50                   	push   %eax
    7f25:	68 41 03 00 00       	push   $0x341
    7f2a:	eb bc                	jmp    7ee8 <alu_test_sal+0x338>
    7f2c:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7f32:	50                   	push   %eax
    7f33:	68 16 03 00 00       	push   $0x316
    7f38:	eb cf                	jmp    7f09 <alu_test_sal+0x359>
    7f3a:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7f40:	50                   	push   %eax
    7f41:	68 44 03 00 00       	push   $0x344
    7f46:	e9 3a ff ff ff       	jmp    7e85 <alu_test_sal+0x2d5>
    7f4b:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7f51:	50                   	push   %eax
    7f52:	68 42 03 00 00       	push   $0x342
    7f57:	e9 6b ff ff ff       	jmp    7ec7 <alu_test_sal+0x317>
    7f5c:	8d 85 b8 07 ff ff    	lea    -0xf848(%ebp),%eax
    7f62:	50                   	push   %eax
    7f63:	68 43 03 00 00       	push   $0x343
    7f68:	e9 39 ff ff ff       	jmp    7ea6 <alu_test_sal+0x2f6>
    7f6d:	8b 44 84 34          	mov    0x34(%esp,%eax,4),%eax
    7f71:	89 44 24 08          	mov    %eax,0x8(%esp)
    7f75:	e9 ba fc ff ff       	jmp    7c34 <alu_test_sal+0x84>
    7f7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00007f80 <alu_test_sar>:
    7f80:	55                   	push   %ebp
    7f81:	57                   	push   %edi
    7f82:	56                   	push   %esi
    7f83:	53                   	push   %ebx
    7f84:	e8 31 12 00 00       	call   91ba <__x86.get_pc_thunk.bp>
    7f89:	81 c5 77 30 02 00    	add    $0x23077,%ebp
    7f8f:	83 ec 5c             	sub    $0x5c,%esp
    7f92:	8d 44 24 40          	lea    0x40(%esp),%eax
    7f96:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
    7f9d:	00 
    7f9e:	c7 44 24 44 02 00 00 	movl   $0x2,0x44(%esp)
    7fa5:	00 
    7fa6:	c7 44 24 48 03 00 00 	movl   $0x3,0x48(%esp)
    7fad:	00 
    7fae:	c7 44 24 4c 04 00 00 	movl   $0x4,0x4c(%esp)
    7fb5:	00 
    7fb6:	89 44 24 14          	mov    %eax,0x14(%esp)
    7fba:	8d 85 60 1d 05 00    	lea    0x51d60(%ebp),%eax
    7fc0:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%esp)
    7fc7:	ff 
    7fc8:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
    7fcf:	00 
    7fd0:	c7 44 24 30 10 10 10 	movl   $0x10101010,0x30(%esp)
    7fd7:	10 
    7fd8:	c7 44 24 34 08 00 00 	movl   $0x8,0x34(%esp)
    7fdf:	00 
    7fe0:	c7 44 24 38 10 00 00 	movl   $0x10,0x38(%esp)
    7fe7:	00 
    7fe8:	c7 44 24 3c 20 00 00 	movl   $0x20,0x3c(%esp)
    7fef:	00 
    7ff0:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
    7ff7:	00 
    7ff8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    7fff:	00 
    8000:	89 44 24 10          	mov    %eax,0x10(%esp)
    8004:	be ff ff ff ff       	mov    $0xffffffff,%esi
    8009:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    8010:	00 
    8011:	8d 44 24 50          	lea    0x50(%esp),%eax
    8015:	8b 7c 24 14          	mov    0x14(%esp),%edi
    8019:	b9 01 00 00 00       	mov    $0x1,%ecx
    801e:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8022:	83 ec 04             	sub    $0x4,%esp
    8025:	89 eb                	mov    %ebp,%ebx
    8027:	ff 74 24 0c          	pushl  0xc(%esp)
    802b:	56                   	push   %esi
    802c:	51                   	push   %ecx
    802d:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
    8031:	e8 3a 3b 00 00       	call   bb70 <alu_sar>
    8036:	83 c4 10             	add    $0x10,%esp
    8039:	89 c3                	mov    %eax,%ebx
    803b:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    803f:	8b 44 24 04          	mov    0x4(%esp),%eax
    8043:	83 f8 01             	cmp    $0x1,%eax
    8046:	0f 84 94 00 00 00    	je     80e0 <alu_test_sar+0x160>
    804c:	83 f8 02             	cmp    $0x2,%eax
    804f:	89 f0                	mov    %esi,%eax
    8051:	75 7d                	jne    80d0 <alu_test_sar+0x150>
    8053:	d3 f8                	sar    %cl,%eax
    8055:	9c                   	pushf  
    8056:	5a                   	pop    %edx
    8057:	39 d8                	cmp    %ebx,%eax
    8059:	0f 85 9d 02 00 00    	jne    82fc <alu_test_sar+0x37c>
    805f:	8b 44 24 10          	mov    0x10(%esp),%eax
    8063:	89 d1                	mov    %edx,%ecx
    8065:	83 e1 01             	and    $0x1,%ecx
    8068:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    806c:	89 c3                	mov    %eax,%ebx
    806e:	83 e3 01             	and    $0x1,%ebx
    8071:	38 cb                	cmp    %cl,%bl
    8073:	0f 85 33 02 00 00    	jne    82ac <alu_test_sar+0x32c>
    8079:	89 c3                	mov    %eax,%ebx
    807b:	89 d1                	mov    %edx,%ecx
    807d:	c0 eb 02             	shr    $0x2,%bl
    8080:	c1 e9 02             	shr    $0x2,%ecx
    8083:	83 e3 01             	and    $0x1,%ebx
    8086:	83 e1 01             	and    $0x1,%ecx
    8089:	38 cb                	cmp    %cl,%bl
    808b:	0f 85 fa 01 00 00    	jne    828b <alu_test_sar+0x30b>
    8091:	89 d1                	mov    %edx,%ecx
    8093:	89 c3                	mov    %eax,%ebx
    8095:	c1 e9 07             	shr    $0x7,%ecx
    8098:	c0 eb 07             	shr    $0x7,%bl
    809b:	83 e1 01             	and    $0x1,%ecx
    809e:	38 cb                	cmp    %cl,%bl
    80a0:	0f 85 c4 01 00 00    	jne    826a <alu_test_sar+0x2ea>
    80a6:	c0 e8 06             	shr    $0x6,%al
    80a9:	c1 ea 06             	shr    $0x6,%edx
    80ac:	83 e0 01             	and    $0x1,%eax
    80af:	83 e2 01             	and    $0x1,%edx
    80b2:	38 d0                	cmp    %dl,%al
    80b4:	0f 85 8f 01 00 00    	jne    8249 <alu_test_sar+0x2c9>
    80ba:	83 c7 04             	add    $0x4,%edi
    80bd:	3b 7c 24 1c          	cmp    0x1c(%esp),%edi
    80c1:	74 2d                	je     80f0 <alu_test_sar+0x170>
    80c3:	8b 0f                	mov    (%edi),%ecx
    80c5:	e9 58 ff ff ff       	jmp    8022 <alu_test_sar+0xa2>
    80ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    80d0:	d2 f8                	sar    %cl,%al
    80d2:	9c                   	pushf  
    80d3:	5a                   	pop    %edx
    80d4:	e9 7e ff ff ff       	jmp    8057 <alu_test_sar+0xd7>
    80d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    80e0:	89 f0                	mov    %esi,%eax
    80e2:	66 d3 f8             	sar    %cl,%ax
    80e5:	9c                   	pushf  
    80e6:	5a                   	pop    %edx
    80e7:	e9 6b ff ff ff       	jmp    8057 <alu_test_sar+0xd7>
    80ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    80f0:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
    80f5:	8b 44 24 18          	mov    0x18(%esp),%eax
    80f9:	83 f8 03             	cmp    $0x3,%eax
    80fc:	0f 85 3e 01 00 00    	jne    8240 <alu_test_sar+0x2c0>
    8102:	83 ec 0c             	sub    $0xc,%esp
    8105:	89 eb                	mov    %ebp,%ebx
    8107:	6a 00                	push   $0x0
    8109:	e8 62 a5 ff ff       	call   2670 <time@plt>
    810e:	89 04 24             	mov    %eax,(%esp)
    8111:	e8 da a5 ff ff       	call   26f0 <srand@plt>
    8116:	83 c4 10             	add    $0x10,%esp
    8119:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
    8120:	00 
    8121:	89 7c 24 18          	mov    %edi,0x18(%esp)
    8125:	8b 7c 24 14          	mov    0x14(%esp),%edi
    8129:	be 01 00 00 00       	mov    $0x1,%esi
    812e:	89 eb                	mov    %ebp,%ebx
    8130:	e8 1b a6 ff ff       	call   2750 <rand@plt>
    8135:	83 ec 04             	sub    $0x4,%esp
    8138:	ff 74 24 0c          	pushl  0xc(%esp)
    813c:	50                   	push   %eax
    813d:	89 44 24 18          	mov    %eax,0x18(%esp)
    8141:	56                   	push   %esi
    8142:	e8 29 3a 00 00       	call   bb70 <alu_sar>
    8147:	83 c4 10             	add    $0x10,%esp
    814a:	89 c3                	mov    %eax,%ebx
    814c:	8b 54 24 0c          	mov    0xc(%esp),%edx
    8150:	8b 44 24 04          	mov    0x4(%esp),%eax
    8154:	83 f8 01             	cmp    $0x1,%eax
    8157:	0f 84 93 00 00 00    	je     81f0 <alu_test_sar+0x270>
    815d:	83 f8 02             	cmp    $0x2,%eax
    8160:	89 f1                	mov    %esi,%ecx
    8162:	89 d0                	mov    %edx,%eax
    8164:	75 7a                	jne    81e0 <alu_test_sar+0x260>
    8166:	d3 f8                	sar    %cl,%eax
    8168:	9c                   	pushf  
    8169:	5a                   	pop    %edx
    816a:	39 d8                	cmp    %ebx,%eax
    816c:	0f 85 5b 01 00 00    	jne    82cd <alu_test_sar+0x34d>
    8172:	8b 44 24 10          	mov    0x10(%esp),%eax
    8176:	89 d1                	mov    %edx,%ecx
    8178:	83 e1 01             	and    $0x1,%ecx
    817b:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    817f:	89 c3                	mov    %eax,%ebx
    8181:	83 e3 01             	and    $0x1,%ebx
    8184:	38 cb                	cmp    %cl,%bl
    8186:	0f 85 62 01 00 00    	jne    82ee <alu_test_sar+0x36e>
    818c:	89 c3                	mov    %eax,%ebx
    818e:	89 d1                	mov    %edx,%ecx
    8190:	c0 eb 02             	shr    $0x2,%bl
    8193:	c1 e9 02             	shr    $0x2,%ecx
    8196:	83 e3 01             	and    $0x1,%ebx
    8199:	83 e1 01             	and    $0x1,%ecx
    819c:	38 cb                	cmp    %cl,%bl
    819e:	0f 85 77 01 00 00    	jne    831b <alu_test_sar+0x39b>
    81a4:	89 d1                	mov    %edx,%ecx
    81a6:	89 c3                	mov    %eax,%ebx
    81a8:	c1 e9 07             	shr    $0x7,%ecx
    81ab:	c0 eb 07             	shr    $0x7,%bl
    81ae:	83 e1 01             	and    $0x1,%ecx
    81b1:	38 cb                	cmp    %cl,%bl
    81b3:	0f 85 73 01 00 00    	jne    832c <alu_test_sar+0x3ac>
    81b9:	c0 e8 06             	shr    $0x6,%al
    81bc:	c1 ea 06             	shr    $0x6,%edx
    81bf:	83 e0 01             	and    $0x1,%eax
    81c2:	83 e2 01             	and    $0x1,%edx
    81c5:	38 d0                	cmp    %dl,%al
    81c7:	0f 85 3d 01 00 00    	jne    830a <alu_test_sar+0x38a>
    81cd:	83 c7 04             	add    $0x4,%edi
    81d0:	39 7c 24 18          	cmp    %edi,0x18(%esp)
    81d4:	74 2a                	je     8200 <alu_test_sar+0x280>
    81d6:	8b 37                	mov    (%edi),%esi
    81d8:	e9 51 ff ff ff       	jmp    812e <alu_test_sar+0x1ae>
    81dd:	8d 76 00             	lea    0x0(%esi),%esi
    81e0:	d2 f8                	sar    %cl,%al
    81e2:	9c                   	pushf  
    81e3:	5a                   	pop    %edx
    81e4:	eb 84                	jmp    816a <alu_test_sar+0x1ea>
    81e6:	8d 76 00             	lea    0x0(%esi),%esi
    81e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    81f0:	89 d0                	mov    %edx,%eax
    81f2:	89 f1                	mov    %esi,%ecx
    81f4:	66 d3 f8             	sar    %cl,%ax
    81f7:	9c                   	pushf  
    81f8:	5a                   	pop    %edx
    81f9:	e9 6c ff ff ff       	jmp    816a <alu_test_sar+0x1ea>
    81fe:	66 90                	xchg   %ax,%ax
    8200:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
    8205:	0f 85 1a ff ff ff    	jne    8125 <alu_test_sar+0x1a5>
    820b:	83 44 24 04 01       	addl   $0x1,0x4(%esp)
    8210:	8b 44 24 04          	mov    0x4(%esp),%eax
    8214:	83 f8 03             	cmp    $0x3,%eax
    8217:	0f 85 20 01 00 00    	jne    833d <alu_test_sar+0x3bd>
    821d:	8d 85 78 05 ff ff    	lea    -0xfa88(%ebp),%eax
    8223:	83 ec 0c             	sub    $0xc,%esp
    8226:	89 eb                	mov    %ebp,%ebx
    8228:	50                   	push   %eax
    8229:	e8 d2 a5 ff ff       	call   2800 <puts@plt>
    822e:	83 c4 6c             	add    $0x6c,%esp
    8231:	5b                   	pop    %ebx
    8232:	5e                   	pop    %esi
    8233:	5f                   	pop    %edi
    8234:	5d                   	pop    %ebp
    8235:	c3                   	ret    
    8236:	8d 76 00             	lea    0x0(%esi),%esi
    8239:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    8240:	8b 74 84 28          	mov    0x28(%esp,%eax,4),%esi
    8244:	e9 c8 fd ff ff       	jmp    8011 <alu_test_sar+0x91>
    8249:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    824f:	50                   	push   %eax
    8250:	68 80 03 00 00       	push   $0x380
    8255:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    825b:	89 eb                	mov    %ebp,%ebx
    825d:	50                   	push   %eax
    825e:	8d 85 f8 03 ff ff    	lea    -0xfc08(%ebp),%eax
    8264:	50                   	push   %eax
    8265:	e8 26 a6 ff ff       	call   2890 <__assert_fail@plt>
    826a:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    8270:	50                   	push   %eax
    8271:	68 7f 03 00 00       	push   $0x37f
    8276:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    827c:	89 eb                	mov    %ebp,%ebx
    827e:	50                   	push   %eax
    827f:	8d 85 d8 03 ff ff    	lea    -0xfc28(%ebp),%eax
    8285:	50                   	push   %eax
    8286:	e8 05 a6 ff ff       	call   2890 <__assert_fail@plt>
    828b:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    8291:	50                   	push   %eax
    8292:	68 7e 03 00 00       	push   $0x37e
    8297:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    829d:	89 eb                	mov    %ebp,%ebx
    829f:	50                   	push   %eax
    82a0:	8d 85 b8 03 ff ff    	lea    -0xfc48(%ebp),%eax
    82a6:	50                   	push   %eax
    82a7:	e8 e4 a5 ff ff       	call   2890 <__assert_fail@plt>
    82ac:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    82b2:	50                   	push   %eax
    82b3:	68 7d 03 00 00       	push   $0x37d
    82b8:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    82be:	89 eb                	mov    %ebp,%ebx
    82c0:	50                   	push   %eax
    82c1:	8d 85 98 03 ff ff    	lea    -0xfc68(%ebp),%eax
    82c7:	50                   	push   %eax
    82c8:	e8 c3 a5 ff ff       	call   2890 <__assert_fail@plt>
    82cd:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    82d3:	50                   	push   %eax
    82d4:	68 a6 03 00 00       	push   $0x3a6
    82d9:	8d 85 36 03 ff ff    	lea    -0xfcca(%ebp),%eax
    82df:	89 eb                	mov    %ebp,%ebx
    82e1:	50                   	push   %eax
    82e2:	8d 85 4e 03 ff ff    	lea    -0xfcb2(%ebp),%eax
    82e8:	50                   	push   %eax
    82e9:	e8 a2 a5 ff ff       	call   2890 <__assert_fail@plt>
    82ee:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    82f4:	50                   	push   %eax
    82f5:	68 a7 03 00 00       	push   $0x3a7
    82fa:	eb bc                	jmp    82b8 <alu_test_sar+0x338>
    82fc:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    8302:	50                   	push   %eax
    8303:	68 7c 03 00 00       	push   $0x37c
    8308:	eb cf                	jmp    82d9 <alu_test_sar+0x359>
    830a:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    8310:	50                   	push   %eax
    8311:	68 aa 03 00 00       	push   $0x3aa
    8316:	e9 3a ff ff ff       	jmp    8255 <alu_test_sar+0x2d5>
    831b:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    8321:	50                   	push   %eax
    8322:	68 a8 03 00 00       	push   $0x3a8
    8327:	e9 6b ff ff ff       	jmp    8297 <alu_test_sar+0x317>
    832c:	8d 85 a8 07 ff ff    	lea    -0xf858(%ebp),%eax
    8332:	50                   	push   %eax
    8333:	68 a9 03 00 00       	push   $0x3a9
    8338:	e9 39 ff ff ff       	jmp    8276 <alu_test_sar+0x2f6>
    833d:	8b 44 84 34          	mov    0x34(%esp,%eax,4),%eax
    8341:	89 44 24 08          	mov    %eax,0x8(%esp)
    8345:	e9 ba fc ff ff       	jmp    8004 <alu_test_sar+0x84>
    834a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008350 <alu_test_imul>:
    8350:	55                   	push   %ebp
    8351:	57                   	push   %edi
    8352:	56                   	push   %esi
    8353:	53                   	push   %ebx
    8354:	e8 67 a9 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    8359:	81 c3 a7 2c 02 00    	add    $0x22ca7,%ebx
    835f:	83 ec 5c             	sub    $0x5c,%esp
    8362:	8d 44 24 24          	lea    0x24(%esp),%eax
    8366:	8d 7c 24 50          	lea    0x50(%esp),%edi
    836a:	c7 44 24 20 fc ff ff 	movl   $0xfffffffc,0x20(%esp)
    8371:	ff 
    8372:	c7 44 24 24 fd ff ff 	movl   $0xfffffffd,0x24(%esp)
    8379:	ff 
    837a:	c7 44 24 28 fe ff ff 	movl   $0xfffffffe,0x28(%esp)
    8381:	ff 
    8382:	89 44 24 18          	mov    %eax,0x18(%esp)
    8386:	89 44 24 0c          	mov    %eax,0xc(%esp)
    838a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    838f:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
    8396:	ff 
    8397:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
    839e:	00 
    839f:	c7 44 24 34 01 00 00 	movl   $0x1,0x34(%esp)
    83a6:	00 
    83a7:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
    83ae:	00 
    83af:	c7 44 24 3c 03 00 00 	movl   $0x3,0x3c(%esp)
    83b6:	00 
    83b7:	c7 44 24 40 04 00 00 	movl   $0x4,0x40(%esp)
    83be:	00 
    83bf:	c7 44 24 44 ff ff ff 	movl   $0xfffffff,0x44(%esp)
    83c6:	0f 
    83c7:	c7 44 24 48 ff ff ff 	movl   $0xefffffff,0x48(%esp)
    83ce:	ef 
    83cf:	c7 44 24 4c ff ff ff 	movl   $0xffffffff,0x4c(%esp)
    83d6:	ff 
    83d7:	89 7c 24 10          	mov    %edi,0x10(%esp)
    83db:	90                   	nop
    83dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    83e0:	0f be f8             	movsbl %al,%edi
    83e3:	0f b6 c0             	movzbl %al,%eax
    83e6:	8b 74 24 18          	mov    0x18(%esp),%esi
    83ea:	89 44 24 14          	mov    %eax,0x14(%esp)
    83ee:	bd fc ff ff ff       	mov    $0xfffffffc,%ebp
    83f3:	eb 08                	jmp    83fd <alu_test_imul+0xad>
    83f5:	8d 76 00             	lea    0x0(%esi),%esi
    83f8:	8b 2e                	mov    (%esi),%ebp
    83fa:	83 c6 04             	add    $0x4,%esi
    83fd:	89 e8                	mov    %ebp,%eax
    83ff:	83 ec 04             	sub    $0x4,%esp
    8402:	0f be c0             	movsbl %al,%eax
    8405:	6a 08                	push   $0x8
    8407:	57                   	push   %edi
    8408:	50                   	push   %eax
    8409:	e8 f2 30 00 00       	call   b500 <alu_imul>
    840e:	89 c2                	mov    %eax,%edx
    8410:	89 e8                	mov    %ebp,%eax
    8412:	0f b6 c8             	movzbl %al,%ecx
    8415:	8b 44 24 24          	mov    0x24(%esp),%eax
    8419:	83 c4 10             	add    $0x10,%esp
    841c:	f6 e9                	imul   %cl
    841e:	9c                   	pushf  
    841f:	59                   	pop    %ecx
    8420:	0f bf c8             	movswl %ax,%ecx
    8423:	39 d1                	cmp    %edx,%ecx
    8425:	0f 85 24 02 00 00    	jne    864f <alu_test_imul+0x2ff>
    842b:	3b 74 24 10          	cmp    0x10(%esp),%esi
    842f:	75 c7                	jne    83f8 <alu_test_imul+0xa8>
    8431:	8b 44 24 0c          	mov    0xc(%esp),%eax
    8435:	39 44 24 10          	cmp    %eax,0x10(%esp)
    8439:	74 0d                	je     8448 <alu_test_imul+0xf8>
    843b:	89 c7                	mov    %eax,%edi
    843d:	8b 00                	mov    (%eax),%eax
    843f:	83 c7 04             	add    $0x4,%edi
    8442:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    8446:	eb 98                	jmp    83e0 <alu_test_imul+0x90>
    8448:	83 ec 0c             	sub    $0xc,%esp
    844b:	bf 40 42 0f 00       	mov    $0xf4240,%edi
    8450:	6a 00                	push   $0x0
    8452:	e8 19 a2 ff ff       	call   2670 <time@plt>
    8457:	89 04 24             	mov    %eax,(%esp)
    845a:	e8 91 a2 ff ff       	call   26f0 <srand@plt>
    845f:	83 c4 10             	add    $0x10,%esp
    8462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8468:	e8 e3 a2 ff ff       	call   2750 <rand@plt>
    846d:	89 c6                	mov    %eax,%esi
    846f:	e8 dc a2 ff ff       	call   2750 <rand@plt>
    8474:	89 c5                	mov    %eax,%ebp
    8476:	89 f0                	mov    %esi,%eax
    8478:	83 ec 04             	sub    $0x4,%esp
    847b:	0f be c0             	movsbl %al,%eax
    847e:	6a 08                	push   $0x8
    8480:	50                   	push   %eax
    8481:	89 e8                	mov    %ebp,%eax
    8483:	0f be c0             	movsbl %al,%eax
    8486:	50                   	push   %eax
    8487:	e8 74 30 00 00       	call   b500 <alu_imul>
    848c:	89 e9                	mov    %ebp,%ecx
    848e:	89 c2                	mov    %eax,%edx
    8490:	89 f0                	mov    %esi,%eax
    8492:	0f b6 c0             	movzbl %al,%eax
    8495:	0f b6 c9             	movzbl %cl,%ecx
    8498:	83 c4 10             	add    $0x10,%esp
    849b:	f6 e9                	imul   %cl
    849d:	9c                   	pushf  
    849e:	59                   	pop    %ecx
    849f:	98                   	cwtl   
    84a0:	39 d0                	cmp    %edx,%eax
    84a2:	0f 85 12 02 00 00    	jne    86ba <alu_test_imul+0x36a>
    84a8:	83 ef 01             	sub    $0x1,%edi
    84ab:	75 bb                	jne    8468 <alu_test_imul+0x118>
    84ad:	8b 44 24 18          	mov    0x18(%esp),%eax
    84b1:	bf fc ff ff ff       	mov    $0xfffffffc,%edi
    84b6:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    84ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    84c0:	0f bf c7             	movswl %di,%eax
    84c3:	8b 74 24 18          	mov    0x18(%esp),%esi
    84c7:	bd fc ff ff ff       	mov    $0xfffffffc,%ebp
    84cc:	89 44 24 10          	mov    %eax,0x10(%esp)
    84d0:	0f b7 c7             	movzwl %di,%eax
    84d3:	89 44 24 14          	mov    %eax,0x14(%esp)
    84d7:	eb 0c                	jmp    84e5 <alu_test_imul+0x195>
    84d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    84e0:	8b 2e                	mov    (%esi),%ebp
    84e2:	83 c6 04             	add    $0x4,%esi
    84e5:	83 ec 04             	sub    $0x4,%esp
    84e8:	0f bf c5             	movswl %bp,%eax
    84eb:	6a 10                	push   $0x10
    84ed:	ff 74 24 18          	pushl  0x18(%esp)
    84f1:	50                   	push   %eax
    84f2:	e8 09 30 00 00       	call   b500 <alu_imul>
    84f7:	0f b7 cd             	movzwl %bp,%ecx
    84fa:	89 c7                	mov    %eax,%edi
    84fc:	8b 44 24 24          	mov    0x24(%esp),%eax
    8500:	66 f7 e9             	imul   %cx
    8503:	9c                   	pushf  
    8504:	59                   	pop    %ecx
    8505:	c1 e2 10             	shl    $0x10,%edx
    8508:	0f b7 c0             	movzwl %ax,%eax
    850b:	83 c4 10             	add    $0x10,%esp
    850e:	89 d1                	mov    %edx,%ecx
    8510:	09 c1                	or     %eax,%ecx
    8512:	39 f9                	cmp    %edi,%ecx
    8514:	0f 85 54 01 00 00    	jne    866e <alu_test_imul+0x31e>
    851a:	3b 74 24 0c          	cmp    0xc(%esp),%esi
    851e:	75 c0                	jne    84e0 <alu_test_imul+0x190>
    8520:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    8524:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    8528:	39 f8                	cmp    %edi,%eax
    852a:	74 0b                	je     8537 <alu_test_imul+0x1e7>
    852c:	8b 38                	mov    (%eax),%edi
    852e:	83 c0 04             	add    $0x4,%eax
    8531:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8535:	eb 89                	jmp    84c0 <alu_test_imul+0x170>
    8537:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    853e:	00 
    853f:	90                   	nop
    8540:	e8 0b a2 ff ff       	call   2750 <rand@plt>
    8545:	89 c5                	mov    %eax,%ebp
    8547:	e8 04 a2 ff ff       	call   2750 <rand@plt>
    854c:	83 ec 04             	sub    $0x4,%esp
    854f:	89 c7                	mov    %eax,%edi
    8551:	0f bf c5             	movswl %bp,%eax
    8554:	6a 10                	push   $0x10
    8556:	50                   	push   %eax
    8557:	0f bf c7             	movswl %di,%eax
    855a:	50                   	push   %eax
    855b:	e8 a0 2f 00 00       	call   b500 <alu_imul>
    8560:	0f b7 cf             	movzwl %di,%ecx
    8563:	89 c6                	mov    %eax,%esi
    8565:	0f b7 c5             	movzwl %bp,%eax
    8568:	66 f7 e9             	imul   %cx
    856b:	9c                   	pushf  
    856c:	59                   	pop    %ecx
    856d:	c1 e2 10             	shl    $0x10,%edx
    8570:	0f b7 c0             	movzwl %ax,%eax
    8573:	83 c4 10             	add    $0x10,%esp
    8576:	09 c2                	or     %eax,%edx
    8578:	39 f2                	cmp    %esi,%edx
    857a:	0f 85 2c 01 00 00    	jne    86ac <alu_test_imul+0x35c>
    8580:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    8585:	75 b9                	jne    8540 <alu_test_imul+0x1f0>
    8587:	8b 44 24 18          	mov    0x18(%esp),%eax
    858b:	bd fc ff ff ff       	mov    $0xfffffffc,%ebp
    8590:	89 44 24 14          	mov    %eax,0x14(%esp)
    8594:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8598:	8b 7c 24 18          	mov    0x18(%esp),%edi
    859c:	b9 fc ff ff ff       	mov    $0xfffffffc,%ecx
    85a1:	eb 0a                	jmp    85ad <alu_test_imul+0x25d>
    85a3:	90                   	nop
    85a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    85a8:	8b 0f                	mov    (%edi),%ecx
    85aa:	83 c7 04             	add    $0x4,%edi
    85ad:	83 ec 04             	sub    $0x4,%esp
    85b0:	6a 20                	push   $0x20
    85b2:	55                   	push   %ebp
    85b3:	51                   	push   %ecx
    85b4:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    85b8:	e8 43 2f 00 00       	call   b500 <alu_imul>
    85bd:	89 c6                	mov    %eax,%esi
    85bf:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    85c3:	89 e8                	mov    %ebp,%eax
    85c5:	83 c4 10             	add    $0x10,%esp
    85c8:	f7 e9                	imul   %ecx
    85ca:	9c                   	pushf  
    85cb:	59                   	pop    %ecx
    85cc:	39 f0                	cmp    %esi,%eax
    85ce:	0f 85 b9 00 00 00    	jne    868d <alu_test_imul+0x33d>
    85d4:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
    85d8:	75 ce                	jne    85a8 <alu_test_imul+0x258>
    85da:	8b 44 24 14          	mov    0x14(%esp),%eax
    85de:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    85e2:	39 f8                	cmp    %edi,%eax
    85e4:	74 0b                	je     85f1 <alu_test_imul+0x2a1>
    85e6:	8b 28                	mov    (%eax),%ebp
    85e8:	83 c0 04             	add    $0x4,%eax
    85eb:	89 44 24 14          	mov    %eax,0x14(%esp)
    85ef:	eb a7                	jmp    8598 <alu_test_imul+0x248>
    85f1:	bf 40 42 0f 00       	mov    $0xf4240,%edi
    85f6:	8d 76 00             	lea    0x0(%esi),%esi
    85f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    8600:	e8 4b a1 ff ff       	call   2750 <rand@plt>
    8605:	89 c5                	mov    %eax,%ebp
    8607:	e8 44 a1 ff ff       	call   2750 <rand@plt>
    860c:	83 ec 04             	sub    $0x4,%esp
    860f:	6a 20                	push   $0x20
    8611:	55                   	push   %ebp
    8612:	50                   	push   %eax
    8613:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8617:	e8 e4 2e 00 00       	call   b500 <alu_imul>
    861c:	89 c6                	mov    %eax,%esi
    861e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    8622:	89 e8                	mov    %ebp,%eax
    8624:	83 c4 10             	add    $0x10,%esp
    8627:	f7 e9                	imul   %ecx
    8629:	9c                   	pushf  
    862a:	59                   	pop    %ecx
    862b:	39 f0                	cmp    %esi,%eax
    862d:	0f 85 95 00 00 00    	jne    86c8 <alu_test_imul+0x378>
    8633:	83 ef 01             	sub    $0x1,%edi
    8636:	75 c8                	jne    8600 <alu_test_imul+0x2b0>
    8638:	8d 83 74 06 ff ff    	lea    -0xf98c(%ebx),%eax
    863e:	83 ec 0c             	sub    $0xc,%esp
    8641:	50                   	push   %eax
    8642:	e8 b9 a1 ff ff       	call   2800 <puts@plt>
    8647:	83 c4 6c             	add    $0x6c,%esp
    864a:	5b                   	pop    %ebx
    864b:	5e                   	pop    %esi
    864c:	5f                   	pop    %edi
    864d:	5d                   	pop    %ebp
    864e:	c3                   	ret    
    864f:	8d 83 98 07 ff ff    	lea    -0xf868(%ebx),%eax
    8655:	50                   	push   %eax
    8656:	68 c9 03 00 00       	push   $0x3c9
    865b:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8661:	50                   	push   %eax
    8662:	8d 83 98 05 ff ff    	lea    -0xfa68(%ebx),%eax
    8668:	50                   	push   %eax
    8669:	e8 22 a2 ff ff       	call   2890 <__assert_fail@plt>
    866e:	8d 83 98 07 ff ff    	lea    -0xf868(%ebx),%eax
    8674:	50                   	push   %eax
    8675:	68 ed 03 00 00       	push   $0x3ed
    867a:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8680:	50                   	push   %eax
    8681:	8d 83 cc 05 ff ff    	lea    -0xfa34(%ebx),%eax
    8687:	50                   	push   %eax
    8688:	e8 03 a2 ff ff       	call   2890 <__assert_fail@plt>
    868d:	8d 83 98 07 ff ff    	lea    -0xf868(%ebx),%eax
    8693:	50                   	push   %eax
    8694:	68 11 04 00 00       	push   $0x411
    8699:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    869f:	50                   	push   %eax
    86a0:	8d 83 20 06 ff ff    	lea    -0xf9e0(%ebx),%eax
    86a6:	50                   	push   %eax
    86a7:	e8 e4 a1 ff ff       	call   2890 <__assert_fail@plt>
    86ac:	8d 83 98 07 ff ff    	lea    -0xf868(%ebx),%eax
    86b2:	50                   	push   %eax
    86b3:	68 fc 03 00 00       	push   $0x3fc
    86b8:	eb c0                	jmp    867a <alu_test_imul+0x32a>
    86ba:	8d 83 98 07 ff ff    	lea    -0xf868(%ebx),%eax
    86c0:	50                   	push   %eax
    86c1:	68 d9 03 00 00       	push   $0x3d9
    86c6:	eb 93                	jmp    865b <alu_test_imul+0x30b>
    86c8:	8d 83 98 07 ff ff    	lea    -0xf868(%ebx),%eax
    86ce:	50                   	push   %eax
    86cf:	68 21 04 00 00       	push   $0x421
    86d4:	eb c3                	jmp    8699 <alu_test_imul+0x349>
    86d6:	8d 76 00             	lea    0x0(%esi),%esi
    86d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000086e0 <alu_test_mul>:
    86e0:	55                   	push   %ebp
    86e1:	57                   	push   %edi
    86e2:	56                   	push   %esi
    86e3:	53                   	push   %ebx
    86e4:	e8 01 ac ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    86e9:	05 17 29 02 00       	add    $0x22917,%eax
    86ee:	83 ec 5c             	sub    $0x5c,%esp
    86f1:	8d 5c 24 2c          	lea    0x2c(%esp),%ebx
    86f5:	8d 7c 24 50          	lea    0x50(%esp),%edi
    86f9:	8d a8 60 1d 05 00    	lea    0x51d60(%eax),%ebp
    86ff:	89 44 24 08          	mov    %eax,0x8(%esp)
    8703:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%esp)
    870a:	ff 
    870b:	c7 44 24 2c fd ff ff 	movl   $0xfffffffd,0x2c(%esp)
    8712:	ff 
    8713:	c7 44 24 30 fe ff ff 	movl   $0xfffffffe,0x30(%esp)
    871a:	ff 
    871b:	c7 44 24 34 ff ff ff 	movl   $0xffffffff,0x34(%esp)
    8722:	ff 
    8723:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
    872a:	00 
    872b:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
    8732:	00 
    8733:	c7 44 24 40 02 00 00 	movl   $0x2,0x40(%esp)
    873a:	00 
    873b:	c7 44 24 44 04 00 00 	movl   $0x4,0x44(%esp)
    8742:	00 
    8743:	c7 44 24 48 05 00 00 	movl   $0x5,0x48(%esp)
    874a:	00 
    874b:	c7 44 24 4c ff ff ff 	movl   $0xefffffff,0x4c(%esp)
    8752:	ef 
    8753:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
    8757:	89 7c 24 18          	mov    %edi,0x18(%esp)
    875b:	89 5c 24 14          	mov    %ebx,0x14(%esp)
    875f:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%esp)
    8766:	ff 
    8767:	89 f6                	mov    %esi,%esi
    8769:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    8770:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    8774:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    8779:	eb 0a                	jmp    8785 <alu_test_mul+0xa5>
    877b:	90                   	nop
    877c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8780:	8b 0f                	mov    (%edi),%ecx
    8782:	83 c7 04             	add    $0x4,%edi
    8785:	83 ec 04             	sub    $0x4,%esp
    8788:	6a 20                	push   $0x20
    878a:	ff 74 24 14          	pushl  0x14(%esp)
    878e:	51                   	push   %ecx
    878f:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    8793:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    8797:	e8 e4 2c 00 00       	call   b480 <alu_mul>
    879c:	89 c6                	mov    %eax,%esi
    879e:	89 d3                	mov    %edx,%ebx
    87a0:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    87a4:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    87a8:	83 c4 10             	add    $0x10,%esp
    87ab:	f7 e1                	mul    %ecx
    87ad:	9c                   	pushf  
    87ae:	59                   	pop    %ecx
    87af:	31 f0                	xor    %esi,%eax
    87b1:	31 da                	xor    %ebx,%edx
    87b3:	09 c2                	or     %eax,%edx
    87b5:	0f 85 95 03 00 00    	jne    8b50 <alu_test_mul+0x470>
    87bb:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    87bf:	89 ca                	mov    %ecx,%edx
    87c1:	83 e2 01             	and    $0x1,%edx
    87c4:	83 e0 01             	and    $0x1,%eax
    87c7:	38 d0                	cmp    %dl,%al
    87c9:	0f 85 c7 03 00 00    	jne    8b96 <alu_test_mul+0x4b6>
    87cf:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    87d3:	c1 e9 0b             	shr    $0xb,%ecx
    87d6:	83 e1 01             	and    $0x1,%ecx
    87d9:	c0 e8 03             	shr    $0x3,%al
    87dc:	83 e0 01             	and    $0x1,%eax
    87df:	38 c8                	cmp    %cl,%al
    87e1:	0f 85 8c 03 00 00    	jne    8b73 <alu_test_mul+0x493>
    87e7:	3b 7c 24 18          	cmp    0x18(%esp),%edi
    87eb:	75 93                	jne    8780 <alu_test_mul+0xa0>
    87ed:	8b 44 24 14          	mov    0x14(%esp),%eax
    87f1:	39 44 24 18          	cmp    %eax,0x18(%esp)
    87f5:	74 19                	je     8810 <alu_test_mul+0x130>
    87f7:	8b 18                	mov    (%eax),%ebx
    87f9:	83 c0 04             	add    $0x4,%eax
    87fc:	89 44 24 14          	mov    %eax,0x14(%esp)
    8800:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    8804:	e9 67 ff ff ff       	jmp    8770 <alu_test_mul+0x90>
    8809:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8810:	83 ec 0c             	sub    $0xc,%esp
    8813:	6a 00                	push   $0x0
    8815:	8b 7c 24 18          	mov    0x18(%esp),%edi
    8819:	89 fb                	mov    %edi,%ebx
    881b:	e8 50 9e ff ff       	call   2670 <time@plt>
    8820:	89 04 24             	mov    %eax,(%esp)
    8823:	e8 c8 9e ff ff       	call   26f0 <srand@plt>
    8828:	83 c4 10             	add    $0x10,%esp
    882b:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    8832:	00 
    8833:	90                   	nop
    8834:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8838:	8b 7c 24 08          	mov    0x8(%esp),%edi
    883c:	89 fb                	mov    %edi,%ebx
    883e:	e8 0d 9f ff ff       	call   2750 <rand@plt>
    8843:	89 c6                	mov    %eax,%esi
    8845:	e8 06 9f ff ff       	call   2750 <rand@plt>
    884a:	83 ec 04             	sub    $0x4,%esp
    884d:	6a 20                	push   $0x20
    884f:	56                   	push   %esi
    8850:	50                   	push   %eax
    8851:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8855:	e8 26 2c 00 00       	call   b480 <alu_mul>
    885a:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    885e:	89 c3                	mov    %eax,%ebx
    8860:	89 d7                	mov    %edx,%edi
    8862:	89 f0                	mov    %esi,%eax
    8864:	83 c4 10             	add    $0x10,%esp
    8867:	f7 e1                	mul    %ecx
    8869:	9c                   	pushf  
    886a:	59                   	pop    %ecx
    886b:	89 d6                	mov    %edx,%esi
    886d:	31 d8                	xor    %ebx,%eax
    886f:	31 fe                	xor    %edi,%esi
    8871:	09 c6                	or     %eax,%esi
    8873:	0f 85 52 03 00 00    	jne    8bcb <alu_test_mul+0x4eb>
    8879:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    887d:	89 ca                	mov    %ecx,%edx
    887f:	83 e2 01             	and    $0x1,%edx
    8882:	83 e0 01             	and    $0x1,%eax
    8885:	38 d0                	cmp    %dl,%al
    8887:	0f 85 2c 03 00 00    	jne    8bb9 <alu_test_mul+0x4d9>
    888d:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    8891:	c1 e9 0b             	shr    $0xb,%ecx
    8894:	83 e1 01             	and    $0x1,%ecx
    8897:	c0 e8 03             	shr    $0x3,%al
    889a:	83 e0 01             	and    $0x1,%eax
    889d:	38 c8                	cmp    %cl,%al
    889f:	0f 85 7f 03 00 00    	jne    8c24 <alu_test_mul+0x544>
    88a5:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    88aa:	75 8c                	jne    8838 <alu_test_mul+0x158>
    88ac:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    88b0:	89 44 24 18          	mov    %eax,0x18(%esp)
    88b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    88b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    88c0:	0f b7 c0             	movzwl %ax,%eax
    88c3:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    88c7:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    88cc:	89 44 24 0c          	mov    %eax,0xc(%esp)
    88d0:	eb 0b                	jmp    88dd <alu_test_mul+0x1fd>
    88d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    88d8:	8b 0f                	mov    (%edi),%ecx
    88da:	83 c7 04             	add    $0x4,%edi
    88dd:	83 ec 04             	sub    $0x4,%esp
    88e0:	0f b7 c9             	movzwl %cx,%ecx
    88e3:	6a 10                	push   $0x10
    88e5:	ff 74 24 14          	pushl  0x14(%esp)
    88e9:	51                   	push   %ecx
    88ea:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    88ee:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    88f2:	e8 89 2b 00 00       	call   b480 <alu_mul>
    88f7:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    88fb:	89 c3                	mov    %eax,%ebx
    88fd:	89 d6                	mov    %edx,%esi
    88ff:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    8903:	83 c4 10             	add    $0x10,%esp
    8906:	66 f7 e1             	mul    %cx
    8909:	9c                   	pushf  
    890a:	59                   	pop    %ecx
    890b:	c1 e2 10             	shl    $0x10,%edx
    890e:	09 d0                	or     %edx,%eax
    8910:	31 d8                	xor    %ebx,%eax
    8912:	09 c6                	or     %eax,%esi
    8914:	0f 85 e7 02 00 00    	jne    8c01 <alu_test_mul+0x521>
    891a:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    891e:	89 ca                	mov    %ecx,%edx
    8920:	83 e2 01             	and    $0x1,%edx
    8923:	83 e0 01             	and    $0x1,%eax
    8926:	38 d0                	cmp    %dl,%al
    8928:	0f 85 c1 02 00 00    	jne    8bef <alu_test_mul+0x50f>
    892e:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    8932:	c1 e9 0b             	shr    $0xb,%ecx
    8935:	83 e1 01             	and    $0x1,%ecx
    8938:	c0 e8 03             	shr    $0x3,%al
    893b:	83 e0 01             	and    $0x1,%eax
    893e:	38 c8                	cmp    %cl,%al
    8940:	0f 85 97 02 00 00    	jne    8bdd <alu_test_mul+0x4fd>
    8946:	3b 7c 24 14          	cmp    0x14(%esp),%edi
    894a:	75 8c                	jne    88d8 <alu_test_mul+0x1f8>
    894c:	8b 44 24 18          	mov    0x18(%esp),%eax
    8950:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    8954:	39 d8                	cmp    %ebx,%eax
    8956:	74 10                	je     8968 <alu_test_mul+0x288>
    8958:	89 c3                	mov    %eax,%ebx
    895a:	8b 00                	mov    (%eax),%eax
    895c:	83 c3 04             	add    $0x4,%ebx
    895f:	89 5c 24 18          	mov    %ebx,0x18(%esp)
    8963:	e9 58 ff ff ff       	jmp    88c0 <alu_test_mul+0x1e0>
    8968:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    896f:	00 
    8970:	8b 7c 24 08          	mov    0x8(%esp),%edi
    8974:	89 fb                	mov    %edi,%ebx
    8976:	e8 d5 9d ff ff       	call   2750 <rand@plt>
    897b:	89 c6                	mov    %eax,%esi
    897d:	0f b7 f6             	movzwl %si,%esi
    8980:	e8 cb 9d ff ff       	call   2750 <rand@plt>
    8985:	83 ec 04             	sub    $0x4,%esp
    8988:	0f b7 c8             	movzwl %ax,%ecx
    898b:	6a 10                	push   $0x10
    898d:	56                   	push   %esi
    898e:	51                   	push   %ecx
    898f:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
    8993:	e8 e8 2a 00 00       	call   b480 <alu_mul>
    8998:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    899c:	89 c3                	mov    %eax,%ebx
    899e:	89 d7                	mov    %edx,%edi
    89a0:	89 f0                	mov    %esi,%eax
    89a2:	83 c4 10             	add    $0x10,%esp
    89a5:	66 f7 e1             	mul    %cx
    89a8:	9c                   	pushf  
    89a9:	59                   	pop    %ecx
    89aa:	89 d6                	mov    %edx,%esi
    89ac:	c1 e6 10             	shl    $0x10,%esi
    89af:	09 c6                	or     %eax,%esi
    89b1:	89 d8                	mov    %ebx,%eax
    89b3:	31 f0                	xor    %esi,%eax
    89b5:	09 c7                	or     %eax,%edi
    89b7:	0f 85 a6 02 00 00    	jne    8c63 <alu_test_mul+0x583>
    89bd:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    89c1:	89 ca                	mov    %ecx,%edx
    89c3:	83 e2 01             	and    $0x1,%edx
    89c6:	83 e0 01             	and    $0x1,%eax
    89c9:	38 d0                	cmp    %dl,%al
    89cb:	0f 85 7d 02 00 00    	jne    8c4e <alu_test_mul+0x56e>
    89d1:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    89d5:	c1 e9 0b             	shr    $0xb,%ecx
    89d8:	83 e1 01             	and    $0x1,%ecx
    89db:	c0 e8 03             	shr    $0x3,%al
    89de:	83 e0 01             	and    $0x1,%eax
    89e1:	38 c8                	cmp    %cl,%al
    89e3:	0f 85 50 02 00 00    	jne    8c39 <alu_test_mul+0x559>
    89e9:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    89ee:	75 80                	jne    8970 <alu_test_mul+0x290>
    89f0:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    89f4:	89 44 24 18          	mov    %eax,0x18(%esp)
    89f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    89fd:	8d 76 00             	lea    0x0(%esi),%esi
    8a00:	0f b6 c0             	movzbl %al,%eax
    8a03:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    8a07:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    8a0c:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8a10:	eb 0b                	jmp    8a1d <alu_test_mul+0x33d>
    8a12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8a18:	8b 0f                	mov    (%edi),%ecx
    8a1a:	83 c7 04             	add    $0x4,%edi
    8a1d:	83 ec 04             	sub    $0x4,%esp
    8a20:	0f b6 c9             	movzbl %cl,%ecx
    8a23:	6a 08                	push   $0x8
    8a25:	ff 74 24 14          	pushl  0x14(%esp)
    8a29:	51                   	push   %ecx
    8a2a:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    8a2e:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    8a32:	e8 49 2a 00 00       	call   b480 <alu_mul>
    8a37:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    8a3b:	89 c3                	mov    %eax,%ebx
    8a3d:	89 d6                	mov    %edx,%esi
    8a3f:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    8a43:	83 c4 10             	add    $0x10,%esp
    8a46:	f6 e1                	mul    %cl
    8a48:	9c                   	pushf  
    8a49:	59                   	pop    %ecx
    8a4a:	c1 e2 08             	shl    $0x8,%edx
    8a4d:	09 d0                	or     %edx,%eax
    8a4f:	31 d8                	xor    %ebx,%eax
    8a51:	09 c6                	or     %eax,%esi
    8a53:	0f 85 1c 02 00 00    	jne    8c75 <alu_test_mul+0x595>
    8a59:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    8a5d:	89 ca                	mov    %ecx,%edx
    8a5f:	83 e2 01             	and    $0x1,%edx
    8a62:	83 e0 01             	and    $0x1,%eax
    8a65:	38 d0                	cmp    %dl,%al
    8a67:	0f 85 2b 02 00 00    	jne    8c98 <alu_test_mul+0x5b8>
    8a6d:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    8a71:	c1 e9 0b             	shr    $0xb,%ecx
    8a74:	83 e1 01             	and    $0x1,%ecx
    8a77:	c0 e8 03             	shr    $0x3,%al
    8a7a:	83 e0 01             	and    $0x1,%eax
    8a7d:	38 c8                	cmp    %cl,%al
    8a7f:	0f 85 4f 02 00 00    	jne    8cd4 <alu_test_mul+0x5f4>
    8a85:	3b 7c 24 14          	cmp    0x14(%esp),%edi
    8a89:	75 8d                	jne    8a18 <alu_test_mul+0x338>
    8a8b:	8b 44 24 18          	mov    0x18(%esp),%eax
    8a8f:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    8a93:	39 d8                	cmp    %ebx,%eax
    8a95:	74 10                	je     8aa7 <alu_test_mul+0x3c7>
    8a97:	89 c3                	mov    %eax,%ebx
    8a99:	8b 00                	mov    (%eax),%eax
    8a9b:	83 c3 04             	add    $0x4,%ebx
    8a9e:	89 5c 24 18          	mov    %ebx,0x18(%esp)
    8aa2:	e9 59 ff ff ff       	jmp    8a00 <alu_test_mul+0x320>
    8aa7:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    8aae:	00 
    8aaf:	90                   	nop
    8ab0:	8b 7c 24 08          	mov    0x8(%esp),%edi
    8ab4:	89 fb                	mov    %edi,%ebx
    8ab6:	e8 95 9c ff ff       	call   2750 <rand@plt>
    8abb:	89 c6                	mov    %eax,%esi
    8abd:	e8 8e 9c ff ff       	call   2750 <rand@plt>
    8ac2:	89 f2                	mov    %esi,%edx
    8ac4:	83 ec 04             	sub    $0x4,%esp
    8ac7:	0f b6 c8             	movzbl %al,%ecx
    8aca:	0f b6 f2             	movzbl %dl,%esi
    8acd:	6a 08                	push   $0x8
    8acf:	56                   	push   %esi
    8ad0:	51                   	push   %ecx
    8ad1:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
    8ad5:	e8 a6 29 00 00       	call   b480 <alu_mul>
    8ada:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    8ade:	89 c3                	mov    %eax,%ebx
    8ae0:	89 d7                	mov    %edx,%edi
    8ae2:	89 f0                	mov    %esi,%eax
    8ae4:	83 c4 10             	add    $0x10,%esp
    8ae7:	f6 e1                	mul    %cl
    8ae9:	9c                   	pushf  
    8aea:	59                   	pop    %ecx
    8aeb:	89 d6                	mov    %edx,%esi
    8aed:	c1 e6 08             	shl    $0x8,%esi
    8af0:	09 c6                	or     %eax,%esi
    8af2:	89 d8                	mov    %ebx,%eax
    8af4:	31 f0                	xor    %esi,%eax
    8af6:	09 c7                	or     %eax,%edi
    8af8:	0f 85 c4 01 00 00    	jne    8cc2 <alu_test_mul+0x5e2>
    8afe:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    8b02:	89 ca                	mov    %ecx,%edx
    8b04:	83 e2 01             	and    $0x1,%edx
    8b07:	83 e0 01             	and    $0x1,%eax
    8b0a:	38 d0                	cmp    %dl,%al
    8b0c:	0f 85 9b 01 00 00    	jne    8cad <alu_test_mul+0x5cd>
    8b12:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    8b16:	c1 e9 0b             	shr    $0xb,%ecx
    8b19:	83 e1 01             	and    $0x1,%ecx
    8b1c:	c0 e8 03             	shr    $0x3,%al
    8b1f:	83 e0 01             	and    $0x1,%eax
    8b22:	38 c8                	cmp    %cl,%al
    8b24:	0f 85 bf 01 00 00    	jne    8ce9 <alu_test_mul+0x609>
    8b2a:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    8b2f:	0f 85 7b ff ff ff    	jne    8ab0 <alu_test_mul+0x3d0>
    8b35:	83 ec 0c             	sub    $0xc,%esp
    8b38:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    8b3c:	8d 83 08 07 ff ff    	lea    -0xf8f8(%ebx),%eax
    8b42:	50                   	push   %eax
    8b43:	e8 b8 9c ff ff       	call   2800 <puts@plt>
    8b48:	83 c4 6c             	add    $0x6c,%esp
    8b4b:	5b                   	pop    %ebx
    8b4c:	5e                   	pop    %esi
    8b4d:	5f                   	pop    %edi
    8b4e:	5d                   	pop    %ebp
    8b4f:	c3                   	ret    
    8b50:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8b54:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8b5a:	50                   	push   %eax
    8b5b:	68 44 04 00 00       	push   $0x444
    8b60:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8b66:	50                   	push   %eax
    8b67:	8d 83 94 06 ff ff    	lea    -0xf96c(%ebx),%eax
    8b6d:	50                   	push   %eax
    8b6e:	e8 1d 9d ff ff       	call   2890 <__assert_fail@plt>
    8b73:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8b77:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8b7d:	50                   	push   %eax
    8b7e:	68 46 04 00 00       	push   $0x446
    8b83:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8b89:	50                   	push   %eax
    8b8a:	8d 83 18 04 ff ff    	lea    -0xfbe8(%ebx),%eax
    8b90:	50                   	push   %eax
    8b91:	e8 fa 9c ff ff       	call   2890 <__assert_fail@plt>
    8b96:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8b9a:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8ba0:	50                   	push   %eax
    8ba1:	68 45 04 00 00       	push   $0x445
    8ba6:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8bac:	50                   	push   %eax
    8bad:	8d 83 98 03 ff ff    	lea    -0xfc68(%ebx),%eax
    8bb3:	50                   	push   %eax
    8bb4:	e8 d7 9c ff ff       	call   2890 <__assert_fail@plt>
    8bb9:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8bbd:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8bc3:	50                   	push   %eax
    8bc4:	68 5a 04 00 00       	push   $0x45a
    8bc9:	eb db                	jmp    8ba6 <alu_test_mul+0x4c6>
    8bcb:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8bcf:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8bd5:	50                   	push   %eax
    8bd6:	68 59 04 00 00       	push   $0x459
    8bdb:	eb 83                	jmp    8b60 <alu_test_mul+0x480>
    8bdd:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8be1:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8be7:	50                   	push   %eax
    8be8:	68 72 04 00 00       	push   $0x472
    8bed:	eb 94                	jmp    8b83 <alu_test_mul+0x4a3>
    8bef:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8bf3:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8bf9:	50                   	push   %eax
    8bfa:	68 71 04 00 00       	push   $0x471
    8bff:	eb a5                	jmp    8ba6 <alu_test_mul+0x4c6>
    8c01:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8c05:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8c0b:	50                   	push   %eax
    8c0c:	68 70 04 00 00       	push   $0x470
    8c11:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8c17:	50                   	push   %eax
    8c18:	8d 83 b8 06 ff ff    	lea    -0xf948(%ebx),%eax
    8c1e:	50                   	push   %eax
    8c1f:	e8 6c 9c ff ff       	call   2890 <__assert_fail@plt>
    8c24:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8c28:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8c2e:	50                   	push   %eax
    8c2f:	68 5b 04 00 00       	push   $0x45b
    8c34:	e9 4a ff ff ff       	jmp    8b83 <alu_test_mul+0x4a3>
    8c39:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8c3d:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8c43:	50                   	push   %eax
    8c44:	68 84 04 00 00       	push   $0x484
    8c49:	e9 35 ff ff ff       	jmp    8b83 <alu_test_mul+0x4a3>
    8c4e:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8c52:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8c58:	50                   	push   %eax
    8c59:	68 83 04 00 00       	push   $0x483
    8c5e:	e9 43 ff ff ff       	jmp    8ba6 <alu_test_mul+0x4c6>
    8c63:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8c67:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8c6d:	50                   	push   %eax
    8c6e:	68 82 04 00 00       	push   $0x482
    8c73:	eb 9c                	jmp    8c11 <alu_test_mul+0x531>
    8c75:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8c79:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8c7f:	50                   	push   %eax
    8c80:	68 98 04 00 00       	push   $0x498
    8c85:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8c8b:	50                   	push   %eax
    8c8c:	8d 83 e0 06 ff ff    	lea    -0xf920(%ebx),%eax
    8c92:	50                   	push   %eax
    8c93:	e8 f8 9b ff ff       	call   2890 <__assert_fail@plt>
    8c98:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8c9c:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8ca2:	50                   	push   %eax
    8ca3:	68 99 04 00 00       	push   $0x499
    8ca8:	e9 f9 fe ff ff       	jmp    8ba6 <alu_test_mul+0x4c6>
    8cad:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8cb1:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8cb7:	50                   	push   %eax
    8cb8:	68 ab 04 00 00       	push   $0x4ab
    8cbd:	e9 e4 fe ff ff       	jmp    8ba6 <alu_test_mul+0x4c6>
    8cc2:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8cc6:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8ccc:	50                   	push   %eax
    8ccd:	68 aa 04 00 00       	push   $0x4aa
    8cd2:	eb b1                	jmp    8c85 <alu_test_mul+0x5a5>
    8cd4:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8cd8:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8cde:	50                   	push   %eax
    8cdf:	68 9a 04 00 00       	push   $0x49a
    8ce4:	e9 9a fe ff ff       	jmp    8b83 <alu_test_mul+0x4a3>
    8ce9:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    8ced:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax
    8cf3:	50                   	push   %eax
    8cf4:	68 ac 04 00 00       	push   $0x4ac
    8cf9:	e9 85 fe ff ff       	jmp    8b83 <alu_test_mul+0x4a3>
    8cfe:	66 90                	xchg   %ax,%ax

00008d00 <alu_test_idiv>:
    8d00:	55                   	push   %ebp
    8d01:	57                   	push   %edi
    8d02:	56                   	push   %esi
    8d03:	53                   	push   %ebx
    8d04:	be fd ff ff ff       	mov    $0xfffffffd,%esi
    8d09:	e8 b2 9f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    8d0e:	81 c3 f2 22 02 00    	add    $0x222f2,%ebx
    8d14:	83 ec 4c             	sub    $0x4c,%esp
    8d17:	8d 44 24 28          	lea    0x28(%esp),%eax
    8d1b:	8d 7c 24 40          	lea    0x40(%esp),%edi
    8d1f:	c7 44 24 24 fd ff ff 	movl   $0xfffffffd,0x24(%esp)
    8d26:	ff 
    8d27:	c7 44 24 28 fe ff ff 	movl   $0xfffffffe,0x28(%esp)
    8d2e:	ff 
    8d2f:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
    8d36:	ff 
    8d37:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
    8d3e:	00 
    8d3f:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
    8d46:	00 
    8d47:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
    8d4e:	00 
    8d4f:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
    8d56:	00 
    8d57:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8d5b:	89 7c 24 14          	mov    %edi,0x14(%esp)
    8d5f:	89 44 24 18          	mov    %eax,0x18(%esp)
    8d63:	90                   	nop
    8d64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8d68:	89 34 24             	mov    %esi,(%esp)
    8d6b:	c1 fe 1f             	sar    $0x1f,%esi
    8d6e:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
    8d72:	89 74 24 04          	mov    %esi,0x4(%esp)
    8d76:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
    8d7b:	eb 09                	jmp    8d86 <alu_test_idiv+0x86>
    8d7d:	8d 76 00             	lea    0x0(%esi),%esi
    8d80:	8b 4d 00             	mov    0x0(%ebp),%ecx
    8d83:	83 c5 04             	add    $0x4,%ebp
    8d86:	89 cf                	mov    %ecx,%edi
    8d88:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8d8c:	83 ec 0c             	sub    $0xc,%esp
    8d8f:	c1 ff 1f             	sar    $0x1f,%edi
    8d92:	6a 20                	push   $0x20
    8d94:	ff 74 24 14          	pushl  0x14(%esp)
    8d98:	ff 74 24 14          	pushl  0x14(%esp)
    8d9c:	57                   	push   %edi
    8d9d:	89 ce                	mov    %ecx,%esi
    8d9f:	51                   	push   %ecx
    8da0:	e8 9b 27 00 00       	call   b540 <alu_idiv>
    8da5:	89 44 24 28          	mov    %eax,0x28(%esp)
    8da9:	83 c4 20             	add    $0x20,%esp
    8dac:	ff 74 24 04          	pushl  0x4(%esp)
    8db0:	ff 74 24 04          	pushl  0x4(%esp)
    8db4:	57                   	push   %edi
    8db5:	56                   	push   %esi
    8db6:	e8 e5 27 00 00       	call   b5a0 <alu_imod>
    8dbb:	8b 54 24 10          	mov    0x10(%esp),%edx
    8dbf:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    8dc3:	89 c6                	mov    %eax,%esi
    8dc5:	89 d0                	mov    %edx,%eax
    8dc7:	89 ca                	mov    %ecx,%edx
    8dc9:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    8dcd:	83 c4 10             	add    $0x10,%esp
    8dd0:	f7 f9                	idiv   %ecx
    8dd2:	39 44 24 08          	cmp    %eax,0x8(%esp)
    8dd6:	0f 85 19 01 00 00    	jne    8ef5 <alu_test_idiv+0x1f5>
    8ddc:	39 d6                	cmp    %edx,%esi
    8dde:	0f 85 03 01 00 00    	jne    8ee7 <alu_test_idiv+0x1e7>
    8de4:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
    8de8:	75 96                	jne    8d80 <alu_test_idiv+0x80>
    8dea:	8b 44 24 18          	mov    0x18(%esp),%eax
    8dee:	8b 7c 24 14          	mov    0x14(%esp),%edi
    8df2:	39 f8                	cmp    %edi,%eax
    8df4:	74 12                	je     8e08 <alu_test_idiv+0x108>
    8df6:	8b 30                	mov    (%eax),%esi
    8df8:	83 c0 04             	add    $0x4,%eax
    8dfb:	89 44 24 18          	mov    %eax,0x18(%esp)
    8dff:	e9 64 ff ff ff       	jmp    8d68 <alu_test_idiv+0x68>
    8e04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8e08:	83 ec 0c             	sub    $0xc,%esp
    8e0b:	bd 40 42 0f 00       	mov    $0xf4240,%ebp
    8e10:	6a 00                	push   $0x0
    8e12:	e8 59 98 ff ff       	call   2670 <time@plt>
    8e17:	89 04 24             	mov    %eax,(%esp)
    8e1a:	e8 d1 98 ff ff       	call   26f0 <srand@plt>
    8e1f:	83 c4 10             	add    $0x10,%esp
    8e22:	89 6c 24 10          	mov    %ebp,0x10(%esp)
    8e26:	eb 13                	jmp    8e3b <alu_test_idiv+0x13b>
    8e28:	90                   	nop
    8e29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8e30:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    8e35:	0f 84 95 00 00 00    	je     8ed0 <alu_test_idiv+0x1d0>
    8e3b:	e8 10 99 ff ff       	call   2750 <rand@plt>
    8e40:	89 04 24             	mov    %eax,(%esp)
    8e43:	e8 08 99 ff ff       	call   2750 <rand@plt>
    8e48:	89 c7                	mov    %eax,%edi
    8e4a:	89 c1                	mov    %eax,%ecx
    8e4c:	89 c6                	mov    %eax,%esi
    8e4e:	c1 ff 1f             	sar    $0x1f,%edi
    8e51:	89 f8                	mov    %edi,%eax
    8e53:	09 c8                	or     %ecx,%eax
    8e55:	74 d9                	je     8e30 <alu_test_idiv+0x130>
    8e57:	8b 04 24             	mov    (%esp),%eax
    8e5a:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    8e5e:	83 ec 0c             	sub    $0xc,%esp
    8e61:	6a 20                	push   $0x20
    8e63:	89 c1                	mov    %eax,%ecx
    8e65:	89 44 24 18          	mov    %eax,0x18(%esp)
    8e69:	c1 f9 1f             	sar    $0x1f,%ecx
    8e6c:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
    8e70:	51                   	push   %ecx
    8e71:	50                   	push   %eax
    8e72:	57                   	push   %edi
    8e73:	56                   	push   %esi
    8e74:	e8 c7 26 00 00       	call   b540 <alu_idiv>
    8e79:	83 c4 20             	add    $0x20,%esp
    8e7c:	89 c5                	mov    %eax,%ebp
    8e7e:	ff 74 24 0c          	pushl  0xc(%esp)
    8e82:	ff 74 24 0c          	pushl  0xc(%esp)
    8e86:	57                   	push   %edi
    8e87:	56                   	push   %esi
    8e88:	e8 13 27 00 00       	call   b5a0 <alu_imod>
    8e8d:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    8e91:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    8e95:	89 c6                	mov    %eax,%esi
    8e97:	8b 44 24 10          	mov    0x10(%esp),%eax
    8e9b:	83 c4 10             	add    $0x10,%esp
    8e9e:	f7 f9                	idiv   %ecx
    8ea0:	39 c5                	cmp    %eax,%ebp
    8ea2:	75 70                	jne    8f14 <alu_test_idiv+0x214>
    8ea4:	39 d6                	cmp    %edx,%esi
    8ea6:	74 88                	je     8e30 <alu_test_idiv+0x130>
    8ea8:	8d 83 78 07 ff ff    	lea    -0xf888(%ebx),%eax
    8eae:	50                   	push   %eax
    8eaf:	68 d0 04 00 00       	push   $0x4d0
    8eb4:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8eba:	50                   	push   %eax
    8ebb:	8d 83 6c 03 ff ff    	lea    -0xfc94(%ebx),%eax
    8ec1:	50                   	push   %eax
    8ec2:	e8 c9 99 ff ff       	call   2890 <__assert_fail@plt>
    8ec7:	89 f6                	mov    %esi,%esi
    8ec9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    8ed0:	8d 83 28 07 ff ff    	lea    -0xf8d8(%ebx),%eax
    8ed6:	83 ec 0c             	sub    $0xc,%esp
    8ed9:	50                   	push   %eax
    8eda:	e8 21 99 ff ff       	call   2800 <puts@plt>
    8edf:	83 c4 5c             	add    $0x5c,%esp
    8ee2:	5b                   	pop    %ebx
    8ee3:	5e                   	pop    %esi
    8ee4:	5f                   	pop    %edi
    8ee5:	5d                   	pop    %ebp
    8ee6:	c3                   	ret    
    8ee7:	8d 83 78 07 ff ff    	lea    -0xf888(%ebx),%eax
    8eed:	50                   	push   %eax
    8eee:	68 c2 04 00 00       	push   $0x4c2
    8ef3:	eb bf                	jmp    8eb4 <alu_test_idiv+0x1b4>
    8ef5:	8d 83 78 07 ff ff    	lea    -0xf888(%ebx),%eax
    8efb:	50                   	push   %eax
    8efc:	68 c1 04 00 00       	push   $0x4c1
    8f01:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    8f07:	50                   	push   %eax
    8f08:	8d 83 5d 03 ff ff    	lea    -0xfca3(%ebx),%eax
    8f0e:	50                   	push   %eax
    8f0f:	e8 7c 99 ff ff       	call   2890 <__assert_fail@plt>
    8f14:	8d 83 78 07 ff ff    	lea    -0xf888(%ebx),%eax
    8f1a:	50                   	push   %eax
    8f1b:	68 cf 04 00 00       	push   $0x4cf
    8f20:	eb df                	jmp    8f01 <alu_test_idiv+0x201>
    8f22:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8f29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008f30 <alu_test_div>:
    8f30:	55                   	push   %ebp
    8f31:	57                   	push   %edi
    8f32:	56                   	push   %esi
    8f33:	53                   	push   %ebx
    8f34:	e8 87 9d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    8f39:	81 c3 c7 20 02 00    	add    $0x220c7,%ebx
    8f3f:	83 ec 4c             	sub    $0x4c,%esp
    8f42:	8d 44 24 24          	lea    0x24(%esp),%eax
    8f46:	8d 74 24 40          	lea    0x40(%esp),%esi
    8f4a:	c7 44 24 20 00 00 00 	movl   $0x80000000,0x20(%esp)
    8f51:	80 
    8f52:	c7 44 24 24 fd ff ff 	movl   $0xfffffffd,0x24(%esp)
    8f59:	ff 
    8f5a:	c7 44 24 28 fe ff ff 	movl   $0xfffffffe,0x28(%esp)
    8f61:	ff 
    8f62:	89 74 24 14          	mov    %esi,0x14(%esp)
    8f66:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
    8f6d:	ff 
    8f6e:	be 00 00 00 80       	mov    $0x80000000,%esi
    8f73:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
    8f7a:	00 
    8f7b:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
    8f82:	00 
    8f83:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
    8f8a:	00 
    8f8b:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
    8f92:	00 
    8f93:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8f97:	89 44 24 18          	mov    %eax,0x18(%esp)
    8f9b:	90                   	nop
    8f9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8fa0:	89 34 24             	mov    %esi,(%esp)
    8fa3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    8faa:	00 
    8fab:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    8fb0:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    8fb4:	eb 0f                	jmp    8fc5 <alu_test_div+0x95>
    8fb6:	8d 76 00             	lea    0x0(%esi),%esi
    8fb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    8fc0:	8b 0e                	mov    (%esi),%ecx
    8fc2:	83 c6 04             	add    $0x4,%esi
    8fc5:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8fc9:	31 ed                	xor    %ebp,%ebp
    8fcb:	83 ec 0c             	sub    $0xc,%esp
    8fce:	6a 20                	push   $0x20
    8fd0:	ff 74 24 14          	pushl  0x14(%esp)
    8fd4:	89 cf                	mov    %ecx,%edi
    8fd6:	ff 74 24 14          	pushl  0x14(%esp)
    8fda:	55                   	push   %ebp
    8fdb:	51                   	push   %ecx
    8fdc:	e8 2f 25 00 00       	call   b510 <alu_div>
    8fe1:	89 44 24 28          	mov    %eax,0x28(%esp)
    8fe5:	83 c4 20             	add    $0x20,%esp
    8fe8:	ff 74 24 04          	pushl  0x4(%esp)
    8fec:	ff 74 24 04          	pushl  0x4(%esp)
    8ff0:	55                   	push   %ebp
    8ff1:	57                   	push   %edi
    8ff2:	e8 79 25 00 00       	call   b570 <alu_mod>
    8ff7:	8b 54 24 10          	mov    0x10(%esp),%edx
    8ffb:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    8fff:	89 c5                	mov    %eax,%ebp
    9001:	89 d0                	mov    %edx,%eax
    9003:	89 ca                	mov    %ecx,%edx
    9005:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    9009:	83 c4 10             	add    $0x10,%esp
    900c:	f7 f1                	div    %ecx
    900e:	39 44 24 08          	cmp    %eax,0x8(%esp)
    9012:	0f 85 fd 00 00 00    	jne    9115 <alu_test_div+0x1e5>
    9018:	39 d5                	cmp    %edx,%ebp
    901a:	0f 85 e7 00 00 00    	jne    9107 <alu_test_div+0x1d7>
    9020:	3b 74 24 14          	cmp    0x14(%esp),%esi
    9024:	75 9a                	jne    8fc0 <alu_test_div+0x90>
    9026:	8b 44 24 18          	mov    0x18(%esp),%eax
    902a:	39 44 24 14          	cmp    %eax,0x14(%esp)
    902e:	74 10                	je     9040 <alu_test_div+0x110>
    9030:	8b 30                	mov    (%eax),%esi
    9032:	83 c0 04             	add    $0x4,%eax
    9035:	89 44 24 18          	mov    %eax,0x18(%esp)
    9039:	e9 62 ff ff ff       	jmp    8fa0 <alu_test_div+0x70>
    903e:	66 90                	xchg   %ax,%ax
    9040:	83 ec 0c             	sub    $0xc,%esp
    9043:	bd 40 42 0f 00       	mov    $0xf4240,%ebp
    9048:	6a 00                	push   $0x0
    904a:	e8 21 96 ff ff       	call   2670 <time@plt>
    904f:	89 04 24             	mov    %eax,(%esp)
    9052:	e8 99 96 ff ff       	call   26f0 <srand@plt>
    9057:	83 c4 10             	add    $0x10,%esp
    905a:	eb 0d                	jmp    9069 <alu_test_div+0x139>
    905c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9060:	83 ed 01             	sub    $0x1,%ebp
    9063:	0f 84 87 00 00 00    	je     90f0 <alu_test_div+0x1c0>
    9069:	e8 e2 96 ff ff       	call   2750 <rand@plt>
    906e:	89 04 24             	mov    %eax,(%esp)
    9071:	e8 da 96 ff ff       	call   2750 <rand@plt>
    9076:	85 c0                	test   %eax,%eax
    9078:	89 c1                	mov    %eax,%ecx
    907a:	74 e4                	je     9060 <alu_test_div+0x130>
    907c:	8b 04 24             	mov    (%esp),%eax
    907f:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    9083:	83 ec 0c             	sub    $0xc,%esp
    9086:	6a 20                	push   $0x20
    9088:	31 ff                	xor    %edi,%edi
    908a:	89 ce                	mov    %ecx,%esi
    908c:	99                   	cltd   
    908d:	89 44 24 18          	mov    %eax,0x18(%esp)
    9091:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    9095:	52                   	push   %edx
    9096:	50                   	push   %eax
    9097:	57                   	push   %edi
    9098:	51                   	push   %ecx
    9099:	e8 72 24 00 00       	call   b510 <alu_div>
    909e:	89 44 24 30          	mov    %eax,0x30(%esp)
    90a2:	83 c4 20             	add    $0x20,%esp
    90a5:	ff 74 24 0c          	pushl  0xc(%esp)
    90a9:	ff 74 24 0c          	pushl  0xc(%esp)
    90ad:	57                   	push   %edi
    90ae:	56                   	push   %esi
    90af:	e8 bc 24 00 00       	call   b570 <alu_mod>
    90b4:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    90b8:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    90bc:	89 c6                	mov    %eax,%esi
    90be:	8b 44 24 10          	mov    0x10(%esp),%eax
    90c2:	83 c4 10             	add    $0x10,%esp
    90c5:	f7 f9                	idiv   %ecx
    90c7:	39 44 24 10          	cmp    %eax,0x10(%esp)
    90cb:	75 67                	jne    9134 <alu_test_div+0x204>
    90cd:	39 d6                	cmp    %edx,%esi
    90cf:	74 8f                	je     9060 <alu_test_div+0x130>
    90d1:	8d 83 68 07 ff ff    	lea    -0xf898(%ebx),%eax
    90d7:	50                   	push   %eax
    90d8:	68 f5 04 00 00       	push   $0x4f5
    90dd:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    90e3:	50                   	push   %eax
    90e4:	8d 83 6c 03 ff ff    	lea    -0xfc94(%ebx),%eax
    90ea:	50                   	push   %eax
    90eb:	e8 a0 97 ff ff       	call   2890 <__assert_fail@plt>
    90f0:	8d 83 48 07 ff ff    	lea    -0xf8b8(%ebx),%eax
    90f6:	83 ec 0c             	sub    $0xc,%esp
    90f9:	50                   	push   %eax
    90fa:	e8 01 97 ff ff       	call   2800 <puts@plt>
    90ff:	83 c4 5c             	add    $0x5c,%esp
    9102:	5b                   	pop    %ebx
    9103:	5e                   	pop    %esi
    9104:	5f                   	pop    %edi
    9105:	5d                   	pop    %ebp
    9106:	c3                   	ret    
    9107:	8d 83 68 07 ff ff    	lea    -0xf898(%ebx),%eax
    910d:	50                   	push   %eax
    910e:	68 e7 04 00 00       	push   $0x4e7
    9113:	eb c8                	jmp    90dd <alu_test_div+0x1ad>
    9115:	8d 83 68 07 ff ff    	lea    -0xf898(%ebx),%eax
    911b:	50                   	push   %eax
    911c:	68 e6 04 00 00       	push   $0x4e6
    9121:	8d 83 36 03 ff ff    	lea    -0xfcca(%ebx),%eax
    9127:	50                   	push   %eax
    9128:	8d 83 5d 03 ff ff    	lea    -0xfca3(%ebx),%eax
    912e:	50                   	push   %eax
    912f:	e8 5c 97 ff ff       	call   2890 <__assert_fail@plt>
    9134:	8d 83 68 07 ff ff    	lea    -0xf898(%ebx),%eax
    913a:	50                   	push   %eax
    913b:	68 f4 04 00 00       	push   $0x4f4
    9140:	eb df                	jmp    9121 <alu_test_div+0x1f1>
    9142:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9149:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009150 <alu_test>:
    9150:	53                   	push   %ebx
    9151:	e8 6a 9b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    9156:	81 c3 aa 1e 02 00    	add    $0x21eaa,%ebx
    915c:	83 ec 14             	sub    $0x14,%esp
    915f:	8d 83 7b 03 ff ff    	lea    -0xfc85(%ebx),%eax
    9165:	50                   	push   %eax
    9166:	e8 95 96 ff ff       	call   2800 <puts@plt>
    916b:	e8 20 c6 ff ff       	call   5790 <alu_test_add>
    9170:	e8 4b c9 ff ff       	call   5ac0 <alu_test_adc>
    9175:	e8 16 cf ff ff       	call   6090 <alu_test_sub>
    917a:	e8 71 d2 ff ff       	call   63f0 <alu_test_sbb>
    917f:	e8 6c d8 ff ff       	call   69f0 <alu_test_and>
    9184:	e8 c7 db ff ff       	call   6d50 <alu_test_or>
    9189:	e8 22 df ff ff       	call   70b0 <alu_test_xor>
    918e:	e8 7d e2 ff ff       	call   7410 <alu_test_shl>
    9193:	e8 48 e6 ff ff       	call   77e0 <alu_test_shr>
    9198:	e8 13 ea ff ff       	call   7bb0 <alu_test_sal>
    919d:	e8 de ed ff ff       	call   7f80 <alu_test_sar>
    91a2:	e8 39 f5 ff ff       	call   86e0 <alu_test_mul>
    91a7:	e8 84 fd ff ff       	call   8f30 <alu_test_div>
    91ac:	e8 9f f1 ff ff       	call   8350 <alu_test_imul>
    91b1:	83 c4 18             	add    $0x18,%esp
    91b4:	5b                   	pop    %ebx
    91b5:	e9 46 fb ff ff       	jmp    8d00 <alu_test_idiv>

000091ba <__x86.get_pc_thunk.bp>:
    91ba:	8b 2c 24             	mov    (%esp),%ebp
    91bd:	c3                   	ret    
    91be:	66 90                	xchg   %ax,%ax

000091c0 <fpu_test_add>:
    91c0:	55                   	push   %ebp
    91c1:	57                   	push   %edi
    91c2:	56                   	push   %esi
    91c3:	53                   	push   %ebx
    91c4:	e8 f7 9a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    91c9:	81 c3 37 1e 02 00    	add    $0x21e37,%ebx
    91cf:	81 ec cc 00 00 00    	sub    $0xcc,%esp
    91d5:	8d 83 50 1e 05 00    	lea    0x51e50(%ebx),%eax
    91db:	8d b4 24 c0 00 00 00 	lea    0xc0(%esp),%esi
    91e2:	d9 00                	flds   (%eax)
    91e4:	8d 83 54 1e 05 00    	lea    0x51e54(%ebx),%eax
    91ea:	d9 54 24 18          	fsts   0x18(%esp)
    91ee:	d9 54 24 2c          	fsts   0x2c(%esp)
    91f2:	d9 00                	flds   (%eax)
    91f4:	8d 83 64 1e 05 00    	lea    0x51e64(%ebx),%eax
    91fa:	d9 5c 24 30          	fstps  0x30(%esp)
    91fe:	d9 00                	flds   (%eax)
    9200:	8d 83 58 1e 05 00    	lea    0x51e58(%ebx),%eax
    9206:	d9 5c 24 34          	fstps  0x34(%esp)
    920a:	d9 00                	flds   (%eax)
    920c:	8d 83 6c 1e 05 00    	lea    0x51e6c(%ebx),%eax
    9212:	d9 5c 24 38          	fstps  0x38(%esp)
    9216:	d9 00                	flds   (%eax)
    9218:	8d 83 70 1e 05 00    	lea    0x51e70(%ebx),%eax
    921e:	d9 5c 24 3c          	fstps  0x3c(%esp)
    9222:	d9 00                	flds   (%eax)
    9224:	8d 83 5c 1e 05 00    	lea    0x51e5c(%ebx),%eax
    922a:	d9 5c 24 40          	fstps  0x40(%esp)
    922e:	d9 00                	flds   (%eax)
    9230:	8d 83 68 1e 05 00    	lea    0x51e68(%ebx),%eax
    9236:	d9 5c 24 44          	fstps  0x44(%esp)
    923a:	d9 00                	flds   (%eax)
    923c:	8d 83 4c 1e 05 00    	lea    0x51e4c(%ebx),%eax
    9242:	d9 5c 24 48          	fstps  0x48(%esp)
    9246:	d9 00                	flds   (%eax)
    9248:	d9 5c 24 4c          	fstps  0x4c(%esp)
    924c:	8d 83 74 1e 05 00    	lea    0x51e74(%ebx),%eax
    9252:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
    9259:	4b 
    925a:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
    9261:	3f 
    9262:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
    9269:	3f 
    926a:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
    9271:	3f 
    9272:	d9 00                	flds   (%eax)
    9274:	8d 83 78 1e 05 00    	lea    0x51e78(%ebx),%eax
    927a:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
    9281:	3f 
    9282:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
    9289:	3f 
    928a:	d9 5c 24 50          	fstps  0x50(%esp)
    928e:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
    9295:	3f 
    9296:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
    929d:	3f 
    929e:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
    92a5:	00 00 00 3f 
    92a9:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
    92b0:	cd cc cc 3e 
    92b4:	d9 00                	flds   (%eax)
    92b6:	8d 83 60 1e 05 00    	lea    0x51e60(%ebx),%eax
    92bc:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
    92c3:	9a 99 99 3e 
    92c7:	d9 5c 24 54          	fstps  0x54(%esp)
    92cb:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
    92d2:	cd cc 4c 3e 
    92d6:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
    92dd:	cd cc cc 3d 
    92e1:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
    92e8:	cd cc cc bd 
    92ec:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
    92f3:	cd cc 4c be 
    92f7:	d9 00                	flds   (%eax)
    92f9:	8d 83 7c 1e 05 00    	lea    0x51e7c(%ebx),%eax
    92ff:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
    9306:	9a 99 99 be 
    930a:	d9 5c 24 58          	fstps  0x58(%esp)
    930e:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
    9315:	cd cc cc be 
    9319:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
    9320:	00 00 00 bf 
    9324:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
    932b:	9a 99 19 bf 
    932f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
    9336:	33 33 33 bf 
    933a:	d9 00                	flds   (%eax)
    933c:	8d 44 24 30          	lea    0x30(%esp),%eax
    9340:	d9 5c 24 5c          	fstps  0x5c(%esp)
    9344:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
    934b:	cd cc 4c bf 
    934f:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
    9356:	66 66 66 bf 
    935a:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
    9361:	00 00 80 bf 
    9365:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
    936c:	80 96 18 cb 
    9370:	d9 5c 24 10          	fstps  0x10(%esp)
    9374:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    9378:	89 44 24 14          	mov    %eax,0x14(%esp)
    937c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9380:	8b 7c 24 10          	mov    0x10(%esp),%edi
    9384:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
    9388:	8b 44 24 18          	mov    0x18(%esp),%eax
    938c:	eb 08                	jmp    9396 <fpu_test_add+0x1d6>
    938e:	66 90                	xchg   %ax,%ax
    9390:	8b 45 00             	mov    0x0(%ebp),%eax
    9393:	83 c5 04             	add    $0x4,%ebp
    9396:	89 44 24 0c          	mov    %eax,0xc(%esp)
    939a:	83 ec 08             	sub    $0x8,%esp
    939d:	d9 44 24 14          	flds   0x14(%esp)
    93a1:	d8 44 24 18          	fadds  0x18(%esp)
    93a5:	d9 5c 24 14          	fstps  0x14(%esp)
    93a9:	57                   	push   %edi
    93aa:	50                   	push   %eax
    93ab:	e8 70 0b 00 00       	call   9f20 <internal_float_add>
    93b0:	83 c4 10             	add    $0x10,%esp
    93b3:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    93b7:	0f 85 b4 00 00 00    	jne    9471 <fpu_test_add+0x2b1>
    93bd:	39 f5                	cmp    %esi,%ebp
    93bf:	75 cf                	jne    9390 <fpu_test_add+0x1d0>
    93c1:	8b 44 24 14          	mov    0x14(%esp),%eax
    93c5:	39 c6                	cmp    %eax,%esi
    93c7:	74 0f                	je     93d8 <fpu_test_add+0x218>
    93c9:	d9 00                	flds   (%eax)
    93cb:	83 c0 04             	add    $0x4,%eax
    93ce:	89 44 24 14          	mov    %eax,0x14(%esp)
    93d2:	d9 5c 24 10          	fstps  0x10(%esp)
    93d6:	eb a8                	jmp    9380 <fpu_test_add+0x1c0>
    93d8:	83 ec 0c             	sub    $0xc,%esp
    93db:	be 40 42 0f 00       	mov    $0xf4240,%esi
    93e0:	6a 00                	push   $0x0
    93e2:	e8 89 92 ff ff       	call   2670 <time@plt>
    93e7:	89 04 24             	mov    %eax,(%esp)
    93ea:	e8 01 93 ff ff       	call   26f0 <srand@plt>
    93ef:	83 c4 10             	add    $0x10,%esp
    93f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    93f8:	e8 53 93 ff ff       	call   2750 <rand@plt>
    93fd:	89 c7                	mov    %eax,%edi
    93ff:	89 44 24 10          	mov    %eax,0x10(%esp)
    9403:	e8 48 93 ff ff       	call   2750 <rand@plt>
    9408:	89 fa                	mov    %edi,%edx
    940a:	c1 ea 10             	shr    $0x10,%edx
    940d:	66 81 e2 80 7f       	and    $0x7f80,%dx
    9412:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    9417:	74 39                	je     9452 <fpu_test_add+0x292>
    9419:	89 c2                	mov    %eax,%edx
    941b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    941f:	c1 ea 10             	shr    $0x10,%edx
    9422:	d9 44 24 0c          	flds   0xc(%esp)
    9426:	66 81 e2 80 7f       	and    $0x7f80,%dx
    942b:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    9430:	74 1e                	je     9450 <fpu_test_add+0x290>
    9432:	d8 44 24 10          	fadds  0x10(%esp)
    9436:	83 ec 08             	sub    $0x8,%esp
    9439:	d9 5c 24 14          	fstps  0x14(%esp)
    943d:	57                   	push   %edi
    943e:	50                   	push   %eax
    943f:	e8 dc 0a 00 00       	call   9f20 <internal_float_add>
    9444:	83 c4 10             	add    $0x10,%esp
    9447:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    944b:	75 40                	jne    948d <fpu_test_add+0x2cd>
    944d:	eb 03                	jmp    9452 <fpu_test_add+0x292>
    944f:	90                   	nop
    9450:	dd d8                	fstp   %st(0)
    9452:	83 ee 01             	sub    $0x1,%esi
    9455:	75 a1                	jne    93f8 <fpu_test_add+0x238>
    9457:	8d 83 9c 08 ff ff    	lea    -0xf764(%ebx),%eax
    945d:	83 ec 0c             	sub    $0xc,%esp
    9460:	50                   	push   %eax
    9461:	e8 9a 93 ff ff       	call   2800 <puts@plt>
    9466:	81 c4 dc 00 00 00    	add    $0xdc,%esp
    946c:	5b                   	pop    %ebx
    946d:	5e                   	pop    %esi
    946e:	5f                   	pop    %edi
    946f:	5d                   	pop    %ebp
    9470:	c3                   	ret    
    9471:	8d 83 84 09 ff ff    	lea    -0xf67c(%ebx),%eax
    9477:	50                   	push   %eax
    9478:	6a 1a                	push   $0x1a
    947a:	8d 83 51 08 ff ff    	lea    -0xf7af(%ebx),%eax
    9480:	50                   	push   %eax
    9481:	8d 83 69 08 ff ff    	lea    -0xf797(%ebx),%eax
    9487:	50                   	push   %eax
    9488:	e8 03 94 ff ff       	call   2890 <__assert_fail@plt>
    948d:	8d 83 84 09 ff ff    	lea    -0xf67c(%ebx),%eax
    9493:	50                   	push   %eax
    9494:	6a 25                	push   $0x25
    9496:	eb e2                	jmp    947a <fpu_test_add+0x2ba>
    9498:	90                   	nop
    9499:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000094a0 <fpu_test_sub>:
    94a0:	55                   	push   %ebp
    94a1:	57                   	push   %edi
    94a2:	56                   	push   %esi
    94a3:	53                   	push   %ebx
    94a4:	e8 17 98 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    94a9:	81 c3 57 1b 02 00    	add    $0x21b57,%ebx
    94af:	81 ec cc 00 00 00    	sub    $0xcc,%esp
    94b5:	8d 83 50 1e 05 00    	lea    0x51e50(%ebx),%eax
    94bb:	8d b4 24 c0 00 00 00 	lea    0xc0(%esp),%esi
    94c2:	d9 00                	flds   (%eax)
    94c4:	8d 83 54 1e 05 00    	lea    0x51e54(%ebx),%eax
    94ca:	d9 54 24 18          	fsts   0x18(%esp)
    94ce:	d9 54 24 2c          	fsts   0x2c(%esp)
    94d2:	d9 00                	flds   (%eax)
    94d4:	8d 83 64 1e 05 00    	lea    0x51e64(%ebx),%eax
    94da:	d9 5c 24 30          	fstps  0x30(%esp)
    94de:	d9 00                	flds   (%eax)
    94e0:	8d 83 58 1e 05 00    	lea    0x51e58(%ebx),%eax
    94e6:	d9 5c 24 34          	fstps  0x34(%esp)
    94ea:	d9 00                	flds   (%eax)
    94ec:	8d 83 6c 1e 05 00    	lea    0x51e6c(%ebx),%eax
    94f2:	d9 5c 24 38          	fstps  0x38(%esp)
    94f6:	d9 00                	flds   (%eax)
    94f8:	8d 83 70 1e 05 00    	lea    0x51e70(%ebx),%eax
    94fe:	d9 5c 24 3c          	fstps  0x3c(%esp)
    9502:	d9 00                	flds   (%eax)
    9504:	8d 83 5c 1e 05 00    	lea    0x51e5c(%ebx),%eax
    950a:	d9 5c 24 40          	fstps  0x40(%esp)
    950e:	d9 00                	flds   (%eax)
    9510:	8d 83 68 1e 05 00    	lea    0x51e68(%ebx),%eax
    9516:	d9 5c 24 44          	fstps  0x44(%esp)
    951a:	d9 00                	flds   (%eax)
    951c:	8d 83 4c 1e 05 00    	lea    0x51e4c(%ebx),%eax
    9522:	d9 5c 24 48          	fstps  0x48(%esp)
    9526:	d9 00                	flds   (%eax)
    9528:	d9 5c 24 4c          	fstps  0x4c(%esp)
    952c:	8d 83 74 1e 05 00    	lea    0x51e74(%ebx),%eax
    9532:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
    9539:	4b 
    953a:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
    9541:	3f 
    9542:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
    9549:	3f 
    954a:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
    9551:	3f 
    9552:	d9 00                	flds   (%eax)
    9554:	8d 83 78 1e 05 00    	lea    0x51e78(%ebx),%eax
    955a:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
    9561:	3f 
    9562:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
    9569:	3f 
    956a:	d9 5c 24 50          	fstps  0x50(%esp)
    956e:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
    9575:	3f 
    9576:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
    957d:	3f 
    957e:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
    9585:	00 00 00 3f 
    9589:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
    9590:	cd cc cc 3e 
    9594:	d9 00                	flds   (%eax)
    9596:	8d 83 60 1e 05 00    	lea    0x51e60(%ebx),%eax
    959c:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
    95a3:	9a 99 99 3e 
    95a7:	d9 5c 24 54          	fstps  0x54(%esp)
    95ab:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
    95b2:	cd cc 4c 3e 
    95b6:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
    95bd:	cd cc cc 3d 
    95c1:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
    95c8:	cd cc cc bd 
    95cc:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
    95d3:	cd cc 4c be 
    95d7:	d9 00                	flds   (%eax)
    95d9:	8d 83 7c 1e 05 00    	lea    0x51e7c(%ebx),%eax
    95df:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
    95e6:	9a 99 99 be 
    95ea:	d9 5c 24 58          	fstps  0x58(%esp)
    95ee:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
    95f5:	cd cc cc be 
    95f9:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
    9600:	00 00 00 bf 
    9604:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
    960b:	9a 99 19 bf 
    960f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
    9616:	33 33 33 bf 
    961a:	d9 00                	flds   (%eax)
    961c:	8d 44 24 30          	lea    0x30(%esp),%eax
    9620:	d9 5c 24 5c          	fstps  0x5c(%esp)
    9624:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
    962b:	cd cc 4c bf 
    962f:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
    9636:	66 66 66 bf 
    963a:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
    9641:	00 00 80 bf 
    9645:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
    964c:	80 96 18 cb 
    9650:	d9 5c 24 10          	fstps  0x10(%esp)
    9654:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    9658:	89 44 24 14          	mov    %eax,0x14(%esp)
    965c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9660:	8b 7c 24 10          	mov    0x10(%esp),%edi
    9664:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
    9668:	8b 44 24 18          	mov    0x18(%esp),%eax
    966c:	eb 08                	jmp    9676 <fpu_test_sub+0x1d6>
    966e:	66 90                	xchg   %ax,%ax
    9670:	8b 45 00             	mov    0x0(%ebp),%eax
    9673:	83 c5 04             	add    $0x4,%ebp
    9676:	89 44 24 0c          	mov    %eax,0xc(%esp)
    967a:	83 ec 08             	sub    $0x8,%esp
    967d:	d9 44 24 14          	flds   0x14(%esp)
    9681:	d8 6c 24 18          	fsubrs 0x18(%esp)
    9685:	d9 5c 24 14          	fstps  0x14(%esp)
    9689:	57                   	push   %edi
    968a:	50                   	push   %eax
    968b:	e8 d0 0b 00 00       	call   a260 <internal_float_sub>
    9690:	83 c4 10             	add    $0x10,%esp
    9693:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    9697:	0f 85 b4 00 00 00    	jne    9751 <fpu_test_sub+0x2b1>
    969d:	39 f5                	cmp    %esi,%ebp
    969f:	75 cf                	jne    9670 <fpu_test_sub+0x1d0>
    96a1:	8b 44 24 14          	mov    0x14(%esp),%eax
    96a5:	39 c6                	cmp    %eax,%esi
    96a7:	74 0f                	je     96b8 <fpu_test_sub+0x218>
    96a9:	d9 00                	flds   (%eax)
    96ab:	83 c0 04             	add    $0x4,%eax
    96ae:	89 44 24 14          	mov    %eax,0x14(%esp)
    96b2:	d9 5c 24 10          	fstps  0x10(%esp)
    96b6:	eb a8                	jmp    9660 <fpu_test_sub+0x1c0>
    96b8:	83 ec 0c             	sub    $0xc,%esp
    96bb:	be 40 42 0f 00       	mov    $0xf4240,%esi
    96c0:	6a 00                	push   $0x0
    96c2:	e8 a9 8f ff ff       	call   2670 <time@plt>
    96c7:	89 04 24             	mov    %eax,(%esp)
    96ca:	e8 21 90 ff ff       	call   26f0 <srand@plt>
    96cf:	83 c4 10             	add    $0x10,%esp
    96d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    96d8:	e8 73 90 ff ff       	call   2750 <rand@plt>
    96dd:	89 c7                	mov    %eax,%edi
    96df:	89 44 24 10          	mov    %eax,0x10(%esp)
    96e3:	e8 68 90 ff ff       	call   2750 <rand@plt>
    96e8:	89 fa                	mov    %edi,%edx
    96ea:	c1 ea 10             	shr    $0x10,%edx
    96ed:	66 81 e2 80 7f       	and    $0x7f80,%dx
    96f2:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    96f7:	74 39                	je     9732 <fpu_test_sub+0x292>
    96f9:	89 c2                	mov    %eax,%edx
    96fb:	89 44 24 0c          	mov    %eax,0xc(%esp)
    96ff:	c1 ea 10             	shr    $0x10,%edx
    9702:	d9 44 24 0c          	flds   0xc(%esp)
    9706:	66 81 e2 80 7f       	and    $0x7f80,%dx
    970b:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    9710:	74 1e                	je     9730 <fpu_test_sub+0x290>
    9712:	d8 6c 24 10          	fsubrs 0x10(%esp)
    9716:	83 ec 08             	sub    $0x8,%esp
    9719:	d9 5c 24 14          	fstps  0x14(%esp)
    971d:	57                   	push   %edi
    971e:	50                   	push   %eax
    971f:	e8 3c 0b 00 00       	call   a260 <internal_float_sub>
    9724:	83 c4 10             	add    $0x10,%esp
    9727:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    972b:	75 40                	jne    976d <fpu_test_sub+0x2cd>
    972d:	eb 03                	jmp    9732 <fpu_test_sub+0x292>
    972f:	90                   	nop
    9730:	dd d8                	fstp   %st(0)
    9732:	83 ee 01             	sub    $0x1,%esi
    9735:	75 a1                	jne    96d8 <fpu_test_sub+0x238>
    9737:	8d 83 bc 08 ff ff    	lea    -0xf744(%ebx),%eax
    973d:	83 ec 0c             	sub    $0xc,%esp
    9740:	50                   	push   %eax
    9741:	e8 ba 90 ff ff       	call   2800 <puts@plt>
    9746:	81 c4 dc 00 00 00    	add    $0xdc,%esp
    974c:	5b                   	pop    %ebx
    974d:	5e                   	pop    %esi
    974e:	5f                   	pop    %edi
    974f:	5d                   	pop    %ebp
    9750:	c3                   	ret    
    9751:	8d 83 74 09 ff ff    	lea    -0xf68c(%ebx),%eax
    9757:	50                   	push   %eax
    9758:	6a 3a                	push   $0x3a
    975a:	8d 83 51 08 ff ff    	lea    -0xf7af(%ebx),%eax
    9760:	50                   	push   %eax
    9761:	8d 83 69 08 ff ff    	lea    -0xf797(%ebx),%eax
    9767:	50                   	push   %eax
    9768:	e8 23 91 ff ff       	call   2890 <__assert_fail@plt>
    976d:	8d 83 74 09 ff ff    	lea    -0xf68c(%ebx),%eax
    9773:	50                   	push   %eax
    9774:	6a 45                	push   $0x45
    9776:	eb e2                	jmp    975a <fpu_test_sub+0x2ba>
    9778:	90                   	nop
    9779:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009780 <fpu_test_div>:
    9780:	55                   	push   %ebp
    9781:	57                   	push   %edi
    9782:	56                   	push   %esi
    9783:	53                   	push   %ebx
    9784:	e8 37 95 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    9789:	81 c3 77 18 02 00    	add    $0x21877,%ebx
    978f:	81 ec cc 00 00 00    	sub    $0xcc,%esp
    9795:	8d 83 50 1e 05 00    	lea    0x51e50(%ebx),%eax
    979b:	8d b4 24 c0 00 00 00 	lea    0xc0(%esp),%esi
    97a2:	d9 00                	flds   (%eax)
    97a4:	8d 83 54 1e 05 00    	lea    0x51e54(%ebx),%eax
    97aa:	d9 54 24 18          	fsts   0x18(%esp)
    97ae:	d9 54 24 2c          	fsts   0x2c(%esp)
    97b2:	d9 00                	flds   (%eax)
    97b4:	8d 83 64 1e 05 00    	lea    0x51e64(%ebx),%eax
    97ba:	d9 5c 24 30          	fstps  0x30(%esp)
    97be:	d9 00                	flds   (%eax)
    97c0:	8d 83 58 1e 05 00    	lea    0x51e58(%ebx),%eax
    97c6:	d9 5c 24 34          	fstps  0x34(%esp)
    97ca:	d9 00                	flds   (%eax)
    97cc:	8d 83 6c 1e 05 00    	lea    0x51e6c(%ebx),%eax
    97d2:	d9 5c 24 38          	fstps  0x38(%esp)
    97d6:	d9 00                	flds   (%eax)
    97d8:	8d 83 70 1e 05 00    	lea    0x51e70(%ebx),%eax
    97de:	d9 5c 24 3c          	fstps  0x3c(%esp)
    97e2:	d9 00                	flds   (%eax)
    97e4:	8d 83 5c 1e 05 00    	lea    0x51e5c(%ebx),%eax
    97ea:	d9 5c 24 40          	fstps  0x40(%esp)
    97ee:	d9 00                	flds   (%eax)
    97f0:	8d 83 68 1e 05 00    	lea    0x51e68(%ebx),%eax
    97f6:	d9 5c 24 44          	fstps  0x44(%esp)
    97fa:	d9 00                	flds   (%eax)
    97fc:	8d 83 4c 1e 05 00    	lea    0x51e4c(%ebx),%eax
    9802:	d9 5c 24 48          	fstps  0x48(%esp)
    9806:	d9 00                	flds   (%eax)
    9808:	d9 5c 24 4c          	fstps  0x4c(%esp)
    980c:	8d 83 74 1e 05 00    	lea    0x51e74(%ebx),%eax
    9812:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
    9819:	4b 
    981a:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
    9821:	3f 
    9822:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
    9829:	3f 
    982a:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
    9831:	3f 
    9832:	d9 00                	flds   (%eax)
    9834:	8d 83 78 1e 05 00    	lea    0x51e78(%ebx),%eax
    983a:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
    9841:	3f 
    9842:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
    9849:	3f 
    984a:	d9 5c 24 50          	fstps  0x50(%esp)
    984e:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
    9855:	3f 
    9856:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
    985d:	3f 
    985e:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
    9865:	00 00 00 3f 
    9869:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
    9870:	cd cc cc 3e 
    9874:	d9 00                	flds   (%eax)
    9876:	8d 83 60 1e 05 00    	lea    0x51e60(%ebx),%eax
    987c:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
    9883:	9a 99 99 3e 
    9887:	d9 5c 24 54          	fstps  0x54(%esp)
    988b:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
    9892:	cd cc 4c 3e 
    9896:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
    989d:	cd cc cc 3d 
    98a1:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
    98a8:	cd cc cc bd 
    98ac:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
    98b3:	cd cc 4c be 
    98b7:	d9 00                	flds   (%eax)
    98b9:	8d 83 7c 1e 05 00    	lea    0x51e7c(%ebx),%eax
    98bf:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
    98c6:	9a 99 99 be 
    98ca:	d9 5c 24 58          	fstps  0x58(%esp)
    98ce:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
    98d5:	cd cc cc be 
    98d9:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
    98e0:	00 00 00 bf 
    98e4:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
    98eb:	9a 99 19 bf 
    98ef:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
    98f6:	33 33 33 bf 
    98fa:	d9 00                	flds   (%eax)
    98fc:	8d 44 24 30          	lea    0x30(%esp),%eax
    9900:	d9 5c 24 5c          	fstps  0x5c(%esp)
    9904:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
    990b:	cd cc 4c bf 
    990f:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
    9916:	66 66 66 bf 
    991a:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
    9921:	00 00 80 bf 
    9925:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
    992c:	80 96 18 cb 
    9930:	d9 5c 24 10          	fstps  0x10(%esp)
    9934:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    9938:	89 44 24 14          	mov    %eax,0x14(%esp)
    993c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9940:	8b 7c 24 10          	mov    0x10(%esp),%edi
    9944:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
    9948:	8b 44 24 18          	mov    0x18(%esp),%eax
    994c:	eb 08                	jmp    9956 <fpu_test_div+0x1d6>
    994e:	66 90                	xchg   %ax,%ax
    9950:	8b 45 00             	mov    0x0(%ebp),%eax
    9953:	83 c5 04             	add    $0x4,%ebp
    9956:	89 44 24 0c          	mov    %eax,0xc(%esp)
    995a:	83 ec 08             	sub    $0x8,%esp
    995d:	d9 44 24 14          	flds   0x14(%esp)
    9961:	d8 7c 24 18          	fdivrs 0x18(%esp)
    9965:	d9 5c 24 14          	fstps  0x14(%esp)
    9969:	57                   	push   %edi
    996a:	50                   	push   %eax
    996b:	e8 00 0e 00 00       	call   a770 <internal_float_div>
    9970:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    9974:	83 c4 10             	add    $0x10,%esp
    9977:	39 d0                	cmp    %edx,%eax
    9979:	74 0b                	je     9986 <fpu_test_div+0x206>
    997b:	29 c2                	sub    %eax,%edx
    997d:	83 fa 01             	cmp    $0x1,%edx
    9980:	0f 85 e4 00 00 00    	jne    9a6a <fpu_test_div+0x2ea>
    9986:	39 f5                	cmp    %esi,%ebp
    9988:	75 c6                	jne    9950 <fpu_test_div+0x1d0>
    998a:	8b 44 24 14          	mov    0x14(%esp),%eax
    998e:	39 c6                	cmp    %eax,%esi
    9990:	74 0f                	je     99a1 <fpu_test_div+0x221>
    9992:	d9 00                	flds   (%eax)
    9994:	83 c0 04             	add    $0x4,%eax
    9997:	89 44 24 14          	mov    %eax,0x14(%esp)
    999b:	d9 5c 24 10          	fstps  0x10(%esp)
    999f:	eb 9f                	jmp    9940 <fpu_test_div+0x1c0>
    99a1:	83 ec 0c             	sub    $0xc,%esp
    99a4:	be 40 42 0f 00       	mov    $0xf4240,%esi
    99a9:	6a 00                	push   $0x0
    99ab:	e8 c0 8c ff ff       	call   2670 <time@plt>
    99b0:	89 04 24             	mov    %eax,(%esp)
    99b3:	e8 38 8d ff ff       	call   26f0 <srand@plt>
    99b8:	83 c4 10             	add    $0x10,%esp
    99bb:	eb 16                	jmp    99d3 <fpu_test_div+0x253>
    99bd:	8d 76 00             	lea    0x0(%esi),%esi
    99c0:	dd d8                	fstp   %st(0)
    99c2:	eb 06                	jmp    99ca <fpu_test_div+0x24a>
    99c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    99c8:	dd d8                	fstp   %st(0)
    99ca:	83 ee 01             	sub    $0x1,%esi
    99cd:	0f 84 7d 00 00 00    	je     9a50 <fpu_test_div+0x2d0>
    99d3:	e8 78 8d ff ff       	call   2750 <rand@plt>
    99d8:	89 c7                	mov    %eax,%edi
    99da:	89 44 24 10          	mov    %eax,0x10(%esp)
    99de:	e8 6d 8d ff ff       	call   2750 <rand@plt>
    99e3:	89 fa                	mov    %edi,%edx
    99e5:	c1 ea 10             	shr    $0x10,%edx
    99e8:	66 81 e2 80 7f       	and    $0x7f80,%dx
    99ed:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    99f2:	74 d6                	je     99ca <fpu_test_div+0x24a>
    99f4:	89 c2                	mov    %eax,%edx
    99f6:	89 44 24 0c          	mov    %eax,0xc(%esp)
    99fa:	c1 ea 10             	shr    $0x10,%edx
    99fd:	d9 44 24 0c          	flds   0xc(%esp)
    9a01:	66 81 e2 80 7f       	and    $0x7f80,%dx
    9a06:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    9a0b:	0f 94 c1             	sete   %cl
    9a0e:	74 b0                	je     99c0 <fpu_test_div+0x240>
    9a10:	d9 ee                	fldz   
    9a12:	df e9                	fucomip %st(1),%st
    9a14:	0f 9b c2             	setnp  %dl
    9a17:	0f 45 d1             	cmovne %ecx,%edx
    9a1a:	84 d2                	test   %dl,%dl
    9a1c:	75 aa                	jne    99c8 <fpu_test_div+0x248>
    9a1e:	d8 7c 24 10          	fdivrs 0x10(%esp)
    9a22:	83 ec 08             	sub    $0x8,%esp
    9a25:	d9 5c 24 14          	fstps  0x14(%esp)
    9a29:	57                   	push   %edi
    9a2a:	50                   	push   %eax
    9a2b:	e8 40 0d 00 00       	call   a770 <internal_float_div>
    9a30:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    9a34:	83 c4 10             	add    $0x10,%esp
    9a37:	39 d0                	cmp    %edx,%eax
    9a39:	74 8f                	je     99ca <fpu_test_div+0x24a>
    9a3b:	29 c2                	sub    %eax,%edx
    9a3d:	83 fa 01             	cmp    $0x1,%edx
    9a40:	74 88                	je     99ca <fpu_test_div+0x24a>
    9a42:	8d 83 64 09 ff ff    	lea    -0xf69c(%ebx),%eax
    9a48:	50                   	push   %eax
    9a49:	6a 6e                	push   $0x6e
    9a4b:	eb 26                	jmp    9a73 <fpu_test_div+0x2f3>
    9a4d:	8d 76 00             	lea    0x0(%esi),%esi
    9a50:	8d 83 14 09 ff ff    	lea    -0xf6ec(%ebx),%eax
    9a56:	83 ec 0c             	sub    $0xc,%esp
    9a59:	50                   	push   %eax
    9a5a:	e8 a1 8d ff ff       	call   2800 <puts@plt>
    9a5f:	81 c4 dc 00 00 00    	add    $0xdc,%esp
    9a65:	5b                   	pop    %ebx
    9a66:	5e                   	pop    %esi
    9a67:	5f                   	pop    %edi
    9a68:	5d                   	pop    %ebp
    9a69:	c3                   	ret    
    9a6a:	8d 83 64 09 ff ff    	lea    -0xf69c(%ebx),%eax
    9a70:	50                   	push   %eax
    9a71:	6a 61                	push   $0x61
    9a73:	8d 83 51 08 ff ff    	lea    -0xf7af(%ebx),%eax
    9a79:	50                   	push   %eax
    9a7a:	8d 83 dc 08 ff ff    	lea    -0xf724(%ebx),%eax
    9a80:	50                   	push   %eax
    9a81:	e8 0a 8e ff ff       	call   2890 <__assert_fail@plt>
    9a86:	8d 76 00             	lea    0x0(%esi),%esi
    9a89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009a90 <fpu_test_mul>:
    9a90:	55                   	push   %ebp
    9a91:	57                   	push   %edi
    9a92:	56                   	push   %esi
    9a93:	53                   	push   %ebx
    9a94:	e8 27 92 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    9a99:	81 c3 67 15 02 00    	add    $0x21567,%ebx
    9a9f:	81 ec cc 00 00 00    	sub    $0xcc,%esp
    9aa5:	8d 83 50 1e 05 00    	lea    0x51e50(%ebx),%eax
    9aab:	8d b4 24 c0 00 00 00 	lea    0xc0(%esp),%esi
    9ab2:	d9 00                	flds   (%eax)
    9ab4:	8d 83 54 1e 05 00    	lea    0x51e54(%ebx),%eax
    9aba:	d9 54 24 18          	fsts   0x18(%esp)
    9abe:	d9 54 24 2c          	fsts   0x2c(%esp)
    9ac2:	d9 00                	flds   (%eax)
    9ac4:	8d 83 64 1e 05 00    	lea    0x51e64(%ebx),%eax
    9aca:	d9 5c 24 30          	fstps  0x30(%esp)
    9ace:	d9 00                	flds   (%eax)
    9ad0:	8d 83 58 1e 05 00    	lea    0x51e58(%ebx),%eax
    9ad6:	d9 5c 24 34          	fstps  0x34(%esp)
    9ada:	d9 00                	flds   (%eax)
    9adc:	8d 83 6c 1e 05 00    	lea    0x51e6c(%ebx),%eax
    9ae2:	d9 5c 24 38          	fstps  0x38(%esp)
    9ae6:	d9 00                	flds   (%eax)
    9ae8:	8d 83 70 1e 05 00    	lea    0x51e70(%ebx),%eax
    9aee:	d9 5c 24 3c          	fstps  0x3c(%esp)
    9af2:	d9 00                	flds   (%eax)
    9af4:	8d 83 5c 1e 05 00    	lea    0x51e5c(%ebx),%eax
    9afa:	d9 5c 24 40          	fstps  0x40(%esp)
    9afe:	d9 00                	flds   (%eax)
    9b00:	8d 83 68 1e 05 00    	lea    0x51e68(%ebx),%eax
    9b06:	d9 5c 24 44          	fstps  0x44(%esp)
    9b0a:	d9 00                	flds   (%eax)
    9b0c:	8d 83 4c 1e 05 00    	lea    0x51e4c(%ebx),%eax
    9b12:	d9 5c 24 48          	fstps  0x48(%esp)
    9b16:	d9 00                	flds   (%eax)
    9b18:	d9 5c 24 4c          	fstps  0x4c(%esp)
    9b1c:	8d 83 74 1e 05 00    	lea    0x51e74(%ebx),%eax
    9b22:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
    9b29:	4b 
    9b2a:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
    9b31:	3f 
    9b32:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
    9b39:	3f 
    9b3a:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
    9b41:	3f 
    9b42:	d9 00                	flds   (%eax)
    9b44:	8d 83 78 1e 05 00    	lea    0x51e78(%ebx),%eax
    9b4a:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
    9b51:	3f 
    9b52:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
    9b59:	3f 
    9b5a:	d9 5c 24 50          	fstps  0x50(%esp)
    9b5e:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
    9b65:	3f 
    9b66:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
    9b6d:	3f 
    9b6e:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
    9b75:	00 00 00 3f 
    9b79:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
    9b80:	cd cc cc 3e 
    9b84:	d9 00                	flds   (%eax)
    9b86:	8d 83 60 1e 05 00    	lea    0x51e60(%ebx),%eax
    9b8c:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
    9b93:	9a 99 99 3e 
    9b97:	d9 5c 24 54          	fstps  0x54(%esp)
    9b9b:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
    9ba2:	cd cc 4c 3e 
    9ba6:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
    9bad:	cd cc cc 3d 
    9bb1:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
    9bb8:	cd cc cc bd 
    9bbc:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
    9bc3:	cd cc 4c be 
    9bc7:	d9 00                	flds   (%eax)
    9bc9:	8d 83 7c 1e 05 00    	lea    0x51e7c(%ebx),%eax
    9bcf:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
    9bd6:	9a 99 99 be 
    9bda:	d9 5c 24 58          	fstps  0x58(%esp)
    9bde:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
    9be5:	cd cc cc be 
    9be9:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
    9bf0:	00 00 00 bf 
    9bf4:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
    9bfb:	9a 99 19 bf 
    9bff:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
    9c06:	33 33 33 bf 
    9c0a:	d9 00                	flds   (%eax)
    9c0c:	8d 44 24 30          	lea    0x30(%esp),%eax
    9c10:	d9 5c 24 5c          	fstps  0x5c(%esp)
    9c14:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
    9c1b:	cd cc 4c bf 
    9c1f:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
    9c26:	66 66 66 bf 
    9c2a:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
    9c31:	00 00 80 bf 
    9c35:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
    9c3c:	80 96 18 cb 
    9c40:	d9 5c 24 10          	fstps  0x10(%esp)
    9c44:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    9c48:	89 44 24 14          	mov    %eax,0x14(%esp)
    9c4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9c50:	8b 7c 24 10          	mov    0x10(%esp),%edi
    9c54:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
    9c58:	8b 44 24 18          	mov    0x18(%esp),%eax
    9c5c:	eb 08                	jmp    9c66 <fpu_test_mul+0x1d6>
    9c5e:	66 90                	xchg   %ax,%ax
    9c60:	8b 45 00             	mov    0x0(%ebp),%eax
    9c63:	83 c5 04             	add    $0x4,%ebp
    9c66:	89 44 24 0c          	mov    %eax,0xc(%esp)
    9c6a:	83 ec 08             	sub    $0x8,%esp
    9c6d:	d9 44 24 14          	flds   0x14(%esp)
    9c71:	d8 4c 24 18          	fmuls  0x18(%esp)
    9c75:	d9 5c 24 14          	fstps  0x14(%esp)
    9c79:	57                   	push   %edi
    9c7a:	50                   	push   %eax
    9c7b:	e8 70 06 00 00       	call   a2f0 <internal_float_mul>
    9c80:	83 c4 10             	add    $0x10,%esp
    9c83:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    9c87:	0f 85 b4 00 00 00    	jne    9d41 <fpu_test_mul+0x2b1>
    9c8d:	39 f5                	cmp    %esi,%ebp
    9c8f:	75 cf                	jne    9c60 <fpu_test_mul+0x1d0>
    9c91:	8b 44 24 14          	mov    0x14(%esp),%eax
    9c95:	39 c6                	cmp    %eax,%esi
    9c97:	74 0f                	je     9ca8 <fpu_test_mul+0x218>
    9c99:	d9 00                	flds   (%eax)
    9c9b:	83 c0 04             	add    $0x4,%eax
    9c9e:	89 44 24 14          	mov    %eax,0x14(%esp)
    9ca2:	d9 5c 24 10          	fstps  0x10(%esp)
    9ca6:	eb a8                	jmp    9c50 <fpu_test_mul+0x1c0>
    9ca8:	83 ec 0c             	sub    $0xc,%esp
    9cab:	be 40 42 0f 00       	mov    $0xf4240,%esi
    9cb0:	6a 00                	push   $0x0
    9cb2:	e8 b9 89 ff ff       	call   2670 <time@plt>
    9cb7:	89 04 24             	mov    %eax,(%esp)
    9cba:	e8 31 8a ff ff       	call   26f0 <srand@plt>
    9cbf:	83 c4 10             	add    $0x10,%esp
    9cc2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9cc8:	e8 83 8a ff ff       	call   2750 <rand@plt>
    9ccd:	89 c7                	mov    %eax,%edi
    9ccf:	89 44 24 10          	mov    %eax,0x10(%esp)
    9cd3:	e8 78 8a ff ff       	call   2750 <rand@plt>
    9cd8:	89 fa                	mov    %edi,%edx
    9cda:	c1 ea 10             	shr    $0x10,%edx
    9cdd:	66 81 e2 80 7f       	and    $0x7f80,%dx
    9ce2:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    9ce7:	74 39                	je     9d22 <fpu_test_mul+0x292>
    9ce9:	89 c2                	mov    %eax,%edx
    9ceb:	89 44 24 0c          	mov    %eax,0xc(%esp)
    9cef:	c1 ea 10             	shr    $0x10,%edx
    9cf2:	d9 44 24 0c          	flds   0xc(%esp)
    9cf6:	66 81 e2 80 7f       	and    $0x7f80,%dx
    9cfb:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    9d00:	74 1e                	je     9d20 <fpu_test_mul+0x290>
    9d02:	d8 4c 24 10          	fmuls  0x10(%esp)
    9d06:	83 ec 08             	sub    $0x8,%esp
    9d09:	d9 5c 24 14          	fstps  0x14(%esp)
    9d0d:	57                   	push   %edi
    9d0e:	50                   	push   %eax
    9d0f:	e8 dc 05 00 00       	call   a2f0 <internal_float_mul>
    9d14:	83 c4 10             	add    $0x10,%esp
    9d17:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    9d1b:	75 43                	jne    9d60 <fpu_test_mul+0x2d0>
    9d1d:	eb 03                	jmp    9d22 <fpu_test_mul+0x292>
    9d1f:	90                   	nop
    9d20:	dd d8                	fstp   %st(0)
    9d22:	83 ee 01             	sub    $0x1,%esi
    9d25:	75 a1                	jne    9cc8 <fpu_test_mul+0x238>
    9d27:	8d 83 34 09 ff ff    	lea    -0xf6cc(%ebx),%eax
    9d2d:	83 ec 0c             	sub    $0xc,%esp
    9d30:	50                   	push   %eax
    9d31:	e8 ca 8a ff ff       	call   2800 <puts@plt>
    9d36:	81 c4 dc 00 00 00    	add    $0xdc,%esp
    9d3c:	5b                   	pop    %ebx
    9d3d:	5e                   	pop    %esi
    9d3e:	5f                   	pop    %edi
    9d3f:	5d                   	pop    %ebp
    9d40:	c3                   	ret    
    9d41:	8d 83 54 09 ff ff    	lea    -0xf6ac(%ebx),%eax
    9d47:	50                   	push   %eax
    9d48:	68 87 00 00 00       	push   $0x87
    9d4d:	8d 83 51 08 ff ff    	lea    -0xf7af(%ebx),%eax
    9d53:	50                   	push   %eax
    9d54:	8d 83 69 08 ff ff    	lea    -0xf797(%ebx),%eax
    9d5a:	50                   	push   %eax
    9d5b:	e8 30 8b ff ff       	call   2890 <__assert_fail@plt>
    9d60:	8d 83 54 09 ff ff    	lea    -0xf6ac(%ebx),%eax
    9d66:	50                   	push   %eax
    9d67:	68 92 00 00 00       	push   $0x92
    9d6c:	eb df                	jmp    9d4d <fpu_test_mul+0x2bd>
    9d6e:	66 90                	xchg   %ax,%ax

00009d70 <fpu_test>:
    9d70:	53                   	push   %ebx
    9d71:	e8 4a 8f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    9d76:	81 c3 8a 12 02 00    	add    $0x2128a,%ebx
    9d7c:	83 ec 14             	sub    $0x14,%esp
    9d7f:	8d 83 80 08 ff ff    	lea    -0xf780(%ebx),%eax
    9d85:	50                   	push   %eax
    9d86:	e8 75 8a ff ff       	call   2800 <puts@plt>
    9d8b:	8d 83 50 1e 05 00    	lea    0x51e50(%ebx),%eax
    9d91:	80 60 03 7f          	andb   $0x7f,0x3(%eax)
    9d95:	66 81 60 02 7f 80    	andw   $0x807f,0x2(%eax)
    9d9b:	81 20 00 00 80 ff    	andl   $0xff800000,(%eax)
    9da1:	8d 83 54 1e 05 00    	lea    0x51e54(%ebx),%eax
    9da7:	80 48 03 80          	orb    $0x80,0x3(%eax)
    9dab:	66 81 60 02 7f 80    	andw   $0x807f,0x2(%eax)
    9db1:	81 20 00 00 80 ff    	andl   $0xff800000,(%eax)
    9db7:	8d 83 64 1e 05 00    	lea    0x51e64(%ebx),%eax
    9dbd:	80 60 03 7f          	andb   $0x7f,0x3(%eax)
    9dc1:	66 81 48 02 80 7f    	orw    $0x7f80,0x2(%eax)
    9dc7:	8d 83 58 1e 05 00    	lea    0x51e58(%ebx),%eax
    9dcd:	80 48 03 80          	orb    $0x80,0x3(%eax)
    9dd1:	66 81 48 02 80 7f    	orw    $0x7f80,0x2(%eax)
    9dd7:	8d 83 4c 1e 05 00    	lea    0x51e4c(%ebx),%eax
    9ddd:	80 60 03 7f          	andb   $0x7f,0x3(%eax)
    9de1:	66 81 48 02 80 7f    	orw    $0x7f80,0x2(%eax)
    9de7:	8b 10                	mov    (%eax),%edx
    9de9:	81 e2 00 00 80 ff    	and    $0xff800000,%edx
    9def:	81 ca 00 00 40 00    	or     $0x400000,%edx
    9df5:	89 10                	mov    %edx,(%eax)
    9df7:	8d 83 74 1e 05 00    	lea    0x51e74(%ebx),%eax
    9dfd:	80 48 03 80          	orb    $0x80,0x3(%eax)
    9e01:	66 81 48 02 80 7f    	orw    $0x7f80,0x2(%eax)
    9e07:	8b 10                	mov    (%eax),%edx
    9e09:	81 e2 00 00 80 ff    	and    $0xff800000,%edx
    9e0f:	81 ca 00 00 40 00    	or     $0x400000,%edx
    9e15:	89 10                	mov    %edx,(%eax)
    9e17:	8d 83 6c 1e 05 00    	lea    0x51e6c(%ebx),%eax
    9e1d:	80 60 03 7f          	andb   $0x7f,0x3(%eax)
    9e21:	66 81 60 02 7f 80    	andw   $0x807f,0x2(%eax)
    9e27:	8b 10                	mov    (%eax),%edx
    9e29:	81 e2 00 00 80 ff    	and    $0xff800000,%edx
    9e2f:	83 ca 01             	or     $0x1,%edx
    9e32:	89 10                	mov    %edx,(%eax)
    9e34:	8d 83 70 1e 05 00    	lea    0x51e70(%ebx),%eax
    9e3a:	80 60 03 7f          	andb   $0x7f,0x3(%eax)
    9e3e:	66 81 60 02 7f 80    	andw   $0x807f,0x2(%eax)
    9e44:	8b 10                	mov    (%eax),%edx
    9e46:	81 e2 00 00 80 ff    	and    $0xff800000,%edx
    9e4c:	83 ca 02             	or     $0x2,%edx
    9e4f:	89 10                	mov    %edx,(%eax)
    9e51:	8d 83 78 1e 05 00    	lea    0x51e78(%ebx),%eax
    9e57:	80 48 03 80          	orb    $0x80,0x3(%eax)
    9e5b:	66 81 60 02 7f 80    	andw   $0x807f,0x2(%eax)
    9e61:	8b 10                	mov    (%eax),%edx
    9e63:	81 e2 00 00 80 ff    	and    $0xff800000,%edx
    9e69:	81 ca 00 00 40 00    	or     $0x400000,%edx
    9e6f:	89 10                	mov    %edx,(%eax)
    9e71:	8d 83 60 1e 05 00    	lea    0x51e60(%ebx),%eax
    9e77:	80 60 03 7f          	andb   $0x7f,0x3(%eax)
    9e7b:	0f b7 50 02          	movzwl 0x2(%eax),%edx
    9e7f:	66 81 e2 7f 80       	and    $0x807f,%dx
    9e84:	80 ca 80             	or     $0x80,%dl
    9e87:	66 89 50 02          	mov    %dx,0x2(%eax)
    9e8b:	81 20 00 00 80 ff    	andl   $0xff800000,(%eax)
    9e91:	8d 83 7c 1e 05 00    	lea    0x51e7c(%ebx),%eax
    9e97:	80 60 03 7f          	andb   $0x7f,0x3(%eax)
    9e9b:	0f b7 50 02          	movzwl 0x2(%eax),%edx
    9e9f:	66 81 e2 7f 80       	and    $0x807f,%dx
    9ea4:	80 ca 80             	or     $0x80,%dl
    9ea7:	66 89 50 02          	mov    %dx,0x2(%eax)
    9eab:	8b 10                	mov    (%eax),%edx
    9ead:	81 e2 00 00 80 ff    	and    $0xff800000,%edx
    9eb3:	83 ca 01             	or     $0x1,%edx
    9eb6:	89 10                	mov    %edx,(%eax)
    9eb8:	8d 83 5c 1e 05 00    	lea    0x51e5c(%ebx),%eax
    9ebe:	80 60 03 7f          	andb   $0x7f,0x3(%eax)
    9ec2:	0f b7 50 02          	movzwl 0x2(%eax),%edx
    9ec6:	66 81 e2 7f 80       	and    $0x807f,%dx
    9ecb:	80 ce 7f             	or     $0x7f,%dh
    9ece:	66 89 50 02          	mov    %dx,0x2(%eax)
    9ed2:	8b 10                	mov    (%eax),%edx
    9ed4:	81 e2 00 00 80 ff    	and    $0xff800000,%edx
    9eda:	83 ca 01             	or     $0x1,%edx
    9edd:	89 10                	mov    %edx,(%eax)
    9edf:	8d 83 68 1e 05 00    	lea    0x51e68(%ebx),%eax
    9ee5:	80 48 03 80          	orb    $0x80,0x3(%eax)
    9ee9:	0f b7 50 02          	movzwl 0x2(%eax),%edx
    9eed:	66 81 e2 7f 80       	and    $0x807f,%dx
    9ef2:	80 ce 7f             	or     $0x7f,%dh
    9ef5:	66 89 50 02          	mov    %dx,0x2(%eax)
    9ef9:	8b 10                	mov    (%eax),%edx
    9efb:	81 e2 00 00 80 ff    	and    $0xff800000,%edx
    9f01:	83 ca 01             	or     $0x1,%edx
    9f04:	89 10                	mov    %edx,(%eax)
    9f06:	e8 b5 f2 ff ff       	call   91c0 <fpu_test_add>
    9f0b:	e8 90 f5 ff ff       	call   94a0 <fpu_test_sub>
    9f10:	e8 7b fb ff ff       	call   9a90 <fpu_test_mul>
    9f15:	83 c4 18             	add    $0x18,%esp
    9f18:	5b                   	pop    %ebx
    9f19:	e9 62 f8 ff ff       	jmp    9780 <fpu_test_div>
    9f1e:	66 90                	xchg   %ax,%ax

00009f20 <internal_float_add>:
    9f20:	55                   	push   %ebp
    9f21:	57                   	push   %edi
    9f22:	56                   	push   %esi
    9f23:	53                   	push   %ebx
    9f24:	31 db                	xor    %ebx,%ebx
    9f26:	e8 db 0f 00 00       	call   af06 <__x86.get_pc_thunk.si>
    9f2b:	81 c6 d5 10 02 00    	add    $0x210d5,%esi
    9f31:	83 ec 34             	sub    $0x34,%esp
    9f34:	8b 4c 24 48          	mov    0x48(%esp),%ecx
    9f38:	8b 54 24 4c          	mov    0x4c(%esp),%edx
    9f3c:	8d 86 80 11 00 00    	lea    0x1180(%esi),%eax
    9f42:	eb 0f                	jmp    9f53 <internal_float_add+0x33>
    9f44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9f48:	83 c3 01             	add    $0x1,%ebx
    9f4b:	83 c0 0c             	add    $0xc,%eax
    9f4e:	83 fb 0b             	cmp    $0xb,%ebx
    9f51:	74 1d                	je     9f70 <internal_float_add+0x50>
    9f53:	39 10                	cmp    %edx,(%eax)
    9f55:	75 f1                	jne    9f48 <internal_float_add+0x28>
    9f57:	39 48 04             	cmp    %ecx,0x4(%eax)
    9f5a:	75 ec                	jne    9f48 <internal_float_add+0x28>
    9f5c:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
    9f5f:	8b 84 86 88 11 00 00 	mov    0x1188(%esi,%eax,4),%eax
    9f66:	83 c4 34             	add    $0x34,%esp
    9f69:	5b                   	pop    %ebx
    9f6a:	5e                   	pop    %esi
    9f6b:	5f                   	pop    %edi
    9f6c:	5d                   	pop    %ebp
    9f6d:	c3                   	ret    
    9f6e:	66 90                	xchg   %ax,%ax
    9f70:	f7 c2 ff ff ff 7f    	test   $0x7fffffff,%edx
    9f76:	89 c8                	mov    %ecx,%eax
    9f78:	74 ec                	je     9f66 <internal_float_add+0x46>
    9f7a:	f7 c1 ff ff ff 7f    	test   $0x7fffffff,%ecx
    9f80:	89 d0                	mov    %edx,%eax
    9f82:	74 e2                	je     9f66 <internal_float_add+0x46>
    9f84:	89 d3                	mov    %edx,%ebx
    9f86:	89 d7                	mov    %edx,%edi
    9f88:	89 14 24             	mov    %edx,(%esp)
    9f8b:	c1 eb 10             	shr    $0x10,%ebx
    9f8e:	89 cd                	mov    %ecx,%ebp
    9f90:	66 81 e3 80 7f       	and    $0x7f80,%bx
    9f95:	66 81 fb 80 7f       	cmp    $0x7f80,%bx
    9f9a:	66 89 5c 24 0e       	mov    %bx,0xe(%esp)
    9f9f:	74 c5                	je     9f66 <internal_float_add+0x46>
    9fa1:	89 c8                	mov    %ecx,%eax
    9fa3:	c1 e8 10             	shr    $0x10,%eax
    9fa6:	89 c6                	mov    %eax,%esi
    9fa8:	66 81 e6 80 7f       	and    $0x7f80,%si
    9fad:	66 81 fe 80 7f       	cmp    $0x7f80,%si
    9fb2:	0f 84 83 02 00 00    	je     a23b <internal_float_add+0x31b>
    9fb8:	c1 ef 17             	shr    $0x17,%edi
    9fbb:	89 f8                	mov    %edi,%eax
    9fbd:	89 fb                	mov    %edi,%ebx
    9fbf:	88 44 24 10          	mov    %al,0x10(%esp)
    9fc3:	89 c8                	mov    %ecx,%eax
    9fc5:	c1 e8 17             	shr    $0x17,%eax
    9fc8:	38 c3                	cmp    %al,%bl
    9fca:	88 44 24 20          	mov    %al,0x20(%esp)
    9fce:	76 2c                	jbe    9ffc <internal_float_add+0xdc>
    9fd0:	89 cb                	mov    %ecx,%ebx
    9fd2:	89 0c 24             	mov    %ecx,(%esp)
    9fd5:	c1 e9 17             	shr    $0x17,%ecx
    9fd8:	c1 eb 10             	shr    $0x10,%ebx
    9fdb:	89 d5                	mov    %edx,%ebp
    9fdd:	89 7c 24 20          	mov    %edi,0x20(%esp)
    9fe1:	89 d8                	mov    %ebx,%eax
    9fe3:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    9fe7:	66 25 80 7f          	and    $0x7f80,%ax
    9feb:	66 89 44 24 0e       	mov    %ax,0xe(%esp)
    9ff0:	89 d0                	mov    %edx,%eax
    9ff2:	c1 e8 10             	shr    $0x10,%eax
    9ff5:	89 c6                	mov    %eax,%esi
    9ff7:	66 81 e6 80 7f       	and    $0x7f80,%si
    9ffc:	8b 04 24             	mov    (%esp),%eax
    9fff:	25 ff ff 7f 00       	and    $0x7fffff,%eax
    a004:	66 83 7c 24 0e 00    	cmpw   $0x0,0xe(%esp)
    a00a:	0f 85 d0 00 00 00    	jne    a0e0 <internal_float_add+0x1c0>
    a010:	89 ef                	mov    %ebp,%edi
    a012:	81 e7 ff ff 7f 00    	and    $0x7fffff,%edi
    a018:	66 85 f6             	test   %si,%si
    a01b:	0f 84 da 00 00 00    	je     a0fb <internal_float_add+0x1db>
    a021:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
    a026:	0f b6 4c 24 10       	movzbl 0x10(%esp),%ecx
    a02b:	81 cf 00 00 80 00    	or     $0x800000,%edi
    a031:	89 d3                	mov    %edx,%ebx
    a033:	29 cb                	sub    %ecx,%ebx
    a035:	89 d9                	mov    %ebx,%ecx
    a037:	83 e9 01             	sub    $0x1,%ecx
    a03a:	c1 e0 03             	shl    $0x3,%eax
    a03d:	c1 e7 03             	shl    $0x3,%edi
    a040:	85 c9                	test   %ecx,%ecx
    a042:	74 1c                	je     a060 <internal_float_add+0x140>
    a044:	31 db                	xor    %ebx,%ebx
    a046:	8d 76 00             	lea    0x0(%esi),%esi
    a049:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    a050:	89 c6                	mov    %eax,%esi
    a052:	d1 e8                	shr    %eax
    a054:	83 e6 01             	and    $0x1,%esi
    a057:	09 f3                	or     %esi,%ebx
    a059:	09 d8                	or     %ebx,%eax
    a05b:	83 e9 01             	sub    $0x1,%ecx
    a05e:	75 f0                	jne    a050 <internal_float_add+0x130>
    a060:	8b 1c 24             	mov    (%esp),%ebx
    a063:	89 c1                	mov    %eax,%ecx
    a065:	f7 d9                	neg    %ecx
    a067:	c1 eb 18             	shr    $0x18,%ebx
    a06a:	84 db                	test   %bl,%bl
    a06c:	89 eb                	mov    %ebp,%ebx
    a06e:	0f 48 c1             	cmovs  %ecx,%eax
    a071:	89 f9                	mov    %edi,%ecx
    a073:	c1 eb 18             	shr    $0x18,%ebx
    a076:	f7 d9                	neg    %ecx
    a078:	84 db                	test   %bl,%bl
    a07a:	0f 48 f9             	cmovs  %ecx,%edi
    a07d:	31 ed                	xor    %ebp,%ebp
    a07f:	01 f8                	add    %edi,%eax
    a081:	0f 88 8a 01 00 00    	js     a211 <internal_float_add+0x2f1>
    a087:	31 db                	xor    %ebx,%ebx
    a089:	89 c6                	mov    %eax,%esi
    a08b:	89 04 24             	mov    %eax,(%esp)
    a08e:	89 df                	mov    %ebx,%edi
    a090:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    a094:	c1 ef 1a             	shr    $0x1a,%edi
    a097:	0f ac de 1a          	shrd   $0x1a,%ebx,%esi
    a09b:	83 ff 00             	cmp    $0x0,%edi
    a09e:	77 05                	ja     a0a5 <internal_float_add+0x185>
    a0a0:	83 fe 01             	cmp    $0x1,%esi
    a0a3:	76 6b                	jbe    a110 <internal_float_add+0x1f0>
    a0a5:	81 fa ff 00 00 00    	cmp    $0xff,%edx
    a0ab:	0f 85 ef 00 00 00    	jne    a1a0 <internal_float_add+0x280>
    a0b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a0b8:	31 c9                	xor    %ecx,%ecx
    a0ba:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    a0bf:	89 e8                	mov    %ebp,%eax
    a0c1:	0f b6 d2             	movzbl %dl,%edx
    a0c4:	83 c4 34             	add    $0x34,%esp
    a0c7:	0f b6 c0             	movzbl %al,%eax
    a0ca:	c1 e2 17             	shl    $0x17,%edx
    a0cd:	81 e1 ff ff 7f 00    	and    $0x7fffff,%ecx
    a0d3:	c1 e0 1f             	shl    $0x1f,%eax
    a0d6:	09 d0                	or     %edx,%eax
    a0d8:	5b                   	pop    %ebx
    a0d9:	09 c8                	or     %ecx,%eax
    a0db:	5e                   	pop    %esi
    a0dc:	5f                   	pop    %edi
    a0dd:	5d                   	pop    %ebp
    a0de:	c3                   	ret    
    a0df:	90                   	nop
    a0e0:	89 ef                	mov    %ebp,%edi
    a0e2:	0d 00 00 80 00       	or     $0x800000,%eax
    a0e7:	81 e7 ff ff 7f 00    	and    $0x7fffff,%edi
    a0ed:	89 fa                	mov    %edi,%edx
    a0ef:	81 ca 00 00 80 00    	or     $0x800000,%edx
    a0f5:	66 85 f6             	test   %si,%si
    a0f8:	0f 45 fa             	cmovne %edx,%edi
    a0fb:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
    a100:	0f b6 4c 24 10       	movzbl 0x10(%esp),%ecx
    a105:	89 d3                	mov    %edx,%ebx
    a107:	29 cb                	sub    %ecx,%ebx
    a109:	89 d9                	mov    %ebx,%ecx
    a10b:	e9 2a ff ff ff       	jmp    a03a <internal_float_add+0x11a>
    a110:	89 f9                	mov    %edi,%ecx
    a112:	09 f1                	or     %esi,%ecx
    a114:	0f 85 28 01 00 00    	jne    a242 <internal_float_add+0x322>
    a11a:	85 d2                	test   %edx,%edx
    a11c:	0f 84 24 01 00 00    	je     a246 <internal_float_add+0x326>
    a122:	8b 0c 24             	mov    (%esp),%ecx
    a125:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    a129:	89 e8                	mov    %ebp,%eax
    a12b:	88 44 24 0e          	mov    %al,0xe(%esp)
    a12f:	89 dd                	mov    %ebx,%ebp
    a131:	89 c8                	mov    %ecx,%eax
    a133:	eb 0f                	jmp    a144 <internal_float_add+0x224>
    a135:	8d 76 00             	lea    0x0(%esi),%esi
    a138:	85 d2                	test   %edx,%edx
    a13a:	0f 84 0a 01 00 00    	je     a24a <internal_float_add+0x32a>
    a140:	89 c8                	mov    %ecx,%eax
    a142:	89 dd                	mov    %ebx,%ebp
    a144:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
    a148:	01 c9                	add    %ecx,%ecx
    a14a:	83 ea 01             	sub    $0x1,%edx
    a14d:	89 df                	mov    %ebx,%edi
    a14f:	89 ce                	mov    %ecx,%esi
    a151:	0f ac fe 1a          	shrd   $0x1a,%edi,%esi
    a155:	c1 ef 1a             	shr    $0x1a,%edi
    a158:	89 7c 24 04          	mov    %edi,0x4(%esp)
    a15c:	8b 7c 24 04          	mov    0x4(%esp),%edi
    a160:	89 34 24             	mov    %esi,(%esp)
    a163:	09 f7                	or     %esi,%edi
    a165:	74 d1                	je     a138 <internal_float_add+0x218>
    a167:	85 d2                	test   %edx,%edx
    a169:	89 c6                	mov    %eax,%esi
    a16b:	89 0c 24             	mov    %ecx,(%esp)
    a16e:	89 e8                	mov    %ebp,%eax
    a170:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    a174:	0f b6 6c 24 0e       	movzbl 0xe(%esp),%ebp
    a179:	75 4f                	jne    a1ca <internal_float_add+0x2aa>
    a17b:	8b 14 24             	mov    (%esp),%edx
    a17e:	89 44 24 04          	mov    %eax,0x4(%esp)
    a182:	83 e2 03             	and    $0x3,%edx
    a185:	85 d2                	test   %edx,%edx
    a187:	0f 95 c2             	setne  %dl
    a18a:	0f b6 d2             	movzbl %dl,%edx
    a18d:	09 f2                	or     %esi,%edx
    a18f:	89 14 24             	mov    %edx,(%esp)
    a192:	31 d2                	xor    %edx,%edx
    a194:	eb 34                	jmp    a1ca <internal_float_add+0x2aa>
    a196:	8d 76 00             	lea    0x0(%esi),%esi
    a199:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    a1a0:	31 ff                	xor    %edi,%edi
    a1a2:	89 c6                	mov    %eax,%esi
    a1a4:	0f ac fe 01          	shrd   $0x1,%edi,%esi
    a1a8:	d1 ef                	shr    %edi
    a1aa:	a8 03                	test   $0x3,%al
    a1ac:	0f 95 c0             	setne  %al
    a1af:	83 c2 01             	add    $0x1,%edx
    a1b2:	89 7c 24 04          	mov    %edi,0x4(%esp)
    a1b6:	0f b6 c0             	movzbl %al,%eax
    a1b9:	09 f0                	or     %esi,%eax
    a1bb:	81 fa ff 00 00 00    	cmp    $0xff,%edx
    a1c1:	89 04 24             	mov    %eax,(%esp)
    a1c4:	0f 84 ee fe ff ff    	je     a0b8 <internal_float_add+0x198>
    a1ca:	8b 0c 24             	mov    (%esp),%ecx
    a1cd:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    a1d1:	89 c8                	mov    %ecx,%eax
    a1d3:	83 e0 07             	and    $0x7,%eax
    a1d6:	83 f8 04             	cmp    $0x4,%eax
    a1d9:	76 42                	jbe    a21d <internal_float_add+0x2fd>
    a1db:	0f ac d9 03          	shrd   $0x3,%ebx,%ecx
    a1df:	c1 eb 03             	shr    $0x3,%ebx
    a1e2:	83 c1 01             	add    $0x1,%ecx
    a1e5:	83 d3 00             	adc    $0x0,%ebx
    a1e8:	89 ce                	mov    %ecx,%esi
    a1ea:	0f ac de 17          	shrd   $0x17,%ebx,%esi
    a1ee:	89 df                	mov    %ebx,%edi
    a1f0:	c1 ef 17             	shr    $0x17,%edi
    a1f3:	89 f0                	mov    %esi,%eax
    a1f5:	83 f0 02             	xor    $0x2,%eax
    a1f8:	89 fe                	mov    %edi,%esi
    a1fa:	09 c6                	or     %eax,%esi
    a1fc:	75 08                	jne    a206 <internal_float_add+0x2e6>
    a1fe:	83 c2 01             	add    $0x1,%edx
    a201:	b9 00 00 80 00       	mov    $0x800000,%ecx
    a206:	81 e1 ff ff 7f 00    	and    $0x7fffff,%ecx
    a20c:	e9 ae fe ff ff       	jmp    a0bf <internal_float_add+0x19f>
    a211:	f7 d8                	neg    %eax
    a213:	bd 01 00 00 00       	mov    $0x1,%ebp
    a218:	e9 6a fe ff ff       	jmp    a087 <internal_float_add+0x167>
    a21d:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    a221:	8b 0c 24             	mov    (%esp),%ecx
    a224:	0f ac d9 03          	shrd   $0x3,%ebx,%ecx
    a228:	c1 eb 03             	shr    $0x3,%ebx
    a22b:	83 f8 04             	cmp    $0x4,%eax
    a22e:	75 d6                	jne    a206 <internal_float_add+0x2e6>
    a230:	89 c8                	mov    %ecx,%eax
    a232:	83 e0 01             	and    $0x1,%eax
    a235:	85 c0                	test   %eax,%eax
    a237:	74 cd                	je     a206 <internal_float_add+0x2e6>
    a239:	eb a7                	jmp    a1e2 <internal_float_add+0x2c2>
    a23b:	89 c8                	mov    %ecx,%eax
    a23d:	e9 24 fd ff ff       	jmp    9f66 <internal_float_add+0x46>
    a242:	85 d2                	test   %edx,%edx
    a244:	75 84                	jne    a1ca <internal_float_add+0x2aa>
    a246:	89 f2                	mov    %esi,%edx
    a248:	eb 80                	jmp    a1ca <internal_float_add+0x2aa>
    a24a:	89 c6                	mov    %eax,%esi
    a24c:	89 0c 24             	mov    %ecx,(%esp)
    a24f:	89 e8                	mov    %ebp,%eax
    a251:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    a255:	0f b6 6c 24 0e       	movzbl 0xe(%esp),%ebp
    a25a:	e9 1c ff ff ff       	jmp    a17b <internal_float_add+0x25b>
    a25f:	90                   	nop

0000a260 <internal_float_sub>:
    a260:	56                   	push   %esi
    a261:	31 c9                	xor    %ecx,%ecx
    a263:	53                   	push   %ebx
    a264:	e8 9d 0c 00 00       	call   af06 <__x86.get_pc_thunk.si>
    a269:	81 c6 97 0d 02 00    	add    $0x20d97,%esi
    a26f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a273:	8b 44 24 10          	mov    0x10(%esp),%eax
    a277:	8d 96 20 11 00 00    	lea    0x1120(%esi),%edx
    a27d:	eb 0c                	jmp    a28b <internal_float_sub+0x2b>
    a27f:	90                   	nop
    a280:	83 c1 01             	add    $0x1,%ecx
    a283:	83 c2 0c             	add    $0xc,%edx
    a286:	83 f9 08             	cmp    $0x8,%ecx
    a289:	74 1d                	je     a2a8 <internal_float_sub+0x48>
    a28b:	39 02                	cmp    %eax,(%edx)
    a28d:	75 f1                	jne    a280 <internal_float_sub+0x20>
    a28f:	39 5a 04             	cmp    %ebx,0x4(%edx)
    a292:	75 ec                	jne    a280 <internal_float_sub+0x20>
    a294:	8d 04 49             	lea    (%ecx,%ecx,2),%eax
    a297:	8b 84 86 28 11 00 00 	mov    0x1128(%esi,%eax,4),%eax
    a29e:	5b                   	pop    %ebx
    a29f:	5e                   	pop    %esi
    a2a0:	c3                   	ret    
    a2a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a2a8:	89 c2                	mov    %eax,%edx
    a2aa:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
    a2b0:	81 fa 00 00 c0 7f    	cmp    $0x7fc00000,%edx
    a2b6:	74 e6                	je     a29e <internal_float_sub+0x3e>
    a2b8:	89 da                	mov    %ebx,%edx
    a2ba:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
    a2c0:	81 fa 00 00 c0 7f    	cmp    $0x7fc00000,%edx
    a2c6:	74 20                	je     a2e8 <internal_float_sub+0x88>
    a2c8:	c1 eb 1f             	shr    $0x1f,%ebx
    a2cb:	89 44 24 10          	mov    %eax,0x10(%esp)
    a2cf:	f7 d3                	not    %ebx
    a2d1:	c1 e3 1f             	shl    $0x1f,%ebx
    a2d4:	09 d3                	or     %edx,%ebx
    a2d6:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    a2da:	5b                   	pop    %ebx
    a2db:	5e                   	pop    %esi
    a2dc:	e9 3f fc ff ff       	jmp    9f20 <internal_float_add>
    a2e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a2e8:	89 d8                	mov    %ebx,%eax
    a2ea:	5b                   	pop    %ebx
    a2eb:	5e                   	pop    %esi
    a2ec:	c3                   	ret    
    a2ed:	8d 76 00             	lea    0x0(%esi),%esi

0000a2f0 <internal_float_mul>:
    a2f0:	55                   	push   %ebp
    a2f1:	57                   	push   %edi
    a2f2:	31 d2                	xor    %edx,%edx
    a2f4:	56                   	push   %esi
    a2f5:	53                   	push   %ebx
    a2f6:	e8 c5 97 ff ff       	call   3ac0 <__x86.get_pc_thunk.cx>
    a2fb:	81 c1 05 0d 02 00    	add    $0x20d05,%ecx
    a301:	83 ec 3c             	sub    $0x3c,%esp
    a304:	8b 6c 24 50          	mov    0x50(%esp),%ebp
    a308:	8b 5c 24 54          	mov    0x54(%esp),%ebx
    a30c:	8d 81 c0 10 00 00    	lea    0x10c0(%ecx),%eax
    a312:	eb 0f                	jmp    a323 <internal_float_mul+0x33>
    a314:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a318:	83 c2 01             	add    $0x1,%edx
    a31b:	83 c0 0c             	add    $0xc,%eax
    a31e:	83 fa 08             	cmp    $0x8,%edx
    a321:	74 1d                	je     a340 <internal_float_mul+0x50>
    a323:	39 18                	cmp    %ebx,(%eax)
    a325:	75 f1                	jne    a318 <internal_float_mul+0x28>
    a327:	39 68 04             	cmp    %ebp,0x4(%eax)
    a32a:	75 ec                	jne    a318 <internal_float_mul+0x28>
    a32c:	8d 04 52             	lea    (%edx,%edx,2),%eax
    a32f:	8b 84 81 c8 10 00 00 	mov    0x10c8(%ecx,%eax,4),%eax
    a336:	83 c4 3c             	add    $0x3c,%esp
    a339:	5b                   	pop    %ebx
    a33a:	5e                   	pop    %esi
    a33b:	5f                   	pop    %edi
    a33c:	5d                   	pop    %ebp
    a33d:	c3                   	ret    
    a33e:	66 90                	xchg   %ax,%ax
    a340:	89 d8                	mov    %ebx,%eax
    a342:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    a347:	81 fb 00 00 c0 7f    	cmp    $0x7fc00000,%ebx
    a34d:	0f 94 c2             	sete   %dl
    a350:	3d 00 00 c0 7f       	cmp    $0x7fc00000,%eax
    a355:	75 21                	jne    a378 <internal_float_mul+0x88>
    a357:	81 fd 00 00 c0 7f    	cmp    $0x7fc00000,%ebp
    a35d:	74 09                	je     a368 <internal_float_mul+0x78>
    a35f:	84 d2                	test   %dl,%dl
    a361:	b8 00 00 c0 ff       	mov    $0xffc00000,%eax
    a366:	74 ce                	je     a336 <internal_float_mul+0x46>
    a368:	83 c4 3c             	add    $0x3c,%esp
    a36b:	b8 00 00 c0 7f       	mov    $0x7fc00000,%eax
    a370:	5b                   	pop    %ebx
    a371:	5e                   	pop    %esi
    a372:	5f                   	pop    %edi
    a373:	5d                   	pop    %ebp
    a374:	c3                   	ret    
    a375:	8d 76 00             	lea    0x0(%esi),%esi
    a378:	89 e9                	mov    %ebp,%ecx
    a37a:	81 e1 ff ff ff 7f    	and    $0x7fffffff,%ecx
    a380:	81 f9 00 00 c0 7f    	cmp    $0x7fc00000,%ecx
    a386:	74 cf                	je     a357 <internal_float_mul+0x67>
    a388:	85 c0                	test   %eax,%eax
    a38a:	0f 84 d0 01 00 00    	je     a560 <internal_float_mul+0x270>
    a390:	85 c9                	test   %ecx,%ecx
    a392:	0f 84 c8 01 00 00    	je     a560 <internal_float_mul+0x270>
    a398:	3d 00 00 80 7f       	cmp    $0x7f800000,%eax
    a39d:	0f 84 d7 01 00 00    	je     a57a <internal_float_mul+0x28a>
    a3a3:	81 f9 00 00 80 7f    	cmp    $0x7f800000,%ecx
    a3a9:	0f 84 cb 01 00 00    	je     a57a <internal_float_mul+0x28a>
    a3af:	89 da                	mov    %ebx,%edx
    a3b1:	89 d8                	mov    %ebx,%eax
    a3b3:	31 ff                	xor    %edi,%edi
    a3b5:	c1 ea 10             	shr    $0x10,%edx
    a3b8:	25 ff ff 7f 00       	and    $0x7fffff,%eax
    a3bd:	81 e2 80 7f 00 00    	and    $0x7f80,%edx
    a3c3:	89 c6                	mov    %eax,%esi
    a3c5:	0f 85 65 02 00 00    	jne    a630 <internal_float_mul+0x340>
    a3cb:	89 d8                	mov    %ebx,%eax
    a3cd:	89 e9                	mov    %ebp,%ecx
    a3cf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    a3d6:	00 
    a3d7:	c1 e8 1f             	shr    $0x1f,%eax
    a3da:	81 e1 ff ff 7f 00    	and    $0x7fffff,%ecx
    a3e0:	89 44 24 18          	mov    %eax,0x18(%esp)
    a3e4:	89 e8                	mov    %ebp,%eax
    a3e6:	89 0c 24             	mov    %ecx,(%esp)
    a3e9:	c1 e8 1f             	shr    $0x1f,%eax
    a3ec:	89 44 24 28          	mov    %eax,0x28(%esp)
    a3f0:	89 e8                	mov    %ebp,%eax
    a3f2:	c1 e8 10             	shr    $0x10,%eax
    a3f5:	a9 80 7f 00 00       	test   $0x7f80,%eax
    a3fa:	0f 84 78 02 00 00    	je     a678 <internal_float_mul+0x388>
    a400:	81 c9 00 00 80 00    	or     $0x800000,%ecx
    a406:	c1 eb 17             	shr    $0x17,%ebx
    a409:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    a410:	00 
    a411:	89 0c 24             	mov    %ecx,(%esp)
    a414:	83 c3 01             	add    $0x1,%ebx
    a417:	c1 ed 17             	shr    $0x17,%ebp
    a41a:	8b 04 24             	mov    (%esp),%eax
    a41d:	8b 54 24 04          	mov    0x4(%esp),%edx
    a421:	89 f9                	mov    %edi,%ecx
    a423:	0f b6 db             	movzbl %bl,%ebx
    a426:	0f af c8             	imul   %eax,%ecx
    a429:	8b 04 24             	mov    (%esp),%eax
    a42c:	0f af d6             	imul   %esi,%edx
    a42f:	01 d1                	add    %edx,%ecx
    a431:	f7 e6                	mul    %esi
    a433:	89 44 24 10          	mov    %eax,0x10(%esp)
    a437:	89 54 24 14          	mov    %edx,0x14(%esp)
    a43b:	89 e8                	mov    %ebp,%eax
    a43d:	01 4c 24 14          	add    %ecx,0x14(%esp)
    a441:	0f b6 e8             	movzbl %al,%ebp
    a444:	8b 44 24 10          	mov    0x10(%esp),%eax
    a448:	8b 54 24 14          	mov    0x14(%esp),%edx
    a44c:	8d ac 2b 6d ff ff ff 	lea    -0x93(%ebx,%ebp,1),%ebp
    a453:	0f ac d0 1a          	shrd   $0x1a,%edx,%eax
    a457:	c1 ea 1a             	shr    $0x1a,%edx
    a45a:	83 fa 00             	cmp    $0x0,%edx
    a45d:	0f 86 9e 01 00 00    	jbe    a601 <internal_float_mul+0x311>
    a463:	8b 74 24 10          	mov    0x10(%esp),%esi
    a467:	8b 7c 24 14          	mov    0x14(%esp),%edi
    a46b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    a472:	00 
    a473:	89 2c 24             	mov    %ebp,(%esp)
    a476:	8d 76 00             	lea    0x0(%esi),%esi
    a479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    a480:	89 fa                	mov    %edi,%edx
    a482:	89 f0                	mov    %esi,%eax
    a484:	c1 ea 1a             	shr    $0x1a,%edx
    a487:	0f ac f8 1a          	shrd   $0x1a,%edi,%eax
    a48b:	83 fa 00             	cmp    $0x0,%edx
    a48e:	0f 87 0c 01 00 00    	ja     a5a0 <internal_float_mul+0x2b0>
    a494:	83 f8 01             	cmp    $0x1,%eax
    a497:	0f 87 03 01 00 00    	ja     a5a0 <internal_float_mul+0x2b0>
    a49d:	83 ff 00             	cmp    $0x0,%edi
    a4a0:	0f 87 3a 01 00 00    	ja     a5e0 <internal_float_mul+0x2f0>
    a4a6:	83 fe 04             	cmp    $0x4,%esi
    a4a9:	0f 87 31 01 00 00    	ja     a5e0 <internal_float_mul+0x2f0>
    a4af:	8b 2c 24             	mov    (%esp),%ebp
    a4b2:	89 fb                	mov    %edi,%ebx
    a4b4:	89 74 24 10          	mov    %esi,0x10(%esp)
    a4b8:	89 7c 24 14          	mov    %edi,0x14(%esp)
    a4bc:	81 fd fe 00 00 00    	cmp    $0xfe,%ebp
    a4c2:	0f 8f d4 01 00 00    	jg     a69c <internal_float_mul+0x3ac>
    a4c8:	85 ed                	test   %ebp,%ebp
    a4ca:	0f 85 85 02 00 00    	jne    a755 <internal_float_mul+0x465>
    a4d0:	89 f0                	mov    %esi,%eax
    a4d2:	89 da                	mov    %ebx,%edx
    a4d4:	83 e0 03             	and    $0x3,%eax
    a4d7:	85 c0                	test   %eax,%eax
    a4d9:	b8 01 00 00 00       	mov    $0x1,%eax
    a4de:	0f 44 44 24 0c       	cmove  0xc(%esp),%eax
    a4e3:	d1 ea                	shr    %edx
    a4e5:	89 54 24 14          	mov    %edx,0x14(%esp)
    a4e9:	89 c7                	mov    %eax,%edi
    a4eb:	89 f0                	mov    %esi,%eax
    a4ed:	0f ac d8 01          	shrd   $0x1,%ebx,%eax
    a4f1:	09 c7                	or     %eax,%edi
    a4f3:	89 7c 24 10          	mov    %edi,0x10(%esp)
    a4f7:	8b 74 24 10          	mov    0x10(%esp),%esi
    a4fb:	8b 7c 24 14          	mov    0x14(%esp),%edi
    a4ff:	89 f0                	mov    %esi,%eax
    a501:	83 e0 07             	and    $0x7,%eax
    a504:	83 f8 04             	cmp    $0x4,%eax
    a507:	0f 86 9b 01 00 00    	jbe    a6a8 <internal_float_mul+0x3b8>
    a50d:	0f ac fe 03          	shrd   $0x3,%edi,%esi
    a511:	c1 ef 03             	shr    $0x3,%edi
    a514:	83 c6 01             	add    $0x1,%esi
    a517:	83 d7 00             	adc    $0x0,%edi
    a51a:	89 f0                	mov    %esi,%eax
    a51c:	89 fa                	mov    %edi,%edx
    a51e:	c1 ea 17             	shr    $0x17,%edx
    a521:	0f ac f8 17          	shrd   $0x17,%edi,%eax
    a525:	83 fa 00             	cmp    $0x0,%edx
    a528:	77 05                	ja     a52f <internal_float_mul+0x23f>
    a52a:	83 f8 01             	cmp    $0x1,%eax
    a52d:	76 07                	jbe    a536 <internal_float_mul+0x246>
    a52f:	0f ac fe 01          	shrd   $0x1,%edi,%esi
    a533:	83 c5 01             	add    $0x1,%ebp
    a536:	81 e6 ff ff 7f 00    	and    $0x7fffff,%esi
    a53c:	0f b6 54 24 28       	movzbl 0x28(%esp),%edx
    a541:	89 e8                	mov    %ebp,%eax
    a543:	32 54 24 18          	xor    0x18(%esp),%dl
    a547:	0f b6 c0             	movzbl %al,%eax
    a54a:	c1 e0 17             	shl    $0x17,%eax
    a54d:	0f b6 d2             	movzbl %dl,%edx
    a550:	c1 e2 1f             	shl    $0x1f,%edx
    a553:	09 c2                	or     %eax,%edx
    a555:	89 d0                	mov    %edx,%eax
    a557:	09 f0                	or     %esi,%eax
    a559:	e9 d8 fd ff ff       	jmp    a336 <internal_float_mul+0x46>
    a55e:	66 90                	xchg   %ax,%ax
    a560:	c1 ed 18             	shr    $0x18,%ebp
    a563:	c1 eb 18             	shr    $0x18,%ebx
    a566:	83 c4 3c             	add    $0x3c,%esp
    a569:	31 eb                	xor    %ebp,%ebx
    a56b:	0f be f3             	movsbl %bl,%esi
    a56e:	89 f0                	mov    %esi,%eax
    a570:	5b                   	pop    %ebx
    a571:	25 00 00 00 80       	and    $0x80000000,%eax
    a576:	5e                   	pop    %esi
    a577:	5f                   	pop    %edi
    a578:	5d                   	pop    %ebp
    a579:	c3                   	ret    
    a57a:	c1 eb 18             	shr    $0x18,%ebx
    a57d:	c1 ed 18             	shr    $0x18,%ebp
    a580:	31 eb                	xor    %ebp,%ebx
    a582:	0f be f3             	movsbl %bl,%esi
    a585:	89 f0                	mov    %esi,%eax
    a587:	25 00 00 00 80       	and    $0x80000000,%eax
    a58c:	05 00 00 80 7f       	add    $0x7f800000,%eax
    a591:	e9 a0 fd ff ff       	jmp    a336 <internal_float_mul+0x46>
    a596:	8d 76 00             	lea    0x0(%esi),%esi
    a599:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    a5a0:	81 3c 24 fe 00 00 00 	cmpl   $0xfe,(%esp)
    a5a7:	0f 8f f0 fe ff ff    	jg     a49d <internal_float_mul+0x1ad>
    a5ad:	89 f0                	mov    %esi,%eax
    a5af:	83 e0 03             	and    $0x3,%eax
    a5b2:	85 c0                	test   %eax,%eax
    a5b4:	75 3a                	jne    a5f0 <internal_float_mul+0x300>
    a5b6:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    a5ba:	31 db                	xor    %ebx,%ebx
    a5bc:	89 f0                	mov    %esi,%eax
    a5be:	89 fa                	mov    %edi,%edx
    a5c0:	83 04 24 01          	addl   $0x1,(%esp)
    a5c4:	0f ac f8 01          	shrd   $0x1,%edi,%eax
    a5c8:	d1 ea                	shr    %edx
    a5ca:	89 c5                	mov    %eax,%ebp
    a5cc:	89 d0                	mov    %edx,%eax
    a5ce:	09 cd                	or     %ecx,%ebp
    a5d0:	09 d8                	or     %ebx,%eax
    a5d2:	89 ee                	mov    %ebp,%esi
    a5d4:	89 c7                	mov    %eax,%edi
    a5d6:	e9 a5 fe ff ff       	jmp    a480 <internal_float_mul+0x190>
    a5db:	90                   	nop
    a5dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a5e0:	8b 04 24             	mov    (%esp),%eax
    a5e3:	c1 e8 1f             	shr    $0x1f,%eax
    a5e6:	84 c0                	test   %al,%al
    a5e8:	75 c3                	jne    a5ad <internal_float_mul+0x2bd>
    a5ea:	e9 c0 fe ff ff       	jmp    a4af <internal_float_mul+0x1bf>
    a5ef:	90                   	nop
    a5f0:	b9 01 00 00 00       	mov    $0x1,%ecx
    a5f5:	31 db                	xor    %ebx,%ebx
    a5f7:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
    a5fe:	00 
    a5ff:	eb bb                	jmp    a5bc <internal_float_mul+0x2cc>
    a601:	83 f8 01             	cmp    $0x1,%eax
    a604:	0f 87 59 fe ff ff    	ja     a463 <internal_float_mul+0x173>
    a60a:	89 e9                	mov    %ebp,%ecx
    a60c:	c1 e9 1f             	shr    $0x1f,%ecx
    a60f:	84 c9                	test   %cl,%cl
    a611:	0f 85 4c fe ff ff    	jne    a463 <internal_float_mul+0x173>
    a617:	89 d3                	mov    %edx,%ebx
    a619:	09 c3                	or     %eax,%ebx
    a61b:	0f 84 b1 00 00 00    	je     a6d2 <internal_float_mul+0x3e2>
    a621:	85 ed                	test   %ebp,%ebp
    a623:	0f 85 ce fe ff ff    	jne    a4f7 <internal_float_mul+0x207>
    a629:	89 c5                	mov    %eax,%ebp
    a62b:	e9 c7 fe ff ff       	jmp    a4f7 <internal_float_mul+0x207>
    a630:	0d 00 00 80 00       	or     $0x800000,%eax
    a635:	89 e9                	mov    %ebp,%ecx
    a637:	31 ff                	xor    %edi,%edi
    a639:	89 c6                	mov    %eax,%esi
    a63b:	89 d8                	mov    %ebx,%eax
    a63d:	81 e1 ff ff 7f 00    	and    $0x7fffff,%ecx
    a643:	c1 e8 1f             	shr    $0x1f,%eax
    a646:	89 0c 24             	mov    %ecx,(%esp)
    a649:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    a650:	00 
    a651:	89 44 24 18          	mov    %eax,0x18(%esp)
    a655:	89 e8                	mov    %ebp,%eax
    a657:	c1 e8 1f             	shr    $0x1f,%eax
    a65a:	89 44 24 28          	mov    %eax,0x28(%esp)
    a65e:	89 e8                	mov    %ebp,%eax
    a660:	c1 e8 10             	shr    $0x10,%eax
    a663:	a9 80 7f 00 00       	test   $0x7f80,%eax
    a668:	75 16                	jne    a680 <internal_float_mul+0x390>
    a66a:	c1 eb 17             	shr    $0x17,%ebx
    a66d:	c1 ed 17             	shr    $0x17,%ebp
    a670:	83 c5 01             	add    $0x1,%ebp
    a673:	e9 a2 fd ff ff       	jmp    a41a <internal_float_mul+0x12a>
    a678:	c1 eb 17             	shr    $0x17,%ebx
    a67b:	83 c3 01             	add    $0x1,%ebx
    a67e:	eb ed                	jmp    a66d <internal_float_mul+0x37d>
    a680:	81 c9 00 00 80 00    	or     $0x800000,%ecx
    a686:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    a68d:	00 
    a68e:	c1 ed 17             	shr    $0x17,%ebp
    a691:	89 0c 24             	mov    %ecx,(%esp)
    a694:	c1 eb 17             	shr    $0x17,%ebx
    a697:	e9 7e fd ff ff       	jmp    a41a <internal_float_mul+0x12a>
    a69c:	31 f6                	xor    %esi,%esi
    a69e:	bd ff 00 00 00       	mov    $0xff,%ebp
    a6a3:	e9 94 fe ff ff       	jmp    a53c <internal_float_mul+0x24c>
    a6a8:	8b 7c 24 14          	mov    0x14(%esp),%edi
    a6ac:	8b 74 24 10          	mov    0x10(%esp),%esi
    a6b0:	0f ac fe 03          	shrd   $0x3,%edi,%esi
    a6b4:	c1 ef 03             	shr    $0x3,%edi
    a6b7:	83 f8 04             	cmp    $0x4,%eax
    a6ba:	0f 85 76 fe ff ff    	jne    a536 <internal_float_mul+0x246>
    a6c0:	89 f0                	mov    %esi,%eax
    a6c2:	83 e0 01             	and    $0x1,%eax
    a6c5:	85 c0                	test   %eax,%eax
    a6c7:	0f 84 69 fe ff ff    	je     a536 <internal_float_mul+0x246>
    a6cd:	e9 42 fe ff ff       	jmp    a514 <internal_float_mul+0x224>
    a6d2:	85 ed                	test   %ebp,%ebp
    a6d4:	0f 84 4f ff ff ff    	je     a629 <internal_float_mul+0x339>
    a6da:	8b 74 24 10          	mov    0x10(%esp),%esi
    a6de:	8b 7c 24 14          	mov    0x14(%esp),%edi
    a6e2:	89 f3                	mov    %esi,%ebx
    a6e4:	89 f9                	mov    %edi,%ecx
    a6e6:	eb 10                	jmp    a6f8 <internal_float_mul+0x408>
    a6e8:	90                   	nop
    a6e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a6f0:	85 ed                	test   %ebp,%ebp
    a6f2:	74 57                	je     a74b <internal_float_mul+0x45b>
    a6f4:	89 f3                	mov    %esi,%ebx
    a6f6:	89 f9                	mov    %edi,%ecx
    a6f8:	0f a4 f7 01          	shld   $0x1,%esi,%edi
    a6fc:	01 f6                	add    %esi,%esi
    a6fe:	83 ed 01             	sub    $0x1,%ebp
    a701:	89 fa                	mov    %edi,%edx
    a703:	89 f0                	mov    %esi,%eax
    a705:	0f ac d0 1a          	shrd   $0x1a,%edx,%eax
    a709:	c1 ea 1a             	shr    $0x1a,%edx
    a70c:	89 54 24 04          	mov    %edx,0x4(%esp)
    a710:	8b 54 24 04          	mov    0x4(%esp),%edx
    a714:	89 04 24             	mov    %eax,(%esp)
    a717:	09 c2                	or     %eax,%edx
    a719:	74 d5                	je     a6f0 <internal_float_mul+0x400>
    a71b:	85 ed                	test   %ebp,%ebp
    a71d:	89 74 24 10          	mov    %esi,0x10(%esp)
    a721:	89 7c 24 14          	mov    %edi,0x14(%esp)
    a725:	0f 85 cc fd ff ff    	jne    a4f7 <internal_float_mul+0x207>
    a72b:	8b 44 24 10          	mov    0x10(%esp),%eax
    a72f:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    a733:	83 e0 03             	and    $0x3,%eax
    a736:	85 c0                	test   %eax,%eax
    a738:	0f 95 c0             	setne  %al
    a73b:	31 ed                	xor    %ebp,%ebp
    a73d:	0f b6 c0             	movzbl %al,%eax
    a740:	09 d8                	or     %ebx,%eax
    a742:	89 44 24 10          	mov    %eax,0x10(%esp)
    a746:	e9 ac fd ff ff       	jmp    a4f7 <internal_float_mul+0x207>
    a74b:	89 74 24 10          	mov    %esi,0x10(%esp)
    a74f:	89 7c 24 14          	mov    %edi,0x14(%esp)
    a753:	eb d6                	jmp    a72b <internal_float_mul+0x43b>
    a755:	0f 89 9c fd ff ff    	jns    a4f7 <internal_float_mul+0x207>
    a75b:	31 f6                	xor    %esi,%esi
    a75d:	31 ed                	xor    %ebp,%ebp
    a75f:	e9 d8 fd ff ff       	jmp    a53c <internal_float_mul+0x24c>
    a764:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a76a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000a770 <internal_float_div>:
    a770:	55                   	push   %ebp
    a771:	57                   	push   %edi
    a772:	31 d2                	xor    %edx,%edx
    a774:	56                   	push   %esi
    a775:	53                   	push   %ebx
    a776:	e8 45 85 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    a77b:	81 c3 85 08 02 00    	add    $0x20885,%ebx
    a781:	83 ec 2c             	sub    $0x2c,%esp
    a784:	8b 7c 24 40          	mov    0x40(%esp),%edi
    a788:	8b 74 24 44          	mov    0x44(%esp),%esi
    a78c:	8d 83 20 10 00 00    	lea    0x1020(%ebx),%eax
    a792:	eb 0f                	jmp    a7a3 <internal_float_div+0x33>
    a794:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a798:	83 c2 01             	add    $0x1,%edx
    a79b:	83 c0 0c             	add    $0xc,%eax
    a79e:	83 fa 0c             	cmp    $0xc,%edx
    a7a1:	74 1d                	je     a7c0 <internal_float_div+0x50>
    a7a3:	39 30                	cmp    %esi,(%eax)
    a7a5:	75 f1                	jne    a798 <internal_float_div+0x28>
    a7a7:	39 78 04             	cmp    %edi,0x4(%eax)
    a7aa:	75 ec                	jne    a798 <internal_float_div+0x28>
    a7ac:	8d 04 52             	lea    (%edx,%edx,2),%eax
    a7af:	8b 84 83 28 10 00 00 	mov    0x1028(%ebx,%eax,4),%eax
    a7b6:	83 c4 2c             	add    $0x2c,%esp
    a7b9:	5b                   	pop    %ebx
    a7ba:	5e                   	pop    %esi
    a7bb:	5f                   	pop    %edi
    a7bc:	5d                   	pop    %ebp
    a7bd:	c3                   	ret    
    a7be:	66 90                	xchg   %ax,%ax
    a7c0:	89 f0                	mov    %esi,%eax
    a7c2:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    a7c7:	81 fe 00 00 c0 7f    	cmp    $0x7fc00000,%esi
    a7cd:	0f 94 c2             	sete   %dl
    a7d0:	3d 00 00 c0 7f       	cmp    $0x7fc00000,%eax
    a7d5:	74 41                	je     a818 <internal_float_div+0xa8>
    a7d7:	89 f9                	mov    %edi,%ecx
    a7d9:	81 e1 ff ff ff 7f    	and    $0x7fffffff,%ecx
    a7df:	81 f9 00 00 c0 7f    	cmp    $0x7fc00000,%ecx
    a7e5:	74 31                	je     a818 <internal_float_div+0xa8>
    a7e7:	3d 00 00 80 7f       	cmp    $0x7f800000,%eax
    a7ec:	74 5a                	je     a848 <internal_float_div+0xd8>
    a7ee:	85 c9                	test   %ecx,%ecx
    a7f0:	74 56                	je     a848 <internal_float_div+0xd8>
    a7f2:	85 c0                	test   %eax,%eax
    a7f4:	74 71                	je     a867 <internal_float_div+0xf7>
    a7f6:	81 f9 00 00 80 7f    	cmp    $0x7f800000,%ecx
    a7fc:	75 7b                	jne    a879 <internal_float_div+0x109>
    a7fe:	89 f0                	mov    %esi,%eax
    a800:	c1 ef 18             	shr    $0x18,%edi
    a803:	c1 e8 18             	shr    $0x18,%eax
    a806:	31 f8                	xor    %edi,%eax
    a808:	0f be c0             	movsbl %al,%eax
    a80b:	25 00 00 00 80       	and    $0x80000000,%eax
    a810:	eb 17                	jmp    a829 <internal_float_div+0xb9>
    a812:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a818:	81 ff 00 00 c0 7f    	cmp    $0x7fc00000,%edi
    a81e:	74 18                	je     a838 <internal_float_div+0xc8>
    a820:	84 d2                	test   %dl,%dl
    a822:	b8 00 00 c0 ff       	mov    $0xffc00000,%eax
    a827:	75 0f                	jne    a838 <internal_float_div+0xc8>
    a829:	83 c4 2c             	add    $0x2c,%esp
    a82c:	5b                   	pop    %ebx
    a82d:	5e                   	pop    %esi
    a82e:	5f                   	pop    %edi
    a82f:	5d                   	pop    %ebp
    a830:	c3                   	ret    
    a831:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a838:	83 c4 2c             	add    $0x2c,%esp
    a83b:	b8 00 00 c0 7f       	mov    $0x7fc00000,%eax
    a840:	5b                   	pop    %ebx
    a841:	5e                   	pop    %esi
    a842:	5f                   	pop    %edi
    a843:	5d                   	pop    %ebp
    a844:	c3                   	ret    
    a845:	8d 76 00             	lea    0x0(%esi),%esi
    a848:	89 f0                	mov    %esi,%eax
    a84a:	c1 ef 18             	shr    $0x18,%edi
    a84d:	83 c4 2c             	add    $0x2c,%esp
    a850:	c1 e8 18             	shr    $0x18,%eax
    a853:	31 f8                	xor    %edi,%eax
    a855:	0f be c0             	movsbl %al,%eax
    a858:	25 00 00 00 80       	and    $0x80000000,%eax
    a85d:	5b                   	pop    %ebx
    a85e:	05 00 00 80 7f       	add    $0x7f800000,%eax
    a863:	5e                   	pop    %esi
    a864:	5f                   	pop    %edi
    a865:	5d                   	pop    %ebp
    a866:	c3                   	ret    
    a867:	89 f0                	mov    %esi,%eax
    a869:	c1 ef 1f             	shr    $0x1f,%edi
    a86c:	c1 e8 1f             	shr    $0x1f,%eax
    a86f:	31 f8                	xor    %edi,%eax
    a871:	0f b6 c0             	movzbl %al,%eax
    a874:	c1 e0 1f             	shl    $0x1f,%eax
    a877:	eb b0                	jmp    a829 <internal_float_div+0xb9>
    a879:	89 f2                	mov    %esi,%edx
    a87b:	89 f8                	mov    %edi,%eax
    a87d:	89 f5                	mov    %esi,%ebp
    a87f:	c1 ea 1f             	shr    $0x1f,%edx
    a882:	c1 e8 1f             	shr    $0x1f,%eax
    a885:	c1 ed 10             	shr    $0x10,%ebp
    a888:	89 d1                	mov    %edx,%ecx
    a88a:	31 d2                	xor    %edx,%edx
    a88c:	31 c1                	xor    %eax,%ecx
    a88e:	88 4c 24 1d          	mov    %cl,0x1d(%esp)
    a892:	89 f1                	mov    %esi,%ecx
    a894:	81 e1 ff ff 7f 00    	and    $0x7fffff,%ecx
    a89a:	66 81 e5 80 7f       	and    $0x7f80,%bp
    a89f:	89 c8                	mov    %ecx,%eax
    a8a1:	66 89 6c 24 18       	mov    %bp,0x18(%esp)
    a8a6:	74 0a                	je     a8b2 <internal_float_div+0x142>
    a8a8:	81 c9 00 00 80 00    	or     $0x800000,%ecx
    a8ae:	31 d2                	xor    %edx,%edx
    a8b0:	89 c8                	mov    %ecx,%eax
    a8b2:	89 f9                	mov    %edi,%ecx
    a8b4:	89 fd                	mov    %edi,%ebp
    a8b6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    a8bd:	00 
    a8be:	c1 e9 10             	shr    $0x10,%ecx
    a8c1:	81 e5 ff ff 7f 00    	and    $0x7fffff,%ebp
    a8c7:	66 81 e1 80 7f       	and    $0x7f80,%cx
    a8cc:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    a8d0:	66 89 4c 24 1e       	mov    %cx,0x1e(%esp)
    a8d5:	74 12                	je     a8e9 <internal_float_div+0x179>
    a8d7:	81 cd 00 00 80 00    	or     $0x800000,%ebp
    a8dd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    a8e4:	00 
    a8e5:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    a8e9:	31 ed                	xor    %ebp,%ebp
    a8eb:	90                   	nop
    a8ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a8f0:	0f a4 c2 01          	shld   $0x1,%eax,%edx
    a8f4:	83 c5 01             	add    $0x1,%ebp
    a8f7:	01 c0                	add    %eax,%eax
    a8f9:	85 d2                	test   %edx,%edx
    a8fb:	79 f3                	jns    a8f0 <internal_float_div+0x180>
    a8fd:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    a901:	83 e1 01             	and    $0x1,%ecx
    a904:	85 c9                	test   %ecx,%ecx
    a906:	75 40                	jne    a948 <internal_float_div+0x1d8>
    a908:	89 54 24 14          	mov    %edx,0x14(%esp)
    a90c:	89 74 24 44          	mov    %esi,0x44(%esp)
    a910:	89 fa                	mov    %edi,%edx
    a912:	8b 74 24 08          	mov    0x8(%esp),%esi
    a916:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    a91a:	89 44 24 10          	mov    %eax,0x10(%esp)
    a91e:	66 90                	xchg   %ax,%ax
    a920:	0f ac fe 01          	shrd   $0x1,%edi,%esi
    a924:	83 c5 01             	add    $0x1,%ebp
    a927:	d1 ef                	shr    %edi
    a929:	89 f1                	mov    %esi,%ecx
    a92b:	83 e1 01             	and    $0x1,%ecx
    a92e:	85 c9                	test   %ecx,%ecx
    a930:	74 ee                	je     a920 <internal_float_div+0x1b0>
    a932:	89 74 24 08          	mov    %esi,0x8(%esp)
    a936:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    a93a:	89 d7                	mov    %edx,%edi
    a93c:	8b 44 24 10          	mov    0x10(%esp),%eax
    a940:	8b 54 24 14          	mov    0x14(%esp),%edx
    a944:	8b 74 24 44          	mov    0x44(%esp),%esi
    a948:	ff 74 24 0c          	pushl  0xc(%esp)
    a94c:	ff 74 24 0c          	pushl  0xc(%esp)
    a950:	c1 ee 17             	shr    $0x17,%esi
    a953:	52                   	push   %edx
    a954:	50                   	push   %eax
    a955:	e8 46 fd 00 00       	call   1a6a0 <__udivdi3>
    a95a:	83 c4 10             	add    $0x10,%esp
    a95d:	8d 4e 01             	lea    0x1(%esi),%ecx
    a960:	89 44 24 10          	mov    %eax,0x10(%esp)
    a964:	66 83 7c 24 18 00    	cmpw   $0x0,0x18(%esp)
    a96a:	89 54 24 14          	mov    %edx,0x14(%esp)
    a96e:	0f 45 ce             	cmovne %esi,%ecx
    a971:	66 83 7c 24 1e 00    	cmpw   $0x0,0x1e(%esp)
    a977:	0f 85 7c 01 00 00    	jne    aaf9 <internal_float_div+0x389>
    a97d:	89 fb                	mov    %edi,%ebx
    a97f:	0f b6 c9             	movzbl %cl,%ecx
    a982:	c1 eb 17             	shr    $0x17,%ebx
    a985:	83 c3 01             	add    $0x1,%ebx
    a988:	0f b6 db             	movzbl %bl,%ebx
    a98b:	29 d9                	sub    %ebx,%ecx
    a98d:	29 e9                	sub    %ebp,%ecx
    a98f:	8d a9 99 00 00 00    	lea    0x99(%ecx),%ebp
    a995:	8b 44 24 10          	mov    0x10(%esp),%eax
    a999:	8b 54 24 14          	mov    0x14(%esp),%edx
    a99d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    a9a4:	00 
    a9a5:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    a9a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a9b0:	89 d3                	mov    %edx,%ebx
    a9b2:	89 c1                	mov    %eax,%ecx
    a9b4:	c1 eb 1a             	shr    $0x1a,%ebx
    a9b7:	0f ac d1 1a          	shrd   $0x1a,%edx,%ecx
    a9bb:	83 fb 00             	cmp    $0x0,%ebx
    a9be:	0f 87 cc 00 00 00    	ja     aa90 <internal_float_div+0x320>
    a9c4:	83 f9 01             	cmp    $0x1,%ecx
    a9c7:	0f 87 c3 00 00 00    	ja     aa90 <internal_float_div+0x320>
    a9cd:	83 fa 00             	cmp    $0x0,%edx
    a9d0:	0f 87 fa 00 00 00    	ja     aad0 <internal_float_div+0x360>
    a9d6:	83 f8 04             	cmp    $0x4,%eax
    a9d9:	0f 87 f1 00 00 00    	ja     aad0 <internal_float_div+0x360>
    a9df:	8b 6c 24 08          	mov    0x8(%esp),%ebp
    a9e3:	89 c3                	mov    %eax,%ebx
    a9e5:	89 44 24 10          	mov    %eax,0x10(%esp)
    a9e9:	89 54 24 14          	mov    %edx,0x14(%esp)
    a9ed:	81 fd fe 00 00 00    	cmp    $0xfe,%ebp
    a9f3:	0f 8f 1c 01 00 00    	jg     ab15 <internal_float_div+0x3a5>
    a9f9:	85 ed                	test   %ebp,%ebp
    a9fb:	0f 85 4a 01 00 00    	jne    ab4b <internal_float_div+0x3db>
    aa01:	89 c1                	mov    %eax,%ecx
    aa03:	83 e1 03             	and    $0x3,%ecx
    aa06:	85 c9                	test   %ecx,%ecx
    aa08:	b9 01 00 00 00       	mov    $0x1,%ecx
    aa0d:	0f 44 4c 24 18       	cmove  0x18(%esp),%ecx
    aa12:	89 c8                	mov    %ecx,%eax
    aa14:	89 d9                	mov    %ebx,%ecx
    aa16:	89 d3                	mov    %edx,%ebx
    aa18:	0f ac d1 01          	shrd   $0x1,%edx,%ecx
    aa1c:	d1 eb                	shr    %ebx
    aa1e:	09 c8                	or     %ecx,%eax
    aa20:	89 5c 24 14          	mov    %ebx,0x14(%esp)
    aa24:	89 44 24 10          	mov    %eax,0x10(%esp)
    aa28:	8b 44 24 10          	mov    0x10(%esp),%eax
    aa2c:	8b 54 24 14          	mov    0x14(%esp),%edx
    aa30:	89 c1                	mov    %eax,%ecx
    aa32:	83 e1 07             	and    $0x7,%ecx
    aa35:	83 f9 04             	cmp    $0x4,%ecx
    aa38:	0f 86 e3 00 00 00    	jbe    ab21 <internal_float_div+0x3b1>
    aa3e:	0f ac d0 03          	shrd   $0x3,%edx,%eax
    aa42:	c1 ea 03             	shr    $0x3,%edx
    aa45:	83 c0 01             	add    $0x1,%eax
    aa48:	83 d2 00             	adc    $0x0,%edx
    aa4b:	89 c1                	mov    %eax,%ecx
    aa4d:	89 d3                	mov    %edx,%ebx
    aa4f:	c1 eb 17             	shr    $0x17,%ebx
    aa52:	0f ac d1 17          	shrd   $0x17,%edx,%ecx
    aa56:	83 fb 00             	cmp    $0x0,%ebx
    aa59:	77 05                	ja     aa60 <internal_float_div+0x2f0>
    aa5b:	83 f9 01             	cmp    $0x1,%ecx
    aa5e:	76 07                	jbe    aa67 <internal_float_div+0x2f7>
    aa60:	0f ac d0 01          	shrd   $0x1,%edx,%eax
    aa64:	83 c5 01             	add    $0x1,%ebp
    aa67:	89 e9                	mov    %ebp,%ecx
    aa69:	25 ff ff 7f 00       	and    $0x7fffff,%eax
    aa6e:	0f b6 54 24 1d       	movzbl 0x1d(%esp),%edx
    aa73:	0f b6 c9             	movzbl %cl,%ecx
    aa76:	25 ff ff 7f 00       	and    $0x7fffff,%eax
    aa7b:	c1 e1 17             	shl    $0x17,%ecx
    aa7e:	c1 e2 1f             	shl    $0x1f,%edx
    aa81:	09 ca                	or     %ecx,%edx
    aa83:	09 d0                	or     %edx,%eax
    aa85:	e9 9f fd ff ff       	jmp    a829 <internal_float_div+0xb9>
    aa8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    aa90:	81 7c 24 08 fe 00 00 	cmpl   $0xfe,0x8(%esp)
    aa97:	00 
    aa98:	0f 8f 2f ff ff ff    	jg     a9cd <internal_float_div+0x25d>
    aa9e:	89 c1                	mov    %eax,%ecx
    aaa0:	83 e1 03             	and    $0x3,%ecx
    aaa3:	85 c9                	test   %ecx,%ecx
    aaa5:	75 41                	jne    aae8 <internal_float_div+0x378>
    aaa7:	8b 74 24 18          	mov    0x18(%esp),%esi
    aaab:	31 ff                	xor    %edi,%edi
    aaad:	89 c1                	mov    %eax,%ecx
    aaaf:	89 d3                	mov    %edx,%ebx
    aab1:	83 44 24 08 01       	addl   $0x1,0x8(%esp)
    aab6:	0f ac d1 01          	shrd   $0x1,%edx,%ecx
    aaba:	d1 eb                	shr    %ebx
    aabc:	89 cd                	mov    %ecx,%ebp
    aabe:	09 fb                	or     %edi,%ebx
    aac0:	09 f5                	or     %esi,%ebp
    aac2:	89 da                	mov    %ebx,%edx
    aac4:	89 e8                	mov    %ebp,%eax
    aac6:	e9 e5 fe ff ff       	jmp    a9b0 <internal_float_div+0x240>
    aacb:	90                   	nop
    aacc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    aad0:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    aad4:	c1 e9 1f             	shr    $0x1f,%ecx
    aad7:	84 c9                	test   %cl,%cl
    aad9:	0f 84 00 ff ff ff    	je     a9df <internal_float_div+0x26f>
    aadf:	89 c1                	mov    %eax,%ecx
    aae1:	83 e1 03             	and    $0x3,%ecx
    aae4:	85 c9                	test   %ecx,%ecx
    aae6:	74 bf                	je     aaa7 <internal_float_div+0x337>
    aae8:	be 01 00 00 00       	mov    $0x1,%esi
    aaed:	31 ff                	xor    %edi,%edi
    aaef:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
    aaf6:	00 
    aaf7:	eb b4                	jmp    aaad <internal_float_div+0x33d>
    aaf9:	0f b6 d9             	movzbl %cl,%ebx
    aafc:	89 f9                	mov    %edi,%ecx
    aafe:	c1 e9 17             	shr    $0x17,%ecx
    ab01:	0f b6 c9             	movzbl %cl,%ecx
    ab04:	29 cb                	sub    %ecx,%ebx
    ab06:	89 d9                	mov    %ebx,%ecx
    ab08:	29 e9                	sub    %ebp,%ecx
    ab0a:	8d a9 99 00 00 00    	lea    0x99(%ecx),%ebp
    ab10:	e9 80 fe ff ff       	jmp    a995 <internal_float_div+0x225>
    ab15:	31 c0                	xor    %eax,%eax
    ab17:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    ab1c:	e9 4d ff ff ff       	jmp    aa6e <internal_float_div+0x2fe>
    ab21:	8b 54 24 14          	mov    0x14(%esp),%edx
    ab25:	8b 44 24 10          	mov    0x10(%esp),%eax
    ab29:	0f ac d0 03          	shrd   $0x3,%edx,%eax
    ab2d:	c1 ea 03             	shr    $0x3,%edx
    ab30:	83 f9 04             	cmp    $0x4,%ecx
    ab33:	0f 85 2e ff ff ff    	jne    aa67 <internal_float_div+0x2f7>
    ab39:	89 c1                	mov    %eax,%ecx
    ab3b:	83 e1 01             	and    $0x1,%ecx
    ab3e:	85 c9                	test   %ecx,%ecx
    ab40:	0f 84 21 ff ff ff    	je     aa67 <internal_float_div+0x2f7>
    ab46:	e9 fa fe ff ff       	jmp    aa45 <internal_float_div+0x2d5>
    ab4b:	0f 89 d7 fe ff ff    	jns    aa28 <internal_float_div+0x2b8>
    ab51:	31 c0                	xor    %eax,%eax
    ab53:	31 c9                	xor    %ecx,%ecx
    ab55:	e9 14 ff ff ff       	jmp    aa6e <internal_float_div+0x2fe>
    ab5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000ab60 <fpu_load>:
    ab60:	e8 85 87 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    ab65:	05 9b 04 02 00       	add    $0x2049b,%eax
    ab6a:	53                   	push   %ebx
    ab6b:	8d 90 20 1e 05 00    	lea    0x51e20(%eax),%edx
    ab71:	0f b6 42 21          	movzbl 0x21(%edx),%eax
    ab75:	a8 38                	test   $0x38,%al
    ab77:	74 27                	je     aba0 <fpu_load+0x40>
    ab79:	c0 e8 03             	shr    $0x3,%al
    ab7c:	83 c0 07             	add    $0x7,%eax
    ab7f:	83 e0 07             	and    $0x7,%eax
    ab82:	0f b6 d8             	movzbl %al,%ebx
    ab85:	0f b6 4a 21          	movzbl 0x21(%edx),%ecx
    ab89:	83 e0 07             	and    $0x7,%eax
    ab8c:	c1 e0 03             	shl    $0x3,%eax
    ab8f:	83 e1 c7             	and    $0xffffffc7,%ecx
    ab92:	09 c8                	or     %ecx,%eax
    ab94:	88 42 21             	mov    %al,0x21(%edx)
    ab97:	8b 44 24 08          	mov    0x8(%esp),%eax
    ab9b:	89 04 9a             	mov    %eax,(%edx,%ebx,4)
    ab9e:	5b                   	pop    %ebx
    ab9f:	c3                   	ret    
    aba0:	bb 07 00 00 00       	mov    $0x7,%ebx
    aba5:	b8 07 00 00 00       	mov    $0x7,%eax
    abaa:	eb d9                	jmp    ab85 <fpu_load+0x25>
    abac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000abb0 <fpu_store>:
    abb0:	e8 35 87 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    abb5:	05 4b 04 02 00       	add    $0x2044b,%eax
    abba:	53                   	push   %ebx
    abbb:	8d 98 20 1e 05 00    	lea    0x51e20(%eax),%ebx
    abc1:	0f b6 4b 21          	movzbl 0x21(%ebx),%ecx
    abc5:	89 ca                	mov    %ecx,%edx
    abc7:	83 e1 c7             	and    $0xffffffc7,%ecx
    abca:	c0 ea 03             	shr    $0x3,%dl
    abcd:	83 e2 07             	and    $0x7,%edx
    abd0:	8b 04 93             	mov    (%ebx,%edx,4),%eax
    abd3:	83 c2 01             	add    $0x1,%edx
    abd6:	83 e2 07             	and    $0x7,%edx
    abd9:	c1 e2 03             	shl    $0x3,%edx
    abdc:	09 ca                	or     %ecx,%edx
    abde:	88 53 21             	mov    %dl,0x21(%ebx)
    abe1:	5b                   	pop    %ebx
    abe2:	c3                   	ret    
    abe3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    abe9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000abf0 <fpu_peek>:
    abf0:	e8 f5 86 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    abf5:	05 0b 04 02 00       	add    $0x2040b,%eax
    abfa:	8d 90 20 1e 05 00    	lea    0x51e20(%eax),%edx
    ac00:	0f b6 42 21          	movzbl 0x21(%edx),%eax
    ac04:	c0 e8 03             	shr    $0x3,%al
    ac07:	83 e0 07             	and    $0x7,%eax
    ac0a:	8b 04 82             	mov    (%edx,%eax,4),%eax
    ac0d:	c3                   	ret    
    ac0e:	66 90                	xchg   %ax,%ax

0000ac10 <fpu_add>:
    ac10:	56                   	push   %esi
    ac11:	53                   	push   %ebx
    ac12:	e8 d3 86 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    ac17:	05 e9 03 02 00       	add    $0x203e9,%eax
    ac1c:	83 ec 04             	sub    $0x4,%esp
    ac1f:	8d b0 20 1e 05 00    	lea    0x51e20(%eax),%esi
    ac25:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
    ac29:	c0 eb 03             	shr    $0x3,%bl
    ac2c:	83 e3 07             	and    $0x7,%ebx
    ac2f:	ff 34 9e             	pushl  (%esi,%ebx,4)
    ac32:	ff 74 24 14          	pushl  0x14(%esp)
    ac36:	e8 e5 f2 ff ff       	call   9f20 <internal_float_add>
    ac3b:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
    ac3e:	83 c4 0c             	add    $0xc,%esp
    ac41:	5b                   	pop    %ebx
    ac42:	5e                   	pop    %esi
    ac43:	c3                   	ret    
    ac44:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ac4a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000ac50 <fpu_add_idx>:
    ac50:	56                   	push   %esi
    ac51:	53                   	push   %ebx
    ac52:	e8 93 86 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    ac57:	05 a9 03 02 00       	add    $0x203a9,%eax
    ac5c:	83 ec 04             	sub    $0x4,%esp
    ac5f:	8d b0 20 1e 05 00    	lea    0x51e20(%eax),%esi
    ac65:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
    ac69:	c0 eb 03             	shr    $0x3,%bl
    ac6c:	83 e3 07             	and    $0x7,%ebx
    ac6f:	ff 34 9e             	pushl  (%esi,%ebx,4)
    ac72:	8b 44 24 14          	mov    0x14(%esp),%eax
    ac76:	01 d8                	add    %ebx,%eax
    ac78:	83 e0 07             	and    $0x7,%eax
    ac7b:	ff 34 86             	pushl  (%esi,%eax,4)
    ac7e:	e8 9d f2 ff ff       	call   9f20 <internal_float_add>
    ac83:	03 5c 24 1c          	add    0x1c(%esp),%ebx
    ac87:	83 e3 07             	and    $0x7,%ebx
    ac8a:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
    ac8d:	83 c4 0c             	add    $0xc,%esp
    ac90:	5b                   	pop    %ebx
    ac91:	5e                   	pop    %esi
    ac92:	c3                   	ret    
    ac93:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ac99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000aca0 <fpu_sub>:
    aca0:	56                   	push   %esi
    aca1:	53                   	push   %ebx
    aca2:	e8 43 86 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    aca7:	05 59 03 02 00       	add    $0x20359,%eax
    acac:	83 ec 04             	sub    $0x4,%esp
    acaf:	8d b0 20 1e 05 00    	lea    0x51e20(%eax),%esi
    acb5:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
    acb9:	c0 eb 03             	shr    $0x3,%bl
    acbc:	83 e3 07             	and    $0x7,%ebx
    acbf:	ff 34 9e             	pushl  (%esi,%ebx,4)
    acc2:	ff 74 24 14          	pushl  0x14(%esp)
    acc6:	e8 95 f5 ff ff       	call   a260 <internal_float_sub>
    accb:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
    acce:	83 c4 0c             	add    $0xc,%esp
    acd1:	5b                   	pop    %ebx
    acd2:	5e                   	pop    %esi
    acd3:	c3                   	ret    
    acd4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    acda:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000ace0 <fpu_mul>:
    ace0:	56                   	push   %esi
    ace1:	53                   	push   %ebx
    ace2:	e8 03 86 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    ace7:	05 19 03 02 00       	add    $0x20319,%eax
    acec:	83 ec 04             	sub    $0x4,%esp
    acef:	8d b0 20 1e 05 00    	lea    0x51e20(%eax),%esi
    acf5:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
    acf9:	c0 eb 03             	shr    $0x3,%bl
    acfc:	83 e3 07             	and    $0x7,%ebx
    acff:	ff 34 9e             	pushl  (%esi,%ebx,4)
    ad02:	ff 74 24 14          	pushl  0x14(%esp)
    ad06:	e8 e5 f5 ff ff       	call   a2f0 <internal_float_mul>
    ad0b:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
    ad0e:	83 c4 0c             	add    $0xc,%esp
    ad11:	5b                   	pop    %ebx
    ad12:	5e                   	pop    %esi
    ad13:	c3                   	ret    
    ad14:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ad1a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000ad20 <fpu_mul_idx>:
    ad20:	56                   	push   %esi
    ad21:	53                   	push   %ebx
    ad22:	e8 c3 85 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    ad27:	05 d9 02 02 00       	add    $0x202d9,%eax
    ad2c:	83 ec 04             	sub    $0x4,%esp
    ad2f:	8d b0 20 1e 05 00    	lea    0x51e20(%eax),%esi
    ad35:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
    ad39:	c0 eb 03             	shr    $0x3,%bl
    ad3c:	83 e3 07             	and    $0x7,%ebx
    ad3f:	ff 34 9e             	pushl  (%esi,%ebx,4)
    ad42:	8b 44 24 14          	mov    0x14(%esp),%eax
    ad46:	01 d8                	add    %ebx,%eax
    ad48:	83 e0 07             	and    $0x7,%eax
    ad4b:	ff 34 86             	pushl  (%esi,%eax,4)
    ad4e:	e8 9d f5 ff ff       	call   a2f0 <internal_float_mul>
    ad53:	03 5c 24 1c          	add    0x1c(%esp),%ebx
    ad57:	83 e3 07             	and    $0x7,%ebx
    ad5a:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
    ad5d:	83 c4 0c             	add    $0xc,%esp
    ad60:	5b                   	pop    %ebx
    ad61:	5e                   	pop    %esi
    ad62:	c3                   	ret    
    ad63:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ad69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ad70 <fpu_div>:
    ad70:	56                   	push   %esi
    ad71:	53                   	push   %ebx
    ad72:	e8 73 85 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    ad77:	05 89 02 02 00       	add    $0x20289,%eax
    ad7c:	83 ec 0c             	sub    $0xc,%esp
    ad7f:	8d b0 20 1e 05 00    	lea    0x51e20(%eax),%esi
    ad85:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
    ad89:	c0 eb 03             	shr    $0x3,%bl
    ad8c:	83 e3 07             	and    $0x7,%ebx
    ad8f:	ff 34 9e             	pushl  (%esi,%ebx,4)
    ad92:	ff 74 24 1c          	pushl  0x1c(%esp)
    ad96:	e8 d5 f9 ff ff       	call   a770 <internal_float_div>
    ad9b:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
    ad9e:	83 c4 14             	add    $0x14,%esp
    ada1:	5b                   	pop    %ebx
    ada2:	5e                   	pop    %esi
    ada3:	c3                   	ret    
    ada4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    adaa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000adb0 <fpu_xch>:
    adb0:	e8 35 85 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    adb5:	05 4b 02 02 00       	add    $0x2024b,%eax
    adba:	56                   	push   %esi
    adbb:	53                   	push   %ebx
    adbc:	8d 90 20 1e 05 00    	lea    0x51e20(%eax),%edx
    adc2:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    adc6:	0f b6 42 21          	movzbl 0x21(%edx),%eax
    adca:	c0 e8 03             	shr    $0x3,%al
    adcd:	83 e0 07             	and    $0x7,%eax
    add0:	01 c1                	add    %eax,%ecx
    add2:	8b 1c 82             	mov    (%edx,%eax,4),%ebx
    add5:	83 e1 07             	and    $0x7,%ecx
    add8:	8b 34 8a             	mov    (%edx,%ecx,4),%esi
    addb:	89 34 82             	mov    %esi,(%edx,%eax,4)
    adde:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
    ade1:	5b                   	pop    %ebx
    ade2:	5e                   	pop    %esi
    ade3:	c3                   	ret    
    ade4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    adea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000adf0 <fpu_copy>:
    adf0:	e8 f5 84 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    adf5:	05 0b 02 02 00       	add    $0x2020b,%eax
    adfa:	53                   	push   %ebx
    adfb:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    adff:	8d 90 20 1e 05 00    	lea    0x51e20(%eax),%edx
    ae05:	0f b6 42 21          	movzbl 0x21(%edx),%eax
    ae09:	c0 e8 03             	shr    $0x3,%al
    ae0c:	83 e0 07             	and    $0x7,%eax
    ae0f:	8b 1c 82             	mov    (%edx,%eax,4),%ebx
    ae12:	01 c1                	add    %eax,%ecx
    ae14:	89 c8                	mov    %ecx,%eax
    ae16:	83 e0 07             	and    $0x7,%eax
    ae19:	89 1c 82             	mov    %ebx,(%edx,%eax,4)
    ae1c:	5b                   	pop    %ebx
    ae1d:	c3                   	ret    
    ae1e:	66 90                	xchg   %ax,%ax

0000ae20 <fpu_cmp>:
    ae20:	e8 c5 84 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    ae25:	05 db 01 02 00       	add    $0x201db,%eax
    ae2a:	53                   	push   %ebx
    ae2b:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    ae2f:	8d 90 20 1e 05 00    	lea    0x51e20(%eax),%edx
    ae35:	0f b6 42 21          	movzbl 0x21(%edx),%eax
    ae39:	89 c1                	mov    %eax,%ecx
    ae3b:	c0 e9 03             	shr    $0x3,%cl
    ae3e:	83 e1 07             	and    $0x7,%ecx
    ae41:	01 cb                	add    %ecx,%ebx
    ae43:	d9 04 8a             	flds   (%edx,%ecx,4)
    ae46:	83 e3 07             	and    $0x7,%ebx
    ae49:	d9 04 9a             	flds   (%edx,%ebx,4)
    ae4c:	d9 c9                	fxch   %st(1)
    ae4e:	db e9                	fucomi %st(1),%st
    ae50:	77 26                	ja     ae78 <fpu_cmp+0x58>
    ae52:	d9 c9                	fxch   %st(1)
    ae54:	df e9                	fucomip %st(1),%st
    ae56:	dd d8                	fstp   %st(0)
    ae58:	77 0e                	ja     ae68 <fpu_cmp+0x48>
    ae5a:	83 e0 fa             	and    $0xfffffffa,%eax
    ae5d:	83 c8 40             	or     $0x40,%eax
    ae60:	88 42 21             	mov    %al,0x21(%edx)
    ae63:	5b                   	pop    %ebx
    ae64:	c3                   	ret    
    ae65:	8d 76 00             	lea    0x0(%esi),%esi
    ae68:	83 c8 01             	or     $0x1,%eax
    ae6b:	83 e0 bb             	and    $0xffffffbb,%eax
    ae6e:	88 42 21             	mov    %al,0x21(%edx)
    ae71:	5b                   	pop    %ebx
    ae72:	c3                   	ret    
    ae73:	90                   	nop
    ae74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ae78:	dd d8                	fstp   %st(0)
    ae7a:	dd d8                	fstp   %st(0)
    ae7c:	83 e0 ba             	and    $0xffffffba,%eax
    ae7f:	88 42 21             	mov    %al,0x21(%edx)
    ae82:	5b                   	pop    %ebx
    ae83:	c3                   	ret    
    ae84:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ae8a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000ae90 <fpu_cmpi>:
    ae90:	53                   	push   %ebx
    ae91:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    ae95:	e8 26 7e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ae9a:	81 c3 66 01 02 00    	add    $0x20166,%ebx
    aea0:	8d 93 20 1e 05 00    	lea    0x51e20(%ebx),%edx
    aea6:	0f b6 42 21          	movzbl 0x21(%edx),%eax
    aeaa:	c0 e8 03             	shr    $0x3,%al
    aead:	83 e0 07             	and    $0x7,%eax
    aeb0:	01 c1                	add    %eax,%ecx
    aeb2:	d9 04 82             	flds   (%edx,%eax,4)
    aeb5:	89 c8                	mov    %ecx,%eax
    aeb7:	83 e0 07             	and    $0x7,%eax
    aeba:	d9 04 82             	flds   (%edx,%eax,4)
    aebd:	d9 c9                	fxch   %st(1)
    aebf:	db e9                	fucomi %st(1),%st
    aec1:	77 2d                	ja     aef0 <fpu_cmpi+0x60>
    aec3:	d9 c9                	fxch   %st(1)
    aec5:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    aecb:	df e9                	fucomip %st(1),%st
    aecd:	dd d8                	fstp   %st(0)
    aecf:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    aed3:	77 0b                	ja     aee0 <fpu_cmpi+0x50>
    aed5:	83 e0 fa             	and    $0xfffffffa,%eax
    aed8:	83 c8 40             	or     $0x40,%eax
    aedb:	88 42 24             	mov    %al,0x24(%edx)
    aede:	5b                   	pop    %ebx
    aedf:	c3                   	ret    
    aee0:	83 e0 bb             	and    $0xffffffbb,%eax
    aee3:	83 c8 01             	or     $0x1,%eax
    aee6:	88 42 24             	mov    %al,0x24(%edx)
    aee9:	5b                   	pop    %ebx
    aeea:	c3                   	ret    
    aeeb:	90                   	nop
    aeec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    aef0:	dd d8                	fstp   %st(0)
    aef2:	dd d8                	fstp   %st(0)
    aef4:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    aefa:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    aefe:	83 e0 ba             	and    $0xffffffba,%eax
    af01:	88 42 24             	mov    %al,0x24(%edx)
    af04:	5b                   	pop    %ebx
    af05:	c3                   	ret    

0000af06 <__x86.get_pc_thunk.si>:
    af06:	8b 34 24             	mov    (%esp),%esi
    af09:	c3                   	ret    
    af0a:	66 90                	xchg   %ax,%ax
    af0c:	66 90                	xchg   %ax,%ax
    af0e:	66 90                	xchg   %ax,%ax

0000af10 <set_CF_add>:
    af10:	e8 d5 83 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    af15:	05 eb 00 02 00       	add    $0x200eb,%eax
    af1a:	8d 90 60 1d 05 00    	lea    0x51d60(%eax),%edx
    af20:	8b 44 24 08          	mov    0x8(%esp),%eax
    af24:	39 44 24 04          	cmp    %eax,0x4(%esp)
    af28:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    af2c:	0f 92 c1             	setb   %cl
    af2f:	83 e0 fe             	and    $0xfffffffe,%eax
    af32:	09 c8                	or     %ecx,%eax
    af34:	88 42 24             	mov    %al,0x24(%edx)
    af37:	c3                   	ret    
    af38:	90                   	nop
    af39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000af40 <set_CF_adc>:
    af40:	e8 a5 83 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    af45:	05 bb 00 02 00       	add    $0x200bb,%eax
    af4a:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    af4e:	8d 90 60 1d 05 00    	lea    0x51d60(%eax),%edx
    af54:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    af58:	a8 01                	test   $0x1,%al
    af5a:	74 1c                	je     af78 <set_CF_adc+0x38>
    af5c:	3b 4c 24 08          	cmp    0x8(%esp),%ecx
    af60:	76 0e                	jbe    af70 <set_CF_adc+0x30>
    af62:	3b 4c 24 0c          	cmp    0xc(%esp),%ecx
    af66:	76 08                	jbe    af70 <set_CF_adc+0x30>
    af68:	83 e0 fe             	and    $0xfffffffe,%eax
    af6b:	88 42 24             	mov    %al,0x24(%edx)
    af6e:	c3                   	ret    
    af6f:	90                   	nop
    af70:	80 4a 24 01          	orb    $0x1,0x24(%edx)
    af74:	c3                   	ret    
    af75:	8d 76 00             	lea    0x0(%esi),%esi
    af78:	3b 4c 24 08          	cmp    0x8(%esp),%ecx
    af7c:	0f 92 c1             	setb   %cl
    af7f:	83 e0 fe             	and    $0xfffffffe,%eax
    af82:	09 c8                	or     %ecx,%eax
    af84:	88 42 24             	mov    %al,0x24(%edx)
    af87:	c3                   	ret    
    af88:	90                   	nop
    af89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000af90 <set_PF>:
    af90:	56                   	push   %esi
    af91:	53                   	push   %ebx
    af92:	b8 08 00 00 00       	mov    $0x8,%eax
    af97:	0f b6 54 24 0c       	movzbl 0xc(%esp),%edx
    af9c:	31 c9                	xor    %ecx,%ecx
    af9e:	e8 63 ff ff ff       	call   af06 <__x86.get_pc_thunk.si>
    afa3:	81 c6 5d 00 02 00    	add    $0x2005d,%esi
    afa9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    afb0:	89 d3                	mov    %edx,%ebx
    afb2:	d1 ea                	shr    %edx
    afb4:	83 e3 01             	and    $0x1,%ebx
    afb7:	01 d9                	add    %ebx,%ecx
    afb9:	83 e8 01             	sub    $0x1,%eax
    afbc:	75 f2                	jne    afb0 <set_PF+0x20>
    afbe:	8d 96 60 1d 05 00    	lea    0x51d60(%esi),%edx
    afc4:	f7 d1                	not    %ecx
    afc6:	83 e1 01             	and    $0x1,%ecx
    afc9:	c1 e1 02             	shl    $0x2,%ecx
    afcc:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    afd0:	83 e0 fb             	and    $0xfffffffb,%eax
    afd3:	09 c1                	or     %eax,%ecx
    afd5:	88 4a 24             	mov    %cl,0x24(%edx)
    afd8:	5b                   	pop    %ebx
    afd9:	5e                   	pop    %esi
    afda:	c3                   	ret    
    afdb:	90                   	nop
    afdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000afe0 <set_ZF>:
    afe0:	e8 05 83 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    afe5:	05 1b 00 02 00       	add    $0x2001b,%eax
    afea:	8d 88 60 1d 05 00    	lea    0x51d60(%eax),%ecx
    aff0:	8b 44 24 04          	mov    0x4(%esp),%eax
    aff4:	85 c0                	test   %eax,%eax
    aff6:	0f b6 41 24          	movzbl 0x24(%ecx),%eax
    affa:	0f 94 c2             	sete   %dl
    affd:	c1 e2 06             	shl    $0x6,%edx
    b000:	83 e0 bf             	and    $0xffffffbf,%eax
    b003:	09 d0                	or     %edx,%eax
    b005:	88 41 24             	mov    %al,0x24(%ecx)
    b008:	c3                   	ret    
    b009:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b010 <set_SF>:
    b010:	e8 d5 82 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    b015:	05 eb ff 01 00       	add    $0x1ffeb,%eax
    b01a:	8d 88 60 1d 05 00    	lea    0x51d60(%eax),%ecx
    b020:	8b 44 24 04          	mov    0x4(%esp),%eax
    b024:	c1 e8 1f             	shr    $0x1f,%eax
    b027:	89 c2                	mov    %eax,%edx
    b029:	0f b6 41 24          	movzbl 0x24(%ecx),%eax
    b02d:	c1 e2 07             	shl    $0x7,%edx
    b030:	83 e0 7f             	and    $0x7f,%eax
    b033:	09 d0                	or     %edx,%eax
    b035:	88 41 24             	mov    %al,0x24(%ecx)
    b038:	c3                   	ret    
    b039:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b040 <set_OF_add>:
    b040:	8b 44 24 08          	mov    0x8(%esp),%eax
    b044:	8b 54 24 0c          	mov    0xc(%esp),%edx
    b048:	e8 73 8a ff ff       	call   3ac0 <__x86.get_pc_thunk.cx>
    b04d:	81 c1 b3 ff 01 00    	add    $0x1ffb3,%ecx
    b053:	c1 e8 1f             	shr    $0x1f,%eax
    b056:	c1 ea 1f             	shr    $0x1f,%edx
    b059:	39 d0                	cmp    %edx,%eax
    b05b:	74 13                	je     b070 <set_OF_add+0x30>
    b05d:	8d 81 60 1d 05 00    	lea    0x51d60(%ecx),%eax
    b063:	80 60 25 f7          	andb   $0xf7,0x25(%eax)
    b067:	c3                   	ret    
    b068:	90                   	nop
    b069:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b070:	8b 54 24 04          	mov    0x4(%esp),%edx
    b074:	c1 ea 1f             	shr    $0x1f,%edx
    b077:	39 d0                	cmp    %edx,%eax
    b079:	74 e2                	je     b05d <set_OF_add+0x1d>
    b07b:	8d 81 60 1d 05 00    	lea    0x51d60(%ecx),%eax
    b081:	80 48 25 08          	orb    $0x8,0x25(%eax)
    b085:	c3                   	ret    
    b086:	8d 76 00             	lea    0x0(%esi),%esi
    b089:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b090 <alu_add>:
    b090:	e8 55 82 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    b095:	05 6b ff 01 00       	add    $0x1ff6b,%eax
    b09a:	55                   	push   %ebp
    b09b:	57                   	push   %edi
    b09c:	8d b8 60 1d 05 00    	lea    0x51d60(%eax),%edi
    b0a2:	56                   	push   %esi
    b0a3:	53                   	push   %ebx
    b0a4:	8b 6c 24 14          	mov    0x14(%esp),%ebp
    b0a8:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    b0ac:	89 e8                	mov    %ebp,%eax
    b0ae:	03 44 24 18          	add    0x18(%esp),%eax
    b0b2:	0f 92 c1             	setb   %cl
    b0b5:	83 e2 fe             	and    $0xfffffffe,%edx
    b0b8:	31 db                	xor    %ebx,%ebx
    b0ba:	09 ca                	or     %ecx,%edx
    b0bc:	0f b6 c8             	movzbl %al,%ecx
    b0bf:	88 57 24             	mov    %dl,0x24(%edi)
    b0c2:	ba 08 00 00 00       	mov    $0x8,%edx
    b0c7:	89 f6                	mov    %esi,%esi
    b0c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    b0d0:	89 ce                	mov    %ecx,%esi
    b0d2:	d1 e9                	shr    %ecx
    b0d4:	83 e6 01             	and    $0x1,%esi
    b0d7:	01 f3                	add    %esi,%ebx
    b0d9:	83 ea 01             	sub    $0x1,%edx
    b0dc:	75 f2                	jne    b0d0 <alu_add+0x40>
    b0de:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    b0e2:	f7 d3                	not    %ebx
    b0e4:	83 e3 01             	and    $0x1,%ebx
    b0e7:	c1 e3 02             	shl    $0x2,%ebx
    b0ea:	83 e2 fb             	and    $0xfffffffb,%edx
    b0ed:	09 d3                	or     %edx,%ebx
    b0ef:	85 c0                	test   %eax,%eax
    b0f1:	0f 94 c2             	sete   %dl
    b0f4:	83 e3 bf             	and    $0xffffffbf,%ebx
    b0f7:	c1 ed 1f             	shr    $0x1f,%ebp
    b0fa:	c1 e2 06             	shl    $0x6,%edx
    b0fd:	09 d3                	or     %edx,%ebx
    b0ff:	89 c2                	mov    %eax,%edx
    b101:	c1 ea 1f             	shr    $0x1f,%edx
    b104:	83 e3 7f             	and    $0x7f,%ebx
    b107:	89 d1                	mov    %edx,%ecx
    b109:	c1 e1 07             	shl    $0x7,%ecx
    b10c:	09 cb                	or     %ecx,%ebx
    b10e:	8b 4c 24 18          	mov    0x18(%esp),%ecx
    b112:	88 5f 24             	mov    %bl,0x24(%edi)
    b115:	c1 e9 1f             	shr    $0x1f,%ecx
    b118:	39 cd                	cmp    %ecx,%ebp
    b11a:	74 0c                	je     b128 <alu_add+0x98>
    b11c:	5b                   	pop    %ebx
    b11d:	5e                   	pop    %esi
    b11e:	80 67 25 f7          	andb   $0xf7,0x25(%edi)
    b122:	5f                   	pop    %edi
    b123:	5d                   	pop    %ebp
    b124:	c3                   	ret    
    b125:	8d 76 00             	lea    0x0(%esi),%esi
    b128:	39 d5                	cmp    %edx,%ebp
    b12a:	74 f0                	je     b11c <alu_add+0x8c>
    b12c:	5b                   	pop    %ebx
    b12d:	5e                   	pop    %esi
    b12e:	80 4f 25 08          	orb    $0x8,0x25(%edi)
    b132:	5f                   	pop    %edi
    b133:	5d                   	pop    %ebp
    b134:	c3                   	ret    
    b135:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b139:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b140 <alu_adc>:
    b140:	e8 a5 81 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    b145:	05 bb fe 01 00       	add    $0x1febb,%eax
    b14a:	55                   	push   %ebp
    b14b:	57                   	push   %edi
    b14c:	31 c9                	xor    %ecx,%ecx
    b14e:	8d b8 60 1d 05 00    	lea    0x51d60(%eax),%edi
    b154:	56                   	push   %esi
    b155:	ba 08 00 00 00       	mov    $0x8,%edx
    b15a:	53                   	push   %ebx
    b15b:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    b15f:	83 e0 01             	and    $0x1,%eax
    b162:	03 44 24 18          	add    0x18(%esp),%eax
    b166:	03 44 24 14          	add    0x14(%esp),%eax
    b16a:	0f 92 c1             	setb   %cl
    b16d:	31 db                	xor    %ebx,%ebx
    b16f:	89 cd                	mov    %ecx,%ebp
    b171:	0f b6 c8             	movzbl %al,%ecx
    b174:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b178:	89 ce                	mov    %ecx,%esi
    b17a:	d1 e9                	shr    %ecx
    b17c:	83 e6 01             	and    $0x1,%esi
    b17f:	01 f3                	add    %esi,%ebx
    b181:	83 ea 01             	sub    $0x1,%edx
    b184:	75 f2                	jne    b178 <alu_adc+0x38>
    b186:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    b18a:	f7 d3                	not    %ebx
    b18c:	83 e3 01             	and    $0x1,%ebx
    b18f:	c1 e3 02             	shl    $0x2,%ebx
    b192:	83 e2 fb             	and    $0xfffffffb,%edx
    b195:	09 d3                	or     %edx,%ebx
    b197:	85 c0                	test   %eax,%eax
    b199:	0f 94 c1             	sete   %cl
    b19c:	83 e3 bf             	and    $0xffffffbf,%ebx
    b19f:	c1 e1 06             	shl    $0x6,%ecx
    b1a2:	09 cb                	or     %ecx,%ebx
    b1a4:	89 c1                	mov    %eax,%ecx
    b1a6:	c1 e9 1f             	shr    $0x1f,%ecx
    b1a9:	89 da                	mov    %ebx,%edx
    b1ab:	89 cb                	mov    %ecx,%ebx
    b1ad:	83 e2 7f             	and    $0x7f,%edx
    b1b0:	c1 e3 07             	shl    $0x7,%ebx
    b1b3:	09 da                	or     %ebx,%edx
    b1b5:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    b1b9:	88 57 24             	mov    %dl,0x24(%edi)
    b1bc:	8b 54 24 14          	mov    0x14(%esp),%edx
    b1c0:	c1 eb 1f             	shr    $0x1f,%ebx
    b1c3:	c1 ea 1f             	shr    $0x1f,%edx
    b1c6:	39 da                	cmp    %ebx,%edx
    b1c8:	74 36                	je     b200 <alu_adc+0xc0>
    b1ca:	80 67 25 f7          	andb   $0xf7,0x25(%edi)
    b1ce:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    b1d2:	f6 c2 01             	test   $0x1,%dl
    b1d5:	75 11                	jne    b1e8 <alu_adc+0xa8>
    b1d7:	83 e2 fe             	and    $0xfffffffe,%edx
    b1da:	09 ea                	or     %ebp,%edx
    b1dc:	5b                   	pop    %ebx
    b1dd:	88 57 24             	mov    %dl,0x24(%edi)
    b1e0:	5e                   	pop    %esi
    b1e1:	5f                   	pop    %edi
    b1e2:	5d                   	pop    %ebp
    b1e3:	c3                   	ret    
    b1e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b1e8:	39 44 24 14          	cmp    %eax,0x14(%esp)
    b1ec:	73 22                	jae    b210 <alu_adc+0xd0>
    b1ee:	39 44 24 18          	cmp    %eax,0x18(%esp)
    b1f2:	73 1c                	jae    b210 <alu_adc+0xd0>
    b1f4:	83 e2 fe             	and    $0xfffffffe,%edx
    b1f7:	5b                   	pop    %ebx
    b1f8:	88 57 24             	mov    %dl,0x24(%edi)
    b1fb:	5e                   	pop    %esi
    b1fc:	5f                   	pop    %edi
    b1fd:	5d                   	pop    %ebp
    b1fe:	c3                   	ret    
    b1ff:	90                   	nop
    b200:	39 ca                	cmp    %ecx,%edx
    b202:	74 c6                	je     b1ca <alu_adc+0x8a>
    b204:	80 4f 25 08          	orb    $0x8,0x25(%edi)
    b208:	eb c4                	jmp    b1ce <alu_adc+0x8e>
    b20a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b210:	5b                   	pop    %ebx
    b211:	5e                   	pop    %esi
    b212:	80 4f 24 01          	orb    $0x1,0x24(%edi)
    b216:	5f                   	pop    %edi
    b217:	5d                   	pop    %ebp
    b218:	c3                   	ret    
    b219:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b220 <set_CF_sub>:
    b220:	e8 c5 80 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    b225:	05 db fd 01 00       	add    $0x1fddb,%eax
    b22a:	8d 90 60 1d 05 00    	lea    0x51d60(%eax),%edx
    b230:	8b 44 24 04          	mov    0x4(%esp),%eax
    b234:	39 44 24 08          	cmp    %eax,0x8(%esp)
    b238:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    b23c:	0f 92 c1             	setb   %cl
    b23f:	83 e0 fe             	and    $0xfffffffe,%eax
    b242:	09 c8                	or     %ecx,%eax
    b244:	88 42 24             	mov    %al,0x24(%edx)
    b247:	c3                   	ret    
    b248:	90                   	nop
    b249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b250 <set_OF_sub>:
    b250:	8b 44 24 08          	mov    0x8(%esp),%eax
    b254:	8b 54 24 0c          	mov    0xc(%esp),%edx
    b258:	e8 63 88 ff ff       	call   3ac0 <__x86.get_pc_thunk.cx>
    b25d:	81 c1 a3 fd 01 00    	add    $0x1fda3,%ecx
    b263:	f7 d0                	not    %eax
    b265:	c1 ea 1f             	shr    $0x1f,%edx
    b268:	c1 e8 1f             	shr    $0x1f,%eax
    b26b:	39 d0                	cmp    %edx,%eax
    b26d:	74 11                	je     b280 <set_OF_sub+0x30>
    b26f:	8d 81 60 1d 05 00    	lea    0x51d60(%ecx),%eax
    b275:	80 60 25 f7          	andb   $0xf7,0x25(%eax)
    b279:	c3                   	ret    
    b27a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b280:	8b 54 24 04          	mov    0x4(%esp),%edx
    b284:	c1 ea 1f             	shr    $0x1f,%edx
    b287:	39 d0                	cmp    %edx,%eax
    b289:	74 e4                	je     b26f <set_OF_sub+0x1f>
    b28b:	8d 81 60 1d 05 00    	lea    0x51d60(%ecx),%eax
    b291:	80 48 25 08          	orb    $0x8,0x25(%eax)
    b295:	c3                   	ret    
    b296:	8d 76 00             	lea    0x0(%esi),%esi
    b299:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b2a0 <set_CF_sbb>:
    b2a0:	e8 45 80 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    b2a5:	05 5b fd 01 00       	add    $0x1fd5b,%eax
    b2aa:	53                   	push   %ebx
    b2ab:	8d 90 60 1d 05 00    	lea    0x51d60(%eax),%edx
    b2b1:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    b2b5:	a8 01                	test   $0x1,%al
    b2b7:	74 1f                	je     b2d8 <set_CF_sbb+0x38>
    b2b9:	89 c1                	mov    %eax,%ecx
    b2bb:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    b2bf:	83 c8 01             	or     $0x1,%eax
    b2c2:	83 e1 fe             	and    $0xfffffffe,%ecx
    b2c5:	39 5c 24 08          	cmp    %ebx,0x8(%esp)
    b2c9:	0f 42 c1             	cmovb  %ecx,%eax
    b2cc:	88 42 24             	mov    %al,0x24(%edx)
    b2cf:	5b                   	pop    %ebx
    b2d0:	c3                   	ret    
    b2d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b2d8:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    b2dc:	39 5c 24 08          	cmp    %ebx,0x8(%esp)
    b2e0:	0f 97 c1             	seta   %cl
    b2e3:	83 e0 fe             	and    $0xfffffffe,%eax
    b2e6:	09 c8                	or     %ecx,%eax
    b2e8:	88 42 24             	mov    %al,0x24(%edx)
    b2eb:	5b                   	pop    %ebx
    b2ec:	c3                   	ret    
    b2ed:	8d 76 00             	lea    0x0(%esi),%esi

0000b2f0 <alu_sub>:
    b2f0:	55                   	push   %ebp
    b2f1:	31 c9                	xor    %ecx,%ecx
    b2f3:	57                   	push   %edi
    b2f4:	e8 c1 de ff ff       	call   91ba <__x86.get_pc_thunk.bp>
    b2f9:	81 c5 07 fd 01 00    	add    $0x1fd07,%ebp
    b2ff:	56                   	push   %esi
    b300:	53                   	push   %ebx
    b301:	ba 08 00 00 00       	mov    $0x8,%edx
    b306:	8b 44 24 18          	mov    0x18(%esp),%eax
    b30a:	2b 44 24 14          	sub    0x14(%esp),%eax
    b30e:	0f 92 c1             	setb   %cl
    b311:	31 db                	xor    %ebx,%ebx
    b313:	89 cf                	mov    %ecx,%edi
    b315:	0f b6 c8             	movzbl %al,%ecx
    b318:	90                   	nop
    b319:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b320:	89 ce                	mov    %ecx,%esi
    b322:	d1 e9                	shr    %ecx
    b324:	83 e6 01             	and    $0x1,%esi
    b327:	01 f3                	add    %esi,%ebx
    b329:	83 ea 01             	sub    $0x1,%edx
    b32c:	75 f2                	jne    b320 <alu_sub+0x30>
    b32e:	8d 8d 60 1d 05 00    	lea    0x51d60(%ebp),%ecx
    b334:	f7 d3                	not    %ebx
    b336:	83 e3 01             	and    $0x1,%ebx
    b339:	c1 e3 02             	shl    $0x2,%ebx
    b33c:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
    b340:	83 e2 fb             	and    $0xfffffffb,%edx
    b343:	09 d3                	or     %edx,%ebx
    b345:	85 c0                	test   %eax,%eax
    b347:	0f 94 c2             	sete   %dl
    b34a:	83 e3 bf             	and    $0xffffffbf,%ebx
    b34d:	c1 e2 06             	shl    $0x6,%edx
    b350:	09 da                	or     %ebx,%edx
    b352:	89 c3                	mov    %eax,%ebx
    b354:	c1 eb 1f             	shr    $0x1f,%ebx
    b357:	83 e2 7f             	and    $0x7f,%edx
    b35a:	89 de                	mov    %ebx,%esi
    b35c:	c1 e6 07             	shl    $0x7,%esi
    b35f:	09 f2                	or     %esi,%edx
    b361:	8b 74 24 18          	mov    0x18(%esp),%esi
    b365:	83 e2 fe             	and    $0xfffffffe,%edx
    b368:	09 fa                	or     %edi,%edx
    b36a:	88 51 24             	mov    %dl,0x24(%ecx)
    b36d:	8b 54 24 14          	mov    0x14(%esp),%edx
    b371:	c1 ee 1f             	shr    $0x1f,%esi
    b374:	f7 d2                	not    %edx
    b376:	c1 ea 1f             	shr    $0x1f,%edx
    b379:	39 f2                	cmp    %esi,%edx
    b37b:	74 13                	je     b390 <alu_sub+0xa0>
    b37d:	80 61 25 f7          	andb   $0xf7,0x25(%ecx)
    b381:	5b                   	pop    %ebx
    b382:	5e                   	pop    %esi
    b383:	5f                   	pop    %edi
    b384:	5d                   	pop    %ebp
    b385:	c3                   	ret    
    b386:	8d 76 00             	lea    0x0(%esi),%esi
    b389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    b390:	39 da                	cmp    %ebx,%edx
    b392:	74 e9                	je     b37d <alu_sub+0x8d>
    b394:	80 49 25 08          	orb    $0x8,0x25(%ecx)
    b398:	5b                   	pop    %ebx
    b399:	5e                   	pop    %esi
    b39a:	5f                   	pop    %edi
    b39b:	5d                   	pop    %ebp
    b39c:	c3                   	ret    
    b39d:	8d 76 00             	lea    0x0(%esi),%esi

0000b3a0 <alu_sbb>:
    b3a0:	e8 45 7f ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    b3a5:	05 5b fc 01 00       	add    $0x1fc5b,%eax
    b3aa:	55                   	push   %ebp
    b3ab:	57                   	push   %edi
    b3ac:	8d b8 60 1d 05 00    	lea    0x51d60(%eax),%edi
    b3b2:	56                   	push   %esi
    b3b3:	53                   	push   %ebx
    b3b4:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    b3b8:	31 db                	xor    %ebx,%ebx
    b3ba:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    b3be:	89 ea                	mov    %ebp,%edx
    b3c0:	83 e0 01             	and    $0x1,%eax
    b3c3:	29 c2                	sub    %eax,%edx
    b3c5:	89 d0                	mov    %edx,%eax
    b3c7:	2b 44 24 14          	sub    0x14(%esp),%eax
    b3cb:	ba 08 00 00 00       	mov    $0x8,%edx
    b3d0:	0f b6 c8             	movzbl %al,%ecx
    b3d3:	90                   	nop
    b3d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b3d8:	89 ce                	mov    %ecx,%esi
    b3da:	d1 e9                	shr    %ecx
    b3dc:	83 e6 01             	and    $0x1,%esi
    b3df:	01 f3                	add    %esi,%ebx
    b3e1:	83 ea 01             	sub    $0x1,%edx
    b3e4:	75 f2                	jne    b3d8 <alu_sbb+0x38>
    b3e6:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    b3ea:	f7 d3                	not    %ebx
    b3ec:	83 e3 01             	and    $0x1,%ebx
    b3ef:	c1 e3 02             	shl    $0x2,%ebx
    b3f2:	83 e2 fb             	and    $0xfffffffb,%edx
    b3f5:	09 d3                	or     %edx,%ebx
    b3f7:	85 c0                	test   %eax,%eax
    b3f9:	0f 94 c2             	sete   %dl
    b3fc:	83 e3 bf             	and    $0xffffffbf,%ebx
    b3ff:	c1 e2 06             	shl    $0x6,%edx
    b402:	09 d3                	or     %edx,%ebx
    b404:	89 c2                	mov    %eax,%edx
    b406:	c1 ea 1f             	shr    $0x1f,%edx
    b409:	83 e3 7f             	and    $0x7f,%ebx
    b40c:	89 d1                	mov    %edx,%ecx
    b40e:	c1 e1 07             	shl    $0x7,%ecx
    b411:	09 cb                	or     %ecx,%ebx
    b413:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    b417:	88 5f 24             	mov    %bl,0x24(%edi)
    b41a:	89 eb                	mov    %ebp,%ebx
    b41c:	c1 eb 1f             	shr    $0x1f,%ebx
    b41f:	f7 d1                	not    %ecx
    b421:	c1 e9 1f             	shr    $0x1f,%ecx
    b424:	39 d9                	cmp    %ebx,%ecx
    b426:	74 40                	je     b468 <alu_sbb+0xc8>
    b428:	80 67 25 f7          	andb   $0xf7,0x25(%edi)
    b42c:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    b430:	f6 c2 01             	test   $0x1,%dl
    b433:	74 1b                	je     b450 <alu_sbb+0xb0>
    b435:	89 d1                	mov    %edx,%ecx
    b437:	83 ca 01             	or     $0x1,%edx
    b43a:	83 e1 fe             	and    $0xfffffffe,%ecx
    b43d:	39 c5                	cmp    %eax,%ebp
    b43f:	0f 47 d1             	cmova  %ecx,%edx
    b442:	5b                   	pop    %ebx
    b443:	88 57 24             	mov    %dl,0x24(%edi)
    b446:	5e                   	pop    %esi
    b447:	5f                   	pop    %edi
    b448:	5d                   	pop    %ebp
    b449:	c3                   	ret    
    b44a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b450:	39 c5                	cmp    %eax,%ebp
    b452:	0f 92 c1             	setb   %cl
    b455:	83 e2 fe             	and    $0xfffffffe,%edx
    b458:	09 ca                	or     %ecx,%edx
    b45a:	5b                   	pop    %ebx
    b45b:	88 57 24             	mov    %dl,0x24(%edi)
    b45e:	5e                   	pop    %esi
    b45f:	5f                   	pop    %edi
    b460:	5d                   	pop    %ebp
    b461:	c3                   	ret    
    b462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b468:	39 d1                	cmp    %edx,%ecx
    b46a:	74 bc                	je     b428 <alu_sbb+0x88>
    b46c:	80 4f 25 08          	orb    $0x8,0x25(%edi)
    b470:	eb ba                	jmp    b42c <alu_sbb+0x8c>
    b472:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b480 <alu_mul>:
    b480:	57                   	push   %edi
    b481:	56                   	push   %esi
    b482:	53                   	push   %ebx
    b483:	8b 4c 24 18          	mov    0x18(%esp),%ecx
    b487:	e8 34 78 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    b48c:	81 c3 74 fb 01 00    	add    $0x1fb74,%ebx
    b492:	8b 44 24 14          	mov    0x14(%esp),%eax
    b496:	f7 64 24 10          	mull   0x10(%esp)
    b49a:	83 f9 08             	cmp    $0x8,%ecx
    b49d:	74 21                	je     b4c0 <alu_mul+0x40>
    b49f:	83 f9 10             	cmp    $0x10,%ecx
    b4a2:	74 3c                	je     b4e0 <alu_mul+0x60>
    b4a4:	85 d2                	test   %edx,%edx
    b4a6:	75 24                	jne    b4cc <alu_mul+0x4c>
    b4a8:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
    b4ae:	80 61 24 fe          	andb   $0xfe,0x24(%ecx)
    b4b2:	80 61 25 f7          	andb   $0xf7,0x25(%ecx)
    b4b6:	5b                   	pop    %ebx
    b4b7:	5e                   	pop    %esi
    b4b8:	5f                   	pop    %edi
    b4b9:	c3                   	ret    
    b4ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b4c0:	89 c6                	mov    %eax,%esi
    b4c2:	0f ac d6 08          	shrd   $0x8,%edx,%esi
    b4c6:	89 f1                	mov    %esi,%ecx
    b4c8:	84 c9                	test   %cl,%cl
    b4ca:	74 dc                	je     b4a8 <alu_mul+0x28>
    b4cc:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
    b4d2:	80 49 24 01          	orb    $0x1,0x24(%ecx)
    b4d6:	80 49 25 08          	orb    $0x8,0x25(%ecx)
    b4da:	5b                   	pop    %ebx
    b4db:	5e                   	pop    %esi
    b4dc:	5f                   	pop    %edi
    b4dd:	c3                   	ret    
    b4de:	66 90                	xchg   %ax,%ax
    b4e0:	89 c6                	mov    %eax,%esi
    b4e2:	0f ac d6 10          	shrd   $0x10,%edx,%esi
    b4e6:	66 85 f6             	test   %si,%si
    b4e9:	74 bd                	je     b4a8 <alu_mul+0x28>
    b4eb:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
    b4f1:	80 49 24 01          	orb    $0x1,0x24(%ecx)
    b4f5:	80 49 25 08          	orb    $0x8,0x25(%ecx)
    b4f9:	eb df                	jmp    b4da <alu_mul+0x5a>
    b4fb:	90                   	nop
    b4fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000b500 <alu_imul>:
    b500:	8b 44 24 08          	mov    0x8(%esp),%eax
    b504:	f7 6c 24 04          	imull  0x4(%esp)
    b508:	c3                   	ret    
    b509:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b510 <alu_div>:
    b510:	53                   	push   %ebx
    b511:	e8 aa 77 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    b516:	81 c3 ea fa 01 00    	add    $0x1faea,%ebx
    b51c:	83 ec 08             	sub    $0x8,%esp
    b51f:	ff 74 24 14          	pushl  0x14(%esp)
    b523:	ff 74 24 14          	pushl  0x14(%esp)
    b527:	ff 74 24 24          	pushl  0x24(%esp)
    b52b:	ff 74 24 24          	pushl  0x24(%esp)
    b52f:	e8 6c f1 00 00       	call   1a6a0 <__udivdi3>
    b534:	83 c4 18             	add    $0x18,%esp
    b537:	5b                   	pop    %ebx
    b538:	c3                   	ret    
    b539:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b540 <alu_idiv>:
    b540:	53                   	push   %ebx
    b541:	e8 7a 77 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    b546:	81 c3 ba fa 01 00    	add    $0x1faba,%ebx
    b54c:	83 ec 08             	sub    $0x8,%esp
    b54f:	ff 74 24 14          	pushl  0x14(%esp)
    b553:	ff 74 24 14          	pushl  0x14(%esp)
    b557:	ff 74 24 24          	pushl  0x24(%esp)
    b55b:	ff 74 24 24          	pushl  0x24(%esp)
    b55f:	e8 ec ed 00 00       	call   1a350 <__divdi3>
    b564:	83 c4 18             	add    $0x18,%esp
    b567:	5b                   	pop    %ebx
    b568:	c3                   	ret    
    b569:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b570 <alu_mod>:
    b570:	53                   	push   %ebx
    b571:	e8 4a 77 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    b576:	81 c3 8a fa 01 00    	add    $0x1fa8a,%ebx
    b57c:	83 ec 08             	sub    $0x8,%esp
    b57f:	ff 74 24 14          	pushl  0x14(%esp)
    b583:	ff 74 24 14          	pushl  0x14(%esp)
    b587:	ff 74 24 24          	pushl  0x24(%esp)
    b58b:	ff 74 24 24          	pushl  0x24(%esp)
    b58f:	e8 3c f2 00 00       	call   1a7d0 <__umoddi3>
    b594:	83 c4 18             	add    $0x18,%esp
    b597:	5b                   	pop    %ebx
    b598:	c3                   	ret    
    b599:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b5a0 <alu_imod>:
    b5a0:	53                   	push   %ebx
    b5a1:	e8 1a 77 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    b5a6:	81 c3 5a fa 01 00    	add    $0x1fa5a,%ebx
    b5ac:	83 ec 08             	sub    $0x8,%esp
    b5af:	ff 74 24 14          	pushl  0x14(%esp)
    b5b3:	ff 74 24 14          	pushl  0x14(%esp)
    b5b7:	ff 74 24 24          	pushl  0x24(%esp)
    b5bb:	ff 74 24 24          	pushl  0x24(%esp)
    b5bf:	e8 fc ee 00 00       	call   1a4c0 <__moddi3>
    b5c4:	83 c4 18             	add    $0x18,%esp
    b5c7:	5b                   	pop    %ebx
    b5c8:	c3                   	ret    
    b5c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b5d0 <alu_and>:
    b5d0:	e8 17 78 ff ff       	call   2dec <__x86.get_pc_thunk.dx>
    b5d5:	81 c2 2b fa 01 00    	add    $0x1fa2b,%edx
    b5db:	57                   	push   %edi
    b5dc:	56                   	push   %esi
    b5dd:	8d b2 60 1d 05 00    	lea    0x51d60(%edx),%esi
    b5e3:	53                   	push   %ebx
    b5e4:	ba 08 00 00 00       	mov    $0x8,%edx
    b5e9:	8b 44 24 14          	mov    0x14(%esp),%eax
    b5ed:	23 44 24 10          	and    0x10(%esp),%eax
    b5f1:	31 db                	xor    %ebx,%ebx
    b5f3:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
    b5f7:	80 66 25 f7          	andb   $0xf7,0x25(%esi)
    b5fb:	0f b6 c8             	movzbl %al,%ecx
    b5fe:	66 90                	xchg   %ax,%ax
    b600:	89 cf                	mov    %ecx,%edi
    b602:	d1 e9                	shr    %ecx
    b604:	83 e7 01             	and    $0x1,%edi
    b607:	01 fb                	add    %edi,%ebx
    b609:	83 ea 01             	sub    $0x1,%edx
    b60c:	75 f2                	jne    b600 <alu_and+0x30>
    b60e:	0f b6 56 24          	movzbl 0x24(%esi),%edx
    b612:	f7 d3                	not    %ebx
    b614:	83 e3 01             	and    $0x1,%ebx
    b617:	c1 e3 02             	shl    $0x2,%ebx
    b61a:	83 e2 fb             	and    $0xfffffffb,%edx
    b61d:	09 d3                	or     %edx,%ebx
    b61f:	89 c2                	mov    %eax,%edx
    b621:	c1 ea 1f             	shr    $0x1f,%edx
    b624:	83 e3 7f             	and    $0x7f,%ebx
    b627:	c1 e2 07             	shl    $0x7,%edx
    b62a:	09 d3                	or     %edx,%ebx
    b62c:	85 c0                	test   %eax,%eax
    b62e:	0f 94 c2             	sete   %dl
    b631:	83 e3 bf             	and    $0xffffffbf,%ebx
    b634:	c1 e2 06             	shl    $0x6,%edx
    b637:	09 d3                	or     %edx,%ebx
    b639:	88 5e 24             	mov    %bl,0x24(%esi)
    b63c:	5b                   	pop    %ebx
    b63d:	5e                   	pop    %esi
    b63e:	5f                   	pop    %edi
    b63f:	c3                   	ret    

0000b640 <alu_xor>:
    b640:	e8 a7 77 ff ff       	call   2dec <__x86.get_pc_thunk.dx>
    b645:	81 c2 bb f9 01 00    	add    $0x1f9bb,%edx
    b64b:	55                   	push   %ebp
    b64c:	57                   	push   %edi
    b64d:	8d ba 60 1d 05 00    	lea    0x51d60(%edx),%edi
    b653:	56                   	push   %esi
    b654:	ba 08 00 00 00       	mov    $0x8,%edx
    b659:	53                   	push   %ebx
    b65a:	8b 6c 24 14          	mov    0x14(%esp),%ebp
    b65e:	31 db                	xor    %ebx,%ebx
    b660:	8b 44 24 18          	mov    0x18(%esp),%eax
    b664:	80 67 24 fe          	andb   $0xfe,0x24(%edi)
    b668:	80 67 25 f7          	andb   $0xf7,0x25(%edi)
    b66c:	31 e8                	xor    %ebp,%eax
    b66e:	0f b6 c8             	movzbl %al,%ecx
    b671:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b678:	89 ce                	mov    %ecx,%esi
    b67a:	d1 e9                	shr    %ecx
    b67c:	83 e6 01             	and    $0x1,%esi
    b67f:	01 f3                	add    %esi,%ebx
    b681:	83 ea 01             	sub    $0x1,%edx
    b684:	75 f2                	jne    b678 <alu_xor+0x38>
    b686:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    b68a:	f7 d3                	not    %ebx
    b68c:	83 e3 01             	and    $0x1,%ebx
    b68f:	c1 e3 02             	shl    $0x2,%ebx
    b692:	83 e2 fb             	and    $0xfffffffb,%edx
    b695:	09 d3                	or     %edx,%ebx
    b697:	89 c2                	mov    %eax,%edx
    b699:	c1 ea 1f             	shr    $0x1f,%edx
    b69c:	83 e3 7f             	and    $0x7f,%ebx
    b69f:	c1 e2 07             	shl    $0x7,%edx
    b6a2:	09 d3                	or     %edx,%ebx
    b6a4:	3b 6c 24 18          	cmp    0x18(%esp),%ebp
    b6a8:	0f 94 c2             	sete   %dl
    b6ab:	83 e3 bf             	and    $0xffffffbf,%ebx
    b6ae:	c1 e2 06             	shl    $0x6,%edx
    b6b1:	09 d3                	or     %edx,%ebx
    b6b3:	88 5f 24             	mov    %bl,0x24(%edi)
    b6b6:	5b                   	pop    %ebx
    b6b7:	5e                   	pop    %esi
    b6b8:	5f                   	pop    %edi
    b6b9:	5d                   	pop    %ebp
    b6ba:	c3                   	ret    
    b6bb:	90                   	nop
    b6bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000b6c0 <alu_or>:
    b6c0:	e8 27 77 ff ff       	call   2dec <__x86.get_pc_thunk.dx>
    b6c5:	81 c2 3b f9 01 00    	add    $0x1f93b,%edx
    b6cb:	57                   	push   %edi
    b6cc:	56                   	push   %esi
    b6cd:	8d b2 60 1d 05 00    	lea    0x51d60(%edx),%esi
    b6d3:	53                   	push   %ebx
    b6d4:	ba 08 00 00 00       	mov    $0x8,%edx
    b6d9:	8b 44 24 14          	mov    0x14(%esp),%eax
    b6dd:	0b 44 24 10          	or     0x10(%esp),%eax
    b6e1:	31 db                	xor    %ebx,%ebx
    b6e3:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
    b6e7:	80 66 25 f7          	andb   $0xf7,0x25(%esi)
    b6eb:	0f b6 c8             	movzbl %al,%ecx
    b6ee:	66 90                	xchg   %ax,%ax
    b6f0:	89 cf                	mov    %ecx,%edi
    b6f2:	d1 e9                	shr    %ecx
    b6f4:	83 e7 01             	and    $0x1,%edi
    b6f7:	01 fb                	add    %edi,%ebx
    b6f9:	83 ea 01             	sub    $0x1,%edx
    b6fc:	75 f2                	jne    b6f0 <alu_or+0x30>
    b6fe:	0f b6 56 24          	movzbl 0x24(%esi),%edx
    b702:	f7 d3                	not    %ebx
    b704:	83 e3 01             	and    $0x1,%ebx
    b707:	c1 e3 02             	shl    $0x2,%ebx
    b70a:	83 e2 fb             	and    $0xfffffffb,%edx
    b70d:	09 d3                	or     %edx,%ebx
    b70f:	89 c2                	mov    %eax,%edx
    b711:	c1 ea 1f             	shr    $0x1f,%edx
    b714:	83 e3 7f             	and    $0x7f,%ebx
    b717:	c1 e2 07             	shl    $0x7,%edx
    b71a:	09 d3                	or     %edx,%ebx
    b71c:	85 c0                	test   %eax,%eax
    b71e:	0f 94 c2             	sete   %dl
    b721:	83 e3 bf             	and    $0xffffffbf,%ebx
    b724:	c1 e2 06             	shl    $0x6,%edx
    b727:	09 d3                	or     %edx,%ebx
    b729:	88 5e 24             	mov    %bl,0x24(%esi)
    b72c:	5b                   	pop    %ebx
    b72d:	5e                   	pop    %esi
    b72e:	5f                   	pop    %edi
    b72f:	c3                   	ret    

0000b730 <alu_shl>:
    b730:	55                   	push   %ebp
    b731:	57                   	push   %edi
    b732:	56                   	push   %esi
    b733:	53                   	push   %ebx
    b734:	e8 87 75 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    b739:	81 c3 c7 f8 01 00    	add    $0x1f8c7,%ebx
    b73f:	83 ec 04             	sub    $0x4,%esp
    b742:	8b 54 24 18          	mov    0x18(%esp),%edx
    b746:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    b74a:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    b74e:	85 d2                	test   %edx,%edx
    b750:	75 7e                	jne    b7d0 <alu_shl+0xa0>
    b752:	83 f9 08             	cmp    $0x8,%ecx
    b755:	89 c7                	mov    %eax,%edi
    b757:	0f 84 63 01 00 00    	je     b8c0 <alu_shl+0x190>
    b75d:	c1 e7 10             	shl    $0x10,%edi
    b760:	83 f9 10             	cmp    $0x10,%ecx
    b763:	0f 45 f8             	cmovne %eax,%edi
    b766:	8b 54 24 18          	mov    0x18(%esp),%edx
    b76a:	0f b6 f0             	movzbl %al,%esi
    b76d:	b9 08 00 00 00       	mov    $0x8,%ecx
    b772:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b778:	89 f5                	mov    %esi,%ebp
    b77a:	d1 ee                	shr    %esi
    b77c:	83 e5 01             	and    $0x1,%ebp
    b77f:	01 ea                	add    %ebp,%edx
    b781:	83 e9 01             	sub    $0x1,%ecx
    b784:	75 f2                	jne    b778 <alu_shl+0x48>
    b786:	8d 9b 60 1d 05 00    	lea    0x51d60(%ebx),%ebx
    b78c:	89 54 24 18          	mov    %edx,0x18(%esp)
    b790:	f7 d2                	not    %edx
    b792:	83 e2 01             	and    $0x1,%edx
    b795:	c1 e2 02             	shl    $0x2,%edx
    b798:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    b79c:	83 e1 fb             	and    $0xfffffffb,%ecx
    b79f:	09 d1                	or     %edx,%ecx
    b7a1:	89 fa                	mov    %edi,%edx
    b7a3:	c1 ea 1f             	shr    $0x1f,%edx
    b7a6:	83 e1 7f             	and    $0x7f,%ecx
    b7a9:	c1 e2 07             	shl    $0x7,%edx
    b7ac:	09 ca                	or     %ecx,%edx
    b7ae:	85 ff                	test   %edi,%edi
    b7b0:	0f 94 c1             	sete   %cl
    b7b3:	83 e2 bf             	and    $0xffffffbf,%edx
    b7b6:	c1 e1 06             	shl    $0x6,%ecx
    b7b9:	09 ca                	or     %ecx,%edx
    b7bb:	88 53 24             	mov    %dl,0x24(%ebx)
    b7be:	83 c4 04             	add    $0x4,%esp
    b7c1:	5b                   	pop    %ebx
    b7c2:	5e                   	pop    %esi
    b7c3:	5f                   	pop    %edi
    b7c4:	5d                   	pop    %ebp
    b7c5:	c3                   	ret    
    b7c6:	8d 76 00             	lea    0x0(%esi),%esi
    b7c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    b7d0:	83 f9 08             	cmp    $0x8,%ecx
    b7d3:	0f 84 97 00 00 00    	je     b870 <alu_shl+0x140>
    b7d9:	83 f9 10             	cmp    $0x10,%ecx
    b7dc:	0f 84 0e 01 00 00    	je     b8f0 <alu_shl+0x1c0>
    b7e2:	8b 7c 24 18          	mov    0x18(%esp),%edi
    b7e6:	8d 4f ff             	lea    -0x1(%edi),%ecx
    b7e9:	d3 e0                	shl    %cl,%eax
    b7eb:	89 c1                	mov    %eax,%ecx
    b7ed:	01 c0                	add    %eax,%eax
    b7ef:	89 c7                	mov    %eax,%edi
    b7f1:	c1 e9 1f             	shr    $0x1f,%ecx
    b7f4:	89 c5                	mov    %eax,%ebp
    b7f6:	c1 ef 1f             	shr    $0x1f,%edi
    b7f9:	89 3c 24             	mov    %edi,(%esp)
    b7fc:	8d bb 60 1d 05 00    	lea    0x51d60(%ebx),%edi
    b802:	0f b6 5f 24          	movzbl 0x24(%edi),%ebx
    b806:	83 e3 fe             	and    $0xfffffffe,%ebx
    b809:	09 cb                	or     %ecx,%ebx
    b80b:	83 7c 24 18 01       	cmpl   $0x1,0x18(%esp)
    b810:	88 5f 24             	mov    %bl,0x24(%edi)
    b813:	0f 84 b7 00 00 00    	je     b8d0 <alu_shl+0x1a0>
    b819:	0f b6 c8             	movzbl %al,%ecx
    b81c:	ba 08 00 00 00       	mov    $0x8,%edx
    b821:	31 db                	xor    %ebx,%ebx
    b823:	90                   	nop
    b824:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b828:	89 ce                	mov    %ecx,%esi
    b82a:	d1 e9                	shr    %ecx
    b82c:	83 e6 01             	and    $0x1,%esi
    b82f:	01 f3                	add    %esi,%ebx
    b831:	83 ea 01             	sub    $0x1,%edx
    b834:	75 f2                	jne    b828 <alu_shl+0xf8>
    b836:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    b83a:	0f b6 0c 24          	movzbl (%esp),%ecx
    b83e:	f7 d3                	not    %ebx
    b840:	83 e3 01             	and    $0x1,%ebx
    b843:	c1 e3 02             	shl    $0x2,%ebx
    b846:	83 e2 7b             	and    $0x7b,%edx
    b849:	c1 e1 07             	shl    $0x7,%ecx
    b84c:	09 d3                	or     %edx,%ebx
    b84e:	09 cb                	or     %ecx,%ebx
    b850:	85 ed                	test   %ebp,%ebp
    b852:	0f 94 c2             	sete   %dl
    b855:	83 e3 bf             	and    $0xffffffbf,%ebx
    b858:	c1 e2 06             	shl    $0x6,%edx
    b85b:	09 d3                	or     %edx,%ebx
    b85d:	88 5f 24             	mov    %bl,0x24(%edi)
    b860:	83 c4 04             	add    $0x4,%esp
    b863:	5b                   	pop    %ebx
    b864:	5e                   	pop    %esi
    b865:	5f                   	pop    %edi
    b866:	5d                   	pop    %ebp
    b867:	c3                   	ret    
    b868:	90                   	nop
    b869:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b870:	8b 7c 24 18          	mov    0x18(%esp),%edi
    b874:	0f b6 f0             	movzbl %al,%esi
    b877:	30 c0                	xor    %al,%al
    b879:	8d 4f ff             	lea    -0x1(%edi),%ecx
    b87c:	d3 e6                	shl    %cl,%esi
    b87e:	89 f1                	mov    %esi,%ecx
    b880:	89 f2                	mov    %esi,%edx
    b882:	01 c9                	add    %ecx,%ecx
    b884:	c0 ea 07             	shr    $0x7,%dl
    b887:	0f b6 f9             	movzbl %cl,%edi
    b88a:	89 d6                	mov    %edx,%esi
    b88c:	89 fd                	mov    %edi,%ebp
    b88e:	09 f8                	or     %edi,%eax
    b890:	8d bb 60 1d 05 00    	lea    0x51d60(%ebx),%edi
    b896:	c1 e5 18             	shl    $0x18,%ebp
    b899:	0f b6 5f 24          	movzbl 0x24(%edi),%ebx
    b89d:	83 e3 fe             	and    $0xfffffffe,%ebx
    b8a0:	09 f3                	or     %esi,%ebx
    b8a2:	83 7c 24 18 01       	cmpl   $0x1,0x18(%esp)
    b8a7:	88 5f 24             	mov    %bl,0x24(%edi)
    b8aa:	0f 84 9a 00 00 00    	je     b94a <alu_shl+0x21a>
    b8b0:	89 eb                	mov    %ebp,%ebx
    b8b2:	c1 eb 1f             	shr    $0x1f,%ebx
    b8b5:	89 1c 24             	mov    %ebx,(%esp)
    b8b8:	e9 5c ff ff ff       	jmp    b819 <alu_shl+0xe9>
    b8bd:	8d 76 00             	lea    0x0(%esi),%esi
    b8c0:	c1 e7 18             	shl    $0x18,%edi
    b8c3:	e9 9e fe ff ff       	jmp    b766 <alu_shl+0x36>
    b8c8:	90                   	nop
    b8c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b8d0:	32 0c 24             	xor    (%esp),%cl
    b8d3:	0f b6 57 25          	movzbl 0x25(%edi),%edx
    b8d7:	c1 e1 03             	shl    $0x3,%ecx
    b8da:	83 e2 f7             	and    $0xfffffff7,%edx
    b8dd:	09 d1                	or     %edx,%ecx
    b8df:	88 4f 25             	mov    %cl,0x25(%edi)
    b8e2:	e9 32 ff ff ff       	jmp    b819 <alu_shl+0xe9>
    b8e7:	89 f6                	mov    %esi,%esi
    b8e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    b8f0:	8b 7c 24 18          	mov    0x18(%esp),%edi
    b8f4:	0f b7 f0             	movzwl %ax,%esi
    b8f7:	66 31 c0             	xor    %ax,%ax
    b8fa:	8d 4f ff             	lea    -0x1(%edi),%ecx
    b8fd:	d3 e6                	shl    %cl,%esi
    b8ff:	89 f1                	mov    %esi,%ecx
    b901:	66 c1 ee 0f          	shr    $0xf,%si
    b905:	01 c9                	add    %ecx,%ecx
    b907:	0f b7 f9             	movzwl %cx,%edi
    b90a:	89 fd                	mov    %edi,%ebp
    b90c:	09 f8                	or     %edi,%eax
    b90e:	8d bb 60 1d 05 00    	lea    0x51d60(%ebx),%edi
    b914:	c1 e5 10             	shl    $0x10,%ebp
    b917:	0f b6 5f 24          	movzbl 0x24(%edi),%ebx
    b91b:	83 e3 fe             	and    $0xfffffffe,%ebx
    b91e:	09 f3                	or     %esi,%ebx
    b920:	83 7c 24 18 01       	cmpl   $0x1,0x18(%esp)
    b925:	88 5f 24             	mov    %bl,0x24(%edi)
    b928:	75 86                	jne    b8b0 <alu_shl+0x180>
    b92a:	89 ca                	mov    %ecx,%edx
    b92c:	66 c1 ea 0f          	shr    $0xf,%dx
    b930:	31 d6                	xor    %edx,%esi
    b932:	0f b6 4f 25          	movzbl 0x25(%edi),%ecx
    b936:	8d 14 f5 00 00 00 00 	lea    0x0(,%esi,8),%edx
    b93d:	83 e1 f7             	and    $0xfffffff7,%ecx
    b940:	09 ca                	or     %ecx,%edx
    b942:	88 57 25             	mov    %dl,0x25(%edi)
    b945:	e9 66 ff ff ff       	jmp    b8b0 <alu_shl+0x180>
    b94a:	c0 e9 07             	shr    $0x7,%cl
    b94d:	31 ce                	xor    %ecx,%esi
    b94f:	eb e1                	jmp    b932 <alu_shl+0x202>
    b951:	eb 0d                	jmp    b960 <alu_shr>
    b953:	90                   	nop
    b954:	90                   	nop
    b955:	90                   	nop
    b956:	90                   	nop
    b957:	90                   	nop
    b958:	90                   	nop
    b959:	90                   	nop
    b95a:	90                   	nop
    b95b:	90                   	nop
    b95c:	90                   	nop
    b95d:	90                   	nop
    b95e:	90                   	nop
    b95f:	90                   	nop

0000b960 <alu_shr>:
    b960:	55                   	push   %ebp
    b961:	57                   	push   %edi
    b962:	56                   	push   %esi
    b963:	53                   	push   %ebx
    b964:	e8 9d f5 ff ff       	call   af06 <__x86.get_pc_thunk.si>
    b969:	81 c6 97 f6 01 00    	add    $0x1f697,%esi
    b96f:	83 ec 08             	sub    $0x8,%esp
    b972:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    b976:	8b 44 24 20          	mov    0x20(%esp),%eax
    b97a:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    b97e:	85 d2                	test   %edx,%edx
    b980:	75 6e                	jne    b9f0 <alu_shr+0x90>
    b982:	83 f9 08             	cmp    $0x8,%ecx
    b985:	89 c7                	mov    %eax,%edi
    b987:	0f 84 53 01 00 00    	je     bae0 <alu_shr+0x180>
    b98d:	c1 e7 10             	shl    $0x10,%edi
    b990:	83 f9 10             	cmp    $0x10,%ecx
    b993:	0f 45 f8             	cmovne %eax,%edi
    b996:	0f b6 d8             	movzbl %al,%ebx
    b999:	b9 08 00 00 00       	mov    $0x8,%ecx
    b99e:	66 90                	xchg   %ax,%ax
    b9a0:	89 dd                	mov    %ebx,%ebp
    b9a2:	d1 eb                	shr    %ebx
    b9a4:	83 e5 01             	and    $0x1,%ebp
    b9a7:	01 ea                	add    %ebp,%edx
    b9a9:	83 e9 01             	sub    $0x1,%ecx
    b9ac:	75 f2                	jne    b9a0 <alu_shr+0x40>
    b9ae:	8d 9e 60 1d 05 00    	lea    0x51d60(%esi),%ebx
    b9b4:	f7 d2                	not    %edx
    b9b6:	83 e2 01             	and    $0x1,%edx
    b9b9:	c1 e2 02             	shl    $0x2,%edx
    b9bc:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    b9c0:	83 e1 fb             	and    $0xfffffffb,%ecx
    b9c3:	09 d1                	or     %edx,%ecx
    b9c5:	89 fa                	mov    %edi,%edx
    b9c7:	c1 ea 1f             	shr    $0x1f,%edx
    b9ca:	83 e1 7f             	and    $0x7f,%ecx
    b9cd:	c1 e2 07             	shl    $0x7,%edx
    b9d0:	09 ca                	or     %ecx,%edx
    b9d2:	85 ff                	test   %edi,%edi
    b9d4:	0f 94 c1             	sete   %cl
    b9d7:	83 e2 bf             	and    $0xffffffbf,%edx
    b9da:	c1 e1 06             	shl    $0x6,%ecx
    b9dd:	09 ca                	or     %ecx,%edx
    b9df:	88 53 24             	mov    %dl,0x24(%ebx)
    b9e2:	83 c4 08             	add    $0x8,%esp
    b9e5:	5b                   	pop    %ebx
    b9e6:	5e                   	pop    %esi
    b9e7:	5f                   	pop    %edi
    b9e8:	5d                   	pop    %ebp
    b9e9:	c3                   	ret    
    b9ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b9f0:	83 f9 08             	cmp    $0x8,%ecx
    b9f3:	0f 84 7f 00 00 00    	je     ba78 <alu_shr+0x118>
    b9f9:	83 f9 10             	cmp    $0x10,%ecx
    b9fc:	0f 84 0e 01 00 00    	je     bb10 <alu_shr+0x1b0>
    ba02:	8d 4a ff             	lea    -0x1(%edx),%ecx
    ba05:	d3 e8                	shr    %cl,%eax
    ba07:	8d 8e 60 1d 05 00    	lea    0x51d60(%esi),%ecx
    ba0d:	89 c7                	mov    %eax,%edi
    ba0f:	d1 e8                	shr    %eax
    ba11:	89 fe                	mov    %edi,%esi
    ba13:	89 04 24             	mov    %eax,(%esp)
    ba16:	0f b6 59 24          	movzbl 0x24(%ecx),%ebx
    ba1a:	83 e6 01             	and    $0x1,%esi
    ba1d:	83 e3 fe             	and    $0xfffffffe,%ebx
    ba20:	09 f3                	or     %esi,%ebx
    ba22:	83 fa 01             	cmp    $0x1,%edx
    ba25:	88 59 24             	mov    %bl,0x24(%ecx)
    ba28:	0f 84 c2 00 00 00    	je     baf0 <alu_shr+0x190>
    ba2e:	8b 1c 24             	mov    (%esp),%ebx
    ba31:	0f b6 f0             	movzbl %al,%esi
    ba34:	ba 08 00 00 00       	mov    $0x8,%edx
    ba39:	31 ff                	xor    %edi,%edi
    ba3b:	90                   	nop
    ba3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ba40:	89 f5                	mov    %esi,%ebp
    ba42:	d1 ee                	shr    %esi
    ba44:	83 e5 01             	and    $0x1,%ebp
    ba47:	01 ef                	add    %ebp,%edi
    ba49:	83 ea 01             	sub    $0x1,%edx
    ba4c:	75 f2                	jne    ba40 <alu_shr+0xe0>
    ba4e:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
    ba52:	f7 d7                	not    %edi
    ba54:	83 e7 01             	and    $0x1,%edi
    ba57:	c1 e7 02             	shl    $0x2,%edi
    ba5a:	83 e2 3b             	and    $0x3b,%edx
    ba5d:	85 db                	test   %ebx,%ebx
    ba5f:	0f 94 c3             	sete   %bl
    ba62:	09 d7                	or     %edx,%edi
    ba64:	c1 e3 06             	shl    $0x6,%ebx
    ba67:	09 fb                	or     %edi,%ebx
    ba69:	88 59 24             	mov    %bl,0x24(%ecx)
    ba6c:	83 c4 08             	add    $0x8,%esp
    ba6f:	5b                   	pop    %ebx
    ba70:	5e                   	pop    %esi
    ba71:	5f                   	pop    %edi
    ba72:	5d                   	pop    %ebp
    ba73:	c3                   	ret    
    ba74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ba78:	8d 4a ff             	lea    -0x1(%edx),%ecx
    ba7b:	0f b6 f8             	movzbl %al,%edi
    ba7e:	30 c0                	xor    %al,%al
    ba80:	d3 ff                	sar    %cl,%edi
    ba82:	89 fb                	mov    %edi,%ebx
    ba84:	89 fd                	mov    %edi,%ebp
    ba86:	d0 eb                	shr    %bl
    ba88:	83 e5 01             	and    $0x1,%ebp
    ba8b:	0f b6 cb             	movzbl %bl,%ecx
    ba8e:	88 5c 24 07          	mov    %bl,0x7(%esp)
    ba92:	09 c8                	or     %ecx,%eax
    ba94:	89 cb                	mov    %ecx,%ebx
    ba96:	8d 8e 60 1d 05 00    	lea    0x51d60(%esi),%ecx
    ba9c:	c1 e3 18             	shl    $0x18,%ebx
    ba9f:	89 1c 24             	mov    %ebx,(%esp)
    baa2:	0f b6 71 24          	movzbl 0x24(%ecx),%esi
    baa6:	83 e6 fe             	and    $0xfffffffe,%esi
    baa9:	09 ee                	or     %ebp,%esi
    baab:	83 fa 01             	cmp    $0x1,%edx
    baae:	89 f3                	mov    %esi,%ebx
    bab0:	88 59 24             	mov    %bl,0x24(%ecx)
    bab3:	0f 85 75 ff ff ff    	jne    ba2e <alu_shr+0xce>
    bab9:	0f b6 74 24 07       	movzbl 0x7(%esp),%esi
    babe:	31 fe                	xor    %edi,%esi
    bac0:	89 f7                	mov    %esi,%edi
    bac2:	0f b6 71 25          	movzbl 0x25(%ecx),%esi
    bac6:	83 e7 01             	and    $0x1,%edi
    bac9:	8d 14 fd 00 00 00 00 	lea    0x0(,%edi,8),%edx
    bad0:	83 e6 f7             	and    $0xfffffff7,%esi
    bad3:	09 f2                	or     %esi,%edx
    bad5:	88 51 25             	mov    %dl,0x25(%ecx)
    bad8:	e9 51 ff ff ff       	jmp    ba2e <alu_shr+0xce>
    badd:	8d 76 00             	lea    0x0(%esi),%esi
    bae0:	c1 e7 18             	shl    $0x18,%edi
    bae3:	e9 ae fe ff ff       	jmp    b996 <alu_shr+0x36>
    bae8:	90                   	nop
    bae9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    baf0:	0f b6 59 25          	movzbl 0x25(%ecx),%ebx
    baf4:	31 c7                	xor    %eax,%edi
    baf6:	83 e7 01             	and    $0x1,%edi
    baf9:	8d 14 fd 00 00 00 00 	lea    0x0(,%edi,8),%edx
    bb00:	83 e3 f7             	and    $0xfffffff7,%ebx
    bb03:	09 da                	or     %ebx,%edx
    bb05:	88 51 25             	mov    %dl,0x25(%ecx)
    bb08:	89 04 24             	mov    %eax,(%esp)
    bb0b:	e9 1e ff ff ff       	jmp    ba2e <alu_shr+0xce>
    bb10:	8d 4a ff             	lea    -0x1(%edx),%ecx
    bb13:	0f b7 f8             	movzwl %ax,%edi
    bb16:	66 31 c0             	xor    %ax,%ax
    bb19:	d3 ff                	sar    %cl,%edi
    bb1b:	89 fd                	mov    %edi,%ebp
    bb1d:	66 d1 ed             	shr    %bp
    bb20:	0f b7 cd             	movzwl %bp,%ecx
    bb23:	89 cb                	mov    %ecx,%ebx
    bb25:	09 c8                	or     %ecx,%eax
    bb27:	8d 8e 60 1d 05 00    	lea    0x51d60(%esi),%ecx
    bb2d:	c1 e3 10             	shl    $0x10,%ebx
    bb30:	89 1c 24             	mov    %ebx,(%esp)
    bb33:	89 fb                	mov    %edi,%ebx
    bb35:	0f b6 71 24          	movzbl 0x24(%ecx),%esi
    bb39:	83 e3 01             	and    $0x1,%ebx
    bb3c:	83 e6 fe             	and    $0xfffffffe,%esi
    bb3f:	09 de                	or     %ebx,%esi
    bb41:	83 fa 01             	cmp    $0x1,%edx
    bb44:	89 f3                	mov    %esi,%ebx
    bb46:	88 59 24             	mov    %bl,0x24(%ecx)
    bb49:	0f 85 df fe ff ff    	jne    ba2e <alu_shr+0xce>
    bb4f:	0f b6 71 25          	movzbl 0x25(%ecx),%esi
    bb53:	31 fd                	xor    %edi,%ebp
    bb55:	83 e5 01             	and    $0x1,%ebp
    bb58:	8d 14 ed 00 00 00 00 	lea    0x0(,%ebp,8),%edx
    bb5f:	83 e6 f7             	and    $0xfffffff7,%esi
    bb62:	09 f2                	or     %esi,%edx
    bb64:	88 51 25             	mov    %dl,0x25(%ecx)
    bb67:	e9 c2 fe ff ff       	jmp    ba2e <alu_shr+0xce>
    bb6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000bb70 <alu_sar>:
    bb70:	55                   	push   %ebp
    bb71:	57                   	push   %edi
    bb72:	56                   	push   %esi
    bb73:	53                   	push   %ebx
    bb74:	e8 8d f3 ff ff       	call   af06 <__x86.get_pc_thunk.si>
    bb79:	81 c6 87 f4 01 00    	add    $0x1f487,%esi
    bb7f:	83 ec 08             	sub    $0x8,%esp
    bb82:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    bb86:	8b 44 24 20          	mov    0x20(%esp),%eax
    bb8a:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    bb8e:	85 d2                	test   %edx,%edx
    bb90:	75 6e                	jne    bc00 <alu_sar+0x90>
    bb92:	83 f9 08             	cmp    $0x8,%ecx
    bb95:	89 c7                	mov    %eax,%edi
    bb97:	0f 84 63 01 00 00    	je     bd00 <alu_sar+0x190>
    bb9d:	c1 e7 10             	shl    $0x10,%edi
    bba0:	83 f9 10             	cmp    $0x10,%ecx
    bba3:	0f 45 f8             	cmovne %eax,%edi
    bba6:	0f b6 d8             	movzbl %al,%ebx
    bba9:	b9 08 00 00 00       	mov    $0x8,%ecx
    bbae:	66 90                	xchg   %ax,%ax
    bbb0:	89 dd                	mov    %ebx,%ebp
    bbb2:	d1 eb                	shr    %ebx
    bbb4:	83 e5 01             	and    $0x1,%ebp
    bbb7:	01 ea                	add    %ebp,%edx
    bbb9:	83 e9 01             	sub    $0x1,%ecx
    bbbc:	75 f2                	jne    bbb0 <alu_sar+0x40>
    bbbe:	8d 9e 60 1d 05 00    	lea    0x51d60(%esi),%ebx
    bbc4:	f7 d2                	not    %edx
    bbc6:	83 e2 01             	and    $0x1,%edx
    bbc9:	c1 e2 02             	shl    $0x2,%edx
    bbcc:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    bbd0:	83 e1 fb             	and    $0xfffffffb,%ecx
    bbd3:	09 d1                	or     %edx,%ecx
    bbd5:	89 fa                	mov    %edi,%edx
    bbd7:	c1 ea 1f             	shr    $0x1f,%edx
    bbda:	83 e1 7f             	and    $0x7f,%ecx
    bbdd:	c1 e2 07             	shl    $0x7,%edx
    bbe0:	09 ca                	or     %ecx,%edx
    bbe2:	85 ff                	test   %edi,%edi
    bbe4:	0f 94 c1             	sete   %cl
    bbe7:	83 e2 bf             	and    $0xffffffbf,%edx
    bbea:	c1 e1 06             	shl    $0x6,%ecx
    bbed:	09 ca                	or     %ecx,%edx
    bbef:	88 53 24             	mov    %dl,0x24(%ebx)
    bbf2:	83 c4 08             	add    $0x8,%esp
    bbf5:	5b                   	pop    %ebx
    bbf6:	5e                   	pop    %esi
    bbf7:	5f                   	pop    %edi
    bbf8:	5d                   	pop    %ebp
    bbf9:	c3                   	ret    
    bbfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    bc00:	83 f9 08             	cmp    $0x8,%ecx
    bc03:	0f 84 8f 00 00 00    	je     bc98 <alu_sar+0x128>
    bc09:	83 f9 10             	cmp    $0x10,%ecx
    bc0c:	0f 84 1e 01 00 00    	je     bd30 <alu_sar+0x1c0>
    bc12:	8d 4a ff             	lea    -0x1(%edx),%ecx
    bc15:	d3 f8                	sar    %cl,%eax
    bc17:	8d 8e 60 1d 05 00    	lea    0x51d60(%esi),%ecx
    bc1d:	89 c7                	mov    %eax,%edi
    bc1f:	d1 f8                	sar    %eax
    bc21:	89 fe                	mov    %edi,%esi
    bc23:	89 04 24             	mov    %eax,(%esp)
    bc26:	0f b6 59 24          	movzbl 0x24(%ecx),%ebx
    bc2a:	83 e6 01             	and    $0x1,%esi
    bc2d:	83 e3 fe             	and    $0xfffffffe,%ebx
    bc30:	09 f3                	or     %esi,%ebx
    bc32:	83 fa 01             	cmp    $0x1,%edx
    bc35:	88 59 24             	mov    %bl,0x24(%ecx)
    bc38:	0f 84 d2 00 00 00    	je     bd10 <alu_sar+0x1a0>
    bc3e:	8b 1c 24             	mov    (%esp),%ebx
    bc41:	0f b6 f0             	movzbl %al,%esi
    bc44:	ba 08 00 00 00       	mov    $0x8,%edx
    bc49:	31 ff                	xor    %edi,%edi
    bc4b:	90                   	nop
    bc4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bc50:	89 f5                	mov    %esi,%ebp
    bc52:	d1 ee                	shr    %esi
    bc54:	83 e5 01             	and    $0x1,%ebp
    bc57:	01 ef                	add    %ebp,%edi
    bc59:	83 ea 01             	sub    $0x1,%edx
    bc5c:	75 f2                	jne    bc50 <alu_sar+0xe0>
    bc5e:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
    bc62:	f7 d7                	not    %edi
    bc64:	89 de                	mov    %ebx,%esi
    bc66:	83 e7 01             	and    $0x1,%edi
    bc69:	c1 ee 1f             	shr    $0x1f,%esi
    bc6c:	c1 e7 02             	shl    $0x2,%edi
    bc6f:	c1 e6 07             	shl    $0x7,%esi
    bc72:	83 e2 7b             	and    $0x7b,%edx
    bc75:	09 fa                	or     %edi,%edx
    bc77:	09 f2                	or     %esi,%edx
    bc79:	85 db                	test   %ebx,%ebx
    bc7b:	0f 94 c3             	sete   %bl
    bc7e:	83 e2 bf             	and    $0xffffffbf,%edx
    bc81:	89 df                	mov    %ebx,%edi
    bc83:	c1 e7 06             	shl    $0x6,%edi
    bc86:	09 fa                	or     %edi,%edx
    bc88:	88 51 24             	mov    %dl,0x24(%ecx)
    bc8b:	83 c4 08             	add    $0x8,%esp
    bc8e:	5b                   	pop    %ebx
    bc8f:	5e                   	pop    %esi
    bc90:	5f                   	pop    %edi
    bc91:	5d                   	pop    %ebp
    bc92:	c3                   	ret    
    bc93:	90                   	nop
    bc94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bc98:	8d 4a ff             	lea    -0x1(%edx),%ecx
    bc9b:	0f be f8             	movsbl %al,%edi
    bc9e:	30 c0                	xor    %al,%al
    bca0:	d3 ff                	sar    %cl,%edi
    bca2:	89 fb                	mov    %edi,%ebx
    bca4:	89 fd                	mov    %edi,%ebp
    bca6:	d0 fb                	sar    %bl
    bca8:	83 e5 01             	and    $0x1,%ebp
    bcab:	0f b6 cb             	movzbl %bl,%ecx
    bcae:	88 5c 24 07          	mov    %bl,0x7(%esp)
    bcb2:	09 c8                	or     %ecx,%eax
    bcb4:	89 cb                	mov    %ecx,%ebx
    bcb6:	8d 8e 60 1d 05 00    	lea    0x51d60(%esi),%ecx
    bcbc:	c1 e3 18             	shl    $0x18,%ebx
    bcbf:	89 1c 24             	mov    %ebx,(%esp)
    bcc2:	0f b6 71 24          	movzbl 0x24(%ecx),%esi
    bcc6:	83 e6 fe             	and    $0xfffffffe,%esi
    bcc9:	09 ee                	or     %ebp,%esi
    bccb:	83 fa 01             	cmp    $0x1,%edx
    bcce:	89 f3                	mov    %esi,%ebx
    bcd0:	88 59 24             	mov    %bl,0x24(%ecx)
    bcd3:	0f 85 65 ff ff ff    	jne    bc3e <alu_sar+0xce>
    bcd9:	0f b6 74 24 07       	movzbl 0x7(%esp),%esi
    bcde:	31 fe                	xor    %edi,%esi
    bce0:	89 f7                	mov    %esi,%edi
    bce2:	0f b6 71 25          	movzbl 0x25(%ecx),%esi
    bce6:	83 e7 01             	and    $0x1,%edi
    bce9:	8d 14 fd 00 00 00 00 	lea    0x0(,%edi,8),%edx
    bcf0:	83 e6 f7             	and    $0xfffffff7,%esi
    bcf3:	09 f2                	or     %esi,%edx
    bcf5:	88 51 25             	mov    %dl,0x25(%ecx)
    bcf8:	e9 41 ff ff ff       	jmp    bc3e <alu_sar+0xce>
    bcfd:	8d 76 00             	lea    0x0(%esi),%esi
    bd00:	c1 e7 18             	shl    $0x18,%edi
    bd03:	e9 9e fe ff ff       	jmp    bba6 <alu_sar+0x36>
    bd08:	90                   	nop
    bd09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    bd10:	0f b6 59 25          	movzbl 0x25(%ecx),%ebx
    bd14:	31 c7                	xor    %eax,%edi
    bd16:	83 e7 01             	and    $0x1,%edi
    bd19:	8d 14 fd 00 00 00 00 	lea    0x0(,%edi,8),%edx
    bd20:	83 e3 f7             	and    $0xfffffff7,%ebx
    bd23:	09 da                	or     %ebx,%edx
    bd25:	88 51 25             	mov    %dl,0x25(%ecx)
    bd28:	89 04 24             	mov    %eax,(%esp)
    bd2b:	e9 0e ff ff ff       	jmp    bc3e <alu_sar+0xce>
    bd30:	8d 4a ff             	lea    -0x1(%edx),%ecx
    bd33:	0f bf f8             	movswl %ax,%edi
    bd36:	66 31 c0             	xor    %ax,%ax
    bd39:	d3 ff                	sar    %cl,%edi
    bd3b:	89 fd                	mov    %edi,%ebp
    bd3d:	66 d1 fd             	sar    %bp
    bd40:	0f b7 cd             	movzwl %bp,%ecx
    bd43:	89 cb                	mov    %ecx,%ebx
    bd45:	09 c8                	or     %ecx,%eax
    bd47:	8d 8e 60 1d 05 00    	lea    0x51d60(%esi),%ecx
    bd4d:	c1 e3 10             	shl    $0x10,%ebx
    bd50:	89 1c 24             	mov    %ebx,(%esp)
    bd53:	89 fb                	mov    %edi,%ebx
    bd55:	0f b6 71 24          	movzbl 0x24(%ecx),%esi
    bd59:	83 e3 01             	and    $0x1,%ebx
    bd5c:	83 e6 fe             	and    $0xfffffffe,%esi
    bd5f:	09 de                	or     %ebx,%esi
    bd61:	83 fa 01             	cmp    $0x1,%edx
    bd64:	89 f3                	mov    %esi,%ebx
    bd66:	88 59 24             	mov    %bl,0x24(%ecx)
    bd69:	0f 85 cf fe ff ff    	jne    bc3e <alu_sar+0xce>
    bd6f:	0f b6 71 25          	movzbl 0x25(%ecx),%esi
    bd73:	31 fd                	xor    %edi,%ebp
    bd75:	83 e5 01             	and    $0x1,%ebp
    bd78:	8d 14 ed 00 00 00 00 	lea    0x0(,%ebp,8),%edx
    bd7f:	83 e6 f7             	and    $0xfffffff7,%esi
    bd82:	09 f2                	or     %esi,%edx
    bd84:	88 51 25             	mov    %dl,0x25(%ecx)
    bd87:	e9 b2 fe ff ff       	jmp    bc3e <alu_sar+0xce>
    bd8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000bd90 <alu_sal>:
    bd90:	e9 9b f9 ff ff       	jmp    b730 <alu_shl>
    bd95:	66 90                	xchg   %ax,%ax
    bd97:	66 90                	xchg   %ax,%ax
    bd99:	66 90                	xchg   %ax,%ax
    bd9b:	66 90                	xchg   %ax,%ax
    bd9d:	66 90                	xchg   %ax,%ax
    bd9f:	90                   	nop

0000bda0 <raise_intr>:
    bda0:	55                   	push   %ebp
    bda1:	57                   	push   %edi
    bda2:	56                   	push   %esi
    bda3:	53                   	push   %ebx
    bda4:	e8 17 6f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    bda9:	81 c3 57 f2 01 00    	add    $0x1f257,%ebx
    bdaf:	81 ec 88 00 00 00    	sub    $0x88,%esp
    bdb5:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
    bdbb:	8b bc 24 9c 00 00 00 	mov    0x9c(%esp),%edi
    bdc2:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%esp)
    bdc9:	00 
    bdca:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)
    bdd1:	00 
    bdd2:	c6 44 24 18 02       	movb   $0x2,0x18(%esp)
    bdd7:	8b 46 24             	mov    0x24(%esi),%eax
    bdda:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    bdde:	8b 46 10             	mov    0x10(%esi),%eax
    bde1:	83 e8 04             	sub    $0x4,%eax
    bde4:	89 44 24 14          	mov    %eax,0x14(%esp)
    bde8:	89 46 10             	mov    %eax,0x10(%esi)
    bdeb:	8d 44 24 10          	lea    0x10(%esp),%eax
    bdef:	50                   	push   %eax
    bdf0:	e8 3b 8a ff ff       	call   4830 <operand_write>
    bdf5:	0f b7 46 48          	movzwl 0x48(%esi),%eax
    bdf9:	c7 44 24 48 20 00 00 	movl   $0x20,0x48(%esp)
    be00:	00 
    be01:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
    be08:	00 
    be09:	c6 44 24 40 02       	movb   $0x2,0x40(%esp)
    be0e:	89 44 24 44          	mov    %eax,0x44(%esp)
    be12:	8b 46 10             	mov    0x10(%esi),%eax
    be15:	83 e8 04             	sub    $0x4,%eax
    be18:	89 44 24 3c          	mov    %eax,0x3c(%esp)
    be1c:	89 46 10             	mov    %eax,0x10(%esi)
    be1f:	58                   	pop    %eax
    be20:	8d 44 24 34          	lea    0x34(%esp),%eax
    be24:	50                   	push   %eax
    be25:	e8 06 8a ff ff       	call   4830 <operand_write>
    be2a:	8b 46 20             	mov    0x20(%esi),%eax
    be2d:	c7 44 24 6c 20 00 00 	movl   $0x20,0x6c(%esp)
    be34:	00 
    be35:	c7 44 24 5c 02 00 00 	movl   $0x2,0x5c(%esp)
    be3c:	00 
    be3d:	c6 44 24 64 02       	movb   $0x2,0x64(%esp)
    be42:	89 44 24 68          	mov    %eax,0x68(%esp)
    be46:	8b 46 10             	mov    0x10(%esi),%eax
    be49:	83 e8 04             	sub    $0x4,%eax
    be4c:	89 44 24 60          	mov    %eax,0x60(%esp)
    be50:	89 46 10             	mov    %eax,0x10(%esi)
    be53:	5a                   	pop    %edx
    be54:	8d 44 24 58          	lea    0x58(%esp),%eax
    be58:	50                   	push   %eax
    be59:	e8 d2 89 ff ff       	call   4830 <operand_write>
    be5e:	89 f8                	mov    %edi,%eax
    be60:	0f b6 f8             	movzbl %al,%edi
    be63:	8b 86 9c 00 00 00    	mov    0x9c(%esi),%eax
    be69:	59                   	pop    %ecx
    be6a:	8d 2c f8             	lea    (%eax,%edi,8),%ebp
    be6d:	5f                   	pop    %edi
    be6e:	6a 04                	push   $0x4
    be70:	55                   	push   %ebp
    be71:	83 c5 04             	add    $0x4,%ebp
    be74:	e8 17 e2 00 00       	call   1a090 <laddr_read>
    be79:	89 c7                	mov    %eax,%edi
    be7b:	58                   	pop    %eax
    be7c:	5a                   	pop    %edx
    be7d:	6a 04                	push   $0x4
    be7f:	55                   	push   %ebp
    be80:	0f b7 ff             	movzwl %di,%edi
    be83:	e8 08 e2 00 00       	call   1a090 <laddr_read>
    be88:	66 31 c0             	xor    %ax,%ax
    be8b:	09 f8                	or     %edi,%eax
    be8d:	89 46 20             	mov    %eax,0x20(%esi)
    be90:	81 c4 8c 00 00 00    	add    $0x8c,%esp
    be96:	5b                   	pop    %ebx
    be97:	5e                   	pop    %esi
    be98:	5f                   	pop    %edi
    be99:	5d                   	pop    %ebp
    be9a:	c3                   	ret    
    be9b:	90                   	nop
    be9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000bea0 <raise_sw_intr>:
    bea0:	e8 45 74 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
    bea5:	05 5b f1 01 00       	add    $0x1f15b,%eax
    beaa:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
    beb0:	83 40 20 02          	addl   $0x2,0x20(%eax)
    beb4:	0f b6 44 24 04       	movzbl 0x4(%esp),%eax
    beb9:	89 44 24 04          	mov    %eax,0x4(%esp)
    bebd:	e9 de fe ff ff       	jmp    bda0 <raise_intr>
    bec2:	66 90                	xchg   %ax,%ax
    bec4:	66 90                	xchg   %ax,%ax
    bec6:	66 90                	xchg   %ax,%ax
    bec8:	66 90                	xchg   %ax,%ax
    beca:	66 90                	xchg   %ax,%ax
    becc:	66 90                	xchg   %ax,%ax
    bece:	66 90                	xchg   %ax,%ax

0000bed0 <nop>:
    bed0:	53                   	push   %ebx
    bed1:	e8 ea 6d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    bed6:	81 c3 2a f1 01 00    	add    $0x1f12a,%ebx
    bedc:	83 ec 0c             	sub    $0xc,%esp
    bedf:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    bee5:	6a 01                	push   $0x1
    bee7:	50                   	push   %eax
    bee8:	8d 83 91 09 ff ff    	lea    -0xf66f(%ebx),%eax
    beee:	50                   	push   %eax
    beef:	e8 3c 7f ff ff       	call   3e30 <print_asm_0>
    bef4:	83 c4 18             	add    $0x18,%esp
    bef7:	b8 01 00 00 00       	mov    $0x1,%eax
    befc:	5b                   	pop    %ebx
    befd:	c3                   	ret    
    befe:	66 90                	xchg   %ax,%ax

0000bf00 <lidt_v>:
    bf00:	55                   	push   %ebp
    bf01:	57                   	push   %edi
    bf02:	56                   	push   %esi
    bf03:	53                   	push   %ebx
    bf04:	e8 b7 6d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    bf09:	81 c3 f7 f0 01 00    	add    $0x1f0f7,%ebx
    bf0f:	83 ec 74             	sub    $0x74,%esp
    bf12:	8b b4 24 88 00 00 00 	mov    0x88(%esp),%esi
    bf19:	8d 54 24 20          	lea    0x20(%esp),%edx
    bf1d:	c7 44 24 30 10 00 00 	movl   $0x10,0x30(%esp)
    bf24:	00 
    bf25:	c7 44 24 54 20 00 00 	movl   $0x20,0x54(%esp)
    bf2c:	00 
    bf2d:	52                   	push   %edx
    bf2e:	8d 46 01             	lea    0x1(%esi),%eax
    bf31:	89 54 24 18          	mov    %edx,0x18(%esp)
    bf35:	50                   	push   %eax
    bf36:	e8 25 87 ff ff       	call   4660 <modrm_rm>
    bf3b:	8d 78 01             	lea    0x1(%eax),%edi
    bf3e:	58                   	pop    %eax
    bf3f:	5a                   	pop    %edx
    bf40:	01 fe                	add    %edi,%esi
    bf42:	8d 6c 24 44          	lea    0x44(%esp),%ebp
    bf46:	55                   	push   %ebp
    bf47:	56                   	push   %esi
    bf48:	e8 13 87 ff ff       	call   4660 <modrm_rm>
    bf4d:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    bf51:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    bf55:	83 c0 02             	add    $0x2,%eax
    bf58:	89 14 24             	mov    %edx,(%esp)
    bf5b:	89 44 24 50          	mov    %eax,0x50(%esp)
    bf5f:	e8 3c 87 ff ff       	call   46a0 <operand_read>
    bf64:	89 2c 24             	mov    %ebp,(%esp)
    bf67:	e8 34 87 ff ff       	call   46a0 <operand_read>
    bf6c:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    bf72:	83 c4 10             	add    $0x10,%esp
    bf75:	0f b6 00             	movzbl (%eax),%eax
    bf78:	8d 50 f0             	lea    -0x10(%eax),%edx
    bf7b:	81 e2 ef 00 00 00    	and    $0xef,%edx
    bf81:	75 57                	jne    bfda <lidt_v+0xda>
    bf83:	3c 10                	cmp    $0x10,%al
    bf85:	74 29                	je     bfb0 <lidt_v+0xb0>
    bf87:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    bf8d:	8b 54 24 24          	mov    0x24(%esp),%edx
    bf91:	66 89 90 98 00 00 00 	mov    %dx,0x98(%eax)
    bf98:	8b 54 24 48          	mov    0x48(%esp),%edx
    bf9c:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)
    bfa2:	83 c4 6c             	add    $0x6c,%esp
    bfa5:	89 f8                	mov    %edi,%eax
    bfa7:	5b                   	pop    %ebx
    bfa8:	5e                   	pop    %esi
    bfa9:	5f                   	pop    %edi
    bfaa:	5d                   	pop    %ebp
    bfab:	c3                   	ret    
    bfac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bfb0:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    bfb6:	8b 44 24 24          	mov    0x24(%esp),%eax
    bfba:	66 89 82 98 00 00 00 	mov    %ax,0x98(%edx)
    bfc1:	8b 44 24 48          	mov    0x48(%esp),%eax
    bfc5:	25 ff ff ff 00       	and    $0xffffff,%eax
    bfca:	89 82 9c 00 00 00    	mov    %eax,0x9c(%edx)
    bfd0:	83 c4 6c             	add    $0x6c,%esp
    bfd3:	89 f8                	mov    %edi,%eax
    bfd5:	5b                   	pop    %ebx
    bfd6:	5e                   	pop    %esi
    bfd7:	5f                   	pop    %edi
    bfd8:	5d                   	pop    %ebp
    bfd9:	c3                   	ret    
    bfda:	8d 83 d0 09 ff ff    	lea    -0xf630(%ebx),%eax
    bfe0:	50                   	push   %eax
    bfe1:	8d 83 95 09 ff ff    	lea    -0xf66b(%ebx),%eax
    bfe7:	6a 10                	push   $0x10
    bfe9:	50                   	push   %eax
    bfea:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
    bff0:	50                   	push   %eax
    bff1:	e8 9a 68 ff ff       	call   2890 <__assert_fail@plt>
    bff6:	66 90                	xchg   %ax,%ax
    bff8:	66 90                	xchg   %ax,%ax
    bffa:	66 90                	xchg   %ax,%ax
    bffc:	66 90                	xchg   %ax,%ax
    bffe:	66 90                	xchg   %ax,%ax

0000c000 <jmp_near>:
    c000:	55                   	push   %ebp
    c001:	57                   	push   %edi
    c002:	56                   	push   %esi
    c003:	53                   	push   %ebx
    c004:	e8 b7 6c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c009:	81 c3 f7 ef 01 00    	add    $0x1eff7,%ebx
    c00f:	83 ec 48             	sub    $0x48,%esp
    c012:	8d b3 77 13 00 00    	lea    0x1377(%ebx),%esi
    c018:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    c01c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    c023:	00 
    c024:	c6 44 24 20 01       	movb   $0x1,0x20(%esp)
    c029:	0f b6 06             	movzbl (%esi),%eax
    c02c:	89 44 24 28          	mov    %eax,0x28(%esp)
    c030:	8b 44 24 5c          	mov    0x5c(%esp),%eax
    c034:	83 c0 01             	add    $0x1,%eax
    c037:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    c03b:	55                   	push   %ebp
    c03c:	e8 5f 86 ff ff       	call   46a0 <operand_read>
    c041:	0f b6 06             	movzbl (%esi),%eax
    c044:	8b 7c 24 28          	mov    0x28(%esp),%edi
    c048:	83 c4 10             	add    $0x10,%esp
    c04b:	8d 50 f8             	lea    -0x8(%eax),%edx
    c04e:	81 e2 f7 00 00 00    	and    $0xf7,%edx
    c054:	74 04                	je     c05a <jmp_near+0x5a>
    c056:	3c 20                	cmp    $0x20,%al
    c058:	75 55                	jne    c0af <jmp_near+0xaf>
    c05a:	3c 08                	cmp    $0x8,%al
    c05c:	74 4a                	je     c0a8 <jmp_near+0xa8>
    c05e:	0f bf d7             	movswl %di,%edx
    c061:	3c 10                	cmp    $0x10,%al
    c063:	0f 44 fa             	cmove  %edx,%edi
    c066:	c0 e8 03             	shr    $0x3,%al
    c069:	55                   	push   %ebp
    c06a:	83 c0 01             	add    $0x1,%eax
    c06d:	0f b6 c0             	movzbl %al,%eax
    c070:	50                   	push   %eax
    c071:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    c077:	50                   	push   %eax
    c078:	8d 83 eb 09 ff ff    	lea    -0xf615(%ebx),%eax
    c07e:	50                   	push   %eax
    c07f:	e8 8c 7e ff ff       	call   3f10 <print_asm_1>
    c084:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    c08a:	01 78 20             	add    %edi,0x20(%eax)
    c08d:	0f b6 06             	movzbl (%esi),%eax
    c090:	83 c4 4c             	add    $0x4c,%esp
    c093:	5b                   	pop    %ebx
    c094:	5e                   	pop    %esi
    c095:	5f                   	pop    %edi
    c096:	c0 e8 03             	shr    $0x3,%al
    c099:	0f b6 c0             	movzbl %al,%eax
    c09c:	83 c0 01             	add    $0x1,%eax
    c09f:	5d                   	pop    %ebp
    c0a0:	c3                   	ret    
    c0a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c0a8:	89 f9                	mov    %edi,%ecx
    c0aa:	0f be f9             	movsbl %cl,%edi
    c0ad:	eb b7                	jmp    c066 <jmp_near+0x66>
    c0af:	8d 83 bc 0a ff ff    	lea    -0xf544(%ebx),%eax
    c0b5:	50                   	push   %eax
    c0b6:	8d 83 d7 09 ff ff    	lea    -0xf629(%ebx),%eax
    c0bc:	6a 2a                	push   $0x2a
    c0be:	50                   	push   %eax
    c0bf:	8d 83 14 0a ff ff    	lea    -0xf5ec(%ebx),%eax
    c0c5:	50                   	push   %eax
    c0c6:	e8 c5 67 ff ff       	call   2890 <__assert_fail@plt>
    c0cb:	90                   	nop
    c0cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000c0d0 <jmp_rel_v>:
    c0d0:	57                   	push   %edi
    c0d1:	56                   	push   %esi
    c0d2:	53                   	push   %ebx
    c0d3:	e8 e8 6b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c0d8:	81 c3 28 ef 01 00    	add    $0x1ef28,%ebx
    c0de:	83 ec 30             	sub    $0x30,%esp
    c0e1:	8b 44 24 40          	mov    0x40(%esp),%eax
    c0e5:	8d 7c 24 0c          	lea    0xc(%esp),%edi
    c0e9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    c0f0:	00 
    c0f1:	83 c0 01             	add    $0x1,%eax
    c0f4:	89 44 24 10          	mov    %eax,0x10(%esp)
    c0f8:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    c0fe:	0f b6 10             	movzbl (%eax),%edx
    c101:	89 d0                	mov    %edx,%eax
    c103:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    c107:	57                   	push   %edi
    c108:	c0 e8 03             	shr    $0x3,%al
    c10b:	0f b6 f0             	movzbl %al,%esi
    c10e:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    c114:	83 c6 01             	add    $0x1,%esi
    c117:	56                   	push   %esi
    c118:	50                   	push   %eax
    c119:	8d 83 ef 09 ff ff    	lea    -0xf611(%ebx),%eax
    c11f:	50                   	push   %eax
    c120:	e8 eb 7d ff ff       	call   3f10 <print_asm_1>
    c125:	89 3c 24             	mov    %edi,(%esp)
    c128:	e8 73 85 ff ff       	call   46a0 <operand_read>
    c12d:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c131:	83 c4 10             	add    $0x10,%esp
    c134:	8d 50 f0             	lea    -0x10(%eax),%edx
    c137:	83 e2 ef             	and    $0xffffffef,%edx
    c13a:	75 22                	jne    c15e <jmp_rel_v+0x8e>
    c13c:	83 f8 10             	cmp    $0x10,%eax
    c13f:	74 0f                	je     c150 <jmp_rel_v+0x80>
    c141:	8b 44 24 18          	mov    0x18(%esp),%eax
    c145:	83 c4 30             	add    $0x30,%esp
    c148:	5b                   	pop    %ebx
    c149:	01 f0                	add    %esi,%eax
    c14b:	5e                   	pop    %esi
    c14c:	5f                   	pop    %edi
    c14d:	c3                   	ret    
    c14e:	66 90                	xchg   %ax,%ax
    c150:	0f bf 44 24 18       	movswl 0x18(%esp),%eax
    c155:	83 c4 30             	add    $0x30,%esp
    c158:	5b                   	pop    %ebx
    c159:	01 f0                	add    %esi,%eax
    c15b:	5e                   	pop    %esi
    c15c:	5f                   	pop    %edi
    c15d:	c3                   	ret    
    c15e:	8d 83 b0 0a ff ff    	lea    -0xf550(%ebx),%eax
    c164:	50                   	push   %eax
    c165:	8d 83 f7 09 ff ff    	lea    -0xf609(%ebx),%eax
    c16b:	6a 20                	push   $0x20
    c16d:	50                   	push   %eax
    c16e:	8d 83 4c 0a ff ff    	lea    -0xf5b4(%ebx),%eax
    c174:	50                   	push   %eax
    c175:	e8 16 67 ff ff       	call   2890 <__assert_fail@plt>
    c17a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000c180 <jmp_rel_b>:
    c180:	56                   	push   %esi
    c181:	53                   	push   %ebx
    c182:	e8 39 6b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c187:	81 c3 79 ee 01 00    	add    $0x1ee79,%ebx
    c18d:	83 ec 40             	sub    $0x40,%esp
    c190:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    c194:	8d 74 24 18          	lea    0x18(%esp),%esi
    c198:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    c19f:	00 
    c1a0:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    c1a7:	00 
    c1a8:	83 c0 01             	add    $0x1,%eax
    c1ab:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    c1af:	56                   	push   %esi
    c1b0:	e8 eb 84 ff ff       	call   46a0 <operand_read>
    c1b5:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    c1bb:	56                   	push   %esi
    c1bc:	6a 02                	push   $0x2
    c1be:	50                   	push   %eax
    c1bf:	8d 83 eb 09 ff ff    	lea    -0xf615(%ebx),%eax
    c1c5:	50                   	push   %eax
    c1c6:	e8 45 7d ff ff       	call   3f10 <print_asm_1>
    c1cb:	0f be 44 24 38       	movsbl 0x38(%esp),%eax
    c1d0:	83 c4 54             	add    $0x54,%esp
    c1d3:	5b                   	pop    %ebx
    c1d4:	5e                   	pop    %esi
    c1d5:	83 c0 02             	add    $0x2,%eax
    c1d8:	c3                   	ret    
    c1d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000c1e0 <jmp_rm_v>:
    c1e0:	55                   	push   %ebp
    c1e1:	57                   	push   %edi
    c1e2:	56                   	push   %esi
    c1e3:	53                   	push   %ebx
    c1e4:	e8 d7 6a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c1e9:	81 c3 17 ee 01 00    	add    $0x1ee17,%ebx
    c1ef:	83 ec 44             	sub    $0x44,%esp
    c1f2:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    c1f8:	8d 6c 24 14          	lea    0x14(%esp),%ebp
    c1fc:	0f b6 07             	movzbl (%edi),%eax
    c1ff:	89 44 24 24          	mov    %eax,0x24(%esp)
    c203:	55                   	push   %ebp
    c204:	8b 44 24 5c          	mov    0x5c(%esp),%eax
    c208:	83 c0 01             	add    $0x1,%eax
    c20b:	50                   	push   %eax
    c20c:	e8 4f 84 ff ff       	call   4660 <modrm_rm>
    c211:	89 c6                	mov    %eax,%esi
    c213:	89 2c 24             	mov    %ebp,(%esp)
    c216:	e8 85 84 ff ff       	call   46a0 <operand_read>
    c21b:	8d 46 01             	lea    0x1(%esi),%eax
    c21e:	55                   	push   %ebp
    c21f:	0f b6 f0             	movzbl %al,%esi
    c222:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    c228:	56                   	push   %esi
    c229:	50                   	push   %eax
    c22a:	8d 83 0b 0a ff ff    	lea    -0xf5f5(%ebx),%eax
    c230:	50                   	push   %eax
    c231:	e8 da 7c ff ff       	call   3f10 <print_asm_1>
    c236:	0f b6 07             	movzbl (%edi),%eax
    c239:	83 c4 20             	add    $0x20,%esp
    c23c:	8d 50 f0             	lea    -0x10(%eax),%edx
    c23f:	81 e2 ef 00 00 00    	and    $0xef,%edx
    c245:	75 39                	jne    c280 <jmp_rm_v+0xa0>
    c247:	3c 10                	cmp    $0x10,%al
    c249:	74 1d                	je     c268 <jmp_rm_v+0x88>
    c24b:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    c251:	8b 54 24 18          	mov    0x18(%esp),%edx
    c255:	89 50 20             	mov    %edx,0x20(%eax)
    c258:	83 c4 3c             	add    $0x3c,%esp
    c25b:	31 c0                	xor    %eax,%eax
    c25d:	5b                   	pop    %ebx
    c25e:	5e                   	pop    %esi
    c25f:	5f                   	pop    %edi
    c260:	5d                   	pop    %ebp
    c261:	c3                   	ret    
    c262:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c268:	0f b7 54 24 18       	movzwl 0x18(%esp),%edx
    c26d:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    c273:	89 50 20             	mov    %edx,0x20(%eax)
    c276:	83 c4 3c             	add    $0x3c,%esp
    c279:	31 c0                	xor    %eax,%eax
    c27b:	5b                   	pop    %ebx
    c27c:	5e                   	pop    %esi
    c27d:	5f                   	pop    %edi
    c27e:	5d                   	pop    %ebp
    c27f:	c3                   	ret    
    c280:	8d 83 a4 0a ff ff    	lea    -0xf55c(%ebx),%eax
    c286:	50                   	push   %eax
    c287:	8d 83 f7 09 ff ff    	lea    -0xf609(%ebx),%eax
    c28d:	6a 43                	push   $0x43
    c28f:	50                   	push   %eax
    c290:	8d 83 78 0a ff ff    	lea    -0xf588(%ebx),%eax
    c296:	50                   	push   %eax
    c297:	e8 f4 65 ff ff       	call   2890 <__assert_fail@plt>
    c29c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000c2a0 <ljmp_v>:
    c2a0:	57                   	push   %edi
    c2a1:	56                   	push   %esi
    c2a2:	53                   	push   %ebx
    c2a3:	e8 18 6a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c2a8:	81 c3 58 ed 01 00    	add    $0x1ed58,%ebx
    c2ae:	83 ec 5c             	sub    $0x5c,%esp
    c2b1:	8d b3 77 13 00 00    	lea    0x1377(%ebx),%esi
    c2b7:	8b 7c 24 6c          	mov    0x6c(%esp),%edi
    c2bb:	c7 44 24 24 10 00 00 	movl   $0x10,0x24(%esp)
    c2c2:	00 
    c2c3:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
    c2ca:	00 
    c2cb:	0f b6 06             	movzbl (%esi),%eax
    c2ce:	89 44 24 48          	mov    %eax,0x48(%esp)
    c2d2:	8d 47 01             	lea    0x1(%edi),%eax
    c2d5:	89 44 24 3c          	mov    %eax,0x3c(%esp)
    c2d9:	8d 44 24 38          	lea    0x38(%esp),%eax
    c2dd:	50                   	push   %eax
    c2de:	e8 bd 83 ff ff       	call   46a0 <operand_read>
    c2e3:	0f b6 06             	movzbl (%esi),%eax
    c2e6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    c2ed:	00 
    c2ee:	c0 e8 03             	shr    $0x3,%al
    c2f1:	0f b6 c0             	movzbl %al,%eax
    c2f4:	8d 44 07 01          	lea    0x1(%edi,%eax,1),%eax
    c2f8:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    c2fc:	58                   	pop    %eax
    c2fd:	8d 44 24 14          	lea    0x14(%esp),%eax
    c301:	50                   	push   %eax
    c302:	e8 99 83 ff ff       	call   46a0 <operand_read>
    c307:	8b 44 24 24          	mov    0x24(%esp),%eax
    c30b:	8d bb 60 1d 05 00    	lea    0x51d60(%ebx),%edi
    c311:	66 89 47 48          	mov    %ax,0x48(%edi)
    c315:	66 c1 e8 03          	shr    $0x3,%ax
    c319:	0f b6 c0             	movzbl %al,%eax
    c31c:	89 04 24             	mov    %eax,(%esp)
    c31f:	e8 dc d9 00 00       	call   19d00 <load_sreg>
    c324:	0f b6 06             	movzbl (%esi),%eax
    c327:	83 c4 10             	add    $0x10,%esp
    c32a:	8d 50 f0             	lea    -0x10(%eax),%edx
    c32d:	81 e2 ef 00 00 00    	and    $0xef,%edx
    c333:	75 2c                	jne    c361 <ljmp_v+0xc1>
    c335:	3c 10                	cmp    $0x10,%al
    c337:	74 17                	je     c350 <ljmp_v+0xb0>
    c339:	8b 44 24 38          	mov    0x38(%esp),%eax
    c33d:	89 47 20             	mov    %eax,0x20(%edi)
    c340:	83 c4 50             	add    $0x50,%esp
    c343:	31 c0                	xor    %eax,%eax
    c345:	5b                   	pop    %ebx
    c346:	5e                   	pop    %esi
    c347:	5f                   	pop    %edi
    c348:	c3                   	ret    
    c349:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c350:	0f b7 44 24 38       	movzwl 0x38(%esp),%eax
    c355:	89 47 20             	mov    %eax,0x20(%edi)
    c358:	83 c4 50             	add    $0x50,%esp
    c35b:	31 c0                	xor    %eax,%eax
    c35d:	5b                   	pop    %ebx
    c35e:	5e                   	pop    %esi
    c35f:	5f                   	pop    %edi
    c360:	c3                   	ret    
    c361:	8d 83 9c 0a ff ff    	lea    -0xf564(%ebx),%eax
    c367:	50                   	push   %eax
    c368:	8d 83 f7 09 ff ff    	lea    -0xf609(%ebx),%eax
    c36e:	6a 68                	push   $0x68
    c370:	50                   	push   %eax
    c371:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
    c377:	50                   	push   %eax
    c378:	e8 13 65 ff ff       	call   2890 <__assert_fail@plt>
    c37d:	66 90                	xchg   %ax,%ax
    c37f:	90                   	nop

0000c380 <instr_execute_2op>:
    c380:	57                   	push   %edi
    c381:	56                   	push   %esi
    c382:	53                   	push   %ebx
    c383:	e8 38 69 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c388:	81 c3 78 ec 01 00    	add    $0x1ec78,%ebx
    c38e:	83 ec 0c             	sub    $0xc,%esp
    c391:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c397:	57                   	push   %edi
    c398:	e8 03 83 ff ff       	call   46a0 <operand_read>
    c39d:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
    c3a3:	89 34 24             	mov    %esi,(%esp)
    c3a6:	e8 f5 82 ff ff       	call   46a0 <operand_read>
    c3ab:	83 c4 0c             	add    $0xc,%esp
    c3ae:	ff 76 10             	pushl  0x10(%esi)
    c3b1:	ff 76 0c             	pushl  0xc(%esi)
    c3b4:	ff 77 0c             	pushl  0xc(%edi)
    c3b7:	e8 b4 f7 ff ff       	call   bb70 <alu_sar>
    c3bc:	89 34 24             	mov    %esi,(%esp)
    c3bf:	89 46 0c             	mov    %eax,0xc(%esi)
    c3c2:	e8 69 84 ff ff       	call   4830 <operand_write>
    c3c7:	83 c4 10             	add    $0x10,%esp
    c3ca:	5b                   	pop    %ebx
    c3cb:	5e                   	pop    %esi
    c3cc:	5f                   	pop    %edi
    c3cd:	c3                   	ret    
    c3ce:	66 90                	xchg   %ax,%ax

0000c3d0 <instr_execute_1op>:
    c3d0:	56                   	push   %esi
    c3d1:	53                   	push   %ebx
    c3d2:	e8 e9 68 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c3d7:	81 c3 29 ec 01 00    	add    $0x1ec29,%ebx
    c3dd:	83 ec 10             	sub    $0x10,%esp
    c3e0:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
    c3e6:	56                   	push   %esi
    c3e7:	e8 b4 82 ff ff       	call   46a0 <operand_read>
    c3ec:	83 c4 0c             	add    $0xc,%esp
    c3ef:	ff 76 10             	pushl  0x10(%esi)
    c3f2:	ff 76 0c             	pushl  0xc(%esi)
    c3f5:	6a 01                	push   $0x1
    c3f7:	e8 74 f7 ff ff       	call   bb70 <alu_sar>
    c3fc:	89 34 24             	mov    %esi,(%esp)
    c3ff:	89 46 0c             	mov    %eax,0xc(%esi)
    c402:	e8 29 84 ff ff       	call   4830 <operand_write>
    c407:	83 c4 14             	add    $0x14,%esp
    c40a:	5b                   	pop    %ebx
    c40b:	5e                   	pop    %esi
    c40c:	c3                   	ret    
    c40d:	8d 76 00             	lea    0x0(%esi),%esi

0000c410 <sar_i2rm_b>:
    c410:	55                   	push   %ebp
    c411:	57                   	push   %edi
    c412:	56                   	push   %esi
    c413:	53                   	push   %ebx
    c414:	e8 a7 68 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c419:	81 c3 e7 eb 01 00    	add    $0x1ebe7,%ebx
    c41f:	83 ec 24             	sub    $0x24,%esp
    c422:	8b 6c 24 38          	mov    0x38(%esp),%ebp
    c426:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    c42c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c432:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
    c439:	8d 45 01             	lea    0x1(%ebp),%eax
    c43c:	52                   	push   %edx
    c43d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
    c444:	89 54 24 18          	mov    %edx,0x18(%esp)
    c448:	50                   	push   %eax
    c449:	e8 12 82 ff ff       	call   4660 <modrm_rm>
    c44e:	8b 77 10             	mov    0x10(%edi),%esi
    c451:	83 c0 01             	add    $0x1,%eax
    c454:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    c458:	01 c5                	add    %eax,%ebp
    c45a:	83 c4 10             	add    $0x10,%esp
    c45d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
    c463:	89 6f 04             	mov    %ebp,0x4(%edi)
    c466:	c6 47 08 01          	movb   $0x1,0x8(%edi)
    c46a:	c1 ee 03             	shr    $0x3,%esi
    c46d:	01 c6                	add    %eax,%esi
    c46f:	89 f0                	mov    %esi,%eax
    c471:	0f b6 e8             	movzbl %al,%ebp
    c474:	8b 42 10             	mov    0x10(%edx),%eax
    c477:	83 f8 08             	cmp    $0x8,%eax
    c47a:	74 3c                	je     c4b8 <sar_i2rm_b+0xa8>
    c47c:	83 f8 10             	cmp    $0x10,%eax
    c47f:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
    c485:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    c48b:	0f 44 c1             	cmove  %ecx,%eax
    c48e:	83 ec 0c             	sub    $0xc,%esp
    c491:	52                   	push   %edx
    c492:	57                   	push   %edi
    c493:	55                   	push   %ebp
    c494:	50                   	push   %eax
    c495:	8d 83 c5 0a ff ff    	lea    -0xf53b(%ebx),%eax
    c49b:	50                   	push   %eax
    c49c:	e8 5f 7b ff ff       	call   4000 <print_asm_2>
    c4a1:	83 c4 20             	add    $0x20,%esp
    c4a4:	e8 d7 fe ff ff       	call   c380 <instr_execute_2op>
    c4a9:	83 c4 1c             	add    $0x1c,%esp
    c4ac:	89 f0                	mov    %esi,%eax
    c4ae:	5b                   	pop    %ebx
    c4af:	5e                   	pop    %esi
    c4b0:	5f                   	pop    %edi
    c4b1:	5d                   	pop    %ebp
    c4b2:	c3                   	ret    
    c4b3:	90                   	nop
    c4b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c4b8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    c4be:	eb ce                	jmp    c48e <sar_i2rm_b+0x7e>

0000c4c0 <sar_i2rm_bv>:
    c4c0:	55                   	push   %ebp
    c4c1:	57                   	push   %edi
    c4c2:	56                   	push   %esi
    c4c3:	53                   	push   %ebx
    c4c4:	e8 f7 67 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c4c9:	81 c3 37 eb 01 00    	add    $0x1eb37,%ebx
    c4cf:	83 ec 24             	sub    $0x24,%esp
    c4d2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    c4d8:	8b 6c 24 38          	mov    0x38(%esp),%ebp
    c4dc:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    c4e2:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c4e8:	0f b6 00             	movzbl (%eax),%eax
    c4eb:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
    c4f2:	89 42 10             	mov    %eax,0x10(%edx)
    c4f5:	52                   	push   %edx
    c4f6:	8d 45 01             	lea    0x1(%ebp),%eax
    c4f9:	89 54 24 18          	mov    %edx,0x18(%esp)
    c4fd:	50                   	push   %eax
    c4fe:	e8 5d 81 ff ff       	call   4660 <modrm_rm>
    c503:	8b 77 10             	mov    0x10(%edi),%esi
    c506:	83 c0 01             	add    $0x1,%eax
    c509:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    c50d:	01 c5                	add    %eax,%ebp
    c50f:	83 c4 10             	add    $0x10,%esp
    c512:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
    c518:	89 6f 04             	mov    %ebp,0x4(%edi)
    c51b:	c6 47 08 01          	movb   $0x1,0x8(%edi)
    c51f:	c1 ee 03             	shr    $0x3,%esi
    c522:	01 c6                	add    %eax,%esi
    c524:	89 f0                	mov    %esi,%eax
    c526:	0f b6 e8             	movzbl %al,%ebp
    c529:	8b 42 10             	mov    0x10(%edx),%eax
    c52c:	83 f8 08             	cmp    $0x8,%eax
    c52f:	74 3f                	je     c570 <sar_i2rm_bv+0xb0>
    c531:	83 f8 10             	cmp    $0x10,%eax
    c534:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
    c53a:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    c540:	0f 44 c1             	cmove  %ecx,%eax
    c543:	83 ec 0c             	sub    $0xc,%esp
    c546:	52                   	push   %edx
    c547:	57                   	push   %edi
    c548:	55                   	push   %ebp
    c549:	50                   	push   %eax
    c54a:	8d 83 c5 0a ff ff    	lea    -0xf53b(%ebx),%eax
    c550:	50                   	push   %eax
    c551:	e8 aa 7a ff ff       	call   4000 <print_asm_2>
    c556:	83 c4 20             	add    $0x20,%esp
    c559:	e8 22 fe ff ff       	call   c380 <instr_execute_2op>
    c55e:	83 c4 1c             	add    $0x1c,%esp
    c561:	89 f0                	mov    %esi,%eax
    c563:	5b                   	pop    %ebx
    c564:	5e                   	pop    %esi
    c565:	5f                   	pop    %edi
    c566:	5d                   	pop    %ebp
    c567:	c3                   	ret    
    c568:	90                   	nop
    c569:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c570:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    c576:	eb cb                	jmp    c543 <sar_i2rm_bv+0x83>
    c578:	90                   	nop
    c579:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000c580 <sar_c2rm_b>:
    c580:	55                   	push   %ebp
    c581:	57                   	push   %edi
    c582:	56                   	push   %esi
    c583:	53                   	push   %ebx
    c584:	e8 37 67 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c589:	81 c3 77 ea 01 00    	add    $0x1ea77,%ebx
    c58f:	83 ec 14             	sub    $0x14,%esp
    c592:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    c598:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c59e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
    c5a5:	55                   	push   %ebp
    c5a6:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c5aa:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
    c5b1:	83 c0 01             	add    $0x1,%eax
    c5b4:	50                   	push   %eax
    c5b5:	e8 a6 80 ff ff       	call   4660 <modrm_rm>
    c5ba:	8d 70 01             	lea    0x1(%eax),%esi
    c5bd:	83 c4 10             	add    $0x10,%esp
    c5c0:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
    c5c6:	c7 47 04 01 00 00 00 	movl   $0x1,0x4(%edi)
    c5cd:	89 f0                	mov    %esi,%eax
    c5cf:	0f b6 c8             	movzbl %al,%ecx
    c5d2:	8b 45 10             	mov    0x10(%ebp),%eax
    c5d5:	83 f8 08             	cmp    $0x8,%eax
    c5d8:	74 3e                	je     c618 <sar_c2rm_b+0x98>
    c5da:	83 f8 10             	cmp    $0x10,%eax
    c5dd:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
    c5e3:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    c5e9:	0f 44 c2             	cmove  %edx,%eax
    c5ec:	83 ec 0c             	sub    $0xc,%esp
    c5ef:	55                   	push   %ebp
    c5f0:	57                   	push   %edi
    c5f1:	51                   	push   %ecx
    c5f2:	50                   	push   %eax
    c5f3:	8d 83 c5 0a ff ff    	lea    -0xf53b(%ebx),%eax
    c5f9:	50                   	push   %eax
    c5fa:	e8 01 7a ff ff       	call   4000 <print_asm_2>
    c5ff:	83 c4 20             	add    $0x20,%esp
    c602:	e8 79 fd ff ff       	call   c380 <instr_execute_2op>
    c607:	83 c4 0c             	add    $0xc,%esp
    c60a:	89 f0                	mov    %esi,%eax
    c60c:	5b                   	pop    %ebx
    c60d:	5e                   	pop    %esi
    c60e:	5f                   	pop    %edi
    c60f:	5d                   	pop    %ebp
    c610:	c3                   	ret    
    c611:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c618:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    c61e:	eb cc                	jmp    c5ec <sar_c2rm_b+0x6c>

0000c620 <sar_c2rm_bv>:
    c620:	55                   	push   %ebp
    c621:	57                   	push   %edi
    c622:	56                   	push   %esi
    c623:	53                   	push   %ebx
    c624:	e8 97 66 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c629:	81 c3 d7 e9 01 00    	add    $0x1e9d7,%ebx
    c62f:	83 ec 14             	sub    $0x14,%esp
    c632:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    c638:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    c63e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c644:	0f b6 00             	movzbl (%eax),%eax
    c647:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
    c64e:	89 45 10             	mov    %eax,0x10(%ebp)
    c651:	55                   	push   %ebp
    c652:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c656:	83 c0 01             	add    $0x1,%eax
    c659:	50                   	push   %eax
    c65a:	e8 01 80 ff ff       	call   4660 <modrm_rm>
    c65f:	8d 70 01             	lea    0x1(%eax),%esi
    c662:	83 c4 10             	add    $0x10,%esp
    c665:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
    c66b:	c7 47 04 01 00 00 00 	movl   $0x1,0x4(%edi)
    c672:	89 f0                	mov    %esi,%eax
    c674:	0f b6 c8             	movzbl %al,%ecx
    c677:	8b 45 10             	mov    0x10(%ebp),%eax
    c67a:	83 f8 08             	cmp    $0x8,%eax
    c67d:	74 41                	je     c6c0 <sar_c2rm_bv+0xa0>
    c67f:	83 f8 10             	cmp    $0x10,%eax
    c682:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
    c688:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    c68e:	0f 44 c2             	cmove  %edx,%eax
    c691:	83 ec 0c             	sub    $0xc,%esp
    c694:	55                   	push   %ebp
    c695:	57                   	push   %edi
    c696:	51                   	push   %ecx
    c697:	50                   	push   %eax
    c698:	8d 83 c5 0a ff ff    	lea    -0xf53b(%ebx),%eax
    c69e:	50                   	push   %eax
    c69f:	e8 5c 79 ff ff       	call   4000 <print_asm_2>
    c6a4:	83 c4 20             	add    $0x20,%esp
    c6a7:	e8 d4 fc ff ff       	call   c380 <instr_execute_2op>
    c6ac:	83 c4 0c             	add    $0xc,%esp
    c6af:	89 f0                	mov    %esi,%eax
    c6b1:	5b                   	pop    %ebx
    c6b2:	5e                   	pop    %esi
    c6b3:	5f                   	pop    %edi
    c6b4:	5d                   	pop    %ebp
    c6b5:	c3                   	ret    
    c6b6:	8d 76 00             	lea    0x0(%esi),%esi
    c6b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    c6c0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    c6c6:	eb c9                	jmp    c691 <sar_c2rm_bv+0x71>
    c6c8:	90                   	nop
    c6c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000c6d0 <sar_rm_b>:
    c6d0:	55                   	push   %ebp
    c6d1:	57                   	push   %edi
    c6d2:	56                   	push   %esi
    c6d3:	53                   	push   %ebx
    c6d4:	e8 e7 65 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c6d9:	81 c3 27 e9 01 00    	add    $0x1e927,%ebx
    c6df:	83 ec 14             	sub    $0x14,%esp
    c6e2:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
    c6e8:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
    c6ee:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
    c6f5:	55                   	push   %ebp
    c6f6:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c6fa:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
    c701:	83 c0 01             	add    $0x1,%eax
    c704:	50                   	push   %eax
    c705:	e8 56 7f ff ff       	call   4660 <modrm_rm>
    c70a:	8d 70 01             	lea    0x1(%eax),%esi
    c70d:	83 c4 10             	add    $0x10,%esp
    c710:	89 f0                	mov    %esi,%eax
    c712:	0f b6 c8             	movzbl %al,%ecx
    c715:	8b 47 10             	mov    0x10(%edi),%eax
    c718:	83 f8 08             	cmp    $0x8,%eax
    c71b:	74 33                	je     c750 <sar_rm_b+0x80>
    c71d:	83 f8 10             	cmp    $0x10,%eax
    c720:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
    c726:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    c72c:	0f 44 c2             	cmove  %edx,%eax
    c72f:	55                   	push   %ebp
    c730:	51                   	push   %ecx
    c731:	50                   	push   %eax
    c732:	8d 83 c5 0a ff ff    	lea    -0xf53b(%ebx),%eax
    c738:	50                   	push   %eax
    c739:	e8 d2 77 ff ff       	call   3f10 <print_asm_1>
    c73e:	e8 8d fc ff ff       	call   c3d0 <instr_execute_1op>
    c743:	83 c4 1c             	add    $0x1c,%esp
    c746:	89 f0                	mov    %esi,%eax
    c748:	5b                   	pop    %ebx
    c749:	5e                   	pop    %esi
    c74a:	5f                   	pop    %edi
    c74b:	5d                   	pop    %ebp
    c74c:	c3                   	ret    
    c74d:	8d 76 00             	lea    0x0(%esi),%esi
    c750:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    c756:	eb d7                	jmp    c72f <sar_rm_b+0x5f>
    c758:	90                   	nop
    c759:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000c760 <sar_rm_v>:
    c760:	55                   	push   %ebp
    c761:	57                   	push   %edi
    c762:	56                   	push   %esi
    c763:	53                   	push   %ebx
    c764:	e8 57 65 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c769:	81 c3 97 e8 01 00    	add    $0x1e897,%ebx
    c76f:	83 ec 14             	sub    $0x14,%esp
    c772:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    c778:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
    c77e:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
    c784:	0f b6 00             	movzbl (%eax),%eax
    c787:	89 45 10             	mov    %eax,0x10(%ebp)
    c78a:	89 47 10             	mov    %eax,0x10(%edi)
    c78d:	55                   	push   %ebp
    c78e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c792:	83 c0 01             	add    $0x1,%eax
    c795:	50                   	push   %eax
    c796:	e8 c5 7e ff ff       	call   4660 <modrm_rm>
    c79b:	8d 70 01             	lea    0x1(%eax),%esi
    c79e:	83 c4 10             	add    $0x10,%esp
    c7a1:	89 f0                	mov    %esi,%eax
    c7a3:	0f b6 c8             	movzbl %al,%ecx
    c7a6:	8b 47 10             	mov    0x10(%edi),%eax
    c7a9:	83 f8 08             	cmp    $0x8,%eax
    c7ac:	74 32                	je     c7e0 <sar_rm_v+0x80>
    c7ae:	83 f8 10             	cmp    $0x10,%eax
    c7b1:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
    c7b7:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    c7bd:	0f 44 c2             	cmove  %edx,%eax
    c7c0:	55                   	push   %ebp
    c7c1:	51                   	push   %ecx
    c7c2:	50                   	push   %eax
    c7c3:	8d 83 c5 0a ff ff    	lea    -0xf53b(%ebx),%eax
    c7c9:	50                   	push   %eax
    c7ca:	e8 41 77 ff ff       	call   3f10 <print_asm_1>
    c7cf:	e8 fc fb ff ff       	call   c3d0 <instr_execute_1op>
    c7d4:	83 c4 1c             	add    $0x1c,%esp
    c7d7:	89 f0                	mov    %esi,%eax
    c7d9:	5b                   	pop    %ebx
    c7da:	5e                   	pop    %esi
    c7db:	5f                   	pop    %edi
    c7dc:	5d                   	pop    %ebp
    c7dd:	c3                   	ret    
    c7de:	66 90                	xchg   %ax,%ax
    c7e0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    c7e6:	eb d8                	jmp    c7c0 <sar_rm_v+0x60>
    c7e8:	66 90                	xchg   %ax,%ax
    c7ea:	66 90                	xchg   %ax,%ax
    c7ec:	66 90                	xchg   %ax,%ax
    c7ee:	66 90                	xchg   %ax,%ax

0000c7f0 <instr_execute_2op_cc_pass>:
    c7f0:	56                   	push   %esi
    c7f1:	53                   	push   %ebx
    c7f2:	e8 c9 64 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c7f7:	81 c3 09 e8 01 00    	add    $0x1e809,%ebx
    c7fd:	83 ec 10             	sub    $0x10,%esp
    c800:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
    c806:	56                   	push   %esi
    c807:	e8 94 7e ff ff       	call   46a0 <operand_read>
    c80c:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    c812:	8b 56 0c             	mov    0xc(%esi),%edx
    c815:	89 50 0c             	mov    %edx,0xc(%eax)
    c818:	89 04 24             	mov    %eax,(%esp)
    c81b:	e8 10 80 ff ff       	call   4830 <operand_write>
    c820:	83 c4 14             	add    $0x14,%esp
    c823:	5b                   	pop    %ebx
    c824:	5e                   	pop    %esi
    c825:	c3                   	ret    
    c826:	8d 76 00             	lea    0x0(%esi),%esi
    c829:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c830 <cmova_rm2r_v>:
    c830:	55                   	push   %ebp
    c831:	57                   	push   %edi
    c832:	56                   	push   %esi
    c833:	53                   	push   %ebx
    c834:	e8 87 64 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c839:	81 c3 c7 e7 01 00    	add    $0x1e7c7,%ebx
    c83f:	83 ec 10             	sub    $0x10,%esp
    c842:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    c848:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    c84e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c854:	0f b6 00             	movzbl (%eax),%eax
    c857:	89 45 10             	mov    %eax,0x10(%ebp)
    c85a:	89 47 10             	mov    %eax,0x10(%edi)
    c85d:	57                   	push   %edi
    c85e:	55                   	push   %ebp
    c85f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c863:	83 c0 01             	add    $0x1,%eax
    c866:	50                   	push   %eax
    c867:	e8 24 7d ff ff       	call   4590 <modrm_r_rm>
    c86c:	8d 70 01             	lea    0x1(%eax),%esi
    c86f:	89 2c 24             	mov    %ebp,(%esp)
    c872:	57                   	push   %edi
    c873:	89 f0                	mov    %esi,%eax
    c875:	0f b6 c0             	movzbl %al,%eax
    c878:	50                   	push   %eax
    c879:	8d 83 52 0c ff ff    	lea    -0xf3ae(%ebx),%eax
    c87f:	50                   	push   %eax
    c880:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    c886:	50                   	push   %eax
    c887:	e8 74 77 ff ff       	call   4000 <print_asm_2>
    c88c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    c892:	83 c4 20             	add    $0x20,%esp
    c895:	f6 40 24 41          	testb  $0x41,0x24(%eax)
    c899:	75 05                	jne    c8a0 <cmova_rm2r_v+0x70>
    c89b:	e8 50 ff ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    c8a0:	83 c4 0c             	add    $0xc,%esp
    c8a3:	89 f0                	mov    %esi,%eax
    c8a5:	5b                   	pop    %ebx
    c8a6:	5e                   	pop    %esi
    c8a7:	5f                   	pop    %edi
    c8a8:	5d                   	pop    %ebp
    c8a9:	c3                   	ret    
    c8aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000c8b0 <cmovae_rm2r_v>:
    c8b0:	55                   	push   %ebp
    c8b1:	57                   	push   %edi
    c8b2:	56                   	push   %esi
    c8b3:	53                   	push   %ebx
    c8b4:	e8 07 64 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c8b9:	81 c3 47 e7 01 00    	add    $0x1e747,%ebx
    c8bf:	83 ec 10             	sub    $0x10,%esp
    c8c2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    c8c8:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    c8ce:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c8d4:	0f b6 00             	movzbl (%eax),%eax
    c8d7:	89 45 10             	mov    %eax,0x10(%ebp)
    c8da:	89 47 10             	mov    %eax,0x10(%edi)
    c8dd:	57                   	push   %edi
    c8de:	55                   	push   %ebp
    c8df:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c8e3:	83 c0 01             	add    $0x1,%eax
    c8e6:	50                   	push   %eax
    c8e7:	e8 a4 7c ff ff       	call   4590 <modrm_r_rm>
    c8ec:	8d 70 01             	lea    0x1(%eax),%esi
    c8ef:	89 2c 24             	mov    %ebp,(%esp)
    c8f2:	57                   	push   %edi
    c8f3:	89 f0                	mov    %esi,%eax
    c8f5:	0f b6 c0             	movzbl %al,%eax
    c8f8:	50                   	push   %eax
    c8f9:	8d 83 ce 0a ff ff    	lea    -0xf532(%ebx),%eax
    c8ff:	50                   	push   %eax
    c900:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    c906:	50                   	push   %eax
    c907:	e8 f4 76 ff ff       	call   4000 <print_asm_2>
    c90c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    c912:	83 c4 20             	add    $0x20,%esp
    c915:	f6 40 24 01          	testb  $0x1,0x24(%eax)
    c919:	75 05                	jne    c920 <cmovae_rm2r_v+0x70>
    c91b:	e8 d0 fe ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    c920:	83 c4 0c             	add    $0xc,%esp
    c923:	89 f0                	mov    %esi,%eax
    c925:	5b                   	pop    %ebx
    c926:	5e                   	pop    %esi
    c927:	5f                   	pop    %edi
    c928:	5d                   	pop    %ebp
    c929:	c3                   	ret    
    c92a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000c930 <cmovb_rm2r_v>:
    c930:	55                   	push   %ebp
    c931:	57                   	push   %edi
    c932:	56                   	push   %esi
    c933:	53                   	push   %ebx
    c934:	e8 87 63 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c939:	81 c3 c7 e6 01 00    	add    $0x1e6c7,%ebx
    c93f:	83 ec 10             	sub    $0x10,%esp
    c942:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    c948:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    c94e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c954:	0f b6 00             	movzbl (%eax),%eax
    c957:	89 45 10             	mov    %eax,0x10(%ebp)
    c95a:	89 47 10             	mov    %eax,0x10(%edi)
    c95d:	57                   	push   %edi
    c95e:	55                   	push   %ebp
    c95f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c963:	83 c0 01             	add    $0x1,%eax
    c966:	50                   	push   %eax
    c967:	e8 24 7c ff ff       	call   4590 <modrm_r_rm>
    c96c:	8d 70 01             	lea    0x1(%eax),%esi
    c96f:	89 2c 24             	mov    %ebp,(%esp)
    c972:	57                   	push   %edi
    c973:	89 f0                	mov    %esi,%eax
    c975:	0f b6 c0             	movzbl %al,%eax
    c978:	50                   	push   %eax
    c979:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    c97f:	50                   	push   %eax
    c980:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    c986:	50                   	push   %eax
    c987:	e8 74 76 ff ff       	call   4000 <print_asm_2>
    c98c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    c992:	83 c4 20             	add    $0x20,%esp
    c995:	f6 40 24 01          	testb  $0x1,0x24(%eax)
    c999:	74 05                	je     c9a0 <cmovb_rm2r_v+0x70>
    c99b:	e8 50 fe ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    c9a0:	83 c4 0c             	add    $0xc,%esp
    c9a3:	89 f0                	mov    %esi,%eax
    c9a5:	5b                   	pop    %ebx
    c9a6:	5e                   	pop    %esi
    c9a7:	5f                   	pop    %edi
    c9a8:	5d                   	pop    %ebp
    c9a9:	c3                   	ret    
    c9aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000c9b0 <cmovbe_rm2r_v>:
    c9b0:	55                   	push   %ebp
    c9b1:	57                   	push   %edi
    c9b2:	56                   	push   %esi
    c9b3:	53                   	push   %ebx
    c9b4:	e8 07 63 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    c9b9:	81 c3 47 e6 01 00    	add    $0x1e647,%ebx
    c9bf:	83 ec 10             	sub    $0x10,%esp
    c9c2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    c9c8:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    c9ce:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    c9d4:	0f b6 00             	movzbl (%eax),%eax
    c9d7:	89 45 10             	mov    %eax,0x10(%ebp)
    c9da:	89 47 10             	mov    %eax,0x10(%edi)
    c9dd:	57                   	push   %edi
    c9de:	55                   	push   %ebp
    c9df:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    c9e3:	83 c0 01             	add    $0x1,%eax
    c9e6:	50                   	push   %eax
    c9e7:	e8 a4 7b ff ff       	call   4590 <modrm_r_rm>
    c9ec:	8d 70 01             	lea    0x1(%eax),%esi
    c9ef:	89 2c 24             	mov    %ebp,(%esp)
    c9f2:	57                   	push   %edi
    c9f3:	89 f0                	mov    %esi,%eax
    c9f5:	0f b6 c0             	movzbl %al,%eax
    c9f8:	50                   	push   %eax
    c9f9:	8d 83 28 0b ff ff    	lea    -0xf4d8(%ebx),%eax
    c9ff:	50                   	push   %eax
    ca00:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    ca06:	50                   	push   %eax
    ca07:	e8 f4 75 ff ff       	call   4000 <print_asm_2>
    ca0c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    ca12:	83 c4 20             	add    $0x20,%esp
    ca15:	f6 40 24 41          	testb  $0x41,0x24(%eax)
    ca19:	74 05                	je     ca20 <cmovbe_rm2r_v+0x70>
    ca1b:	e8 d0 fd ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    ca20:	83 c4 0c             	add    $0xc,%esp
    ca23:	89 f0                	mov    %esi,%eax
    ca25:	5b                   	pop    %ebx
    ca26:	5e                   	pop    %esi
    ca27:	5f                   	pop    %edi
    ca28:	5d                   	pop    %ebp
    ca29:	c3                   	ret    
    ca2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000ca30 <cmovg_rm2r_v>:
    ca30:	55                   	push   %ebp
    ca31:	57                   	push   %edi
    ca32:	56                   	push   %esi
    ca33:	53                   	push   %ebx
    ca34:	e8 87 62 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ca39:	81 c3 c7 e5 01 00    	add    $0x1e5c7,%ebx
    ca3f:	83 ec 10             	sub    $0x10,%esp
    ca42:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    ca48:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    ca4e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    ca54:	0f b6 00             	movzbl (%eax),%eax
    ca57:	89 45 10             	mov    %eax,0x10(%ebp)
    ca5a:	89 47 10             	mov    %eax,0x10(%edi)
    ca5d:	57                   	push   %edi
    ca5e:	55                   	push   %ebp
    ca5f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    ca63:	83 c0 01             	add    $0x1,%eax
    ca66:	50                   	push   %eax
    ca67:	e8 24 7b ff ff       	call   4590 <modrm_r_rm>
    ca6c:	8d 70 01             	lea    0x1(%eax),%esi
    ca6f:	89 2c 24             	mov    %ebp,(%esp)
    ca72:	57                   	push   %edi
    ca73:	89 f0                	mov    %esi,%eax
    ca75:	0f b6 c0             	movzbl %al,%eax
    ca78:	50                   	push   %eax
    ca79:	8d 83 44 12 ff ff    	lea    -0xedbc(%ebx),%eax
    ca7f:	50                   	push   %eax
    ca80:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    ca86:	50                   	push   %eax
    ca87:	e8 74 75 ff ff       	call   4000 <print_asm_2>
    ca8c:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    ca92:	83 c4 20             	add    $0x20,%esp
    ca95:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    ca99:	a8 40                	test   $0x40,%al
    ca9b:	75 11                	jne    caae <cmovg_rm2r_v+0x7e>
    ca9d:	0f b6 52 25          	movzbl 0x25(%edx),%edx
    caa1:	c0 e8 07             	shr    $0x7,%al
    caa4:	c0 ea 03             	shr    $0x3,%dl
    caa7:	83 e2 01             	and    $0x1,%edx
    caaa:	38 d0                	cmp    %dl,%al
    caac:	74 12                	je     cac0 <cmovg_rm2r_v+0x90>
    caae:	83 c4 0c             	add    $0xc,%esp
    cab1:	89 f0                	mov    %esi,%eax
    cab3:	5b                   	pop    %ebx
    cab4:	5e                   	pop    %esi
    cab5:	5f                   	pop    %edi
    cab6:	5d                   	pop    %ebp
    cab7:	c3                   	ret    
    cab8:	90                   	nop
    cab9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    cac0:	e8 2b fd ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    cac5:	83 c4 0c             	add    $0xc,%esp
    cac8:	89 f0                	mov    %esi,%eax
    caca:	5b                   	pop    %ebx
    cacb:	5e                   	pop    %esi
    cacc:	5f                   	pop    %edi
    cacd:	5d                   	pop    %ebp
    cace:	c3                   	ret    
    cacf:	90                   	nop

0000cad0 <cmovge_rm2r_v>:
    cad0:	55                   	push   %ebp
    cad1:	57                   	push   %edi
    cad2:	56                   	push   %esi
    cad3:	53                   	push   %ebx
    cad4:	e8 e7 61 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cad9:	81 c3 27 e5 01 00    	add    $0x1e527,%ebx
    cadf:	83 ec 10             	sub    $0x10,%esp
    cae2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    cae8:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    caee:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    caf4:	0f b6 00             	movzbl (%eax),%eax
    caf7:	89 45 10             	mov    %eax,0x10(%ebp)
    cafa:	89 47 10             	mov    %eax,0x10(%edi)
    cafd:	57                   	push   %edi
    cafe:	55                   	push   %ebp
    caff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    cb03:	83 c0 01             	add    $0x1,%eax
    cb06:	50                   	push   %eax
    cb07:	e8 84 7a ff ff       	call   4590 <modrm_r_rm>
    cb0c:	8d 70 01             	lea    0x1(%eax),%esi
    cb0f:	89 2c 24             	mov    %ebp,(%esp)
    cb12:	57                   	push   %edi
    cb13:	89 f0                	mov    %esi,%eax
    cb15:	0f b6 c0             	movzbl %al,%eax
    cb18:	50                   	push   %eax
    cb19:	8d 83 43 0b ff ff    	lea    -0xf4bd(%ebx),%eax
    cb1f:	50                   	push   %eax
    cb20:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    cb26:	50                   	push   %eax
    cb27:	e8 d4 74 ff ff       	call   4000 <print_asm_2>
    cb2c:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    cb32:	83 c4 20             	add    $0x20,%esp
    cb35:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    cb39:	0f b6 52 25          	movzbl 0x25(%edx),%edx
    cb3d:	c0 ea 03             	shr    $0x3,%dl
    cb40:	c0 e8 07             	shr    $0x7,%al
    cb43:	83 e2 01             	and    $0x1,%edx
    cb46:	38 d0                	cmp    %dl,%al
    cb48:	74 0e                	je     cb58 <cmovge_rm2r_v+0x88>
    cb4a:	83 c4 0c             	add    $0xc,%esp
    cb4d:	89 f0                	mov    %esi,%eax
    cb4f:	5b                   	pop    %ebx
    cb50:	5e                   	pop    %esi
    cb51:	5f                   	pop    %edi
    cb52:	5d                   	pop    %ebp
    cb53:	c3                   	ret    
    cb54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cb58:	e8 93 fc ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    cb5d:	83 c4 0c             	add    $0xc,%esp
    cb60:	89 f0                	mov    %esi,%eax
    cb62:	5b                   	pop    %ebx
    cb63:	5e                   	pop    %esi
    cb64:	5f                   	pop    %edi
    cb65:	5d                   	pop    %ebp
    cb66:	c3                   	ret    
    cb67:	89 f6                	mov    %esi,%esi
    cb69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cb70 <cmovl_rm2r_v>:
    cb70:	55                   	push   %ebp
    cb71:	57                   	push   %edi
    cb72:	56                   	push   %esi
    cb73:	53                   	push   %ebx
    cb74:	e8 47 61 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cb79:	81 c3 87 e4 01 00    	add    $0x1e487,%ebx
    cb7f:	83 ec 10             	sub    $0x10,%esp
    cb82:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    cb88:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    cb8e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    cb94:	0f b6 00             	movzbl (%eax),%eax
    cb97:	89 45 10             	mov    %eax,0x10(%ebp)
    cb9a:	89 47 10             	mov    %eax,0x10(%edi)
    cb9d:	57                   	push   %edi
    cb9e:	55                   	push   %ebp
    cb9f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    cba3:	83 c0 01             	add    $0x1,%eax
    cba6:	50                   	push   %eax
    cba7:	e8 e4 79 ff ff       	call   4590 <modrm_r_rm>
    cbac:	8d 70 01             	lea    0x1(%eax),%esi
    cbaf:	89 2c 24             	mov    %ebp,(%esp)
    cbb2:	57                   	push   %edi
    cbb3:	89 f0                	mov    %esi,%eax
    cbb5:	0f b6 c0             	movzbl %al,%eax
    cbb8:	50                   	push   %eax
    cbb9:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    cbbf:	50                   	push   %eax
    cbc0:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    cbc6:	50                   	push   %eax
    cbc7:	e8 34 74 ff ff       	call   4000 <print_asm_2>
    cbcc:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    cbd2:	83 c4 20             	add    $0x20,%esp
    cbd5:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    cbd9:	0f b6 52 25          	movzbl 0x25(%edx),%edx
    cbdd:	c0 ea 03             	shr    $0x3,%dl
    cbe0:	c0 e8 07             	shr    $0x7,%al
    cbe3:	83 e2 01             	and    $0x1,%edx
    cbe6:	38 d0                	cmp    %dl,%al
    cbe8:	74 05                	je     cbef <cmovl_rm2r_v+0x7f>
    cbea:	e8 01 fc ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    cbef:	83 c4 0c             	add    $0xc,%esp
    cbf2:	89 f0                	mov    %esi,%eax
    cbf4:	5b                   	pop    %ebx
    cbf5:	5e                   	pop    %esi
    cbf6:	5f                   	pop    %edi
    cbf7:	5d                   	pop    %ebp
    cbf8:	c3                   	ret    
    cbf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000cc00 <cmovle_rm2r_v>:
    cc00:	55                   	push   %ebp
    cc01:	57                   	push   %edi
    cc02:	56                   	push   %esi
    cc03:	53                   	push   %ebx
    cc04:	e8 b7 60 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cc09:	81 c3 f7 e3 01 00    	add    $0x1e3f7,%ebx
    cc0f:	83 ec 10             	sub    $0x10,%esp
    cc12:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    cc18:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    cc1e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    cc24:	0f b6 00             	movzbl (%eax),%eax
    cc27:	89 45 10             	mov    %eax,0x10(%ebp)
    cc2a:	89 47 10             	mov    %eax,0x10(%edi)
    cc2d:	57                   	push   %edi
    cc2e:	55                   	push   %ebp
    cc2f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    cc33:	83 c0 01             	add    $0x1,%eax
    cc36:	50                   	push   %eax
    cc37:	e8 54 79 ff ff       	call   4590 <modrm_r_rm>
    cc3c:	8d 70 01             	lea    0x1(%eax),%esi
    cc3f:	89 2c 24             	mov    %ebp,(%esp)
    cc42:	57                   	push   %edi
    cc43:	89 f0                	mov    %esi,%eax
    cc45:	0f b6 c0             	movzbl %al,%eax
    cc48:	50                   	push   %eax
    cc49:	8d 83 9e 15 ff ff    	lea    -0xea62(%ebx),%eax
    cc4f:	50                   	push   %eax
    cc50:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    cc56:	50                   	push   %eax
    cc57:	e8 a4 73 ff ff       	call   4000 <print_asm_2>
    cc5c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    cc62:	83 c4 20             	add    $0x20,%esp
    cc65:	0f b6 48 24          	movzbl 0x24(%eax),%ecx
    cc69:	0f b6 50 25          	movzbl 0x25(%eax),%edx
    cc6d:	89 cb                	mov    %ecx,%ebx
    cc6f:	c0 ea 03             	shr    $0x3,%dl
    cc72:	c0 eb 07             	shr    $0x7,%bl
    cc75:	83 e2 01             	and    $0x1,%edx
    cc78:	38 d3                	cmp    %dl,%bl
    cc7a:	74 05                	je     cc81 <cmovle_rm2r_v+0x81>
    cc7c:	83 e1 40             	and    $0x40,%ecx
    cc7f:	75 0f                	jne    cc90 <cmovle_rm2r_v+0x90>
    cc81:	83 c4 0c             	add    $0xc,%esp
    cc84:	89 f0                	mov    %esi,%eax
    cc86:	5b                   	pop    %ebx
    cc87:	5e                   	pop    %esi
    cc88:	5f                   	pop    %edi
    cc89:	5d                   	pop    %ebp
    cc8a:	c3                   	ret    
    cc8b:	90                   	nop
    cc8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cc90:	e8 5b fb ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    cc95:	83 c4 0c             	add    $0xc,%esp
    cc98:	89 f0                	mov    %esi,%eax
    cc9a:	5b                   	pop    %ebx
    cc9b:	5e                   	pop    %esi
    cc9c:	5f                   	pop    %edi
    cc9d:	5d                   	pop    %ebp
    cc9e:	c3                   	ret    
    cc9f:	90                   	nop

0000cca0 <cmovne_rm2r_v>:
    cca0:	55                   	push   %ebp
    cca1:	57                   	push   %edi
    cca2:	56                   	push   %esi
    cca3:	53                   	push   %ebx
    cca4:	e8 17 60 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cca9:	81 c3 57 e3 01 00    	add    $0x1e357,%ebx
    ccaf:	83 ec 10             	sub    $0x10,%esp
    ccb2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    ccb8:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    ccbe:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    ccc4:	0f b6 00             	movzbl (%eax),%eax
    ccc7:	89 45 10             	mov    %eax,0x10(%ebp)
    ccca:	89 47 10             	mov    %eax,0x10(%edi)
    cccd:	57                   	push   %edi
    ccce:	55                   	push   %ebp
    cccf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    ccd3:	83 c0 01             	add    $0x1,%eax
    ccd6:	50                   	push   %eax
    ccd7:	e8 b4 78 ff ff       	call   4590 <modrm_r_rm>
    ccdc:	8d 70 01             	lea    0x1(%eax),%esi
    ccdf:	89 2c 24             	mov    %ebp,(%esp)
    cce2:	57                   	push   %edi
    cce3:	89 f0                	mov    %esi,%eax
    cce5:	0f b6 c0             	movzbl %al,%eax
    cce8:	50                   	push   %eax
    cce9:	8d 83 61 13 ff ff    	lea    -0xec9f(%ebx),%eax
    ccef:	50                   	push   %eax
    ccf0:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    ccf6:	50                   	push   %eax
    ccf7:	e8 04 73 ff ff       	call   4000 <print_asm_2>
    ccfc:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    cd02:	83 c4 20             	add    $0x20,%esp
    cd05:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    cd09:	75 05                	jne    cd10 <cmovne_rm2r_v+0x70>
    cd0b:	e8 e0 fa ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    cd10:	83 c4 0c             	add    $0xc,%esp
    cd13:	89 f0                	mov    %esi,%eax
    cd15:	5b                   	pop    %ebx
    cd16:	5e                   	pop    %esi
    cd17:	5f                   	pop    %edi
    cd18:	5d                   	pop    %ebp
    cd19:	c3                   	ret    
    cd1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000cd20 <cmovno_rm2r_v>:
    cd20:	55                   	push   %ebp
    cd21:	57                   	push   %edi
    cd22:	56                   	push   %esi
    cd23:	53                   	push   %ebx
    cd24:	e8 97 5f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cd29:	81 c3 d7 e2 01 00    	add    $0x1e2d7,%ebx
    cd2f:	83 ec 10             	sub    $0x10,%esp
    cd32:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    cd38:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    cd3e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    cd44:	0f b6 00             	movzbl (%eax),%eax
    cd47:	89 45 10             	mov    %eax,0x10(%ebp)
    cd4a:	89 47 10             	mov    %eax,0x10(%edi)
    cd4d:	57                   	push   %edi
    cd4e:	55                   	push   %ebp
    cd4f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    cd53:	83 c0 01             	add    $0x1,%eax
    cd56:	50                   	push   %eax
    cd57:	e8 34 78 ff ff       	call   4590 <modrm_r_rm>
    cd5c:	8d 70 01             	lea    0x1(%eax),%esi
    cd5f:	89 2c 24             	mov    %ebp,(%esp)
    cd62:	57                   	push   %edi
    cd63:	89 f0                	mov    %esi,%eax
    cd65:	0f b6 c0             	movzbl %al,%eax
    cd68:	50                   	push   %eax
    cd69:	8d 83 d1 0a ff ff    	lea    -0xf52f(%ebx),%eax
    cd6f:	50                   	push   %eax
    cd70:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    cd76:	50                   	push   %eax
    cd77:	e8 84 72 ff ff       	call   4000 <print_asm_2>
    cd7c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    cd82:	83 c4 20             	add    $0x20,%esp
    cd85:	f6 40 25 08          	testb  $0x8,0x25(%eax)
    cd89:	74 05                	je     cd90 <cmovno_rm2r_v+0x70>
    cd8b:	e8 60 fa ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    cd90:	83 c4 0c             	add    $0xc,%esp
    cd93:	89 f0                	mov    %esi,%eax
    cd95:	5b                   	pop    %ebx
    cd96:	5e                   	pop    %esi
    cd97:	5f                   	pop    %edi
    cd98:	5d                   	pop    %ebp
    cd99:	c3                   	ret    
    cd9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000cda0 <cmovnp_rm2r_v>:
    cda0:	55                   	push   %ebp
    cda1:	57                   	push   %edi
    cda2:	56                   	push   %esi
    cda3:	53                   	push   %ebx
    cda4:	e8 17 5f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cda9:	81 c3 57 e2 01 00    	add    $0x1e257,%ebx
    cdaf:	83 ec 10             	sub    $0x10,%esp
    cdb2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    cdb8:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    cdbe:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    cdc4:	0f b6 00             	movzbl (%eax),%eax
    cdc7:	89 45 10             	mov    %eax,0x10(%ebp)
    cdca:	89 47 10             	mov    %eax,0x10(%edi)
    cdcd:	57                   	push   %edi
    cdce:	55                   	push   %ebp
    cdcf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    cdd3:	83 c0 01             	add    $0x1,%eax
    cdd6:	50                   	push   %eax
    cdd7:	e8 b4 77 ff ff       	call   4590 <modrm_r_rm>
    cddc:	8d 70 01             	lea    0x1(%eax),%esi
    cddf:	89 2c 24             	mov    %ebp,(%esp)
    cde2:	57                   	push   %edi
    cde3:	89 f0                	mov    %esi,%eax
    cde5:	0f b6 c0             	movzbl %al,%eax
    cde8:	50                   	push   %eax
    cde9:	8d 83 d4 0a ff ff    	lea    -0xf52c(%ebx),%eax
    cdef:	50                   	push   %eax
    cdf0:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    cdf6:	50                   	push   %eax
    cdf7:	e8 04 72 ff ff       	call   4000 <print_asm_2>
    cdfc:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    ce02:	83 c4 20             	add    $0x20,%esp
    ce05:	f6 40 24 04          	testb  $0x4,0x24(%eax)
    ce09:	75 05                	jne    ce10 <cmovnp_rm2r_v+0x70>
    ce0b:	e8 e0 f9 ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    ce10:	83 c4 0c             	add    $0xc,%esp
    ce13:	89 f0                	mov    %esi,%eax
    ce15:	5b                   	pop    %ebx
    ce16:	5e                   	pop    %esi
    ce17:	5f                   	pop    %edi
    ce18:	5d                   	pop    %ebp
    ce19:	c3                   	ret    
    ce1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000ce20 <cmovns_rm2r_v>:
    ce20:	55                   	push   %ebp
    ce21:	57                   	push   %edi
    ce22:	56                   	push   %esi
    ce23:	53                   	push   %ebx
    ce24:	e8 97 5e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ce29:	81 c3 d7 e1 01 00    	add    $0x1e1d7,%ebx
    ce2f:	83 ec 10             	sub    $0x10,%esp
    ce32:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    ce38:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    ce3e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    ce44:	0f b6 00             	movzbl (%eax),%eax
    ce47:	89 45 10             	mov    %eax,0x10(%ebp)
    ce4a:	89 47 10             	mov    %eax,0x10(%edi)
    ce4d:	57                   	push   %edi
    ce4e:	55                   	push   %ebp
    ce4f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    ce53:	83 c0 01             	add    $0x1,%eax
    ce56:	50                   	push   %eax
    ce57:	e8 34 77 ff ff       	call   4590 <modrm_r_rm>
    ce5c:	8d 70 01             	lea    0x1(%eax),%esi
    ce5f:	89 2c 24             	mov    %ebp,(%esp)
    ce62:	57                   	push   %edi
    ce63:	89 f0                	mov    %esi,%eax
    ce65:	0f b6 c0             	movzbl %al,%eax
    ce68:	50                   	push   %eax
    ce69:	8d 83 d7 0a ff ff    	lea    -0xf529(%ebx),%eax
    ce6f:	50                   	push   %eax
    ce70:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    ce76:	50                   	push   %eax
    ce77:	e8 84 71 ff ff       	call   4000 <print_asm_2>
    ce7c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    ce82:	83 c4 20             	add    $0x20,%esp
    ce85:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
    ce89:	78 05                	js     ce90 <cmovns_rm2r_v+0x70>
    ce8b:	e8 60 f9 ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    ce90:	83 c4 0c             	add    $0xc,%esp
    ce93:	89 f0                	mov    %esi,%eax
    ce95:	5b                   	pop    %ebx
    ce96:	5e                   	pop    %esi
    ce97:	5f                   	pop    %edi
    ce98:	5d                   	pop    %ebp
    ce99:	c3                   	ret    
    ce9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000cea0 <cmovo_rm2r_v>:
    cea0:	55                   	push   %ebp
    cea1:	57                   	push   %edi
    cea2:	56                   	push   %esi
    cea3:	53                   	push   %ebx
    cea4:	e8 17 5e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cea9:	81 c3 57 e1 01 00    	add    $0x1e157,%ebx
    ceaf:	83 ec 10             	sub    $0x10,%esp
    ceb2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    ceb8:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    cebe:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    cec4:	0f b6 00             	movzbl (%eax),%eax
    cec7:	89 45 10             	mov    %eax,0x10(%ebp)
    ceca:	89 47 10             	mov    %eax,0x10(%edi)
    cecd:	57                   	push   %edi
    cece:	55                   	push   %ebp
    cecf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    ced3:	83 c0 01             	add    $0x1,%eax
    ced6:	50                   	push   %eax
    ced7:	e8 b4 76 ff ff       	call   4590 <modrm_r_rm>
    cedc:	8d 70 01             	lea    0x1(%eax),%esi
    cedf:	89 2c 24             	mov    %ebp,(%esp)
    cee2:	57                   	push   %edi
    cee3:	89 f0                	mov    %esi,%eax
    cee5:	0f b6 c0             	movzbl %al,%eax
    cee8:	50                   	push   %eax
    cee9:	8d 83 89 15 ff ff    	lea    -0xea77(%ebx),%eax
    ceef:	50                   	push   %eax
    cef0:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    cef6:	50                   	push   %eax
    cef7:	e8 04 71 ff ff       	call   4000 <print_asm_2>
    cefc:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    cf02:	83 c4 20             	add    $0x20,%esp
    cf05:	f6 40 25 08          	testb  $0x8,0x25(%eax)
    cf09:	74 05                	je     cf10 <cmovo_rm2r_v+0x70>
    cf0b:	e8 e0 f8 ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    cf10:	83 c4 0c             	add    $0xc,%esp
    cf13:	89 f0                	mov    %esi,%eax
    cf15:	5b                   	pop    %ebx
    cf16:	5e                   	pop    %esi
    cf17:	5f                   	pop    %edi
    cf18:	5d                   	pop    %ebp
    cf19:	c3                   	ret    
    cf1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000cf20 <cmovp_rm2r_v>:
    cf20:	55                   	push   %ebp
    cf21:	57                   	push   %edi
    cf22:	56                   	push   %esi
    cf23:	53                   	push   %ebx
    cf24:	e8 97 5d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cf29:	81 c3 d7 e0 01 00    	add    $0x1e0d7,%ebx
    cf2f:	83 ec 10             	sub    $0x10,%esp
    cf32:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    cf38:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    cf3e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    cf44:	0f b6 00             	movzbl (%eax),%eax
    cf47:	89 45 10             	mov    %eax,0x10(%ebp)
    cf4a:	89 47 10             	mov    %eax,0x10(%edi)
    cf4d:	57                   	push   %edi
    cf4e:	55                   	push   %ebp
    cf4f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    cf53:	83 c0 01             	add    $0x1,%eax
    cf56:	50                   	push   %eax
    cf57:	e8 34 76 ff ff       	call   4590 <modrm_r_rm>
    cf5c:	8d 70 01             	lea    0x1(%eax),%esi
    cf5f:	89 2c 24             	mov    %ebp,(%esp)
    cf62:	57                   	push   %edi
    cf63:	89 f0                	mov    %esi,%eax
    cf65:	0f b6 c0             	movzbl %al,%eax
    cf68:	50                   	push   %eax
    cf69:	8d 83 2d 01 ff ff    	lea    -0xfed3(%ebx),%eax
    cf6f:	50                   	push   %eax
    cf70:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    cf76:	50                   	push   %eax
    cf77:	e8 84 70 ff ff       	call   4000 <print_asm_2>
    cf7c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    cf82:	83 c4 20             	add    $0x20,%esp
    cf85:	f6 40 24 04          	testb  $0x4,0x24(%eax)
    cf89:	74 05                	je     cf90 <cmovp_rm2r_v+0x70>
    cf8b:	e8 60 f8 ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    cf90:	83 c4 0c             	add    $0xc,%esp
    cf93:	89 f0                	mov    %esi,%eax
    cf95:	5b                   	pop    %ebx
    cf96:	5e                   	pop    %esi
    cf97:	5f                   	pop    %edi
    cf98:	5d                   	pop    %ebp
    cf99:	c3                   	ret    
    cf9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000cfa0 <cmovs_rm2r_v>:
    cfa0:	55                   	push   %ebp
    cfa1:	57                   	push   %edi
    cfa2:	56                   	push   %esi
    cfa3:	53                   	push   %ebx
    cfa4:	e8 17 5d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    cfa9:	81 c3 57 e0 01 00    	add    $0x1e057,%ebx
    cfaf:	83 ec 10             	sub    $0x10,%esp
    cfb2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    cfb8:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    cfbe:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    cfc4:	0f b6 00             	movzbl (%eax),%eax
    cfc7:	89 45 10             	mov    %eax,0x10(%ebp)
    cfca:	89 47 10             	mov    %eax,0x10(%edi)
    cfcd:	57                   	push   %edi
    cfce:	55                   	push   %ebp
    cfcf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    cfd3:	83 c0 01             	add    $0x1,%eax
    cfd6:	50                   	push   %eax
    cfd7:	e8 b4 75 ff ff       	call   4590 <modrm_r_rm>
    cfdc:	8d 70 01             	lea    0x1(%eax),%esi
    cfdf:	89 2c 24             	mov    %ebp,(%esp)
    cfe2:	57                   	push   %edi
    cfe3:	89 f0                	mov    %esi,%eax
    cfe5:	0f b6 c0             	movzbl %al,%eax
    cfe8:	50                   	push   %eax
    cfe9:	8d 83 74 fe fe ff    	lea    -0x1018c(%ebx),%eax
    cfef:	50                   	push   %eax
    cff0:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    cff6:	50                   	push   %eax
    cff7:	e8 04 70 ff ff       	call   4000 <print_asm_2>
    cffc:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    d002:	83 c4 20             	add    $0x20,%esp
    d005:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
    d009:	78 0d                	js     d018 <cmovs_rm2r_v+0x78>
    d00b:	83 c4 0c             	add    $0xc,%esp
    d00e:	89 f0                	mov    %esi,%eax
    d010:	5b                   	pop    %ebx
    d011:	5e                   	pop    %esi
    d012:	5f                   	pop    %edi
    d013:	5d                   	pop    %ebp
    d014:	c3                   	ret    
    d015:	8d 76 00             	lea    0x0(%esi),%esi
    d018:	e8 d3 f7 ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    d01d:	83 c4 0c             	add    $0xc,%esp
    d020:	89 f0                	mov    %esi,%eax
    d022:	5b                   	pop    %ebx
    d023:	5e                   	pop    %esi
    d024:	5f                   	pop    %edi
    d025:	5d                   	pop    %ebp
    d026:	c3                   	ret    
    d027:	89 f6                	mov    %esi,%esi
    d029:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d030 <cmove_rm2r_v>:
    d030:	55                   	push   %ebp
    d031:	57                   	push   %edi
    d032:	56                   	push   %esi
    d033:	53                   	push   %ebx
    d034:	e8 87 5c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d039:	81 c3 c7 df 01 00    	add    $0x1dfc7,%ebx
    d03f:	83 ec 10             	sub    $0x10,%esp
    d042:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d048:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
    d04e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
    d054:	0f b6 00             	movzbl (%eax),%eax
    d057:	89 45 10             	mov    %eax,0x10(%ebp)
    d05a:	89 47 10             	mov    %eax,0x10(%edi)
    d05d:	57                   	push   %edi
    d05e:	55                   	push   %ebp
    d05f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    d063:	83 c0 01             	add    $0x1,%eax
    d066:	50                   	push   %eax
    d067:	e8 24 75 ff ff       	call   4590 <modrm_r_rm>
    d06c:	8d 70 01             	lea    0x1(%eax),%esi
    d06f:	89 2c 24             	mov    %ebp,(%esp)
    d072:	57                   	push   %edi
    d073:	89 f0                	mov    %esi,%eax
    d075:	0f b6 c0             	movzbl %al,%eax
    d078:	50                   	push   %eax
    d079:	8d 83 cf 0a ff ff    	lea    -0xf531(%ebx),%eax
    d07f:	50                   	push   %eax
    d080:	8d 83 c9 0a ff ff    	lea    -0xf537(%ebx),%eax
    d086:	50                   	push   %eax
    d087:	e8 74 6f ff ff       	call   4000 <print_asm_2>
    d08c:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    d092:	83 c4 20             	add    $0x20,%esp
    d095:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    d099:	74 05                	je     d0a0 <cmove_rm2r_v+0x70>
    d09b:	e8 50 f7 ff ff       	call   c7f0 <instr_execute_2op_cc_pass>
    d0a0:	83 c4 0c             	add    $0xc,%esp
    d0a3:	89 f0                	mov    %esi,%eax
    d0a5:	5b                   	pop    %ebx
    d0a6:	5e                   	pop    %esi
    d0a7:	5f                   	pop    %edi
    d0a8:	5d                   	pop    %ebp
    d0a9:	c3                   	ret    
    d0aa:	66 90                	xchg   %ax,%ax
    d0ac:	66 90                	xchg   %ax,%ax
    d0ae:	66 90                	xchg   %ax,%ax

0000d0b0 <movs_v>:
    d0b0:	57                   	push   %edi
    d0b1:	56                   	push   %esi
    d0b2:	53                   	push   %ebx
    d0b3:	e8 08 5c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d0b8:	81 c3 48 df 01 00    	add    $0x1df48,%ebx
    d0be:	83 ec 5c             	sub    $0x5c,%esp
    d0c1:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    d0c7:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
    d0cd:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
    d0d4:	00 
    d0d5:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
    d0dc:	00 
    d0dd:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
    d0e2:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
    d0e7:	0f b6 07             	movzbl (%edi),%eax
    d0ea:	89 44 24 48          	mov    %eax,0x48(%esp)
    d0ee:	89 44 24 24          	mov    %eax,0x24(%esp)
    d0f2:	8b 46 18             	mov    0x18(%esi),%eax
    d0f5:	89 44 24 18          	mov    %eax,0x18(%esp)
    d0f9:	8b 46 1c             	mov    0x1c(%esi),%eax
    d0fc:	89 44 24 3c          	mov    %eax,0x3c(%esp)
    d100:	8d 44 24 14          	lea    0x14(%esp),%eax
    d104:	50                   	push   %eax
    d105:	e8 96 75 ff ff       	call   46a0 <operand_read>
    d10a:	8b 44 24 24          	mov    0x24(%esp),%eax
    d10e:	89 44 24 48          	mov    %eax,0x48(%esp)
    d112:	58                   	pop    %eax
    d113:	8d 44 24 38          	lea    0x38(%esp),%eax
    d117:	50                   	push   %eax
    d118:	e8 13 77 ff ff       	call   4830 <operand_write>
    d11d:	83 c4 10             	add    $0x10,%esp
    d120:	f6 46 25 04          	testb  $0x4,0x25(%esi)
    d124:	74 3a                	je     d160 <movs_v+0xb0>
    d126:	0f b6 07             	movzbl (%edi),%eax
    d129:	c1 f8 03             	sar    $0x3,%eax
    d12c:	f7 d8                	neg    %eax
    d12e:	01 46 18             	add    %eax,0x18(%esi)
    d131:	01 46 1c             	add    %eax,0x1c(%esi)
    d134:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    d13a:	83 ec 04             	sub    $0x4,%esp
    d13d:	6a 01                	push   $0x1
    d13f:	50                   	push   %eax
    d140:	8d 83 da 0a ff ff    	lea    -0xf526(%ebx),%eax
    d146:	50                   	push   %eax
    d147:	e8 e4 6c ff ff       	call   3e30 <print_asm_0>
    d14c:	83 c4 60             	add    $0x60,%esp
    d14f:	b8 01 00 00 00       	mov    $0x1,%eax
    d154:	5b                   	pop    %ebx
    d155:	5e                   	pop    %esi
    d156:	5f                   	pop    %edi
    d157:	c3                   	ret    
    d158:	90                   	nop
    d159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d160:	0f b6 07             	movzbl (%edi),%eax
    d163:	c0 e8 03             	shr    $0x3,%al
    d166:	0f b6 c0             	movzbl %al,%eax
    d169:	eb c3                	jmp    d12e <movs_v+0x7e>
    d16b:	90                   	nop
    d16c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000d170 <movs_b>:
    d170:	56                   	push   %esi
    d171:	53                   	push   %ebx
    d172:	e8 49 5b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d177:	81 c3 89 de 01 00    	add    $0x1de89,%ebx
    d17d:	83 ec 60             	sub    $0x60,%esp
    d180:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
    d186:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
    d18d:	00 
    d18e:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
    d195:	00 
    d196:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
    d19b:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
    d1a0:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
    d1a7:	00 
    d1a8:	8b 46 18             	mov    0x18(%esi),%eax
    d1ab:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
    d1b2:	00 
    d1b3:	89 44 24 18          	mov    %eax,0x18(%esp)
    d1b7:	8b 46 1c             	mov    0x1c(%esi),%eax
    d1ba:	89 44 24 3c          	mov    %eax,0x3c(%esp)
    d1be:	8d 44 24 14          	lea    0x14(%esp),%eax
    d1c2:	50                   	push   %eax
    d1c3:	e8 d8 74 ff ff       	call   46a0 <operand_read>
    d1c8:	8b 44 24 24          	mov    0x24(%esp),%eax
    d1cc:	89 44 24 48          	mov    %eax,0x48(%esp)
    d1d0:	58                   	pop    %eax
    d1d1:	8d 44 24 38          	lea    0x38(%esp),%eax
    d1d5:	50                   	push   %eax
    d1d6:	e8 55 76 ff ff       	call   4830 <operand_write>
    d1db:	83 c4 0c             	add    $0xc,%esp
    d1de:	31 c0                	xor    %eax,%eax
    d1e0:	f6 46 25 04          	testb  $0x4,0x25(%esi)
    d1e4:	6a 01                	push   $0x1
    d1e6:	0f 95 c0             	setne  %al
    d1e9:	f7 d8                	neg    %eax
    d1eb:	83 c8 01             	or     $0x1,%eax
    d1ee:	01 46 18             	add    %eax,0x18(%esi)
    d1f1:	01 46 1c             	add    %eax,0x1c(%esi)
    d1f4:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    d1fa:	50                   	push   %eax
    d1fb:	8d 83 da 0a ff ff    	lea    -0xf526(%ebx),%eax
    d201:	50                   	push   %eax
    d202:	e8 29 6c ff ff       	call   3e30 <print_asm_0>
    d207:	83 c4 64             	add    $0x64,%esp
    d20a:	b8 01 00 00 00       	mov    $0x1,%eax
    d20f:	5b                   	pop    %ebx
    d210:	5e                   	pop    %esi
    d211:	c3                   	ret    
    d212:	66 90                	xchg   %ax,%ax
    d214:	66 90                	xchg   %ax,%ax
    d216:	66 90                	xchg   %ax,%ax
    d218:	66 90                	xchg   %ax,%ax
    d21a:	66 90                	xchg   %ax,%ax
    d21c:	66 90                	xchg   %ax,%ax
    d21e:	66 90                	xchg   %ax,%ax

0000d220 <mul_rm2a_b>:
    d220:	55                   	push   %ebp
    d221:	57                   	push   %edi
    d222:	56                   	push   %esi
    d223:	53                   	push   %ebx
    d224:	e8 97 5a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d229:	81 c3 d7 dd 01 00    	add    $0x1ddd7,%ebx
    d22f:	81 ec 94 00 00 00    	sub    $0x94,%esp
    d235:	8d 7c 24 40          	lea    0x40(%esp),%edi
    d239:	c7 44 24 2c 08 00 00 	movl   $0x8,0x2c(%esp)
    d240:	00 
    d241:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
    d248:	00 
    d249:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
    d250:	00 
    d251:	c7 44 24 50 08 00 00 	movl   $0x8,0x50(%esp)
    d258:	00 
    d259:	57                   	push   %edi
    d25a:	8b 84 24 ac 00 00 00 	mov    0xac(%esp),%eax
    d261:	83 c0 01             	add    $0x1,%eax
    d264:	50                   	push   %eax
    d265:	e8 f6 73 ff ff       	call   4660 <modrm_rm>
    d26a:	8d 70 01             	lea    0x1(%eax),%esi
    d26d:	58                   	pop    %eax
    d26e:	8d 6c 24 20          	lea    0x20(%esp),%ebp
    d272:	55                   	push   %ebp
    d273:	e8 28 74 ff ff       	call   46a0 <operand_read>
    d278:	89 3c 24             	mov    %edi,(%esp)
    d27b:	e8 20 74 ff ff       	call   46a0 <operand_read>
    d280:	83 c4 0c             	add    $0xc,%esp
    d283:	6a 08                	push   $0x8
    d285:	ff 74 24 28          	pushl  0x28(%esp)
    d289:	ff 74 24 50          	pushl  0x50(%esp)
    d28d:	e8 ee e1 ff ff       	call   b480 <alu_mul>
    d292:	c7 44 24 7c 10 00 00 	movl   $0x10,0x7c(%esp)
    d299:	00 
    d29a:	89 44 24 78          	mov    %eax,0x78(%esp)
    d29e:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    d2a2:	c7 44 24 6c 01 00 00 	movl   $0x1,0x6c(%esp)
    d2a9:	00 
    d2aa:	c7 44 24 70 00 00 00 	movl   $0x0,0x70(%esp)
    d2b1:	00 
    d2b2:	5a                   	pop    %edx
    d2b3:	8d 54 24 68          	lea    0x68(%esp),%edx
    d2b7:	52                   	push   %edx
    d2b8:	e8 73 75 ff ff       	call   4830 <operand_write>
    d2bd:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    d2c1:	83 c4 10             	add    $0x10,%esp
    d2c4:	0f b6 c4             	movzbl %ah,%eax
    d2c7:	85 c0                	test   %eax,%eax
    d2c9:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    d2cf:	74 37                	je     d308 <mul_rm2a_b+0xe8>
    d2d1:	80 48 25 08          	orb    $0x8,0x25(%eax)
    d2d5:	80 48 24 01          	orb    $0x1,0x24(%eax)
    d2d9:	89 f0                	mov    %esi,%eax
    d2db:	83 ec 0c             	sub    $0xc,%esp
    d2de:	0f b6 c0             	movzbl %al,%eax
    d2e1:	55                   	push   %ebp
    d2e2:	57                   	push   %edi
    d2e3:	50                   	push   %eax
    d2e4:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    d2ea:	50                   	push   %eax
    d2eb:	8d 83 06 13 ff ff    	lea    -0xecfa(%ebx),%eax
    d2f1:	50                   	push   %eax
    d2f2:	e8 09 6d ff ff       	call   4000 <print_asm_2>
    d2f7:	81 c4 ac 00 00 00    	add    $0xac,%esp
    d2fd:	89 f0                	mov    %esi,%eax
    d2ff:	5b                   	pop    %ebx
    d300:	5e                   	pop    %esi
    d301:	5f                   	pop    %edi
    d302:	5d                   	pop    %ebp
    d303:	c3                   	ret    
    d304:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d308:	80 60 25 f7          	andb   $0xf7,0x25(%eax)
    d30c:	80 60 24 fe          	andb   $0xfe,0x24(%eax)
    d310:	eb c7                	jmp    d2d9 <mul_rm2a_b+0xb9>
    d312:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d319:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d320 <mul_rm2a_v>:
    d320:	55                   	push   %ebp
    d321:	57                   	push   %edi
    d322:	56                   	push   %esi
    d323:	53                   	push   %ebx
    d324:	e8 97 59 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d329:	81 c3 d7 dc 01 00    	add    $0x1dcd7,%ebx
    d32f:	81 ec b4 00 00 00    	sub    $0xb4,%esp
    d335:	8d ab 77 13 00 00    	lea    0x1377(%ebx),%ebp
    d33b:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
    d33f:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
    d346:	00 
    d347:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
    d34e:	00 
    d34f:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    d353:	89 44 24 28          	mov    %eax,0x28(%esp)
    d357:	89 44 24 4c          	mov    %eax,0x4c(%esp)
    d35b:	57                   	push   %edi
    d35c:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
    d363:	83 c0 01             	add    $0x1,%eax
    d366:	50                   	push   %eax
    d367:	e8 f4 72 ff ff       	call   4660 <modrm_rm>
    d36c:	83 c0 01             	add    $0x1,%eax
    d36f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    d373:	58                   	pop    %eax
    d374:	8d 44 24 1c          	lea    0x1c(%esp),%eax
    d378:	50                   	push   %eax
    d379:	e8 22 73 ff ff       	call   46a0 <operand_read>
    d37e:	89 3c 24             	mov    %edi,(%esp)
    d381:	e8 1a 73 ff ff       	call   46a0 <operand_read>
    d386:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
    d38d:	00 
    d38e:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
    d395:	01 00 00 00 
    d399:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
    d3a0:	00 
    d3a1:	c7 84 24 90 00 00 00 	movl   $0x2,0x90(%esp)
    d3a8:	02 00 00 00 
    d3ac:	83 c4 10             	add    $0x10,%esp
    d3af:	80 7d 00 10          	cmpb   $0x10,0x0(%ebp)
    d3b3:	0f 84 b7 00 00 00    	je     d470 <mul_rm2a_v+0x150>
    d3b9:	83 ec 04             	sub    $0x4,%esp
    d3bc:	6a 20                	push   $0x20
    d3be:	ff 74 24 24          	pushl  0x24(%esp)
    d3c2:	ff 74 24 4c          	pushl  0x4c(%esp)
    d3c6:	e8 b5 e0 ff ff       	call   b480 <alu_mul>
    d3cb:	c7 44 24 78 20 00 00 	movl   $0x20,0x78(%esp)
    d3d2:	00 
    d3d3:	89 94 24 98 00 00 00 	mov    %edx,0x98(%esp)
    d3da:	c7 84 24 9c 00 00 00 	movl   $0x20,0x9c(%esp)
    d3e1:	20 00 00 00 
    d3e5:	89 44 24 74          	mov    %eax,0x74(%esp)
    d3e9:	59                   	pop    %ecx
    d3ea:	5e                   	pop    %esi
    d3eb:	8d 74 24 60          	lea    0x60(%esp),%esi
    d3ef:	56                   	push   %esi
    d3f0:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
    d3f7:	55                   	push   %ebp
    d3f8:	57                   	push   %edi
    d3f9:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
    d3fe:	52                   	push   %edx
    d3ff:	8d 93 f9 00 ff ff    	lea    -0xff07(%ebx),%edx
    d405:	52                   	push   %edx
    d406:	8d 93 06 13 ff ff    	lea    -0xecfa(%ebx),%edx
    d40c:	52                   	push   %edx
    d40d:	e8 0e 6d ff ff       	call   4120 <print_asm_3>
    d412:	83 c4 20             	add    $0x20,%esp
    d415:	83 ec 0c             	sub    $0xc,%esp
    d418:	56                   	push   %esi
    d419:	e8 12 74 ff ff       	call   4830 <operand_write>
    d41e:	89 2c 24             	mov    %ebp,(%esp)
    d421:	e8 0a 74 ff ff       	call   4830 <operand_write>
    d426:	83 c4 10             	add    $0x10,%esp
    d429:	8b 94 24 88 00 00 00 	mov    0x88(%esp),%edx
    d430:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    d436:	85 d2                	test   %edx,%edx
    d438:	74 1e                	je     d458 <mul_rm2a_v+0x138>
    d43a:	80 48 25 08          	orb    $0x8,0x25(%eax)
    d43e:	80 48 24 01          	orb    $0x1,0x24(%eax)
    d442:	8b 44 24 0c          	mov    0xc(%esp),%eax
    d446:	81 c4 ac 00 00 00    	add    $0xac,%esp
    d44c:	5b                   	pop    %ebx
    d44d:	5e                   	pop    %esi
    d44e:	5f                   	pop    %edi
    d44f:	5d                   	pop    %ebp
    d450:	c3                   	ret    
    d451:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d458:	80 60 25 f7          	andb   $0xf7,0x25(%eax)
    d45c:	80 60 24 fe          	andb   $0xfe,0x24(%eax)
    d460:	8b 44 24 0c          	mov    0xc(%esp),%eax
    d464:	81 c4 ac 00 00 00    	add    $0xac,%esp
    d46a:	5b                   	pop    %ebx
    d46b:	5e                   	pop    %esi
    d46c:	5f                   	pop    %edi
    d46d:	5d                   	pop    %ebp
    d46e:	c3                   	ret    
    d46f:	90                   	nop
    d470:	83 ec 04             	sub    $0x4,%esp
    d473:	6a 10                	push   $0x10
    d475:	ff 74 24 24          	pushl  0x24(%esp)
    d479:	ff 74 24 4c          	pushl  0x4c(%esp)
    d47d:	e8 fe df ff ff       	call   b480 <alu_mul>
    d482:	0f b7 d0             	movzwl %ax,%edx
    d485:	c1 e8 10             	shr    $0x10,%eax
    d488:	c7 44 24 78 10 00 00 	movl   $0x10,0x78(%esp)
    d48f:	00 
    d490:	89 54 24 74          	mov    %edx,0x74(%esp)
    d494:	c7 84 24 9c 00 00 00 	movl   $0x10,0x9c(%esp)
    d49b:	10 00 00 00 
    d49f:	89 84 24 98 00 00 00 	mov    %eax,0x98(%esp)
    d4a6:	5d                   	pop    %ebp
    d4a7:	58                   	pop    %eax
    d4a8:	8d 74 24 60          	lea    0x60(%esp),%esi
    d4ac:	56                   	push   %esi
    d4ad:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
    d4b4:	55                   	push   %ebp
    d4b5:	57                   	push   %edi
    d4b6:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
    d4bb:	52                   	push   %edx
    d4bc:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
    d4c2:	e9 3e ff ff ff       	jmp    d405 <mul_rm2a_v+0xe5>
    d4c7:	66 90                	xchg   %ax,%ax
    d4c9:	66 90                	xchg   %ax,%ax
    d4cb:	66 90                	xchg   %ax,%ax
    d4cd:	66 90                	xchg   %ax,%ax
    d4cf:	90                   	nop

0000d4d0 <lgdt_v>:
    d4d0:	55                   	push   %ebp
    d4d1:	57                   	push   %edi
    d4d2:	56                   	push   %esi
    d4d3:	53                   	push   %ebx
    d4d4:	e8 e7 57 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d4d9:	81 c3 27 db 01 00    	add    $0x1db27,%ebx
    d4df:	83 ec 74             	sub    $0x74,%esp
    d4e2:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
    d4e9:	8d 7c 24 20          	lea    0x20(%esp),%edi
    d4ed:	c7 44 24 30 10 00 00 	movl   $0x10,0x30(%esp)
    d4f4:	00 
    d4f5:	c7 44 24 54 20 00 00 	movl   $0x20,0x54(%esp)
    d4fc:	00 
    d4fd:	57                   	push   %edi
    d4fe:	8d 70 01             	lea    0x1(%eax),%esi
    d501:	56                   	push   %esi
    d502:	e8 59 71 ff ff       	call   4660 <modrm_rm>
    d507:	83 c0 01             	add    $0x1,%eax
    d50a:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    d50e:	58                   	pop    %eax
    d50f:	5a                   	pop    %edx
    d510:	8d 6c 24 44          	lea    0x44(%esp),%ebp
    d514:	55                   	push   %ebp
    d515:	56                   	push   %esi
    d516:	e8 45 71 ff ff       	call   4660 <modrm_rm>
    d51b:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    d51f:	89 3c 24             	mov    %edi,(%esp)
    d522:	83 c0 02             	add    $0x2,%eax
    d525:	89 44 24 50          	mov    %eax,0x50(%esp)
    d529:	e8 72 71 ff ff       	call   46a0 <operand_read>
    d52e:	89 2c 24             	mov    %ebp,(%esp)
    d531:	e8 6a 71 ff ff       	call   46a0 <operand_read>
    d536:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d53c:	83 c4 10             	add    $0x10,%esp
    d53f:	0f b6 00             	movzbl (%eax),%eax
    d542:	8d 50 f0             	lea    -0x10(%eax),%edx
    d545:	81 e2 ef 00 00 00    	and    $0xef,%edx
    d54b:	75 51                	jne    d59e <lgdt_v+0xce>
    d54d:	3c 10                	cmp    $0x10,%al
    d54f:	74 27                	je     d578 <lgdt_v+0xa8>
    d551:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    d557:	8b 54 24 48          	mov    0x48(%esp),%edx
    d55b:	89 50 2c             	mov    %edx,0x2c(%eax)
    d55e:	8b 54 24 24          	mov    0x24(%esp),%edx
    d562:	66 89 50 28          	mov    %dx,0x28(%eax)
    d566:	8b 44 24 0c          	mov    0xc(%esp),%eax
    d56a:	83 c4 6c             	add    $0x6c,%esp
    d56d:	5b                   	pop    %ebx
    d56e:	5e                   	pop    %esi
    d56f:	5f                   	pop    %edi
    d570:	5d                   	pop    %ebp
    d571:	c3                   	ret    
    d572:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d578:	8b 44 24 48          	mov    0x48(%esp),%eax
    d57c:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    d582:	25 ff ff ff 00       	and    $0xffffff,%eax
    d587:	89 42 2c             	mov    %eax,0x2c(%edx)
    d58a:	8b 44 24 24          	mov    0x24(%esp),%eax
    d58e:	66 89 42 28          	mov    %ax,0x28(%edx)
    d592:	8b 44 24 0c          	mov    0xc(%esp),%eax
    d596:	83 c4 6c             	add    $0x6c,%esp
    d599:	5b                   	pop    %ebx
    d59a:	5e                   	pop    %esi
    d59b:	5f                   	pop    %edi
    d59c:	5d                   	pop    %ebp
    d59d:	c3                   	ret    
    d59e:	8d 83 08 0b ff ff    	lea    -0xf4f8(%ebx),%eax
    d5a4:	50                   	push   %eax
    d5a5:	8d 83 f0 0a ff ff    	lea    -0xf510(%ebx),%eax
    d5ab:	6a 11                	push   $0x11
    d5ad:	50                   	push   %eax
    d5ae:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
    d5b4:	50                   	push   %eax
    d5b5:	e8 d6 52 ff ff       	call   2890 <__assert_fail@plt>
    d5ba:	66 90                	xchg   %ax,%ax
    d5bc:	66 90                	xchg   %ax,%ax
    d5be:	66 90                	xchg   %ax,%ax

0000d5c0 <popa_v>:
    d5c0:	55                   	push   %ebp
    d5c1:	57                   	push   %edi
    d5c2:	56                   	push   %esi
    d5c3:	53                   	push   %ebx
    d5c4:	e8 f7 56 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d5c9:	81 c3 37 da 01 00    	add    $0x1da37,%ebx
    d5cf:	81 ec 3c 01 00 00    	sub    $0x13c,%esp
    d5d5:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d5db:	8d 6c 24 10          	lea    0x10(%esp),%ebp
    d5df:	8d 94 24 30 01 00 00 	lea    0x130(%esp),%edx
    d5e6:	0f b6 30             	movzbl (%eax),%esi
    d5e9:	89 44 24 08          	mov    %eax,0x8(%esp)
    d5ed:	89 e8                	mov    %ebp,%eax
    d5ef:	89 f1                	mov    %esi,%ecx
    d5f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d5f8:	89 70 10             	mov    %esi,0x10(%eax)
    d5fb:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
    d601:	83 c0 24             	add    $0x24,%eax
    d604:	c6 40 e4 02          	movb   $0x2,-0x1c(%eax)
    d608:	39 d0                	cmp    %edx,%eax
    d60a:	75 ec                	jne    d5f8 <popa_v+0x38>
    d60c:	8d b4 24 0c 01 00 00 	lea    0x10c(%esp),%esi
    d613:	8d 44 24 ec          	lea    -0x14(%esp),%eax
    d617:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    d61b:	8d bb 60 1d 05 00    	lea    0x51d60(%ebx),%edi
    d621:	89 f5                	mov    %esi,%ebp
    d623:	89 c6                	mov    %eax,%esi
    d625:	eb 10                	jmp    d637 <popa_v+0x77>
    d627:	89 f6                	mov    %esi,%esi
    d629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    d630:	8b 44 24 08          	mov    0x8(%esp),%eax
    d634:	0f b6 08             	movzbl (%eax),%ecx
    d637:	8b 57 10             	mov    0x10(%edi),%edx
    d63a:	c0 e9 03             	shr    $0x3,%cl
    d63d:	83 ec 0c             	sub    $0xc,%esp
    d640:	0f b6 c9             	movzbl %cl,%ecx
    d643:	01 d1                	add    %edx,%ecx
    d645:	89 55 04             	mov    %edx,0x4(%ebp)
    d648:	89 4f 10             	mov    %ecx,0x10(%edi)
    d64b:	55                   	push   %ebp
    d64c:	83 ed 24             	sub    $0x24,%ebp
    d64f:	e8 4c 70 ff ff       	call   46a0 <operand_read>
    d654:	83 c4 10             	add    $0x10,%esp
    d657:	39 f5                	cmp    %esi,%ebp
    d659:	75 d5                	jne    d630 <popa_v+0x70>
    d65b:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
    d65f:	bf 01 00 00 00       	mov    $0x1,%edi
    d664:	31 f6                	xor    %esi,%esi
    d666:	eb 11                	jmp    d679 <popa_v+0xb9>
    d668:	90                   	nop
    d669:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d670:	83 c6 01             	add    $0x1,%esi
    d673:	83 c5 24             	add    $0x24,%ebp
    d676:	83 c7 01             	add    $0x1,%edi
    d679:	83 fe 04             	cmp    $0x4,%esi
    d67c:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
    d683:	89 75 04             	mov    %esi,0x4(%ebp)
    d686:	74 e8                	je     d670 <popa_v+0xb0>
    d688:	83 ec 0c             	sub    $0xc,%esp
    d68b:	55                   	push   %ebp
    d68c:	e8 9f 71 ff ff       	call   4830 <operand_write>
    d691:	83 c4 10             	add    $0x10,%esp
    d694:	83 ff 08             	cmp    $0x8,%edi
    d697:	75 d7                	jne    d670 <popa_v+0xb0>
    d699:	81 c4 3c 01 00 00    	add    $0x13c,%esp
    d69f:	b8 01 00 00 00       	mov    $0x1,%eax
    d6a4:	5b                   	pop    %ebx
    d6a5:	5e                   	pop    %esi
    d6a6:	5f                   	pop    %edi
    d6a7:	5d                   	pop    %ebp
    d6a8:	c3                   	ret    
    d6a9:	66 90                	xchg   %ax,%ax
    d6ab:	66 90                	xchg   %ax,%ax
    d6ad:	66 90                	xchg   %ax,%ax
    d6af:	90                   	nop

0000d6b0 <instr_execute_1op_cc_pass>:
    d6b0:	56                   	push   %esi
    d6b1:	53                   	push   %ebx
    d6b2:	e8 09 56 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d6b7:	81 c3 49 d9 01 00    	add    $0x1d949,%ebx
    d6bd:	83 ec 10             	sub    $0x10,%esp
    d6c0:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
    d6c6:	56                   	push   %esi
    d6c7:	e8 d4 6f ff ff       	call   46a0 <operand_read>
    d6cc:	8b 56 10             	mov    0x10(%esi),%edx
    d6cf:	83 c4 10             	add    $0x10,%esp
    d6d2:	8b 46 0c             	mov    0xc(%esi),%eax
    d6d5:	8d 4a f8             	lea    -0x8(%edx),%ecx
    d6d8:	83 e1 f7             	and    $0xfffffff7,%ecx
    d6db:	74 05                	je     d6e2 <instr_execute_1op_cc_pass+0x32>
    d6dd:	83 fa 20             	cmp    $0x20,%edx
    d6e0:	75 30                	jne    d712 <instr_execute_1op_cc_pass+0x62>
    d6e2:	83 fa 08             	cmp    $0x8,%edx
    d6e5:	74 19                	je     d700 <instr_execute_1op_cc_pass+0x50>
    d6e7:	83 fa 10             	cmp    $0x10,%edx
    d6ea:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    d6f0:	0f bf c8             	movswl %ax,%ecx
    d6f3:	0f 44 c1             	cmove  %ecx,%eax
    d6f6:	01 42 20             	add    %eax,0x20(%edx)
    d6f9:	83 c4 04             	add    $0x4,%esp
    d6fc:	5b                   	pop    %ebx
    d6fd:	5e                   	pop    %esi
    d6fe:	c3                   	ret    
    d6ff:	90                   	nop
    d700:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    d706:	0f be c0             	movsbl %al,%eax
    d709:	01 42 20             	add    %eax,0x20(%edx)
    d70c:	83 c4 04             	add    $0x4,%esp
    d70f:	5b                   	pop    %ebx
    d710:	5e                   	pop    %esi
    d711:	c3                   	ret    
    d712:	8d 83 90 0b ff ff    	lea    -0xf470(%ebx),%eax
    d718:	50                   	push   %eax
    d719:	8d 83 d7 09 ff ff    	lea    -0xf629(%ebx),%eax
    d71f:	6a 2a                	push   $0x2a
    d721:	50                   	push   %eax
    d722:	8d 83 14 0a ff ff    	lea    -0xf5ec(%ebx),%eax
    d728:	50                   	push   %eax
    d729:	e8 62 51 ff ff       	call   2890 <__assert_fail@plt>
    d72e:	66 90                	xchg   %ax,%ax

0000d730 <jg_v>:
    d730:	56                   	push   %esi
    d731:	53                   	push   %ebx
    d732:	e8 89 55 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d737:	81 c3 c9 d8 01 00    	add    $0x1d8c9,%ebx
    d73d:	83 ec 04             	sub    $0x4,%esp
    d740:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d746:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    d74c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    d750:	0f b6 00             	movzbl (%eax),%eax
    d753:	83 c1 01             	add    $0x1,%ecx
    d756:	89 42 10             	mov    %eax,0x10(%edx)
    d759:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    d75f:	89 42 10             	mov    %eax,0x10(%edx)
    d762:	c1 e8 03             	shr    $0x3,%eax
    d765:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    d76b:	8d 70 01             	lea    0x1(%eax),%esi
    d76e:	8d 83 44 12 ff ff    	lea    -0xedbc(%ebx),%eax
    d774:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    d778:	89 4a 04             	mov    %ecx,0x4(%edx)
    d77b:	52                   	push   %edx
    d77c:	56                   	push   %esi
    d77d:	50                   	push   %eax
    d77e:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    d784:	50                   	push   %eax
    d785:	e8 86 67 ff ff       	call   3f10 <print_asm_1>
    d78a:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    d790:	83 c4 10             	add    $0x10,%esp
    d793:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    d797:	a8 40                	test   $0x40,%al
    d799:	75 11                	jne    d7ac <jg_v+0x7c>
    d79b:	0f b6 52 25          	movzbl 0x25(%edx),%edx
    d79f:	c0 e8 07             	shr    $0x7,%al
    d7a2:	c0 ea 03             	shr    $0x3,%dl
    d7a5:	83 e2 01             	and    $0x1,%edx
    d7a8:	38 d0                	cmp    %dl,%al
    d7aa:	74 0c                	je     d7b8 <jg_v+0x88>
    d7ac:	83 c4 04             	add    $0x4,%esp
    d7af:	89 f0                	mov    %esi,%eax
    d7b1:	5b                   	pop    %ebx
    d7b2:	5e                   	pop    %esi
    d7b3:	c3                   	ret    
    d7b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d7b8:	e8 f3 fe ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    d7bd:	83 c4 04             	add    $0x4,%esp
    d7c0:	89 f0                	mov    %esi,%eax
    d7c2:	5b                   	pop    %ebx
    d7c3:	5e                   	pop    %esi
    d7c4:	c3                   	ret    
    d7c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d7c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d7d0 <jae_v>:
    d7d0:	56                   	push   %esi
    d7d1:	53                   	push   %ebx
    d7d2:	e8 e9 54 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d7d7:	81 c3 29 d8 01 00    	add    $0x1d829,%ebx
    d7dd:	83 ec 04             	sub    $0x4,%esp
    d7e0:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d7e6:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    d7ec:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    d7f0:	0f b6 00             	movzbl (%eax),%eax
    d7f3:	83 c1 01             	add    $0x1,%ecx
    d7f6:	89 42 10             	mov    %eax,0x10(%edx)
    d7f9:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    d7ff:	89 42 10             	mov    %eax,0x10(%edx)
    d802:	c1 e8 03             	shr    $0x3,%eax
    d805:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    d80b:	8d 70 01             	lea    0x1(%eax),%esi
    d80e:	8d 83 ce 0a ff ff    	lea    -0xf532(%ebx),%eax
    d814:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    d818:	89 4a 04             	mov    %ecx,0x4(%edx)
    d81b:	52                   	push   %edx
    d81c:	56                   	push   %esi
    d81d:	50                   	push   %eax
    d81e:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    d824:	50                   	push   %eax
    d825:	e8 e6 66 ff ff       	call   3f10 <print_asm_1>
    d82a:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    d830:	83 c4 10             	add    $0x10,%esp
    d833:	f6 40 24 01          	testb  $0x1,0x24(%eax)
    d837:	75 05                	jne    d83e <jae_v+0x6e>
    d839:	e8 72 fe ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    d83e:	83 c4 04             	add    $0x4,%esp
    d841:	89 f0                	mov    %esi,%eax
    d843:	5b                   	pop    %ebx
    d844:	5e                   	pop    %esi
    d845:	c3                   	ret    
    d846:	8d 76 00             	lea    0x0(%esi),%esi
    d849:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d850 <jb_v>:
    d850:	56                   	push   %esi
    d851:	53                   	push   %ebx
    d852:	e8 69 54 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d857:	81 c3 a9 d7 01 00    	add    $0x1d7a9,%ebx
    d85d:	83 ec 04             	sub    $0x4,%esp
    d860:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d866:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    d86c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    d870:	0f b6 00             	movzbl (%eax),%eax
    d873:	83 c1 01             	add    $0x1,%ecx
    d876:	89 42 10             	mov    %eax,0x10(%edx)
    d879:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    d87f:	89 42 10             	mov    %eax,0x10(%edx)
    d882:	c1 e8 03             	shr    $0x3,%eax
    d885:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    d88b:	8d 70 01             	lea    0x1(%eax),%esi
    d88e:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    d894:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    d898:	89 4a 04             	mov    %ecx,0x4(%edx)
    d89b:	52                   	push   %edx
    d89c:	56                   	push   %esi
    d89d:	50                   	push   %eax
    d89e:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    d8a4:	50                   	push   %eax
    d8a5:	e8 66 66 ff ff       	call   3f10 <print_asm_1>
    d8aa:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    d8b0:	83 c4 10             	add    $0x10,%esp
    d8b3:	f6 40 24 01          	testb  $0x1,0x24(%eax)
    d8b7:	74 05                	je     d8be <jb_v+0x6e>
    d8b9:	e8 f2 fd ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    d8be:	83 c4 04             	add    $0x4,%esp
    d8c1:	89 f0                	mov    %esi,%eax
    d8c3:	5b                   	pop    %ebx
    d8c4:	5e                   	pop    %esi
    d8c5:	c3                   	ret    
    d8c6:	8d 76 00             	lea    0x0(%esi),%esi
    d8c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d8d0 <jge_v>:
    d8d0:	56                   	push   %esi
    d8d1:	53                   	push   %ebx
    d8d2:	e8 e9 53 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d8d7:	81 c3 29 d7 01 00    	add    $0x1d729,%ebx
    d8dd:	83 ec 04             	sub    $0x4,%esp
    d8e0:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d8e6:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    d8ec:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    d8f0:	0f b6 00             	movzbl (%eax),%eax
    d8f3:	83 c1 01             	add    $0x1,%ecx
    d8f6:	89 42 10             	mov    %eax,0x10(%edx)
    d8f9:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    d8ff:	89 42 10             	mov    %eax,0x10(%edx)
    d902:	c1 e8 03             	shr    $0x3,%eax
    d905:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    d90b:	8d 70 01             	lea    0x1(%eax),%esi
    d90e:	8d 83 43 0b ff ff    	lea    -0xf4bd(%ebx),%eax
    d914:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    d918:	89 4a 04             	mov    %ecx,0x4(%edx)
    d91b:	52                   	push   %edx
    d91c:	56                   	push   %esi
    d91d:	50                   	push   %eax
    d91e:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    d924:	50                   	push   %eax
    d925:	e8 e6 65 ff ff       	call   3f10 <print_asm_1>
    d92a:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    d930:	83 c4 10             	add    $0x10,%esp
    d933:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    d937:	0f b6 52 25          	movzbl 0x25(%edx),%edx
    d93b:	c0 ea 03             	shr    $0x3,%dl
    d93e:	c0 e8 07             	shr    $0x7,%al
    d941:	83 e2 01             	and    $0x1,%edx
    d944:	38 d0                	cmp    %dl,%al
    d946:	74 08                	je     d950 <jge_v+0x80>
    d948:	83 c4 04             	add    $0x4,%esp
    d94b:	89 f0                	mov    %esi,%eax
    d94d:	5b                   	pop    %ebx
    d94e:	5e                   	pop    %esi
    d94f:	c3                   	ret    
    d950:	e8 5b fd ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    d955:	83 c4 04             	add    $0x4,%esp
    d958:	89 f0                	mov    %esi,%eax
    d95a:	5b                   	pop    %ebx
    d95b:	5e                   	pop    %esi
    d95c:	c3                   	ret    
    d95d:	8d 76 00             	lea    0x0(%esi),%esi

0000d960 <jno_v>:
    d960:	56                   	push   %esi
    d961:	53                   	push   %ebx
    d962:	e8 59 53 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d967:	81 c3 99 d6 01 00    	add    $0x1d699,%ebx
    d96d:	83 ec 04             	sub    $0x4,%esp
    d970:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d976:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    d97c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    d980:	0f b6 00             	movzbl (%eax),%eax
    d983:	83 c1 01             	add    $0x1,%ecx
    d986:	89 42 10             	mov    %eax,0x10(%edx)
    d989:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    d98f:	89 42 10             	mov    %eax,0x10(%edx)
    d992:	c1 e8 03             	shr    $0x3,%eax
    d995:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    d99b:	8d 70 01             	lea    0x1(%eax),%esi
    d99e:	8d 83 d1 0a ff ff    	lea    -0xf52f(%ebx),%eax
    d9a4:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    d9a8:	89 4a 04             	mov    %ecx,0x4(%edx)
    d9ab:	52                   	push   %edx
    d9ac:	56                   	push   %esi
    d9ad:	50                   	push   %eax
    d9ae:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    d9b4:	50                   	push   %eax
    d9b5:	e8 56 65 ff ff       	call   3f10 <print_asm_1>
    d9ba:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    d9c0:	83 c4 10             	add    $0x10,%esp
    d9c3:	f6 40 25 08          	testb  $0x8,0x25(%eax)
    d9c7:	74 05                	je     d9ce <jno_v+0x6e>
    d9c9:	e8 e2 fc ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    d9ce:	83 c4 04             	add    $0x4,%esp
    d9d1:	89 f0                	mov    %esi,%eax
    d9d3:	5b                   	pop    %ebx
    d9d4:	5e                   	pop    %esi
    d9d5:	c3                   	ret    
    d9d6:	8d 76 00             	lea    0x0(%esi),%esi
    d9d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d9e0 <jnp_v>:
    d9e0:	56                   	push   %esi
    d9e1:	53                   	push   %ebx
    d9e2:	e8 d9 52 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    d9e7:	81 c3 19 d6 01 00    	add    $0x1d619,%ebx
    d9ed:	83 ec 04             	sub    $0x4,%esp
    d9f0:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    d9f6:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    d9fc:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    da00:	0f b6 00             	movzbl (%eax),%eax
    da03:	83 c1 01             	add    $0x1,%ecx
    da06:	89 42 10             	mov    %eax,0x10(%edx)
    da09:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    da0f:	89 42 10             	mov    %eax,0x10(%edx)
    da12:	c1 e8 03             	shr    $0x3,%eax
    da15:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    da1b:	8d 70 01             	lea    0x1(%eax),%esi
    da1e:	8d 83 d4 0a ff ff    	lea    -0xf52c(%ebx),%eax
    da24:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    da28:	89 4a 04             	mov    %ecx,0x4(%edx)
    da2b:	52                   	push   %edx
    da2c:	56                   	push   %esi
    da2d:	50                   	push   %eax
    da2e:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    da34:	50                   	push   %eax
    da35:	e8 d6 64 ff ff       	call   3f10 <print_asm_1>
    da3a:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    da40:	83 c4 10             	add    $0x10,%esp
    da43:	f6 40 24 04          	testb  $0x4,0x24(%eax)
    da47:	75 05                	jne    da4e <jnp_v+0x6e>
    da49:	e8 62 fc ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    da4e:	83 c4 04             	add    $0x4,%esp
    da51:	89 f0                	mov    %esi,%eax
    da53:	5b                   	pop    %ebx
    da54:	5e                   	pop    %esi
    da55:	c3                   	ret    
    da56:	8d 76 00             	lea    0x0(%esi),%esi
    da59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000da60 <jns_v>:
    da60:	56                   	push   %esi
    da61:	53                   	push   %ebx
    da62:	e8 59 52 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    da67:	81 c3 99 d5 01 00    	add    $0x1d599,%ebx
    da6d:	83 ec 04             	sub    $0x4,%esp
    da70:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    da76:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    da7c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    da80:	0f b6 00             	movzbl (%eax),%eax
    da83:	83 c1 01             	add    $0x1,%ecx
    da86:	89 42 10             	mov    %eax,0x10(%edx)
    da89:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    da8f:	89 42 10             	mov    %eax,0x10(%edx)
    da92:	c1 e8 03             	shr    $0x3,%eax
    da95:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    da9b:	8d 70 01             	lea    0x1(%eax),%esi
    da9e:	8d 83 d7 0a ff ff    	lea    -0xf529(%ebx),%eax
    daa4:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    daa8:	89 4a 04             	mov    %ecx,0x4(%edx)
    daab:	52                   	push   %edx
    daac:	56                   	push   %esi
    daad:	50                   	push   %eax
    daae:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    dab4:	50                   	push   %eax
    dab5:	e8 56 64 ff ff       	call   3f10 <print_asm_1>
    daba:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    dac0:	83 c4 10             	add    $0x10,%esp
    dac3:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
    dac7:	78 05                	js     dace <jns_v+0x6e>
    dac9:	e8 e2 fb ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    dace:	83 c4 04             	add    $0x4,%esp
    dad1:	89 f0                	mov    %esi,%eax
    dad3:	5b                   	pop    %ebx
    dad4:	5e                   	pop    %esi
    dad5:	c3                   	ret    
    dad6:	8d 76 00             	lea    0x0(%esi),%esi
    dad9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000dae0 <jo_v>:
    dae0:	56                   	push   %esi
    dae1:	53                   	push   %ebx
    dae2:	e8 d9 51 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    dae7:	81 c3 19 d5 01 00    	add    $0x1d519,%ebx
    daed:	83 ec 04             	sub    $0x4,%esp
    daf0:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    daf6:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    dafc:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    db00:	0f b6 00             	movzbl (%eax),%eax
    db03:	83 c1 01             	add    $0x1,%ecx
    db06:	89 42 10             	mov    %eax,0x10(%edx)
    db09:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    db0f:	89 42 10             	mov    %eax,0x10(%edx)
    db12:	c1 e8 03             	shr    $0x3,%eax
    db15:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    db1b:	8d 70 01             	lea    0x1(%eax),%esi
    db1e:	8d 83 89 15 ff ff    	lea    -0xea77(%ebx),%eax
    db24:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    db28:	89 4a 04             	mov    %ecx,0x4(%edx)
    db2b:	52                   	push   %edx
    db2c:	56                   	push   %esi
    db2d:	50                   	push   %eax
    db2e:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    db34:	50                   	push   %eax
    db35:	e8 d6 63 ff ff       	call   3f10 <print_asm_1>
    db3a:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    db40:	83 c4 10             	add    $0x10,%esp
    db43:	f6 40 25 08          	testb  $0x8,0x25(%eax)
    db47:	74 05                	je     db4e <jo_v+0x6e>
    db49:	e8 62 fb ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    db4e:	83 c4 04             	add    $0x4,%esp
    db51:	89 f0                	mov    %esi,%eax
    db53:	5b                   	pop    %ebx
    db54:	5e                   	pop    %esi
    db55:	c3                   	ret    
    db56:	8d 76 00             	lea    0x0(%esi),%esi
    db59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000db60 <jp_v>:
    db60:	56                   	push   %esi
    db61:	53                   	push   %ebx
    db62:	e8 59 51 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    db67:	81 c3 99 d4 01 00    	add    $0x1d499,%ebx
    db6d:	83 ec 04             	sub    $0x4,%esp
    db70:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    db76:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
    db7c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    db80:	0f b6 00             	movzbl (%eax),%eax
    db83:	83 c1 01             	add    $0x1,%ecx
    db86:	89 42 10             	mov    %eax,0x10(%edx)
    db89:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
    db8f:	89 42 10             	mov    %eax,0x10(%edx)
    db92:	c1 e8 03             	shr    $0x3,%eax
    db95:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    db9b:	8d 70 01             	lea    0x1(%eax),%esi
    db9e:	8d 83 2d 01 ff ff    	lea    -0xfed3(%ebx),%eax
    dba4:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    dba8:	89 4a 04             	mov    %ecx,0x4(%edx)
    dbab:	52                   	push   %edx
    dbac:	56                   	push   %esi
    dbad:	50                   	push   %eax
    dbae:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    dbb4:	50                   	push   %eax
    dbb5:	e8 56 63 ff ff       	call   3f10 <print_asm_1>
    dbba:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    dbc0:	83 c4 10             	add    $0x10,%esp
    dbc3:	f6 40 24 04          	testb  $0x4,0x24(%eax)
    dbc7:	74 05                	je     dbce <jp_v+0x6e>
    dbc9:	e8 e2 fa ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    dbce:	83 c4 04             	add    $0x4,%esp
    dbd1:	89 f0                	mov    %esi,%eax
    dbd3:	5b                   	pop    %ebx
    dbd4:	5e                   	pop    %esi
    dbd5:	c3                   	ret    
    dbd6:	8d 76 00             	lea    0x0(%esi),%esi
    dbd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000dbe0 <je_near>:
    dbe0:	53                   	push   %ebx
    dbe1:	e8 da 50 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    dbe6:	81 c3 1a d4 01 00    	add    $0x1d41a,%ebx
    dbec:	83 ec 08             	sub    $0x8,%esp
    dbef:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    dbf5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    dbf9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dc00:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    dc06:	8d 51 01             	lea    0x1(%ecx),%edx
    dc09:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dc10:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    dc16:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    dc1a:	89 50 04             	mov    %edx,0x4(%eax)
    dc1d:	50                   	push   %eax
    dc1e:	8d 83 cf 0a ff ff    	lea    -0xf531(%ebx),%eax
    dc24:	6a 05                	push   $0x5
    dc26:	50                   	push   %eax
    dc27:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    dc2d:	50                   	push   %eax
    dc2e:	e8 dd 62 ff ff       	call   3f10 <print_asm_1>
    dc33:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    dc39:	83 c4 10             	add    $0x10,%esp
    dc3c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    dc40:	74 05                	je     dc47 <je_near+0x67>
    dc42:	e8 69 fa ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    dc47:	83 c4 08             	add    $0x8,%esp
    dc4a:	b8 05 00 00 00       	mov    $0x5,%eax
    dc4f:	5b                   	pop    %ebx
    dc50:	c3                   	ret    
    dc51:	eb 0d                	jmp    dc60 <ja_near>
    dc53:	90                   	nop
    dc54:	90                   	nop
    dc55:	90                   	nop
    dc56:	90                   	nop
    dc57:	90                   	nop
    dc58:	90                   	nop
    dc59:	90                   	nop
    dc5a:	90                   	nop
    dc5b:	90                   	nop
    dc5c:	90                   	nop
    dc5d:	90                   	nop
    dc5e:	90                   	nop
    dc5f:	90                   	nop

0000dc60 <ja_near>:
    dc60:	53                   	push   %ebx
    dc61:	e8 5a 50 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    dc66:	81 c3 9a d3 01 00    	add    $0x1d39a,%ebx
    dc6c:	83 ec 08             	sub    $0x8,%esp
    dc6f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    dc75:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    dc79:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dc80:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    dc86:	8d 51 01             	lea    0x1(%ecx),%edx
    dc89:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dc90:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    dc96:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    dc9a:	89 50 04             	mov    %edx,0x4(%eax)
    dc9d:	50                   	push   %eax
    dc9e:	8d 83 52 0c ff ff    	lea    -0xf3ae(%ebx),%eax
    dca4:	6a 05                	push   $0x5
    dca6:	50                   	push   %eax
    dca7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    dcad:	50                   	push   %eax
    dcae:	e8 5d 62 ff ff       	call   3f10 <print_asm_1>
    dcb3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    dcb9:	83 c4 10             	add    $0x10,%esp
    dcbc:	f6 40 24 41          	testb  $0x41,0x24(%eax)
    dcc0:	75 05                	jne    dcc7 <ja_near+0x67>
    dcc2:	e8 e9 f9 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    dcc7:	83 c4 08             	add    $0x8,%esp
    dcca:	b8 05 00 00 00       	mov    $0x5,%eax
    dccf:	5b                   	pop    %ebx
    dcd0:	c3                   	ret    
    dcd1:	eb 0d                	jmp    dce0 <jb_near>
    dcd3:	90                   	nop
    dcd4:	90                   	nop
    dcd5:	90                   	nop
    dcd6:	90                   	nop
    dcd7:	90                   	nop
    dcd8:	90                   	nop
    dcd9:	90                   	nop
    dcda:	90                   	nop
    dcdb:	90                   	nop
    dcdc:	90                   	nop
    dcdd:	90                   	nop
    dcde:	90                   	nop
    dcdf:	90                   	nop

0000dce0 <jb_near>:
    dce0:	53                   	push   %ebx
    dce1:	e8 da 4f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    dce6:	81 c3 1a d3 01 00    	add    $0x1d31a,%ebx
    dcec:	83 ec 08             	sub    $0x8,%esp
    dcef:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    dcf5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    dcf9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dd00:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    dd06:	8d 51 01             	lea    0x1(%ecx),%edx
    dd09:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dd10:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    dd16:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    dd1a:	89 50 04             	mov    %edx,0x4(%eax)
    dd1d:	50                   	push   %eax
    dd1e:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    dd24:	6a 05                	push   $0x5
    dd26:	50                   	push   %eax
    dd27:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    dd2d:	50                   	push   %eax
    dd2e:	e8 dd 61 ff ff       	call   3f10 <print_asm_1>
    dd33:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    dd39:	83 c4 10             	add    $0x10,%esp
    dd3c:	f6 40 24 01          	testb  $0x1,0x24(%eax)
    dd40:	74 05                	je     dd47 <jb_near+0x67>
    dd42:	e8 69 f9 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    dd47:	83 c4 08             	add    $0x8,%esp
    dd4a:	b8 05 00 00 00       	mov    $0x5,%eax
    dd4f:	5b                   	pop    %ebx
    dd50:	c3                   	ret    
    dd51:	eb 0d                	jmp    dd60 <jg_near>
    dd53:	90                   	nop
    dd54:	90                   	nop
    dd55:	90                   	nop
    dd56:	90                   	nop
    dd57:	90                   	nop
    dd58:	90                   	nop
    dd59:	90                   	nop
    dd5a:	90                   	nop
    dd5b:	90                   	nop
    dd5c:	90                   	nop
    dd5d:	90                   	nop
    dd5e:	90                   	nop
    dd5f:	90                   	nop

0000dd60 <jg_near>:
    dd60:	53                   	push   %ebx
    dd61:	e8 5a 4f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    dd66:	81 c3 9a d2 01 00    	add    $0x1d29a,%ebx
    dd6c:	83 ec 08             	sub    $0x8,%esp
    dd6f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    dd75:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    dd79:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dd80:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    dd86:	8d 51 01             	lea    0x1(%ecx),%edx
    dd89:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dd90:	89 50 04             	mov    %edx,0x4(%eax)
    dd93:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    dd99:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    dd9d:	50                   	push   %eax
    dd9e:	8d 83 44 12 ff ff    	lea    -0xedbc(%ebx),%eax
    dda4:	6a 05                	push   $0x5
    dda6:	50                   	push   %eax
    dda7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    ddad:	50                   	push   %eax
    ddae:	e8 5d 61 ff ff       	call   3f10 <print_asm_1>
    ddb3:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    ddb9:	83 c4 10             	add    $0x10,%esp
    ddbc:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    ddc0:	a8 40                	test   $0x40,%al
    ddc2:	75 11                	jne    ddd5 <jg_near+0x75>
    ddc4:	0f b6 52 25          	movzbl 0x25(%edx),%edx
    ddc8:	c0 e8 07             	shr    $0x7,%al
    ddcb:	c0 ea 03             	shr    $0x3,%dl
    ddce:	83 e2 01             	and    $0x1,%edx
    ddd1:	38 d0                	cmp    %dl,%al
    ddd3:	74 0b                	je     dde0 <jg_near+0x80>
    ddd5:	83 c4 08             	add    $0x8,%esp
    ddd8:	b8 05 00 00 00       	mov    $0x5,%eax
    dddd:	5b                   	pop    %ebx
    ddde:	c3                   	ret    
    dddf:	90                   	nop
    dde0:	e8 cb f8 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    dde5:	83 c4 08             	add    $0x8,%esp
    dde8:	b8 05 00 00 00       	mov    $0x5,%eax
    dded:	5b                   	pop    %ebx
    ddee:	c3                   	ret    
    ddef:	90                   	nop

0000ddf0 <jl_near>:
    ddf0:	53                   	push   %ebx
    ddf1:	e8 ca 4e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ddf6:	81 c3 0a d2 01 00    	add    $0x1d20a,%ebx
    ddfc:	83 ec 08             	sub    $0x8,%esp
    ddff:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    de05:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    de09:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    de10:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    de16:	8d 51 01             	lea    0x1(%ecx),%edx
    de19:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    de20:	89 50 04             	mov    %edx,0x4(%eax)
    de23:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    de29:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    de2d:	50                   	push   %eax
    de2e:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    de34:	6a 05                	push   $0x5
    de36:	50                   	push   %eax
    de37:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    de3d:	50                   	push   %eax
    de3e:	e8 cd 60 ff ff       	call   3f10 <print_asm_1>
    de43:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    de49:	83 c4 10             	add    $0x10,%esp
    de4c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
    de50:	0f b6 40 25          	movzbl 0x25(%eax),%eax
    de54:	c0 e8 03             	shr    $0x3,%al
    de57:	c0 ea 07             	shr    $0x7,%dl
    de5a:	83 e0 01             	and    $0x1,%eax
    de5d:	38 c2                	cmp    %al,%dl
    de5f:	74 05                	je     de66 <jl_near+0x76>
    de61:	e8 4a f8 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    de66:	83 c4 08             	add    $0x8,%esp
    de69:	b8 05 00 00 00       	mov    $0x5,%eax
    de6e:	5b                   	pop    %ebx
    de6f:	c3                   	ret    

0000de70 <jo_near>:
    de70:	53                   	push   %ebx
    de71:	e8 4a 4e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    de76:	81 c3 8a d1 01 00    	add    $0x1d18a,%ebx
    de7c:	83 ec 08             	sub    $0x8,%esp
    de7f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    de85:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    de89:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    de90:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    de96:	8d 51 01             	lea    0x1(%ecx),%edx
    de99:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dea0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    dea6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    deaa:	89 50 04             	mov    %edx,0x4(%eax)
    dead:	50                   	push   %eax
    deae:	8d 83 89 15 ff ff    	lea    -0xea77(%ebx),%eax
    deb4:	6a 05                	push   $0x5
    deb6:	50                   	push   %eax
    deb7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    debd:	50                   	push   %eax
    debe:	e8 4d 60 ff ff       	call   3f10 <print_asm_1>
    dec3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    dec9:	83 c4 10             	add    $0x10,%esp
    decc:	f6 40 25 08          	testb  $0x8,0x25(%eax)
    ded0:	74 05                	je     ded7 <jo_near+0x67>
    ded2:	e8 d9 f7 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    ded7:	83 c4 08             	add    $0x8,%esp
    deda:	b8 05 00 00 00       	mov    $0x5,%eax
    dedf:	5b                   	pop    %ebx
    dee0:	c3                   	ret    
    dee1:	eb 0d                	jmp    def0 <jp_near>
    dee3:	90                   	nop
    dee4:	90                   	nop
    dee5:	90                   	nop
    dee6:	90                   	nop
    dee7:	90                   	nop
    dee8:	90                   	nop
    dee9:	90                   	nop
    deea:	90                   	nop
    deeb:	90                   	nop
    deec:	90                   	nop
    deed:	90                   	nop
    deee:	90                   	nop
    deef:	90                   	nop

0000def0 <jp_near>:
    def0:	53                   	push   %ebx
    def1:	e8 ca 4d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    def6:	81 c3 0a d1 01 00    	add    $0x1d10a,%ebx
    defc:	83 ec 08             	sub    $0x8,%esp
    deff:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    df05:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    df09:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    df10:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    df16:	8d 51 01             	lea    0x1(%ecx),%edx
    df19:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    df20:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    df26:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    df2a:	89 50 04             	mov    %edx,0x4(%eax)
    df2d:	50                   	push   %eax
    df2e:	8d 83 2d 01 ff ff    	lea    -0xfed3(%ebx),%eax
    df34:	6a 05                	push   $0x5
    df36:	50                   	push   %eax
    df37:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    df3d:	50                   	push   %eax
    df3e:	e8 cd 5f ff ff       	call   3f10 <print_asm_1>
    df43:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    df49:	83 c4 10             	add    $0x10,%esp
    df4c:	f6 40 24 04          	testb  $0x4,0x24(%eax)
    df50:	74 05                	je     df57 <jp_near+0x67>
    df52:	e8 59 f7 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    df57:	83 c4 08             	add    $0x8,%esp
    df5a:	b8 05 00 00 00       	mov    $0x5,%eax
    df5f:	5b                   	pop    %ebx
    df60:	c3                   	ret    
    df61:	eb 0d                	jmp    df70 <js_near>
    df63:	90                   	nop
    df64:	90                   	nop
    df65:	90                   	nop
    df66:	90                   	nop
    df67:	90                   	nop
    df68:	90                   	nop
    df69:	90                   	nop
    df6a:	90                   	nop
    df6b:	90                   	nop
    df6c:	90                   	nop
    df6d:	90                   	nop
    df6e:	90                   	nop
    df6f:	90                   	nop

0000df70 <js_near>:
    df70:	53                   	push   %ebx
    df71:	e8 4a 4d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    df76:	81 c3 8a d0 01 00    	add    $0x1d08a,%ebx
    df7c:	83 ec 08             	sub    $0x8,%esp
    df7f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    df85:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    df89:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    df90:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    df96:	8d 51 01             	lea    0x1(%ecx),%edx
    df99:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    dfa0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    dfa6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    dfaa:	89 50 04             	mov    %edx,0x4(%eax)
    dfad:	50                   	push   %eax
    dfae:	8d 83 74 fe fe ff    	lea    -0x1018c(%ebx),%eax
    dfb4:	6a 05                	push   $0x5
    dfb6:	50                   	push   %eax
    dfb7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    dfbd:	50                   	push   %eax
    dfbe:	e8 4d 5f ff ff       	call   3f10 <print_asm_1>
    dfc3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    dfc9:	83 c4 10             	add    $0x10,%esp
    dfcc:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
    dfd0:	78 0e                	js     dfe0 <js_near+0x70>
    dfd2:	83 c4 08             	add    $0x8,%esp
    dfd5:	b8 05 00 00 00       	mov    $0x5,%eax
    dfda:	5b                   	pop    %ebx
    dfdb:	c3                   	ret    
    dfdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    dfe0:	e8 cb f6 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    dfe5:	83 c4 08             	add    $0x8,%esp
    dfe8:	b8 05 00 00 00       	mov    $0x5,%eax
    dfed:	5b                   	pop    %ebx
    dfee:	c3                   	ret    
    dfef:	90                   	nop

0000dff0 <jae_near>:
    dff0:	53                   	push   %ebx
    dff1:	e8 ca 4c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    dff6:	81 c3 0a d0 01 00    	add    $0x1d00a,%ebx
    dffc:	83 ec 08             	sub    $0x8,%esp
    dfff:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e005:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e009:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e010:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e016:	8d 51 01             	lea    0x1(%ecx),%edx
    e019:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e020:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e026:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e02a:	89 50 04             	mov    %edx,0x4(%eax)
    e02d:	50                   	push   %eax
    e02e:	8d 83 ce 0a ff ff    	lea    -0xf532(%ebx),%eax
    e034:	6a 05                	push   $0x5
    e036:	50                   	push   %eax
    e037:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e03d:	50                   	push   %eax
    e03e:	e8 cd 5e ff ff       	call   3f10 <print_asm_1>
    e043:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e049:	83 c4 10             	add    $0x10,%esp
    e04c:	f6 40 24 01          	testb  $0x1,0x24(%eax)
    e050:	75 05                	jne    e057 <jae_near+0x67>
    e052:	e8 59 f6 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e057:	83 c4 08             	add    $0x8,%esp
    e05a:	b8 05 00 00 00       	mov    $0x5,%eax
    e05f:	5b                   	pop    %ebx
    e060:	c3                   	ret    
    e061:	eb 0d                	jmp    e070 <jge_near>
    e063:	90                   	nop
    e064:	90                   	nop
    e065:	90                   	nop
    e066:	90                   	nop
    e067:	90                   	nop
    e068:	90                   	nop
    e069:	90                   	nop
    e06a:	90                   	nop
    e06b:	90                   	nop
    e06c:	90                   	nop
    e06d:	90                   	nop
    e06e:	90                   	nop
    e06f:	90                   	nop

0000e070 <jge_near>:
    e070:	53                   	push   %ebx
    e071:	e8 4a 4c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e076:	81 c3 8a cf 01 00    	add    $0x1cf8a,%ebx
    e07c:	83 ec 08             	sub    $0x8,%esp
    e07f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e085:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e089:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e090:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e096:	8d 51 01             	lea    0x1(%ecx),%edx
    e099:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e0a0:	89 50 04             	mov    %edx,0x4(%eax)
    e0a3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e0a9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e0ad:	50                   	push   %eax
    e0ae:	8d 83 43 0b ff ff    	lea    -0xf4bd(%ebx),%eax
    e0b4:	6a 05                	push   $0x5
    e0b6:	50                   	push   %eax
    e0b7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e0bd:	50                   	push   %eax
    e0be:	e8 4d 5e ff ff       	call   3f10 <print_asm_1>
    e0c3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e0c9:	83 c4 10             	add    $0x10,%esp
    e0cc:	0f b6 50 24          	movzbl 0x24(%eax),%edx
    e0d0:	0f b6 40 25          	movzbl 0x25(%eax),%eax
    e0d4:	c0 e8 03             	shr    $0x3,%al
    e0d7:	c0 ea 07             	shr    $0x7,%dl
    e0da:	83 e0 01             	and    $0x1,%eax
    e0dd:	38 c2                	cmp    %al,%dl
    e0df:	74 0f                	je     e0f0 <jge_near+0x80>
    e0e1:	83 c4 08             	add    $0x8,%esp
    e0e4:	b8 05 00 00 00       	mov    $0x5,%eax
    e0e9:	5b                   	pop    %ebx
    e0ea:	c3                   	ret    
    e0eb:	90                   	nop
    e0ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e0f0:	e8 bb f5 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e0f5:	83 c4 08             	add    $0x8,%esp
    e0f8:	b8 05 00 00 00       	mov    $0x5,%eax
    e0fd:	5b                   	pop    %ebx
    e0fe:	c3                   	ret    
    e0ff:	90                   	nop

0000e100 <jle_near>:
    e100:	53                   	push   %ebx
    e101:	e8 ba 4b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e106:	81 c3 fa ce 01 00    	add    $0x1cefa,%ebx
    e10c:	83 ec 08             	sub    $0x8,%esp
    e10f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e115:	8b 54 24 10          	mov    0x10(%esp),%edx
    e119:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e120:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e126:	83 c2 01             	add    $0x1,%edx
    e129:	89 50 04             	mov    %edx,0x4(%eax)
    e12c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e133:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e139:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e13d:	50                   	push   %eax
    e13e:	8d 83 9e 15 ff ff    	lea    -0xea62(%ebx),%eax
    e144:	6a 05                	push   $0x5
    e146:	50                   	push   %eax
    e147:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e14d:	50                   	push   %eax
    e14e:	e8 bd 5d ff ff       	call   3f10 <print_asm_1>
    e153:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e159:	83 c4 10             	add    $0x10,%esp
    e15c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
    e160:	0f b6 40 25          	movzbl 0x25(%eax),%eax
    e164:	89 d1                	mov    %edx,%ecx
    e166:	c0 e8 03             	shr    $0x3,%al
    e169:	c0 e9 07             	shr    $0x7,%cl
    e16c:	83 e0 01             	and    $0x1,%eax
    e16f:	38 c1                	cmp    %al,%cl
    e171:	74 05                	je     e178 <jle_near+0x78>
    e173:	83 e2 40             	and    $0x40,%edx
    e176:	75 10                	jne    e188 <jle_near+0x88>
    e178:	83 c4 08             	add    $0x8,%esp
    e17b:	b8 05 00 00 00       	mov    $0x5,%eax
    e180:	5b                   	pop    %ebx
    e181:	c3                   	ret    
    e182:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    e188:	e8 23 f5 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e18d:	83 c4 08             	add    $0x8,%esp
    e190:	b8 05 00 00 00       	mov    $0x5,%eax
    e195:	5b                   	pop    %ebx
    e196:	c3                   	ret    
    e197:	89 f6                	mov    %esi,%esi
    e199:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000e1a0 <jna_near>:
    e1a0:	53                   	push   %ebx
    e1a1:	e8 1a 4b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e1a6:	81 c3 5a ce 01 00    	add    $0x1ce5a,%ebx
    e1ac:	83 ec 08             	sub    $0x8,%esp
    e1af:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e1b5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e1b9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e1c0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e1c6:	8d 51 01             	lea    0x1(%ecx),%edx
    e1c9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e1d0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e1d6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e1da:	89 50 04             	mov    %edx,0x4(%eax)
    e1dd:	50                   	push   %eax
    e1de:	8d 83 11 0b ff ff    	lea    -0xf4ef(%ebx),%eax
    e1e4:	6a 05                	push   $0x5
    e1e6:	50                   	push   %eax
    e1e7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e1ed:	50                   	push   %eax
    e1ee:	e8 1d 5d ff ff       	call   3f10 <print_asm_1>
    e1f3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e1f9:	83 c4 10             	add    $0x10,%esp
    e1fc:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    e200:	74 05                	je     e207 <jna_near+0x67>
    e202:	e8 a9 f4 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e207:	83 c4 08             	add    $0x8,%esp
    e20a:	b8 05 00 00 00       	mov    $0x5,%eax
    e20f:	5b                   	pop    %ebx
    e210:	c3                   	ret    
    e211:	eb 0d                	jmp    e220 <jne_near>
    e213:	90                   	nop
    e214:	90                   	nop
    e215:	90                   	nop
    e216:	90                   	nop
    e217:	90                   	nop
    e218:	90                   	nop
    e219:	90                   	nop
    e21a:	90                   	nop
    e21b:	90                   	nop
    e21c:	90                   	nop
    e21d:	90                   	nop
    e21e:	90                   	nop
    e21f:	90                   	nop

0000e220 <jne_near>:
    e220:	53                   	push   %ebx
    e221:	e8 9a 4a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e226:	81 c3 da cd 01 00    	add    $0x1cdda,%ebx
    e22c:	83 ec 08             	sub    $0x8,%esp
    e22f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e235:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e239:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e240:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e246:	8d 51 01             	lea    0x1(%ecx),%edx
    e249:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e250:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e256:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e25a:	89 50 04             	mov    %edx,0x4(%eax)
    e25d:	50                   	push   %eax
    e25e:	8d 83 61 13 ff ff    	lea    -0xec9f(%ebx),%eax
    e264:	6a 05                	push   $0x5
    e266:	50                   	push   %eax
    e267:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e26d:	50                   	push   %eax
    e26e:	e8 9d 5c ff ff       	call   3f10 <print_asm_1>
    e273:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e279:	83 c4 10             	add    $0x10,%esp
    e27c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    e280:	75 05                	jne    e287 <jne_near+0x67>
    e282:	e8 29 f4 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e287:	83 c4 08             	add    $0x8,%esp
    e28a:	b8 05 00 00 00       	mov    $0x5,%eax
    e28f:	5b                   	pop    %ebx
    e290:	c3                   	ret    
    e291:	eb 0d                	jmp    e2a0 <jno_near>
    e293:	90                   	nop
    e294:	90                   	nop
    e295:	90                   	nop
    e296:	90                   	nop
    e297:	90                   	nop
    e298:	90                   	nop
    e299:	90                   	nop
    e29a:	90                   	nop
    e29b:	90                   	nop
    e29c:	90                   	nop
    e29d:	90                   	nop
    e29e:	90                   	nop
    e29f:	90                   	nop

0000e2a0 <jno_near>:
    e2a0:	53                   	push   %ebx
    e2a1:	e8 1a 4a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e2a6:	81 c3 5a cd 01 00    	add    $0x1cd5a,%ebx
    e2ac:	83 ec 08             	sub    $0x8,%esp
    e2af:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e2b5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e2b9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e2c0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e2c6:	8d 51 01             	lea    0x1(%ecx),%edx
    e2c9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e2d0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e2d6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e2da:	89 50 04             	mov    %edx,0x4(%eax)
    e2dd:	50                   	push   %eax
    e2de:	8d 83 d1 0a ff ff    	lea    -0xf52f(%ebx),%eax
    e2e4:	6a 05                	push   $0x5
    e2e6:	50                   	push   %eax
    e2e7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e2ed:	50                   	push   %eax
    e2ee:	e8 1d 5c ff ff       	call   3f10 <print_asm_1>
    e2f3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e2f9:	83 c4 10             	add    $0x10,%esp
    e2fc:	f6 40 25 08          	testb  $0x8,0x25(%eax)
    e300:	74 05                	je     e307 <jno_near+0x67>
    e302:	e8 a9 f3 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e307:	83 c4 08             	add    $0x8,%esp
    e30a:	b8 05 00 00 00       	mov    $0x5,%eax
    e30f:	5b                   	pop    %ebx
    e310:	c3                   	ret    
    e311:	eb 0d                	jmp    e320 <jnp_near>
    e313:	90                   	nop
    e314:	90                   	nop
    e315:	90                   	nop
    e316:	90                   	nop
    e317:	90                   	nop
    e318:	90                   	nop
    e319:	90                   	nop
    e31a:	90                   	nop
    e31b:	90                   	nop
    e31c:	90                   	nop
    e31d:	90                   	nop
    e31e:	90                   	nop
    e31f:	90                   	nop

0000e320 <jnp_near>:
    e320:	53                   	push   %ebx
    e321:	e8 9a 49 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e326:	81 c3 da cc 01 00    	add    $0x1ccda,%ebx
    e32c:	83 ec 08             	sub    $0x8,%esp
    e32f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e335:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e339:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e340:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e346:	8d 51 01             	lea    0x1(%ecx),%edx
    e349:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e350:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e356:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e35a:	89 50 04             	mov    %edx,0x4(%eax)
    e35d:	50                   	push   %eax
    e35e:	8d 83 d4 0a ff ff    	lea    -0xf52c(%ebx),%eax
    e364:	6a 05                	push   $0x5
    e366:	50                   	push   %eax
    e367:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e36d:	50                   	push   %eax
    e36e:	e8 9d 5b ff ff       	call   3f10 <print_asm_1>
    e373:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e379:	83 c4 10             	add    $0x10,%esp
    e37c:	f6 40 24 04          	testb  $0x4,0x24(%eax)
    e380:	75 05                	jne    e387 <jnp_near+0x67>
    e382:	e8 29 f3 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e387:	83 c4 08             	add    $0x8,%esp
    e38a:	b8 05 00 00 00       	mov    $0x5,%eax
    e38f:	5b                   	pop    %ebx
    e390:	c3                   	ret    
    e391:	eb 0d                	jmp    e3a0 <jns_near>
    e393:	90                   	nop
    e394:	90                   	nop
    e395:	90                   	nop
    e396:	90                   	nop
    e397:	90                   	nop
    e398:	90                   	nop
    e399:	90                   	nop
    e39a:	90                   	nop
    e39b:	90                   	nop
    e39c:	90                   	nop
    e39d:	90                   	nop
    e39e:	90                   	nop
    e39f:	90                   	nop

0000e3a0 <jns_near>:
    e3a0:	53                   	push   %ebx
    e3a1:	e8 1a 49 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e3a6:	81 c3 5a cc 01 00    	add    $0x1cc5a,%ebx
    e3ac:	83 ec 08             	sub    $0x8,%esp
    e3af:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e3b5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e3b9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e3c0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e3c6:	8d 51 01             	lea    0x1(%ecx),%edx
    e3c9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
    e3d0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e3d6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e3da:	89 50 04             	mov    %edx,0x4(%eax)
    e3dd:	50                   	push   %eax
    e3de:	8d 83 d7 0a ff ff    	lea    -0xf529(%ebx),%eax
    e3e4:	6a 05                	push   $0x5
    e3e6:	50                   	push   %eax
    e3e7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e3ed:	50                   	push   %eax
    e3ee:	e8 1d 5b ff ff       	call   3f10 <print_asm_1>
    e3f3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e3f9:	83 c4 10             	add    $0x10,%esp
    e3fc:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
    e400:	78 05                	js     e407 <jns_near+0x67>
    e402:	e8 a9 f2 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e407:	83 c4 08             	add    $0x8,%esp
    e40a:	b8 05 00 00 00       	mov    $0x5,%eax
    e40f:	5b                   	pop    %ebx
    e410:	c3                   	ret    
    e411:	eb 0d                	jmp    e420 <je_short_>
    e413:	90                   	nop
    e414:	90                   	nop
    e415:	90                   	nop
    e416:	90                   	nop
    e417:	90                   	nop
    e418:	90                   	nop
    e419:	90                   	nop
    e41a:	90                   	nop
    e41b:	90                   	nop
    e41c:	90                   	nop
    e41d:	90                   	nop
    e41e:	90                   	nop
    e41f:	90                   	nop

0000e420 <je_short_>:
    e420:	53                   	push   %ebx
    e421:	e8 9a 48 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e426:	81 c3 da cb 01 00    	add    $0x1cbda,%ebx
    e42c:	83 ec 08             	sub    $0x8,%esp
    e42f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e435:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e439:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e440:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e446:	8d 51 01             	lea    0x1(%ecx),%edx
    e449:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e450:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e456:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e45a:	89 50 04             	mov    %edx,0x4(%eax)
    e45d:	50                   	push   %eax
    e45e:	8d 83 cf 0a ff ff    	lea    -0xf531(%ebx),%eax
    e464:	6a 02                	push   $0x2
    e466:	50                   	push   %eax
    e467:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e46d:	50                   	push   %eax
    e46e:	e8 9d 5a ff ff       	call   3f10 <print_asm_1>
    e473:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e479:	83 c4 10             	add    $0x10,%esp
    e47c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    e480:	74 05                	je     e487 <je_short_+0x67>
    e482:	e8 29 f2 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e487:	83 c4 08             	add    $0x8,%esp
    e48a:	b8 02 00 00 00       	mov    $0x2,%eax
    e48f:	5b                   	pop    %ebx
    e490:	c3                   	ret    
    e491:	eb 0d                	jmp    e4a0 <ja_short_>
    e493:	90                   	nop
    e494:	90                   	nop
    e495:	90                   	nop
    e496:	90                   	nop
    e497:	90                   	nop
    e498:	90                   	nop
    e499:	90                   	nop
    e49a:	90                   	nop
    e49b:	90                   	nop
    e49c:	90                   	nop
    e49d:	90                   	nop
    e49e:	90                   	nop
    e49f:	90                   	nop

0000e4a0 <ja_short_>:
    e4a0:	53                   	push   %ebx
    e4a1:	e8 1a 48 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e4a6:	81 c3 5a cb 01 00    	add    $0x1cb5a,%ebx
    e4ac:	83 ec 08             	sub    $0x8,%esp
    e4af:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e4b5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e4b9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e4c0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e4c6:	8d 51 01             	lea    0x1(%ecx),%edx
    e4c9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e4d0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e4d6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e4da:	89 50 04             	mov    %edx,0x4(%eax)
    e4dd:	50                   	push   %eax
    e4de:	8d 83 52 0c ff ff    	lea    -0xf3ae(%ebx),%eax
    e4e4:	6a 02                	push   $0x2
    e4e6:	50                   	push   %eax
    e4e7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e4ed:	50                   	push   %eax
    e4ee:	e8 1d 5a ff ff       	call   3f10 <print_asm_1>
    e4f3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e4f9:	83 c4 10             	add    $0x10,%esp
    e4fc:	f6 40 24 41          	testb  $0x41,0x24(%eax)
    e500:	75 05                	jne    e507 <ja_short_+0x67>
    e502:	e8 a9 f1 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e507:	83 c4 08             	add    $0x8,%esp
    e50a:	b8 02 00 00 00       	mov    $0x2,%eax
    e50f:	5b                   	pop    %ebx
    e510:	c3                   	ret    
    e511:	eb 0d                	jmp    e520 <ja_b>
    e513:	90                   	nop
    e514:	90                   	nop
    e515:	90                   	nop
    e516:	90                   	nop
    e517:	90                   	nop
    e518:	90                   	nop
    e519:	90                   	nop
    e51a:	90                   	nop
    e51b:	90                   	nop
    e51c:	90                   	nop
    e51d:	90                   	nop
    e51e:	90                   	nop
    e51f:	90                   	nop

0000e520 <ja_b>:
    e520:	e9 7b ff ff ff       	jmp    e4a0 <ja_short_>
    e525:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000e530 <jb_short_>:
    e530:	53                   	push   %ebx
    e531:	e8 8a 47 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e536:	81 c3 ca ca 01 00    	add    $0x1caca,%ebx
    e53c:	83 ec 08             	sub    $0x8,%esp
    e53f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e545:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e549:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e550:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e556:	8d 51 01             	lea    0x1(%ecx),%edx
    e559:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e560:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e566:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e56a:	89 50 04             	mov    %edx,0x4(%eax)
    e56d:	50                   	push   %eax
    e56e:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
    e574:	6a 02                	push   $0x2
    e576:	50                   	push   %eax
    e577:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e57d:	50                   	push   %eax
    e57e:	e8 8d 59 ff ff       	call   3f10 <print_asm_1>
    e583:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e589:	83 c4 10             	add    $0x10,%esp
    e58c:	f6 40 24 01          	testb  $0x1,0x24(%eax)
    e590:	74 05                	je     e597 <jb_short_+0x67>
    e592:	e8 19 f1 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e597:	83 c4 08             	add    $0x8,%esp
    e59a:	b8 02 00 00 00       	mov    $0x2,%eax
    e59f:	5b                   	pop    %ebx
    e5a0:	c3                   	ret    
    e5a1:	eb 0d                	jmp    e5b0 <jg_short_>
    e5a3:	90                   	nop
    e5a4:	90                   	nop
    e5a5:	90                   	nop
    e5a6:	90                   	nop
    e5a7:	90                   	nop
    e5a8:	90                   	nop
    e5a9:	90                   	nop
    e5aa:	90                   	nop
    e5ab:	90                   	nop
    e5ac:	90                   	nop
    e5ad:	90                   	nop
    e5ae:	90                   	nop
    e5af:	90                   	nop

0000e5b0 <jg_short_>:
    e5b0:	53                   	push   %ebx
    e5b1:	e8 0a 47 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e5b6:	81 c3 4a ca 01 00    	add    $0x1ca4a,%ebx
    e5bc:	83 ec 08             	sub    $0x8,%esp
    e5bf:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e5c5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e5c9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e5d0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e5d6:	8d 51 01             	lea    0x1(%ecx),%edx
    e5d9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e5e0:	89 50 04             	mov    %edx,0x4(%eax)
    e5e3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e5e9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e5ed:	50                   	push   %eax
    e5ee:	8d 83 44 12 ff ff    	lea    -0xedbc(%ebx),%eax
    e5f4:	6a 02                	push   $0x2
    e5f6:	50                   	push   %eax
    e5f7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e5fd:	50                   	push   %eax
    e5fe:	e8 0d 59 ff ff       	call   3f10 <print_asm_1>
    e603:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    e609:	83 c4 10             	add    $0x10,%esp
    e60c:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    e610:	a8 40                	test   $0x40,%al
    e612:	75 11                	jne    e625 <jg_short_+0x75>
    e614:	0f b6 52 25          	movzbl 0x25(%edx),%edx
    e618:	c0 e8 07             	shr    $0x7,%al
    e61b:	c0 ea 03             	shr    $0x3,%dl
    e61e:	83 e2 01             	and    $0x1,%edx
    e621:	38 d0                	cmp    %dl,%al
    e623:	74 0b                	je     e630 <jg_short_+0x80>
    e625:	83 c4 08             	add    $0x8,%esp
    e628:	b8 02 00 00 00       	mov    $0x2,%eax
    e62d:	5b                   	pop    %ebx
    e62e:	c3                   	ret    
    e62f:	90                   	nop
    e630:	e8 7b f0 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e635:	83 c4 08             	add    $0x8,%esp
    e638:	b8 02 00 00 00       	mov    $0x2,%eax
    e63d:	5b                   	pop    %ebx
    e63e:	c3                   	ret    
    e63f:	90                   	nop

0000e640 <jl_short_>:
    e640:	53                   	push   %ebx
    e641:	e8 7a 46 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e646:	81 c3 ba c9 01 00    	add    $0x1c9ba,%ebx
    e64c:	83 ec 08             	sub    $0x8,%esp
    e64f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e655:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e659:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e660:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e666:	8d 51 01             	lea    0x1(%ecx),%edx
    e669:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e670:	89 50 04             	mov    %edx,0x4(%eax)
    e673:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e679:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e67d:	50                   	push   %eax
    e67e:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
    e684:	6a 02                	push   $0x2
    e686:	50                   	push   %eax
    e687:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e68d:	50                   	push   %eax
    e68e:	e8 7d 58 ff ff       	call   3f10 <print_asm_1>
    e693:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e699:	83 c4 10             	add    $0x10,%esp
    e69c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
    e6a0:	0f b6 40 25          	movzbl 0x25(%eax),%eax
    e6a4:	c0 e8 03             	shr    $0x3,%al
    e6a7:	c0 ea 07             	shr    $0x7,%dl
    e6aa:	83 e0 01             	and    $0x1,%eax
    e6ad:	38 c2                	cmp    %al,%dl
    e6af:	74 05                	je     e6b6 <jl_short_+0x76>
    e6b1:	e8 fa ef ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e6b6:	83 c4 08             	add    $0x8,%esp
    e6b9:	b8 02 00 00 00       	mov    $0x2,%eax
    e6be:	5b                   	pop    %ebx
    e6bf:	c3                   	ret    

0000e6c0 <jo_short_>:
    e6c0:	53                   	push   %ebx
    e6c1:	e8 fa 45 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e6c6:	81 c3 3a c9 01 00    	add    $0x1c93a,%ebx
    e6cc:	83 ec 08             	sub    $0x8,%esp
    e6cf:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e6d5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e6d9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e6e0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e6e6:	8d 51 01             	lea    0x1(%ecx),%edx
    e6e9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e6f0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e6f6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e6fa:	89 50 04             	mov    %edx,0x4(%eax)
    e6fd:	50                   	push   %eax
    e6fe:	8d 83 89 15 ff ff    	lea    -0xea77(%ebx),%eax
    e704:	6a 02                	push   $0x2
    e706:	50                   	push   %eax
    e707:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e70d:	50                   	push   %eax
    e70e:	e8 fd 57 ff ff       	call   3f10 <print_asm_1>
    e713:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e719:	83 c4 10             	add    $0x10,%esp
    e71c:	f6 40 25 08          	testb  $0x8,0x25(%eax)
    e720:	74 05                	je     e727 <jo_short_+0x67>
    e722:	e8 89 ef ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e727:	83 c4 08             	add    $0x8,%esp
    e72a:	b8 02 00 00 00       	mov    $0x2,%eax
    e72f:	5b                   	pop    %ebx
    e730:	c3                   	ret    
    e731:	eb 0d                	jmp    e740 <jo_b>
    e733:	90                   	nop
    e734:	90                   	nop
    e735:	90                   	nop
    e736:	90                   	nop
    e737:	90                   	nop
    e738:	90                   	nop
    e739:	90                   	nop
    e73a:	90                   	nop
    e73b:	90                   	nop
    e73c:	90                   	nop
    e73d:	90                   	nop
    e73e:	90                   	nop
    e73f:	90                   	nop

0000e740 <jo_b>:
    e740:	e9 7b ff ff ff       	jmp    e6c0 <jo_short_>
    e745:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e749:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000e750 <jp_short_>:
    e750:	53                   	push   %ebx
    e751:	e8 6a 45 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e756:	81 c3 aa c8 01 00    	add    $0x1c8aa,%ebx
    e75c:	83 ec 08             	sub    $0x8,%esp
    e75f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e765:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e769:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e770:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e776:	8d 51 01             	lea    0x1(%ecx),%edx
    e779:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e780:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e786:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e78a:	89 50 04             	mov    %edx,0x4(%eax)
    e78d:	50                   	push   %eax
    e78e:	8d 83 2d 01 ff ff    	lea    -0xfed3(%ebx),%eax
    e794:	6a 02                	push   $0x2
    e796:	50                   	push   %eax
    e797:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e79d:	50                   	push   %eax
    e79e:	e8 6d 57 ff ff       	call   3f10 <print_asm_1>
    e7a3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e7a9:	83 c4 10             	add    $0x10,%esp
    e7ac:	f6 40 24 04          	testb  $0x4,0x24(%eax)
    e7b0:	74 05                	je     e7b7 <jp_short_+0x67>
    e7b2:	e8 f9 ee ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e7b7:	83 c4 08             	add    $0x8,%esp
    e7ba:	b8 02 00 00 00       	mov    $0x2,%eax
    e7bf:	5b                   	pop    %ebx
    e7c0:	c3                   	ret    
    e7c1:	eb 0d                	jmp    e7d0 <jp_b>
    e7c3:	90                   	nop
    e7c4:	90                   	nop
    e7c5:	90                   	nop
    e7c6:	90                   	nop
    e7c7:	90                   	nop
    e7c8:	90                   	nop
    e7c9:	90                   	nop
    e7ca:	90                   	nop
    e7cb:	90                   	nop
    e7cc:	90                   	nop
    e7cd:	90                   	nop
    e7ce:	90                   	nop
    e7cf:	90                   	nop

0000e7d0 <jp_b>:
    e7d0:	e9 7b ff ff ff       	jmp    e750 <jp_short_>
    e7d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e7d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000e7e0 <js_short_>:
    e7e0:	53                   	push   %ebx
    e7e1:	e8 da 44 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e7e6:	81 c3 1a c8 01 00    	add    $0x1c81a,%ebx
    e7ec:	83 ec 08             	sub    $0x8,%esp
    e7ef:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e7f5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e7f9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e800:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e806:	8d 51 01             	lea    0x1(%ecx),%edx
    e809:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e810:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e816:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e81a:	89 50 04             	mov    %edx,0x4(%eax)
    e81d:	50                   	push   %eax
    e81e:	8d 83 74 fe fe ff    	lea    -0x1018c(%ebx),%eax
    e824:	6a 02                	push   $0x2
    e826:	50                   	push   %eax
    e827:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e82d:	50                   	push   %eax
    e82e:	e8 dd 56 ff ff       	call   3f10 <print_asm_1>
    e833:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e839:	83 c4 10             	add    $0x10,%esp
    e83c:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
    e840:	78 0e                	js     e850 <js_short_+0x70>
    e842:	83 c4 08             	add    $0x8,%esp
    e845:	b8 02 00 00 00       	mov    $0x2,%eax
    e84a:	5b                   	pop    %ebx
    e84b:	c3                   	ret    
    e84c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e850:	e8 5b ee ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e855:	83 c4 08             	add    $0x8,%esp
    e858:	b8 02 00 00 00       	mov    $0x2,%eax
    e85d:	5b                   	pop    %ebx
    e85e:	c3                   	ret    
    e85f:	90                   	nop

0000e860 <js_b>:
    e860:	e9 7b ff ff ff       	jmp    e7e0 <js_short_>
    e865:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e869:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000e870 <jae_short_>:
    e870:	53                   	push   %ebx
    e871:	e8 4a 44 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e876:	81 c3 8a c7 01 00    	add    $0x1c78a,%ebx
    e87c:	83 ec 08             	sub    $0x8,%esp
    e87f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e885:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e889:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e890:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e896:	8d 51 01             	lea    0x1(%ecx),%edx
    e899:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e8a0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e8a6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e8aa:	89 50 04             	mov    %edx,0x4(%eax)
    e8ad:	50                   	push   %eax
    e8ae:	8d 83 ce 0a ff ff    	lea    -0xf532(%ebx),%eax
    e8b4:	6a 02                	push   $0x2
    e8b6:	50                   	push   %eax
    e8b7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e8bd:	50                   	push   %eax
    e8be:	e8 4d 56 ff ff       	call   3f10 <print_asm_1>
    e8c3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e8c9:	83 c4 10             	add    $0x10,%esp
    e8cc:	f6 40 24 01          	testb  $0x1,0x24(%eax)
    e8d0:	75 05                	jne    e8d7 <jae_short_+0x67>
    e8d2:	e8 d9 ed ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e8d7:	83 c4 08             	add    $0x8,%esp
    e8da:	b8 02 00 00 00       	mov    $0x2,%eax
    e8df:	5b                   	pop    %ebx
    e8e0:	c3                   	ret    
    e8e1:	eb 0d                	jmp    e8f0 <jae_b>
    e8e3:	90                   	nop
    e8e4:	90                   	nop
    e8e5:	90                   	nop
    e8e6:	90                   	nop
    e8e7:	90                   	nop
    e8e8:	90                   	nop
    e8e9:	90                   	nop
    e8ea:	90                   	nop
    e8eb:	90                   	nop
    e8ec:	90                   	nop
    e8ed:	90                   	nop
    e8ee:	90                   	nop
    e8ef:	90                   	nop

0000e8f0 <jae_b>:
    e8f0:	e9 7b ff ff ff       	jmp    e870 <jae_short_>
    e8f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e8f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000e900 <jge_short_>:
    e900:	53                   	push   %ebx
    e901:	e8 ba 43 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e906:	81 c3 fa c6 01 00    	add    $0x1c6fa,%ebx
    e90c:	83 ec 08             	sub    $0x8,%esp
    e90f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e915:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    e919:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e920:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e926:	8d 51 01             	lea    0x1(%ecx),%edx
    e929:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e930:	89 50 04             	mov    %edx,0x4(%eax)
    e933:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e939:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e93d:	50                   	push   %eax
    e93e:	8d 83 43 0b ff ff    	lea    -0xf4bd(%ebx),%eax
    e944:	6a 02                	push   $0x2
    e946:	50                   	push   %eax
    e947:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e94d:	50                   	push   %eax
    e94e:	e8 bd 55 ff ff       	call   3f10 <print_asm_1>
    e953:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e959:	83 c4 10             	add    $0x10,%esp
    e95c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
    e960:	0f b6 40 25          	movzbl 0x25(%eax),%eax
    e964:	c0 e8 03             	shr    $0x3,%al
    e967:	c0 ea 07             	shr    $0x7,%dl
    e96a:	83 e0 01             	and    $0x1,%eax
    e96d:	38 c2                	cmp    %al,%dl
    e96f:	74 0f                	je     e980 <jge_short_+0x80>
    e971:	83 c4 08             	add    $0x8,%esp
    e974:	b8 02 00 00 00       	mov    $0x2,%eax
    e979:	5b                   	pop    %ebx
    e97a:	c3                   	ret    
    e97b:	90                   	nop
    e97c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e980:	e8 2b ed ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    e985:	83 c4 08             	add    $0x8,%esp
    e988:	b8 02 00 00 00       	mov    $0x2,%eax
    e98d:	5b                   	pop    %ebx
    e98e:	c3                   	ret    
    e98f:	90                   	nop

0000e990 <jle_short_>:
    e990:	53                   	push   %ebx
    e991:	e8 2a 43 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    e996:	81 c3 6a c6 01 00    	add    $0x1c66a,%ebx
    e99c:	83 ec 08             	sub    $0x8,%esp
    e99f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    e9a5:	8b 54 24 10          	mov    0x10(%esp),%edx
    e9a9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e9b0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    e9b6:	83 c2 01             	add    $0x1,%edx
    e9b9:	89 50 04             	mov    %edx,0x4(%eax)
    e9bc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    e9c3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    e9c9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    e9cd:	50                   	push   %eax
    e9ce:	8d 83 9e 15 ff ff    	lea    -0xea62(%ebx),%eax
    e9d4:	6a 02                	push   $0x2
    e9d6:	50                   	push   %eax
    e9d7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    e9dd:	50                   	push   %eax
    e9de:	e8 2d 55 ff ff       	call   3f10 <print_asm_1>
    e9e3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    e9e9:	83 c4 10             	add    $0x10,%esp
    e9ec:	0f b6 50 24          	movzbl 0x24(%eax),%edx
    e9f0:	0f b6 40 25          	movzbl 0x25(%eax),%eax
    e9f4:	89 d1                	mov    %edx,%ecx
    e9f6:	c0 e8 03             	shr    $0x3,%al
    e9f9:	c0 e9 07             	shr    $0x7,%cl
    e9fc:	83 e0 01             	and    $0x1,%eax
    e9ff:	38 c1                	cmp    %al,%cl
    ea01:	74 05                	je     ea08 <jle_short_+0x78>
    ea03:	83 e2 40             	and    $0x40,%edx
    ea06:	75 10                	jne    ea18 <jle_short_+0x88>
    ea08:	83 c4 08             	add    $0x8,%esp
    ea0b:	b8 02 00 00 00       	mov    $0x2,%eax
    ea10:	5b                   	pop    %ebx
    ea11:	c3                   	ret    
    ea12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ea18:	e8 93 ec ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    ea1d:	83 c4 08             	add    $0x8,%esp
    ea20:	b8 02 00 00 00       	mov    $0x2,%eax
    ea25:	5b                   	pop    %ebx
    ea26:	c3                   	ret    
    ea27:	89 f6                	mov    %esi,%esi
    ea29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ea30 <jna_short_>:
    ea30:	53                   	push   %ebx
    ea31:	e8 8a 42 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ea36:	81 c3 ca c5 01 00    	add    $0x1c5ca,%ebx
    ea3c:	83 ec 08             	sub    $0x8,%esp
    ea3f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    ea45:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    ea49:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ea50:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    ea56:	8d 51 01             	lea    0x1(%ecx),%edx
    ea59:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ea60:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    ea66:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    ea6a:	89 50 04             	mov    %edx,0x4(%eax)
    ea6d:	50                   	push   %eax
    ea6e:	8d 83 11 0b ff ff    	lea    -0xf4ef(%ebx),%eax
    ea74:	6a 02                	push   $0x2
    ea76:	50                   	push   %eax
    ea77:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    ea7d:	50                   	push   %eax
    ea7e:	e8 8d 54 ff ff       	call   3f10 <print_asm_1>
    ea83:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    ea89:	83 c4 10             	add    $0x10,%esp
    ea8c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    ea90:	74 05                	je     ea97 <jna_short_+0x67>
    ea92:	e8 19 ec ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    ea97:	83 c4 08             	add    $0x8,%esp
    ea9a:	b8 02 00 00 00       	mov    $0x2,%eax
    ea9f:	5b                   	pop    %ebx
    eaa0:	c3                   	ret    
    eaa1:	eb 0d                	jmp    eab0 <jne_short_>
    eaa3:	90                   	nop
    eaa4:	90                   	nop
    eaa5:	90                   	nop
    eaa6:	90                   	nop
    eaa7:	90                   	nop
    eaa8:	90                   	nop
    eaa9:	90                   	nop
    eaaa:	90                   	nop
    eaab:	90                   	nop
    eaac:	90                   	nop
    eaad:	90                   	nop
    eaae:	90                   	nop
    eaaf:	90                   	nop

0000eab0 <jne_short_>:
    eab0:	53                   	push   %ebx
    eab1:	e8 0a 42 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    eab6:	81 c3 4a c5 01 00    	add    $0x1c54a,%ebx
    eabc:	83 ec 08             	sub    $0x8,%esp
    eabf:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    eac5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    eac9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ead0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    ead6:	8d 51 01             	lea    0x1(%ecx),%edx
    ead9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    eae0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    eae6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    eaea:	89 50 04             	mov    %edx,0x4(%eax)
    eaed:	50                   	push   %eax
    eaee:	8d 83 61 13 ff ff    	lea    -0xec9f(%ebx),%eax
    eaf4:	6a 02                	push   $0x2
    eaf6:	50                   	push   %eax
    eaf7:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    eafd:	50                   	push   %eax
    eafe:	e8 0d 54 ff ff       	call   3f10 <print_asm_1>
    eb03:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    eb09:	83 c4 10             	add    $0x10,%esp
    eb0c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    eb10:	75 05                	jne    eb17 <jne_short_+0x67>
    eb12:	e8 99 eb ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    eb17:	83 c4 08             	add    $0x8,%esp
    eb1a:	b8 02 00 00 00       	mov    $0x2,%eax
    eb1f:	5b                   	pop    %ebx
    eb20:	c3                   	ret    
    eb21:	eb 0d                	jmp    eb30 <jno_short_>
    eb23:	90                   	nop
    eb24:	90                   	nop
    eb25:	90                   	nop
    eb26:	90                   	nop
    eb27:	90                   	nop
    eb28:	90                   	nop
    eb29:	90                   	nop
    eb2a:	90                   	nop
    eb2b:	90                   	nop
    eb2c:	90                   	nop
    eb2d:	90                   	nop
    eb2e:	90                   	nop
    eb2f:	90                   	nop

0000eb30 <jno_short_>:
    eb30:	53                   	push   %ebx
    eb31:	e8 8a 41 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    eb36:	81 c3 ca c4 01 00    	add    $0x1c4ca,%ebx
    eb3c:	83 ec 08             	sub    $0x8,%esp
    eb3f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    eb45:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    eb49:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    eb50:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    eb56:	8d 51 01             	lea    0x1(%ecx),%edx
    eb59:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    eb60:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    eb66:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    eb6a:	89 50 04             	mov    %edx,0x4(%eax)
    eb6d:	50                   	push   %eax
    eb6e:	8d 83 d1 0a ff ff    	lea    -0xf52f(%ebx),%eax
    eb74:	6a 02                	push   $0x2
    eb76:	50                   	push   %eax
    eb77:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    eb7d:	50                   	push   %eax
    eb7e:	e8 8d 53 ff ff       	call   3f10 <print_asm_1>
    eb83:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    eb89:	83 c4 10             	add    $0x10,%esp
    eb8c:	f6 40 25 08          	testb  $0x8,0x25(%eax)
    eb90:	74 05                	je     eb97 <jno_short_+0x67>
    eb92:	e8 19 eb ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    eb97:	83 c4 08             	add    $0x8,%esp
    eb9a:	b8 02 00 00 00       	mov    $0x2,%eax
    eb9f:	5b                   	pop    %ebx
    eba0:	c3                   	ret    
    eba1:	eb 0d                	jmp    ebb0 <jno_b>
    eba3:	90                   	nop
    eba4:	90                   	nop
    eba5:	90                   	nop
    eba6:	90                   	nop
    eba7:	90                   	nop
    eba8:	90                   	nop
    eba9:	90                   	nop
    ebaa:	90                   	nop
    ebab:	90                   	nop
    ebac:	90                   	nop
    ebad:	90                   	nop
    ebae:	90                   	nop
    ebaf:	90                   	nop

0000ebb0 <jno_b>:
    ebb0:	e9 7b ff ff ff       	jmp    eb30 <jno_short_>
    ebb5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ebb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ebc0 <jnp_short_>:
    ebc0:	53                   	push   %ebx
    ebc1:	e8 fa 40 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ebc6:	81 c3 3a c4 01 00    	add    $0x1c43a,%ebx
    ebcc:	83 ec 08             	sub    $0x8,%esp
    ebcf:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    ebd5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    ebd9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ebe0:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    ebe6:	8d 51 01             	lea    0x1(%ecx),%edx
    ebe9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ebf0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    ebf6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    ebfa:	89 50 04             	mov    %edx,0x4(%eax)
    ebfd:	50                   	push   %eax
    ebfe:	8d 83 d4 0a ff ff    	lea    -0xf52c(%ebx),%eax
    ec04:	6a 02                	push   $0x2
    ec06:	50                   	push   %eax
    ec07:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    ec0d:	50                   	push   %eax
    ec0e:	e8 fd 52 ff ff       	call   3f10 <print_asm_1>
    ec13:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    ec19:	83 c4 10             	add    $0x10,%esp
    ec1c:	f6 40 24 04          	testb  $0x4,0x24(%eax)
    ec20:	75 05                	jne    ec27 <jnp_short_+0x67>
    ec22:	e8 89 ea ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    ec27:	83 c4 08             	add    $0x8,%esp
    ec2a:	b8 02 00 00 00       	mov    $0x2,%eax
    ec2f:	5b                   	pop    %ebx
    ec30:	c3                   	ret    
    ec31:	eb 0d                	jmp    ec40 <jnp_b>
    ec33:	90                   	nop
    ec34:	90                   	nop
    ec35:	90                   	nop
    ec36:	90                   	nop
    ec37:	90                   	nop
    ec38:	90                   	nop
    ec39:	90                   	nop
    ec3a:	90                   	nop
    ec3b:	90                   	nop
    ec3c:	90                   	nop
    ec3d:	90                   	nop
    ec3e:	90                   	nop
    ec3f:	90                   	nop

0000ec40 <jnp_b>:
    ec40:	e9 7b ff ff ff       	jmp    ebc0 <jnp_short_>
    ec45:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ec49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ec50 <jns_short_>:
    ec50:	53                   	push   %ebx
    ec51:	e8 6a 40 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ec56:	81 c3 aa c3 01 00    	add    $0x1c3aa,%ebx
    ec5c:	83 ec 08             	sub    $0x8,%esp
    ec5f:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    ec65:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    ec69:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ec70:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    ec76:	8d 51 01             	lea    0x1(%ecx),%edx
    ec79:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ec80:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    ec86:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    ec8a:	89 50 04             	mov    %edx,0x4(%eax)
    ec8d:	50                   	push   %eax
    ec8e:	8d 83 d7 0a ff ff    	lea    -0xf529(%ebx),%eax
    ec94:	6a 02                	push   $0x2
    ec96:	50                   	push   %eax
    ec97:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    ec9d:	50                   	push   %eax
    ec9e:	e8 6d 52 ff ff       	call   3f10 <print_asm_1>
    eca3:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    eca9:	83 c4 10             	add    $0x10,%esp
    ecac:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
    ecb0:	78 05                	js     ecb7 <jns_short_+0x67>
    ecb2:	e8 f9 e9 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    ecb7:	83 c4 08             	add    $0x8,%esp
    ecba:	b8 02 00 00 00       	mov    $0x2,%eax
    ecbf:	5b                   	pop    %ebx
    ecc0:	c3                   	ret    
    ecc1:	eb 0d                	jmp    ecd0 <jns_b>
    ecc3:	90                   	nop
    ecc4:	90                   	nop
    ecc5:	90                   	nop
    ecc6:	90                   	nop
    ecc7:	90                   	nop
    ecc8:	90                   	nop
    ecc9:	90                   	nop
    ecca:	90                   	nop
    eccb:	90                   	nop
    eccc:	90                   	nop
    eccd:	90                   	nop
    ecce:	90                   	nop
    eccf:	90                   	nop

0000ecd0 <jns_b>:
    ecd0:	e9 7b ff ff ff       	jmp    ec50 <jns_short_>
    ecd5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ecd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ece0 <jecxz_short_>:
    ece0:	53                   	push   %ebx
    ece1:	e8 da 3f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ece6:	81 c3 1a c3 01 00    	add    $0x1c31a,%ebx
    ecec:	83 ec 08             	sub    $0x8,%esp
    ecef:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
    ecf5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    ecf9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ed00:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
    ed06:	8d 51 01             	lea    0x1(%ecx),%edx
    ed09:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
    ed10:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    ed16:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    ed1a:	89 50 04             	mov    %edx,0x4(%eax)
    ed1d:	50                   	push   %eax
    ed1e:	8d 83 14 0b ff ff    	lea    -0xf4ec(%ebx),%eax
    ed24:	6a 02                	push   $0x2
    ed26:	50                   	push   %eax
    ed27:	8d 83 0f 0b ff ff    	lea    -0xf4f1(%ebx),%eax
    ed2d:	50                   	push   %eax
    ed2e:	e8 dd 51 ff ff       	call   3f10 <print_asm_1>
    ed33:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    ed39:	83 c4 10             	add    $0x10,%esp
    ed3c:	8b 40 04             	mov    0x4(%eax),%eax
    ed3f:	85 c0                	test   %eax,%eax
    ed41:	75 05                	jne    ed48 <jecxz_short_+0x68>
    ed43:	e8 68 e9 ff ff       	call   d6b0 <instr_execute_1op_cc_pass>
    ed48:	83 c4 08             	add    $0x8,%esp
    ed4b:	b8 02 00 00 00       	mov    $0x2,%eax
    ed50:	5b                   	pop    %ebx
    ed51:	c3                   	ret    
    ed52:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ed59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ed60 <je_b>:
    ed60:	56                   	push   %esi
    ed61:	53                   	push   %ebx
    ed62:	e8 59 3f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ed67:	81 c3 99 c2 01 00    	add    $0x1c299,%ebx
    ed6d:	83 ec 40             	sub    $0x40,%esp
    ed70:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    ed74:	8d 74 24 18          	lea    0x18(%esp),%esi
    ed78:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    ed7f:	00 
    ed80:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    ed87:	00 
    ed88:	83 c0 01             	add    $0x1,%eax
    ed8b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    ed8f:	56                   	push   %esi
    ed90:	e8 0b 59 ff ff       	call   46a0 <operand_read>
    ed95:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    ed9b:	56                   	push   %esi
    ed9c:	6a 02                	push   $0x2
    ed9e:	50                   	push   %eax
    ed9f:	8d 83 19 0b ff ff    	lea    -0xf4e7(%ebx),%eax
    eda5:	50                   	push   %eax
    eda6:	e8 65 51 ff ff       	call   3f10 <print_asm_1>
    edab:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    edb1:	83 c4 20             	add    $0x20,%esp
    edb4:	b8 02 00 00 00       	mov    $0x2,%eax
    edb9:	f6 42 24 40          	testb  $0x40,0x24(%edx)
    edbd:	75 09                	jne    edc8 <je_b+0x68>
    edbf:	83 c4 34             	add    $0x34,%esp
    edc2:	5b                   	pop    %ebx
    edc3:	5e                   	pop    %esi
    edc4:	c3                   	ret    
    edc5:	8d 76 00             	lea    0x0(%esi),%esi
    edc8:	0f be 44 24 18       	movsbl 0x18(%esp),%eax
    edcd:	83 c4 34             	add    $0x34,%esp
    edd0:	5b                   	pop    %ebx
    edd1:	5e                   	pop    %esi
    edd2:	83 c0 02             	add    $0x2,%eax
    edd5:	c3                   	ret    
    edd6:	8d 76 00             	lea    0x0(%esi),%esi
    edd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ede0 <jg_b>:
    ede0:	56                   	push   %esi
    ede1:	53                   	push   %ebx
    ede2:	e8 d9 3e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ede7:	81 c3 19 c2 01 00    	add    $0x1c219,%ebx
    eded:	83 ec 40             	sub    $0x40,%esp
    edf0:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    edf4:	8d 74 24 18          	lea    0x18(%esp),%esi
    edf8:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    edff:	00 
    ee00:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    ee07:	00 
    ee08:	83 c0 01             	add    $0x1,%eax
    ee0b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    ee0f:	56                   	push   %esi
    ee10:	e8 8b 58 ff ff       	call   46a0 <operand_read>
    ee15:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    ee1b:	56                   	push   %esi
    ee1c:	6a 02                	push   $0x2
    ee1e:	50                   	push   %eax
    ee1f:	8d 83 1c 0b ff ff    	lea    -0xf4e4(%ebx),%eax
    ee25:	50                   	push   %eax
    ee26:	e8 e5 50 ff ff       	call   3f10 <print_asm_1>
    ee2b:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
    ee31:	83 c4 20             	add    $0x20,%esp
    ee34:	b8 02 00 00 00       	mov    $0x2,%eax
    ee39:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
    ee3d:	f6 c2 40             	test   $0x40,%dl
    ee40:	74 0e                	je     ee50 <jg_b+0x70>
    ee42:	83 c4 34             	add    $0x34,%esp
    ee45:	5b                   	pop    %ebx
    ee46:	5e                   	pop    %esi
    ee47:	c3                   	ret    
    ee48:	90                   	nop
    ee49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ee50:	0f b6 49 25          	movzbl 0x25(%ecx),%ecx
    ee54:	c0 ea 07             	shr    $0x7,%dl
    ee57:	c0 e9 03             	shr    $0x3,%cl
    ee5a:	83 e1 01             	and    $0x1,%ecx
    ee5d:	38 ca                	cmp    %cl,%dl
    ee5f:	75 e1                	jne    ee42 <jg_b+0x62>
    ee61:	0f be 44 24 18       	movsbl 0x18(%esp),%eax
    ee66:	83 c0 02             	add    $0x2,%eax
    ee69:	eb d7                	jmp    ee42 <jg_b+0x62>
    ee6b:	90                   	nop
    ee6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000ee70 <jng_b>:
    ee70:	56                   	push   %esi
    ee71:	53                   	push   %ebx
    ee72:	e8 49 3e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ee77:	81 c3 89 c1 01 00    	add    $0x1c189,%ebx
    ee7d:	83 ec 40             	sub    $0x40,%esp
    ee80:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    ee84:	8d 74 24 18          	lea    0x18(%esp),%esi
    ee88:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    ee8f:	00 
    ee90:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    ee97:	00 
    ee98:	83 c0 01             	add    $0x1,%eax
    ee9b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    ee9f:	56                   	push   %esi
    eea0:	e8 fb 57 ff ff       	call   46a0 <operand_read>
    eea5:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    eeab:	56                   	push   %esi
    eeac:	6a 02                	push   $0x2
    eeae:	50                   	push   %eax
    eeaf:	8d 83 1f 0b ff ff    	lea    -0xf4e1(%ebx),%eax
    eeb5:	50                   	push   %eax
    eeb6:	e8 55 50 ff ff       	call   3f10 <print_asm_1>
    eebb:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
    eec1:	83 c4 20             	add    $0x20,%esp
    eec4:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
    eec8:	f6 c2 40             	test   $0x40,%dl
    eecb:	75 16                	jne    eee3 <jng_b+0x73>
    eecd:	0f b6 49 25          	movzbl 0x25(%ecx),%ecx
    eed1:	c0 ea 07             	shr    $0x7,%dl
    eed4:	b8 02 00 00 00       	mov    $0x2,%eax
    eed9:	c0 e9 03             	shr    $0x3,%cl
    eedc:	83 e1 01             	and    $0x1,%ecx
    eedf:	38 ca                	cmp    %cl,%dl
    eee1:	74 08                	je     eeeb <jng_b+0x7b>
    eee3:	0f be 44 24 18       	movsbl 0x18(%esp),%eax
    eee8:	83 c0 02             	add    $0x2,%eax
    eeeb:	83 c4 34             	add    $0x34,%esp
    eeee:	5b                   	pop    %ebx
    eeef:	5e                   	pop    %esi
    eef0:	c3                   	ret    
    eef1:	eb 0d                	jmp    ef00 <jne_b>
    eef3:	90                   	nop
    eef4:	90                   	nop
    eef5:	90                   	nop
    eef6:	90                   	nop
    eef7:	90                   	nop
    eef8:	90                   	nop
    eef9:	90                   	nop
    eefa:	90                   	nop
    eefb:	90                   	nop
    eefc:	90                   	nop
    eefd:	90                   	nop
    eefe:	90                   	nop
    eeff:	90                   	nop

0000ef00 <jne_b>:
    ef00:	56                   	push   %esi
    ef01:	53                   	push   %ebx
    ef02:	e8 b9 3d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ef07:	81 c3 f9 c0 01 00    	add    $0x1c0f9,%ebx
    ef0d:	83 ec 40             	sub    $0x40,%esp
    ef10:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    ef14:	8d 74 24 18          	lea    0x18(%esp),%esi
    ef18:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    ef1f:	00 
    ef20:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    ef27:	00 
    ef28:	83 c0 01             	add    $0x1,%eax
    ef2b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    ef2f:	56                   	push   %esi
    ef30:	e8 6b 57 ff ff       	call   46a0 <operand_read>
    ef35:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    ef3b:	56                   	push   %esi
    ef3c:	6a 02                	push   $0x2
    ef3e:	50                   	push   %eax
    ef3f:	8d 83 23 0b ff ff    	lea    -0xf4dd(%ebx),%eax
    ef45:	50                   	push   %eax
    ef46:	e8 c5 4f ff ff       	call   3f10 <print_asm_1>
    ef4b:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    ef51:	83 c4 20             	add    $0x20,%esp
    ef54:	b8 02 00 00 00       	mov    $0x2,%eax
    ef59:	f6 42 24 40          	testb  $0x40,0x24(%edx)
    ef5d:	74 09                	je     ef68 <jne_b+0x68>
    ef5f:	83 c4 34             	add    $0x34,%esp
    ef62:	5b                   	pop    %ebx
    ef63:	5e                   	pop    %esi
    ef64:	c3                   	ret    
    ef65:	8d 76 00             	lea    0x0(%esi),%esi
    ef68:	0f be 44 24 18       	movsbl 0x18(%esp),%eax
    ef6d:	83 c4 34             	add    $0x34,%esp
    ef70:	5b                   	pop    %ebx
    ef71:	5e                   	pop    %esi
    ef72:	83 c0 02             	add    $0x2,%eax
    ef75:	c3                   	ret    
    ef76:	8d 76 00             	lea    0x0(%esi),%esi
    ef79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ef80 <jna_b>:
    ef80:	56                   	push   %esi
    ef81:	53                   	push   %ebx
    ef82:	e8 39 3d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ef87:	81 c3 79 c0 01 00    	add    $0x1c079,%ebx
    ef8d:	83 ec 40             	sub    $0x40,%esp
    ef90:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    ef94:	8d 74 24 18          	lea    0x18(%esp),%esi
    ef98:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    ef9f:	00 
    efa0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    efa7:	00 
    efa8:	83 c0 01             	add    $0x1,%eax
    efab:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    efaf:	56                   	push   %esi
    efb0:	e8 eb 56 ff ff       	call   46a0 <operand_read>
    efb5:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    efbb:	56                   	push   %esi
    efbc:	6a 02                	push   $0x2
    efbe:	50                   	push   %eax
    efbf:	8d 83 27 0b ff ff    	lea    -0xf4d9(%ebx),%eax
    efc5:	50                   	push   %eax
    efc6:	e8 45 4f ff ff       	call   3f10 <print_asm_1>
    efcb:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    efd1:	83 c4 20             	add    $0x20,%esp
    efd4:	b8 02 00 00 00       	mov    $0x2,%eax
    efd9:	f6 42 24 41          	testb  $0x41,0x24(%edx)
    efdd:	75 09                	jne    efe8 <jna_b+0x68>
    efdf:	83 c4 34             	add    $0x34,%esp
    efe2:	5b                   	pop    %ebx
    efe3:	5e                   	pop    %esi
    efe4:	c3                   	ret    
    efe5:	8d 76 00             	lea    0x0(%esi),%esi
    efe8:	0f be 44 24 18       	movsbl 0x18(%esp),%eax
    efed:	83 c4 34             	add    $0x34,%esp
    eff0:	5b                   	pop    %ebx
    eff1:	5e                   	pop    %esi
    eff2:	83 c0 02             	add    $0x2,%eax
    eff5:	c3                   	ret    
    eff6:	8d 76 00             	lea    0x0(%esi),%esi
    eff9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000f000 <jl_v>:
    f000:	55                   	push   %ebp
    f001:	57                   	push   %edi
    f002:	56                   	push   %esi
    f003:	53                   	push   %ebx
    f004:	e8 b7 3c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f009:	81 c3 f7 bf 01 00    	add    $0x1bff7,%ebx
    f00f:	83 ec 48             	sub    $0x48,%esp
    f012:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    f018:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    f01c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f023:	00 
    f024:	0f b6 07             	movzbl (%edi),%eax
    f027:	89 44 24 28          	mov    %eax,0x28(%esp)
    f02b:	8b 44 24 5c          	mov    0x5c(%esp),%eax
    f02f:	83 c0 01             	add    $0x1,%eax
    f032:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f036:	55                   	push   %ebp
    f037:	e8 64 56 ff ff       	call   46a0 <operand_read>
    f03c:	0f b6 07             	movzbl (%edi),%eax
    f03f:	55                   	push   %ebp
    f040:	c0 e8 03             	shr    $0x3,%al
    f043:	0f b6 f0             	movzbl %al,%esi
    f046:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f04c:	83 c6 01             	add    $0x1,%esi
    f04f:	56                   	push   %esi
    f050:	50                   	push   %eax
    f051:	8d 83 2b 0b ff ff    	lea    -0xf4d5(%ebx),%eax
    f057:	50                   	push   %eax
    f058:	e8 b3 4e ff ff       	call   3f10 <print_asm_1>
    f05d:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f063:	83 c4 20             	add    $0x20,%esp
    f066:	0f b6 50 24          	movzbl 0x24(%eax),%edx
    f06a:	0f b6 40 25          	movzbl 0x25(%eax),%eax
    f06e:	c0 e8 03             	shr    $0x3,%al
    f071:	c0 ea 07             	shr    $0x7,%dl
    f074:	83 e0 01             	and    $0x1,%eax
    f077:	38 c2                	cmp    %al,%dl
    f079:	74 16                	je     f091 <jl_v+0x91>
    f07b:	0f b6 07             	movzbl (%edi),%eax
    f07e:	8d 50 f0             	lea    -0x10(%eax),%edx
    f081:	81 e2 ef 00 00 00    	and    $0xef,%edx
    f087:	75 28                	jne    f0b1 <jl_v+0xb1>
    f089:	3c 10                	cmp    $0x10,%al
    f08b:	74 13                	je     f0a0 <jl_v+0xa0>
    f08d:	03 74 24 18          	add    0x18(%esp),%esi
    f091:	83 c4 3c             	add    $0x3c,%esp
    f094:	89 f0                	mov    %esi,%eax
    f096:	5b                   	pop    %ebx
    f097:	5e                   	pop    %esi
    f098:	5f                   	pop    %edi
    f099:	5d                   	pop    %ebp
    f09a:	c3                   	ret    
    f09b:	90                   	nop
    f09c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f0a0:	0f bf 44 24 18       	movswl 0x18(%esp),%eax
    f0a5:	83 c4 3c             	add    $0x3c,%esp
    f0a8:	5b                   	pop    %ebx
    f0a9:	01 c6                	add    %eax,%esi
    f0ab:	89 f0                	mov    %esi,%eax
    f0ad:	5e                   	pop    %esi
    f0ae:	5f                   	pop    %edi
    f0af:	5d                   	pop    %ebp
    f0b0:	c3                   	ret    
    f0b1:	8d 83 88 0b ff ff    	lea    -0xf478(%ebx),%eax
    f0b7:	50                   	push   %eax
    f0b8:	8d 83 2e 0b ff ff    	lea    -0xf4d2(%ebx),%eax
    f0be:	68 9e 00 00 00       	push   $0x9e
    f0c3:	50                   	push   %eax
    f0c4:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
    f0ca:	50                   	push   %eax
    f0cb:	e8 c0 37 ff ff       	call   2890 <__assert_fail@plt>

0000f0d0 <jge_b>:
    f0d0:	56                   	push   %esi
    f0d1:	53                   	push   %ebx
    f0d2:	e8 e9 3b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f0d7:	81 c3 29 bf 01 00    	add    $0x1bf29,%ebx
    f0dd:	83 ec 40             	sub    $0x40,%esp
    f0e0:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    f0e4:	8d 74 24 18          	lea    0x18(%esp),%esi
    f0e8:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    f0ef:	00 
    f0f0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f0f7:	00 
    f0f8:	83 c0 01             	add    $0x1,%eax
    f0fb:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f0ff:	56                   	push   %esi
    f100:	e8 9b 55 ff ff       	call   46a0 <operand_read>
    f105:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f10b:	56                   	push   %esi
    f10c:	6a 02                	push   $0x2
    f10e:	50                   	push   %eax
    f10f:	8d 83 42 0b ff ff    	lea    -0xf4be(%ebx),%eax
    f115:	50                   	push   %eax
    f116:	e8 f5 4d ff ff       	call   3f10 <print_asm_1>
    f11b:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f121:	83 c4 20             	add    $0x20,%esp
    f124:	0f b6 50 25          	movzbl 0x25(%eax),%edx
    f128:	0f b6 48 24          	movzbl 0x24(%eax),%ecx
    f12c:	b8 02 00 00 00       	mov    $0x2,%eax
    f131:	c0 ea 03             	shr    $0x3,%dl
    f134:	c0 e9 07             	shr    $0x7,%cl
    f137:	83 e2 01             	and    $0x1,%edx
    f13a:	38 d1                	cmp    %dl,%cl
    f13c:	74 0a                	je     f148 <jge_b+0x78>
    f13e:	83 c4 34             	add    $0x34,%esp
    f141:	5b                   	pop    %ebx
    f142:	5e                   	pop    %esi
    f143:	c3                   	ret    
    f144:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f148:	0f be 44 24 18       	movsbl 0x18(%esp),%eax
    f14d:	83 c4 34             	add    $0x34,%esp
    f150:	5b                   	pop    %ebx
    f151:	5e                   	pop    %esi
    f152:	83 c0 02             	add    $0x2,%eax
    f155:	c3                   	ret    
    f156:	8d 76 00             	lea    0x0(%esi),%esi
    f159:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000f160 <jle_v>:
    f160:	55                   	push   %ebp
    f161:	57                   	push   %edi
    f162:	56                   	push   %esi
    f163:	53                   	push   %ebx
    f164:	e8 57 3b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f169:	81 c3 97 be 01 00    	add    $0x1be97,%ebx
    f16f:	83 ec 48             	sub    $0x48,%esp
    f172:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    f178:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    f17c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f183:	00 
    f184:	0f b6 07             	movzbl (%edi),%eax
    f187:	89 44 24 28          	mov    %eax,0x28(%esp)
    f18b:	8b 44 24 5c          	mov    0x5c(%esp),%eax
    f18f:	83 c0 01             	add    $0x1,%eax
    f192:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f196:	55                   	push   %ebp
    f197:	e8 04 55 ff ff       	call   46a0 <operand_read>
    f19c:	0f b6 07             	movzbl (%edi),%eax
    f19f:	55                   	push   %ebp
    f1a0:	c0 e8 03             	shr    $0x3,%al
    f1a3:	0f b6 f0             	movzbl %al,%esi
    f1a6:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f1ac:	83 c6 01             	add    $0x1,%esi
    f1af:	56                   	push   %esi
    f1b0:	50                   	push   %eax
    f1b1:	8d 83 46 0b ff ff    	lea    -0xf4ba(%ebx),%eax
    f1b7:	50                   	push   %eax
    f1b8:	e8 53 4d ff ff       	call   3f10 <print_asm_1>
    f1bd:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f1c3:	83 c4 20             	add    $0x20,%esp
    f1c6:	0f b6 50 24          	movzbl 0x24(%eax),%edx
    f1ca:	0f b6 40 25          	movzbl 0x25(%eax),%eax
    f1ce:	89 d1                	mov    %edx,%ecx
    f1d0:	c0 e8 03             	shr    $0x3,%al
    f1d3:	c0 e9 07             	shr    $0x7,%cl
    f1d6:	83 e0 01             	and    $0x1,%eax
    f1d9:	38 c1                	cmp    %al,%cl
    f1db:	74 23                	je     f200 <jle_v+0xa0>
    f1dd:	0f b6 07             	movzbl (%edi),%eax
    f1e0:	8d 50 f0             	lea    -0x10(%eax),%edx
    f1e3:	81 e2 ef 00 00 00    	and    $0xef,%edx
    f1e9:	75 36                	jne    f221 <jle_v+0xc1>
    f1eb:	3c 10                	cmp    $0x10,%al
    f1ed:	74 21                	je     f210 <jle_v+0xb0>
    f1ef:	03 74 24 18          	add    0x18(%esp),%esi
    f1f3:	83 c4 3c             	add    $0x3c,%esp
    f1f6:	5b                   	pop    %ebx
    f1f7:	89 f0                	mov    %esi,%eax
    f1f9:	5e                   	pop    %esi
    f1fa:	5f                   	pop    %edi
    f1fb:	5d                   	pop    %ebp
    f1fc:	c3                   	ret    
    f1fd:	8d 76 00             	lea    0x0(%esi),%esi
    f200:	83 e2 40             	and    $0x40,%edx
    f203:	75 d8                	jne    f1dd <jle_v+0x7d>
    f205:	83 c4 3c             	add    $0x3c,%esp
    f208:	89 f0                	mov    %esi,%eax
    f20a:	5b                   	pop    %ebx
    f20b:	5e                   	pop    %esi
    f20c:	5f                   	pop    %edi
    f20d:	5d                   	pop    %ebp
    f20e:	c3                   	ret    
    f20f:	90                   	nop
    f210:	0f bf 44 24 18       	movswl 0x18(%esp),%eax
    f215:	83 c4 3c             	add    $0x3c,%esp
    f218:	5b                   	pop    %ebx
    f219:	01 c6                	add    %eax,%esi
    f21b:	89 f0                	mov    %esi,%eax
    f21d:	5e                   	pop    %esi
    f21e:	5f                   	pop    %edi
    f21f:	5d                   	pop    %ebp
    f220:	c3                   	ret    
    f221:	8d 83 80 0b ff ff    	lea    -0xf480(%ebx),%eax
    f227:	50                   	push   %eax
    f228:	8d 83 2e 0b ff ff    	lea    -0xf4d2(%ebx),%eax
    f22e:	68 c6 00 00 00       	push   $0xc6
    f233:	50                   	push   %eax
    f234:	8d 83 54 0b ff ff    	lea    -0xf4ac(%ebx),%eax
    f23a:	50                   	push   %eax
    f23b:	e8 50 36 ff ff       	call   2890 <__assert_fail@plt>

0000f240 <jbe_v>:
    f240:	55                   	push   %ebp
    f241:	57                   	push   %edi
    f242:	56                   	push   %esi
    f243:	53                   	push   %ebx
    f244:	e8 77 3a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f249:	81 c3 b7 bd 01 00    	add    $0x1bdb7,%ebx
    f24f:	83 ec 48             	sub    $0x48,%esp
    f252:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    f258:	8b 4c 24 5c          	mov    0x5c(%esp),%ecx
    f25c:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    f260:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f267:	00 
    f268:	0f b6 17             	movzbl (%edi),%edx
    f26b:	89 54 24 28          	mov    %edx,0x28(%esp)
    f26f:	89 d0                	mov    %edx,%eax
    f271:	8d 51 01             	lea    0x1(%ecx),%edx
    f274:	c0 e8 03             	shr    $0x3,%al
    f277:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    f27b:	55                   	push   %ebp
    f27c:	0f b6 f0             	movzbl %al,%esi
    f27f:	83 c6 01             	add    $0x1,%esi
    f282:	e8 19 54 ff ff       	call   46a0 <operand_read>
    f287:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f28d:	55                   	push   %ebp
    f28e:	56                   	push   %esi
    f28f:	50                   	push   %eax
    f290:	8d 83 27 0b ff ff    	lea    -0xf4d9(%ebx),%eax
    f296:	50                   	push   %eax
    f297:	e8 74 4c ff ff       	call   3f10 <print_asm_1>
    f29c:	0f b6 07             	movzbl (%edi),%eax
    f29f:	83 c4 20             	add    $0x20,%esp
    f2a2:	8d 50 f0             	lea    -0x10(%eax),%edx
    f2a5:	81 e2 ef 00 00 00    	and    $0xef,%edx
    f2ab:	75 34                	jne    f2e1 <jbe_v+0xa1>
    f2ad:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    f2b3:	f6 42 24 41          	testb  $0x41,0x24(%edx)
    f2b7:	74 08                	je     f2c1 <jbe_v+0x81>
    f2b9:	3c 10                	cmp    $0x10,%al
    f2bb:	74 13                	je     f2d0 <jbe_v+0x90>
    f2bd:	03 74 24 18          	add    0x18(%esp),%esi
    f2c1:	83 c4 3c             	add    $0x3c,%esp
    f2c4:	89 f0                	mov    %esi,%eax
    f2c6:	5b                   	pop    %ebx
    f2c7:	5e                   	pop    %esi
    f2c8:	5f                   	pop    %edi
    f2c9:	5d                   	pop    %ebp
    f2ca:	c3                   	ret    
    f2cb:	90                   	nop
    f2cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f2d0:	0f bf 44 24 18       	movswl 0x18(%esp),%eax
    f2d5:	83 c4 3c             	add    $0x3c,%esp
    f2d8:	5b                   	pop    %ebx
    f2d9:	01 c6                	add    %eax,%esi
    f2db:	89 f0                	mov    %esi,%eax
    f2dd:	5e                   	pop    %esi
    f2de:	5f                   	pop    %edi
    f2df:	5d                   	pop    %ebp
    f2e0:	c3                   	ret    
    f2e1:	8d 83 78 0b ff ff    	lea    -0xf488(%ebx),%eax
    f2e7:	50                   	push   %eax
    f2e8:	8d 83 2e 0b ff ff    	lea    -0xf4d2(%ebx),%eax
    f2ee:	68 db 00 00 00       	push   $0xdb
    f2f3:	50                   	push   %eax
    f2f4:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
    f2fa:	50                   	push   %eax
    f2fb:	e8 90 35 ff ff       	call   2890 <__assert_fail@plt>

0000f300 <jl_b>:
    f300:	56                   	push   %esi
    f301:	53                   	push   %ebx
    f302:	e8 b9 39 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f307:	81 c3 f9 bc 01 00    	add    $0x1bcf9,%ebx
    f30d:	83 ec 40             	sub    $0x40,%esp
    f310:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    f314:	8d 74 24 18          	lea    0x18(%esp),%esi
    f318:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    f31f:	00 
    f320:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f327:	00 
    f328:	83 c0 01             	add    $0x1,%eax
    f32b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f32f:	56                   	push   %esi
    f330:	e8 6b 53 ff ff       	call   46a0 <operand_read>
    f335:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f33b:	56                   	push   %esi
    f33c:	6a 02                	push   $0x2
    f33e:	50                   	push   %eax
    f33f:	8d 83 2b 0b ff ff    	lea    -0xf4d5(%ebx),%eax
    f345:	50                   	push   %eax
    f346:	e8 c5 4b ff ff       	call   3f10 <print_asm_1>
    f34b:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f351:	83 c4 20             	add    $0x20,%esp
    f354:	0f b6 50 25          	movzbl 0x25(%eax),%edx
    f358:	0f b6 48 24          	movzbl 0x24(%eax),%ecx
    f35c:	b8 02 00 00 00       	mov    $0x2,%eax
    f361:	c0 ea 03             	shr    $0x3,%dl
    f364:	c0 e9 07             	shr    $0x7,%cl
    f367:	83 e2 01             	and    $0x1,%edx
    f36a:	38 d1                	cmp    %dl,%cl
    f36c:	74 08                	je     f376 <jl_b+0x76>
    f36e:	0f be 44 24 18       	movsbl 0x18(%esp),%eax
    f373:	83 c0 02             	add    $0x2,%eax
    f376:	83 c4 34             	add    $0x34,%esp
    f379:	5b                   	pop    %ebx
    f37a:	5e                   	pop    %esi
    f37b:	c3                   	ret    
    f37c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000f380 <je_v>:
    f380:	55                   	push   %ebp
    f381:	57                   	push   %edi
    f382:	56                   	push   %esi
    f383:	53                   	push   %ebx
    f384:	e8 37 39 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f389:	81 c3 77 bc 01 00    	add    $0x1bc77,%ebx
    f38f:	83 ec 48             	sub    $0x48,%esp
    f392:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    f398:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    f39c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f3a3:	00 
    f3a4:	0f b6 07             	movzbl (%edi),%eax
    f3a7:	89 44 24 28          	mov    %eax,0x28(%esp)
    f3ab:	8b 44 24 5c          	mov    0x5c(%esp),%eax
    f3af:	83 c0 01             	add    $0x1,%eax
    f3b2:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f3b6:	55                   	push   %ebp
    f3b7:	e8 e4 52 ff ff       	call   46a0 <operand_read>
    f3bc:	0f b6 07             	movzbl (%edi),%eax
    f3bf:	55                   	push   %ebp
    f3c0:	c0 e8 03             	shr    $0x3,%al
    f3c3:	0f b6 f0             	movzbl %al,%esi
    f3c6:	83 c6 01             	add    $0x1,%esi
    f3c9:	8d 46 01             	lea    0x1(%esi),%eax
    f3cc:	50                   	push   %eax
    f3cd:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f3d3:	50                   	push   %eax
    f3d4:	8d 83 19 0b ff ff    	lea    -0xf4e7(%ebx),%eax
    f3da:	50                   	push   %eax
    f3db:	e8 30 4b ff ff       	call   3f10 <print_asm_1>
    f3e0:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f3e6:	83 c4 20             	add    $0x20,%esp
    f3e9:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    f3ed:	74 0f                	je     f3fe <je_v+0x7e>
    f3ef:	80 3f 10             	cmpb   $0x10,(%edi)
    f3f2:	0f bf 44 24 18       	movswl 0x18(%esp),%eax
    f3f7:	0f 45 44 24 18       	cmovne 0x18(%esp),%eax
    f3fc:	01 c6                	add    %eax,%esi
    f3fe:	83 c4 3c             	add    $0x3c,%esp
    f401:	89 f0                	mov    %esi,%eax
    f403:	5b                   	pop    %ebx
    f404:	5e                   	pop    %esi
    f405:	5f                   	pop    %edi
    f406:	5d                   	pop    %ebp
    f407:	c3                   	ret    
    f408:	90                   	nop
    f409:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000f410 <ja_v>:
    f410:	55                   	push   %ebp
    f411:	57                   	push   %edi
    f412:	56                   	push   %esi
    f413:	53                   	push   %ebx
    f414:	e8 a7 38 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f419:	81 c3 e7 bb 01 00    	add    $0x1bbe7,%ebx
    f41f:	83 ec 48             	sub    $0x48,%esp
    f422:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    f428:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    f42c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f433:	00 
    f434:	0f b6 07             	movzbl (%edi),%eax
    f437:	89 44 24 28          	mov    %eax,0x28(%esp)
    f43b:	8b 44 24 5c          	mov    0x5c(%esp),%eax
    f43f:	83 c0 01             	add    $0x1,%eax
    f442:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f446:	55                   	push   %ebp
    f447:	e8 54 52 ff ff       	call   46a0 <operand_read>
    f44c:	0f b6 07             	movzbl (%edi),%eax
    f44f:	55                   	push   %ebp
    f450:	c0 e8 03             	shr    $0x3,%al
    f453:	0f b6 f0             	movzbl %al,%esi
    f456:	83 c6 01             	add    $0x1,%esi
    f459:	8d 46 01             	lea    0x1(%esi),%eax
    f45c:	50                   	push   %eax
    f45d:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f463:	50                   	push   %eax
    f464:	8d 83 4a 0b ff ff    	lea    -0xf4b6(%ebx),%eax
    f46a:	50                   	push   %eax
    f46b:	e8 a0 4a ff ff       	call   3f10 <print_asm_1>
    f470:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f476:	83 c4 20             	add    $0x20,%esp
    f479:	f6 40 24 41          	testb  $0x41,0x24(%eax)
    f47d:	75 0f                	jne    f48e <ja_v+0x7e>
    f47f:	80 3f 10             	cmpb   $0x10,(%edi)
    f482:	0f bf 44 24 18       	movswl 0x18(%esp),%eax
    f487:	0f 45 44 24 18       	cmovne 0x18(%esp),%eax
    f48c:	01 c6                	add    %eax,%esi
    f48e:	83 c4 3c             	add    $0x3c,%esp
    f491:	89 f0                	mov    %esi,%eax
    f493:	5b                   	pop    %ebx
    f494:	5e                   	pop    %esi
    f495:	5f                   	pop    %edi
    f496:	5d                   	pop    %ebp
    f497:	c3                   	ret    
    f498:	90                   	nop
    f499:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000f4a0 <js_v>:
    f4a0:	55                   	push   %ebp
    f4a1:	57                   	push   %edi
    f4a2:	56                   	push   %esi
    f4a3:	53                   	push   %ebx
    f4a4:	e8 17 38 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f4a9:	81 c3 57 bb 01 00    	add    $0x1bb57,%ebx
    f4af:	83 ec 48             	sub    $0x48,%esp
    f4b2:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    f4b8:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    f4bc:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f4c3:	00 
    f4c4:	0f b6 07             	movzbl (%edi),%eax
    f4c7:	89 44 24 28          	mov    %eax,0x28(%esp)
    f4cb:	8b 44 24 5c          	mov    0x5c(%esp),%eax
    f4cf:	83 c0 01             	add    $0x1,%eax
    f4d2:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f4d6:	55                   	push   %ebp
    f4d7:	e8 c4 51 ff ff       	call   46a0 <operand_read>
    f4dc:	0f b6 07             	movzbl (%edi),%eax
    f4df:	55                   	push   %ebp
    f4e0:	c0 e8 03             	shr    $0x3,%al
    f4e3:	0f b6 f0             	movzbl %al,%esi
    f4e6:	83 c6 01             	add    $0x1,%esi
    f4e9:	8d 46 01             	lea    0x1(%esi),%eax
    f4ec:	50                   	push   %eax
    f4ed:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f4f3:	50                   	push   %eax
    f4f4:	8d 83 4d 0b ff ff    	lea    -0xf4b3(%ebx),%eax
    f4fa:	50                   	push   %eax
    f4fb:	e8 10 4a ff ff       	call   3f10 <print_asm_1>
    f500:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f506:	83 c4 20             	add    $0x20,%esp
    f509:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
    f50d:	79 0f                	jns    f51e <js_v+0x7e>
    f50f:	80 3f 10             	cmpb   $0x10,(%edi)
    f512:	0f bf 44 24 18       	movswl 0x18(%esp),%eax
    f517:	0f 45 44 24 18       	cmovne 0x18(%esp),%eax
    f51c:	01 c6                	add    %eax,%esi
    f51e:	83 c4 3c             	add    $0x3c,%esp
    f521:	89 f0                	mov    %esi,%eax
    f523:	5b                   	pop    %ebx
    f524:	5e                   	pop    %esi
    f525:	5f                   	pop    %edi
    f526:	5d                   	pop    %ebp
    f527:	c3                   	ret    
    f528:	90                   	nop
    f529:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000f530 <jb_b>:
    f530:	56                   	push   %esi
    f531:	53                   	push   %ebx
    f532:	e8 89 37 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f537:	81 c3 c9 ba 01 00    	add    $0x1bac9,%ebx
    f53d:	83 ec 40             	sub    $0x40,%esp
    f540:	8b 44 24 4c          	mov    0x4c(%esp),%eax
    f544:	8d 74 24 18          	lea    0x18(%esp),%esi
    f548:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
    f54f:	00 
    f550:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f557:	00 
    f558:	83 c0 01             	add    $0x1,%eax
    f55b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f55f:	56                   	push   %esi
    f560:	e8 3b 51 ff ff       	call   46a0 <operand_read>
    f565:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f56b:	56                   	push   %esi
    f56c:	6a 02                	push   $0x2
    f56e:	50                   	push   %eax
    f56f:	8d 83 50 0b ff ff    	lea    -0xf4b0(%ebx),%eax
    f575:	50                   	push   %eax
    f576:	e8 95 49 ff ff       	call   3f10 <print_asm_1>
    f57b:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
    f581:	83 c4 20             	add    $0x20,%esp
    f584:	b8 02 00 00 00       	mov    $0x2,%eax
    f589:	f6 42 24 01          	testb  $0x1,0x24(%edx)
    f58d:	75 09                	jne    f598 <jb_b+0x68>
    f58f:	83 c4 34             	add    $0x34,%esp
    f592:	5b                   	pop    %ebx
    f593:	5e                   	pop    %esi
    f594:	c3                   	ret    
    f595:	8d 76 00             	lea    0x0(%esi),%esi
    f598:	0f be 44 24 18       	movsbl 0x18(%esp),%eax
    f59d:	83 c4 34             	add    $0x34,%esp
    f5a0:	5b                   	pop    %ebx
    f5a1:	5e                   	pop    %esi
    f5a2:	83 c0 02             	add    $0x2,%eax
    f5a5:	c3                   	ret    
    f5a6:	8d 76 00             	lea    0x0(%esi),%esi
    f5a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000f5b0 <jne_v>:
    f5b0:	55                   	push   %ebp
    f5b1:	57                   	push   %edi
    f5b2:	56                   	push   %esi
    f5b3:	53                   	push   %ebx
    f5b4:	e8 07 37 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f5b9:	81 c3 47 ba 01 00    	add    $0x1ba47,%ebx
    f5bf:	83 ec 48             	sub    $0x48,%esp
    f5c2:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    f5c8:	8d 6c 24 18          	lea    0x18(%esp),%ebp
    f5cc:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    f5d3:	00 
    f5d4:	0f b6 07             	movzbl (%edi),%eax
    f5d7:	89 44 24 28          	mov    %eax,0x28(%esp)
    f5db:	8b 44 24 5c          	mov    0x5c(%esp),%eax
    f5df:	83 c0 01             	add    $0x1,%eax
    f5e2:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    f5e6:	55                   	push   %ebp
    f5e7:	e8 b4 50 ff ff       	call   46a0 <operand_read>
    f5ec:	0f b6 07             	movzbl (%edi),%eax
    f5ef:	55                   	push   %ebp
    f5f0:	c0 e8 03             	shr    $0x3,%al
    f5f3:	0f b6 f0             	movzbl %al,%esi
    f5f6:	83 c6 01             	add    $0x1,%esi
    f5f9:	8d 46 01             	lea    0x1(%esi),%eax
    f5fc:	50                   	push   %eax
    f5fd:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f603:	50                   	push   %eax
    f604:	8d 83 23 0b ff ff    	lea    -0xf4dd(%ebx),%eax
    f60a:	50                   	push   %eax
    f60b:	e8 00 49 ff ff       	call   3f10 <print_asm_1>
    f610:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f616:	83 c4 20             	add    $0x20,%esp
    f619:	f6 40 24 40          	testb  $0x40,0x24(%eax)
    f61d:	75 0f                	jne    f62e <jne_v+0x7e>
    f61f:	80 3f 10             	cmpb   $0x10,(%edi)
    f622:	0f bf 44 24 18       	movswl 0x18(%esp),%eax
    f627:	0f 45 44 24 18       	cmovne 0x18(%esp),%eax
    f62c:	01 c6                	add    %eax,%esi
    f62e:	83 c4 3c             	add    $0x3c,%esp
    f631:	89 f0                	mov    %esi,%eax
    f633:	5b                   	pop    %ebx
    f634:	5e                   	pop    %esi
    f635:	5f                   	pop    %edi
    f636:	5d                   	pop    %ebp
    f637:	c3                   	ret    
    f638:	66 90                	xchg   %ax,%ax
    f63a:	66 90                	xchg   %ax,%ax
    f63c:	66 90                	xchg   %ax,%ax
    f63e:	66 90                	xchg   %ax,%ax

0000f640 <cld>:
    f640:	53                   	push   %ebx
    f641:	e8 7a 36 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f646:	81 c3 ba b9 01 00    	add    $0x1b9ba,%ebx
    f64c:	83 ec 0c             	sub    $0xc,%esp
    f64f:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f655:	80 60 25 fb          	andb   $0xfb,0x25(%eax)
    f659:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f65f:	6a 01                	push   $0x1
    f661:	50                   	push   %eax
    f662:	8d 83 99 0b ff ff    	lea    -0xf467(%ebx),%eax
    f668:	50                   	push   %eax
    f669:	e8 c2 47 ff ff       	call   3e30 <print_asm_0>
    f66e:	83 c4 18             	add    $0x18,%esp
    f671:	b8 01 00 00 00       	mov    $0x1,%eax
    f676:	5b                   	pop    %ebx
    f677:	c3                   	ret    
    f678:	90                   	nop
    f679:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000f680 <clc>:
    f680:	53                   	push   %ebx
    f681:	e8 3a 36 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f686:	81 c3 7a b9 01 00    	add    $0x1b97a,%ebx
    f68c:	83 ec 0c             	sub    $0xc,%esp
    f68f:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f695:	80 60 24 fe          	andb   $0xfe,0x24(%eax)
    f699:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f69f:	6a 01                	push   $0x1
    f6a1:	50                   	push   %eax
    f6a2:	8d 83 9d 0b ff ff    	lea    -0xf463(%ebx),%eax
    f6a8:	50                   	push   %eax
    f6a9:	e8 82 47 ff ff       	call   3e30 <print_asm_0>
    f6ae:	83 c4 18             	add    $0x18,%esp
    f6b1:	b8 01 00 00 00       	mov    $0x1,%eax
    f6b6:	5b                   	pop    %ebx
    f6b7:	c3                   	ret    
    f6b8:	90                   	nop
    f6b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000f6c0 <sahf>:
    f6c0:	53                   	push   %ebx
    f6c1:	e8 fa 35 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f6c6:	81 c3 3a b9 01 00    	add    $0x1b93a,%ebx
    f6cc:	83 ec 0c             	sub    $0xc,%esp
    f6cf:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
    f6d5:	0f b6 50 01          	movzbl 0x1(%eax),%edx
    f6d9:	66 89 50 24          	mov    %dx,0x24(%eax)
    f6dd:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    f6e3:	6a 01                	push   $0x1
    f6e5:	50                   	push   %eax
    f6e6:	8d 83 a1 0b ff ff    	lea    -0xf45f(%ebx),%eax
    f6ec:	50                   	push   %eax
    f6ed:	e8 3e 47 ff ff       	call   3e30 <print_asm_0>
    f6f2:	83 c4 18             	add    $0x18,%esp
    f6f5:	b8 01 00 00 00       	mov    $0x1,%eax
    f6fa:	5b                   	pop    %ebx
    f6fb:	c3                   	ret    
    f6fc:	66 90                	xchg   %ax,%ax
    f6fe:	66 90                	xchg   %ax,%ax

0000f700 <group_1_b>:
    f700:	56                   	push   %esi
    f701:	53                   	push   %ebx
    f702:	e8 b9 35 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f707:	81 c3 f9 b8 01 00    	add    $0x1b8f9,%ebx
    f70d:	83 ec 1c             	sub    $0x1c,%esp
    f710:	8b 74 24 28          	mov    0x28(%esp),%esi
    f714:	8d 44 24 17          	lea    0x17(%esp),%eax
    f718:	50                   	push   %eax
    f719:	8d 46 01             	lea    0x1(%esi),%eax
    f71c:	50                   	push   %eax
    f71d:	e8 0e 4f ff ff       	call   4630 <modrm_opcode>
    f722:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f727:	5a                   	pop    %edx
    f728:	59                   	pop    %ecx
    f729:	8d 93 80 0b 00 00    	lea    0xb80(%ebx),%edx
    f72f:	50                   	push   %eax
    f730:	56                   	push   %esi
    f731:	ff 14 82             	call   *(%edx,%eax,4)
    f734:	83 c4 24             	add    $0x24,%esp
    f737:	5b                   	pop    %ebx
    f738:	5e                   	pop    %esi
    f739:	c3                   	ret    
    f73a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f740 <group_1_v>:
    f740:	56                   	push   %esi
    f741:	53                   	push   %ebx
    f742:	e8 79 35 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f747:	81 c3 b9 b8 01 00    	add    $0x1b8b9,%ebx
    f74d:	83 ec 1c             	sub    $0x1c,%esp
    f750:	8b 74 24 28          	mov    0x28(%esp),%esi
    f754:	8d 44 24 17          	lea    0x17(%esp),%eax
    f758:	50                   	push   %eax
    f759:	8d 46 01             	lea    0x1(%esi),%eax
    f75c:	50                   	push   %eax
    f75d:	e8 ce 4e ff ff       	call   4630 <modrm_opcode>
    f762:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f767:	5a                   	pop    %edx
    f768:	59                   	pop    %ecx
    f769:	8d 93 60 0b 00 00    	lea    0xb60(%ebx),%edx
    f76f:	50                   	push   %eax
    f770:	56                   	push   %esi
    f771:	ff 14 82             	call   *(%edx,%eax,4)
    f774:	83 c4 24             	add    $0x24,%esp
    f777:	5b                   	pop    %ebx
    f778:	5e                   	pop    %esi
    f779:	c3                   	ret    
    f77a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f780 <group_1_bv>:
    f780:	56                   	push   %esi
    f781:	53                   	push   %ebx
    f782:	e8 39 35 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f787:	81 c3 79 b8 01 00    	add    $0x1b879,%ebx
    f78d:	83 ec 1c             	sub    $0x1c,%esp
    f790:	8b 74 24 28          	mov    0x28(%esp),%esi
    f794:	8d 44 24 17          	lea    0x17(%esp),%eax
    f798:	50                   	push   %eax
    f799:	8d 46 01             	lea    0x1(%esi),%eax
    f79c:	50                   	push   %eax
    f79d:	e8 8e 4e ff ff       	call   4630 <modrm_opcode>
    f7a2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f7a7:	5a                   	pop    %edx
    f7a8:	59                   	pop    %ecx
    f7a9:	8d 93 40 0b 00 00    	lea    0xb40(%ebx),%edx
    f7af:	50                   	push   %eax
    f7b0:	56                   	push   %esi
    f7b1:	ff 14 82             	call   *(%edx,%eax,4)
    f7b4:	83 c4 24             	add    $0x24,%esp
    f7b7:	5b                   	pop    %ebx
    f7b8:	5e                   	pop    %esi
    f7b9:	c3                   	ret    
    f7ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f7c0 <group_2_b>:
    f7c0:	56                   	push   %esi
    f7c1:	53                   	push   %ebx
    f7c2:	e8 f9 34 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f7c7:	81 c3 39 b8 01 00    	add    $0x1b839,%ebx
    f7cd:	83 ec 1c             	sub    $0x1c,%esp
    f7d0:	8b 74 24 28          	mov    0x28(%esp),%esi
    f7d4:	8d 44 24 17          	lea    0x17(%esp),%eax
    f7d8:	50                   	push   %eax
    f7d9:	8d 46 01             	lea    0x1(%esi),%eax
    f7dc:	50                   	push   %eax
    f7dd:	e8 4e 4e ff ff       	call   4630 <modrm_opcode>
    f7e2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f7e7:	5a                   	pop    %edx
    f7e8:	59                   	pop    %ecx
    f7e9:	8d 93 20 0b 00 00    	lea    0xb20(%ebx),%edx
    f7ef:	50                   	push   %eax
    f7f0:	56                   	push   %esi
    f7f1:	ff 14 82             	call   *(%edx,%eax,4)
    f7f4:	83 c4 24             	add    $0x24,%esp
    f7f7:	5b                   	pop    %ebx
    f7f8:	5e                   	pop    %esi
    f7f9:	c3                   	ret    
    f7fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f800 <group_2_v>:
    f800:	56                   	push   %esi
    f801:	53                   	push   %ebx
    f802:	e8 b9 34 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f807:	81 c3 f9 b7 01 00    	add    $0x1b7f9,%ebx
    f80d:	83 ec 1c             	sub    $0x1c,%esp
    f810:	8b 74 24 28          	mov    0x28(%esp),%esi
    f814:	8d 44 24 17          	lea    0x17(%esp),%eax
    f818:	50                   	push   %eax
    f819:	8d 46 01             	lea    0x1(%esi),%eax
    f81c:	50                   	push   %eax
    f81d:	e8 0e 4e ff ff       	call   4630 <modrm_opcode>
    f822:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f827:	5a                   	pop    %edx
    f828:	59                   	pop    %ecx
    f829:	8d 93 00 0b 00 00    	lea    0xb00(%ebx),%edx
    f82f:	50                   	push   %eax
    f830:	56                   	push   %esi
    f831:	ff 14 82             	call   *(%edx,%eax,4)
    f834:	83 c4 24             	add    $0x24,%esp
    f837:	5b                   	pop    %ebx
    f838:	5e                   	pop    %esi
    f839:	c3                   	ret    
    f83a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f840 <group_2_1b>:
    f840:	56                   	push   %esi
    f841:	53                   	push   %ebx
    f842:	e8 79 34 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f847:	81 c3 b9 b7 01 00    	add    $0x1b7b9,%ebx
    f84d:	83 ec 1c             	sub    $0x1c,%esp
    f850:	8b 74 24 28          	mov    0x28(%esp),%esi
    f854:	8d 44 24 17          	lea    0x17(%esp),%eax
    f858:	50                   	push   %eax
    f859:	8d 46 01             	lea    0x1(%esi),%eax
    f85c:	50                   	push   %eax
    f85d:	e8 ce 4d ff ff       	call   4630 <modrm_opcode>
    f862:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f867:	5a                   	pop    %edx
    f868:	59                   	pop    %ecx
    f869:	8d 93 e0 0a 00 00    	lea    0xae0(%ebx),%edx
    f86f:	50                   	push   %eax
    f870:	56                   	push   %esi
    f871:	ff 14 82             	call   *(%edx,%eax,4)
    f874:	83 c4 24             	add    $0x24,%esp
    f877:	5b                   	pop    %ebx
    f878:	5e                   	pop    %esi
    f879:	c3                   	ret    
    f87a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f880 <group_2_1v>:
    f880:	56                   	push   %esi
    f881:	53                   	push   %ebx
    f882:	e8 39 34 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f887:	81 c3 79 b7 01 00    	add    $0x1b779,%ebx
    f88d:	83 ec 1c             	sub    $0x1c,%esp
    f890:	8b 74 24 28          	mov    0x28(%esp),%esi
    f894:	8d 44 24 17          	lea    0x17(%esp),%eax
    f898:	50                   	push   %eax
    f899:	8d 46 01             	lea    0x1(%esi),%eax
    f89c:	50                   	push   %eax
    f89d:	e8 8e 4d ff ff       	call   4630 <modrm_opcode>
    f8a2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f8a7:	5a                   	pop    %edx
    f8a8:	59                   	pop    %ecx
    f8a9:	8d 93 c0 0a 00 00    	lea    0xac0(%ebx),%edx
    f8af:	50                   	push   %eax
    f8b0:	56                   	push   %esi
    f8b1:	ff 14 82             	call   *(%edx,%eax,4)
    f8b4:	83 c4 24             	add    $0x24,%esp
    f8b7:	5b                   	pop    %ebx
    f8b8:	5e                   	pop    %esi
    f8b9:	c3                   	ret    
    f8ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f8c0 <group_2_cb>:
    f8c0:	56                   	push   %esi
    f8c1:	53                   	push   %ebx
    f8c2:	e8 f9 33 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f8c7:	81 c3 39 b7 01 00    	add    $0x1b739,%ebx
    f8cd:	83 ec 1c             	sub    $0x1c,%esp
    f8d0:	8b 74 24 28          	mov    0x28(%esp),%esi
    f8d4:	8d 44 24 17          	lea    0x17(%esp),%eax
    f8d8:	50                   	push   %eax
    f8d9:	8d 46 01             	lea    0x1(%esi),%eax
    f8dc:	50                   	push   %eax
    f8dd:	e8 4e 4d ff ff       	call   4630 <modrm_opcode>
    f8e2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f8e7:	5a                   	pop    %edx
    f8e8:	59                   	pop    %ecx
    f8e9:	8d 93 a0 0a 00 00    	lea    0xaa0(%ebx),%edx
    f8ef:	50                   	push   %eax
    f8f0:	56                   	push   %esi
    f8f1:	ff 14 82             	call   *(%edx,%eax,4)
    f8f4:	83 c4 24             	add    $0x24,%esp
    f8f7:	5b                   	pop    %ebx
    f8f8:	5e                   	pop    %esi
    f8f9:	c3                   	ret    
    f8fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f900 <group_2_cv>:
    f900:	56                   	push   %esi
    f901:	53                   	push   %ebx
    f902:	e8 b9 33 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f907:	81 c3 f9 b6 01 00    	add    $0x1b6f9,%ebx
    f90d:	83 ec 1c             	sub    $0x1c,%esp
    f910:	8b 74 24 28          	mov    0x28(%esp),%esi
    f914:	8d 44 24 17          	lea    0x17(%esp),%eax
    f918:	50                   	push   %eax
    f919:	8d 46 01             	lea    0x1(%esi),%eax
    f91c:	50                   	push   %eax
    f91d:	e8 0e 4d ff ff       	call   4630 <modrm_opcode>
    f922:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f927:	5a                   	pop    %edx
    f928:	59                   	pop    %ecx
    f929:	8d 93 80 0a 00 00    	lea    0xa80(%ebx),%edx
    f92f:	50                   	push   %eax
    f930:	56                   	push   %esi
    f931:	ff 14 82             	call   *(%edx,%eax,4)
    f934:	83 c4 24             	add    $0x24,%esp
    f937:	5b                   	pop    %ebx
    f938:	5e                   	pop    %esi
    f939:	c3                   	ret    
    f93a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f940 <group_3_b>:
    f940:	56                   	push   %esi
    f941:	53                   	push   %ebx
    f942:	e8 79 33 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f947:	81 c3 b9 b6 01 00    	add    $0x1b6b9,%ebx
    f94d:	83 ec 1c             	sub    $0x1c,%esp
    f950:	8b 74 24 28          	mov    0x28(%esp),%esi
    f954:	8d 44 24 17          	lea    0x17(%esp),%eax
    f958:	50                   	push   %eax
    f959:	8d 46 01             	lea    0x1(%esi),%eax
    f95c:	50                   	push   %eax
    f95d:	e8 ce 4c ff ff       	call   4630 <modrm_opcode>
    f962:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f967:	5a                   	pop    %edx
    f968:	59                   	pop    %ecx
    f969:	8d 93 60 0a 00 00    	lea    0xa60(%ebx),%edx
    f96f:	50                   	push   %eax
    f970:	56                   	push   %esi
    f971:	ff 14 82             	call   *(%edx,%eax,4)
    f974:	83 c4 24             	add    $0x24,%esp
    f977:	5b                   	pop    %ebx
    f978:	5e                   	pop    %esi
    f979:	c3                   	ret    
    f97a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f980 <group_3_v>:
    f980:	56                   	push   %esi
    f981:	53                   	push   %ebx
    f982:	e8 39 33 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f987:	81 c3 79 b6 01 00    	add    $0x1b679,%ebx
    f98d:	83 ec 1c             	sub    $0x1c,%esp
    f990:	8b 74 24 28          	mov    0x28(%esp),%esi
    f994:	8d 44 24 17          	lea    0x17(%esp),%eax
    f998:	50                   	push   %eax
    f999:	8d 46 01             	lea    0x1(%esi),%eax
    f99c:	50                   	push   %eax
    f99d:	e8 8e 4c ff ff       	call   4630 <modrm_opcode>
    f9a2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f9a7:	5a                   	pop    %edx
    f9a8:	59                   	pop    %ecx
    f9a9:	8d 93 40 0a 00 00    	lea    0xa40(%ebx),%edx
    f9af:	50                   	push   %eax
    f9b0:	56                   	push   %esi
    f9b1:	ff 14 82             	call   *(%edx,%eax,4)
    f9b4:	83 c4 24             	add    $0x24,%esp
    f9b7:	5b                   	pop    %ebx
    f9b8:	5e                   	pop    %esi
    f9b9:	c3                   	ret    
    f9ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f9c0 <group_5_indirect>:
    f9c0:	56                   	push   %esi
    f9c1:	53                   	push   %ebx
    f9c2:	e8 f9 32 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    f9c7:	81 c3 39 b6 01 00    	add    $0x1b639,%ebx
    f9cd:	83 ec 1c             	sub    $0x1c,%esp
    f9d0:	8b 74 24 28          	mov    0x28(%esp),%esi
    f9d4:	8d 44 24 17          	lea    0x17(%esp),%eax
    f9d8:	50                   	push   %eax
    f9d9:	8d 46 01             	lea    0x1(%esi),%eax
    f9dc:	50                   	push   %eax
    f9dd:	e8 4e 4c ff ff       	call   4630 <modrm_opcode>
    f9e2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    f9e7:	5a                   	pop    %edx
    f9e8:	59                   	pop    %ecx
    f9e9:	8d 93 20 0a 00 00    	lea    0xa20(%ebx),%edx
    f9ef:	50                   	push   %eax
    f9f0:	56                   	push   %esi
    f9f1:	ff 14 82             	call   *(%edx,%eax,4)
    f9f4:	83 c4 24             	add    $0x24,%esp
    f9f7:	5b                   	pop    %ebx
    f9f8:	5e                   	pop    %esi
    f9f9:	c3                   	ret    
    f9fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fa00 <group_7>:
    fa00:	56                   	push   %esi
    fa01:	53                   	push   %ebx
    fa02:	e8 b9 32 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fa07:	81 c3 f9 b5 01 00    	add    $0x1b5f9,%ebx
    fa0d:	83 ec 1c             	sub    $0x1c,%esp
    fa10:	8b 74 24 28          	mov    0x28(%esp),%esi
    fa14:	8d 44 24 17          	lea    0x17(%esp),%eax
    fa18:	50                   	push   %eax
    fa19:	8d 46 01             	lea    0x1(%esi),%eax
    fa1c:	50                   	push   %eax
    fa1d:	e8 0e 4c ff ff       	call   4630 <modrm_opcode>
    fa22:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    fa27:	5a                   	pop    %edx
    fa28:	59                   	pop    %ecx
    fa29:	8d 93 00 0a 00 00    	lea    0xa00(%ebx),%edx
    fa2f:	50                   	push   %eax
    fa30:	56                   	push   %esi
    fa31:	ff 14 82             	call   *(%edx,%eax,4)
    fa34:	83 c4 24             	add    $0x24,%esp
    fa37:	5b                   	pop    %ebx
    fa38:	5e                   	pop    %esi
    fa39:	c3                   	ret    
    fa3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fa40 <group_x87_d8>:
    fa40:	56                   	push   %esi
    fa41:	53                   	push   %ebx
    fa42:	e8 79 32 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fa47:	81 c3 b9 b5 01 00    	add    $0x1b5b9,%ebx
    fa4d:	83 ec 1c             	sub    $0x1c,%esp
    fa50:	8b 74 24 28          	mov    0x28(%esp),%esi
    fa54:	8d 44 24 17          	lea    0x17(%esp),%eax
    fa58:	50                   	push   %eax
    fa59:	8d 46 01             	lea    0x1(%esi),%eax
    fa5c:	50                   	push   %eax
    fa5d:	e8 ce 4b ff ff       	call   4630 <modrm_opcode>
    fa62:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    fa67:	5a                   	pop    %edx
    fa68:	59                   	pop    %ecx
    fa69:	8d 93 e0 09 00 00    	lea    0x9e0(%ebx),%edx
    fa6f:	50                   	push   %eax
    fa70:	56                   	push   %esi
    fa71:	ff 14 82             	call   *(%edx,%eax,4)
    fa74:	83 c4 24             	add    $0x24,%esp
    fa77:	5b                   	pop    %ebx
    fa78:	5e                   	pop    %esi
    fa79:	c3                   	ret    
    fa7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fa80 <group_x87_d9>:
    fa80:	56                   	push   %esi
    fa81:	53                   	push   %ebx
    fa82:	e8 39 32 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fa87:	81 c3 79 b5 01 00    	add    $0x1b579,%ebx
    fa8d:	83 ec 1c             	sub    $0x1c,%esp
    fa90:	8b 74 24 28          	mov    0x28(%esp),%esi
    fa94:	8d 44 24 17          	lea    0x17(%esp),%eax
    fa98:	50                   	push   %eax
    fa99:	8d 46 01             	lea    0x1(%esi),%eax
    fa9c:	50                   	push   %eax
    fa9d:	e8 8e 4b ff ff       	call   4630 <modrm_opcode>
    faa2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    faa7:	5a                   	pop    %edx
    faa8:	59                   	pop    %ecx
    faa9:	8d 93 c0 09 00 00    	lea    0x9c0(%ebx),%edx
    faaf:	50                   	push   %eax
    fab0:	56                   	push   %esi
    fab1:	ff 14 82             	call   *(%edx,%eax,4)
    fab4:	83 c4 24             	add    $0x24,%esp
    fab7:	5b                   	pop    %ebx
    fab8:	5e                   	pop    %esi
    fab9:	c3                   	ret    
    faba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fac0 <group_x87_da>:
    fac0:	56                   	push   %esi
    fac1:	53                   	push   %ebx
    fac2:	e8 f9 31 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fac7:	81 c3 39 b5 01 00    	add    $0x1b539,%ebx
    facd:	83 ec 1c             	sub    $0x1c,%esp
    fad0:	8b 74 24 28          	mov    0x28(%esp),%esi
    fad4:	8d 44 24 17          	lea    0x17(%esp),%eax
    fad8:	50                   	push   %eax
    fad9:	8d 46 01             	lea    0x1(%esi),%eax
    fadc:	50                   	push   %eax
    fadd:	e8 4e 4b ff ff       	call   4630 <modrm_opcode>
    fae2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    fae7:	5a                   	pop    %edx
    fae8:	59                   	pop    %ecx
    fae9:	8d 93 a0 09 00 00    	lea    0x9a0(%ebx),%edx
    faef:	50                   	push   %eax
    faf0:	56                   	push   %esi
    faf1:	ff 14 82             	call   *(%edx,%eax,4)
    faf4:	83 c4 24             	add    $0x24,%esp
    faf7:	5b                   	pop    %ebx
    faf8:	5e                   	pop    %esi
    faf9:	c3                   	ret    
    fafa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fb00 <group_x87_db>:
    fb00:	56                   	push   %esi
    fb01:	53                   	push   %ebx
    fb02:	e8 b9 31 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fb07:	81 c3 f9 b4 01 00    	add    $0x1b4f9,%ebx
    fb0d:	83 ec 1c             	sub    $0x1c,%esp
    fb10:	8b 74 24 28          	mov    0x28(%esp),%esi
    fb14:	8d 44 24 17          	lea    0x17(%esp),%eax
    fb18:	50                   	push   %eax
    fb19:	8d 46 01             	lea    0x1(%esi),%eax
    fb1c:	50                   	push   %eax
    fb1d:	e8 0e 4b ff ff       	call   4630 <modrm_opcode>
    fb22:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    fb27:	5a                   	pop    %edx
    fb28:	59                   	pop    %ecx
    fb29:	8d 93 80 09 00 00    	lea    0x980(%ebx),%edx
    fb2f:	50                   	push   %eax
    fb30:	56                   	push   %esi
    fb31:	ff 14 82             	call   *(%edx,%eax,4)
    fb34:	83 c4 24             	add    $0x24,%esp
    fb37:	5b                   	pop    %ebx
    fb38:	5e                   	pop    %esi
    fb39:	c3                   	ret    
    fb3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fb40 <group_x87_dc>:
    fb40:	56                   	push   %esi
    fb41:	53                   	push   %ebx
    fb42:	e8 79 31 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fb47:	81 c3 b9 b4 01 00    	add    $0x1b4b9,%ebx
    fb4d:	83 ec 1c             	sub    $0x1c,%esp
    fb50:	8b 74 24 28          	mov    0x28(%esp),%esi
    fb54:	8d 44 24 17          	lea    0x17(%esp),%eax
    fb58:	50                   	push   %eax
    fb59:	8d 46 01             	lea    0x1(%esi),%eax
    fb5c:	50                   	push   %eax
    fb5d:	e8 ce 4a ff ff       	call   4630 <modrm_opcode>
    fb62:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    fb67:	5a                   	pop    %edx
    fb68:	59                   	pop    %ecx
    fb69:	8d 93 60 09 00 00    	lea    0x960(%ebx),%edx
    fb6f:	50                   	push   %eax
    fb70:	56                   	push   %esi
    fb71:	ff 14 82             	call   *(%edx,%eax,4)
    fb74:	83 c4 24             	add    $0x24,%esp
    fb77:	5b                   	pop    %ebx
    fb78:	5e                   	pop    %esi
    fb79:	c3                   	ret    
    fb7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fb80 <group_x87_dd>:
    fb80:	56                   	push   %esi
    fb81:	53                   	push   %ebx
    fb82:	e8 39 31 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fb87:	81 c3 79 b4 01 00    	add    $0x1b479,%ebx
    fb8d:	83 ec 1c             	sub    $0x1c,%esp
    fb90:	8b 74 24 28          	mov    0x28(%esp),%esi
    fb94:	8d 44 24 17          	lea    0x17(%esp),%eax
    fb98:	50                   	push   %eax
    fb99:	8d 46 01             	lea    0x1(%esi),%eax
    fb9c:	50                   	push   %eax
    fb9d:	e8 8e 4a ff ff       	call   4630 <modrm_opcode>
    fba2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    fba7:	5a                   	pop    %edx
    fba8:	59                   	pop    %ecx
    fba9:	8d 93 40 09 00 00    	lea    0x940(%ebx),%edx
    fbaf:	50                   	push   %eax
    fbb0:	56                   	push   %esi
    fbb1:	ff 14 82             	call   *(%edx,%eax,4)
    fbb4:	83 c4 24             	add    $0x24,%esp
    fbb7:	5b                   	pop    %ebx
    fbb8:	5e                   	pop    %esi
    fbb9:	c3                   	ret    
    fbba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fbc0 <group_x87_de>:
    fbc0:	56                   	push   %esi
    fbc1:	53                   	push   %ebx
    fbc2:	e8 f9 30 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fbc7:	81 c3 39 b4 01 00    	add    $0x1b439,%ebx
    fbcd:	83 ec 1c             	sub    $0x1c,%esp
    fbd0:	8b 74 24 28          	mov    0x28(%esp),%esi
    fbd4:	8d 44 24 17          	lea    0x17(%esp),%eax
    fbd8:	50                   	push   %eax
    fbd9:	8d 46 01             	lea    0x1(%esi),%eax
    fbdc:	50                   	push   %eax
    fbdd:	e8 4e 4a ff ff       	call   4630 <modrm_opcode>
    fbe2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    fbe7:	5a                   	pop    %edx
    fbe8:	59                   	pop    %ecx
    fbe9:	8d 93 20 09 00 00    	lea    0x920(%ebx),%edx
    fbef:	50                   	push   %eax
    fbf0:	56                   	push   %esi
    fbf1:	ff 14 82             	call   *(%edx,%eax,4)
    fbf4:	83 c4 24             	add    $0x24,%esp
    fbf7:	5b                   	pop    %ebx
    fbf8:	5e                   	pop    %esi
    fbf9:	c3                   	ret    
    fbfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fc00 <group_x87_df>:
    fc00:	56                   	push   %esi
    fc01:	53                   	push   %ebx
    fc02:	e8 b9 30 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fc07:	81 c3 f9 b3 01 00    	add    $0x1b3f9,%ebx
    fc0d:	83 ec 1c             	sub    $0x1c,%esp
    fc10:	8b 74 24 28          	mov    0x28(%esp),%esi
    fc14:	8d 44 24 17          	lea    0x17(%esp),%eax
    fc18:	50                   	push   %eax
    fc19:	8d 46 01             	lea    0x1(%esi),%eax
    fc1c:	50                   	push   %eax
    fc1d:	e8 0e 4a ff ff       	call   4630 <modrm_opcode>
    fc22:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
    fc27:	5a                   	pop    %edx
    fc28:	59                   	pop    %ecx
    fc29:	8d 93 00 09 00 00    	lea    0x900(%ebx),%edx
    fc2f:	50                   	push   %eax
    fc30:	56                   	push   %esi
    fc31:	ff 14 82             	call   *(%edx,%eax,4)
    fc34:	83 c4 24             	add    $0x24,%esp
    fc37:	5b                   	pop    %ebx
    fc38:	5e                   	pop    %esi
    fc39:	c3                   	ret    
    fc3a:	66 90                	xchg   %ax,%ax
    fc3c:	66 90                	xchg   %ax,%ax
    fc3e:	66 90                	xchg   %ax,%ax

0000fc40 <add_i2rm_v>:
    fc40:	55                   	push   %ebp
    fc41:	57                   	push   %edi
    fc42:	56                   	push   %esi
    fc43:	53                   	push   %ebx
    fc44:	e8 77 30 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fc49:	81 c3 b7 b3 01 00    	add    $0x1b3b7,%ebx
    fc4f:	83 ec 70             	sub    $0x70,%esp
    fc52:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
    fc59:	8d ab 77 13 00 00    	lea    0x1377(%ebx),%ebp
    fc5f:	8d 7c 24 40          	lea    0x40(%esp),%edi
    fc63:	88 44 24 10          	mov    %al,0x10(%esp)
    fc67:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    fc6b:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    fc6f:	89 44 24 50          	mov    %eax,0x50(%esp)
    fc73:	57                   	push   %edi
    fc74:	8d 44 24 14          	lea    0x14(%esp),%eax
    fc78:	50                   	push   %eax
    fc79:	8b 84 24 8c 00 00 00 	mov    0x8c(%esp),%eax
    fc80:	83 c0 01             	add    $0x1,%eax
    fc83:	50                   	push   %eax
    fc84:	e8 57 49 ff ff       	call   45e0 <modrm_opcode_rm>
    fc89:	89 3c 24             	mov    %edi,(%esp)
    fc8c:	8d 70 01             	lea    0x1(%eax),%esi
    fc8f:	e8 0c 4a ff ff       	call   46a0 <operand_read>
    fc94:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
    fc9b:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    fca2:	00 
    fca3:	01 f0                	add    %esi,%eax
    fca5:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    fca9:	58                   	pop    %eax
    fcaa:	8d 54 24 24          	lea    0x24(%esp),%edx
    fcae:	52                   	push   %edx
    fcaf:	89 54 24 18          	mov    %edx,0x18(%esp)
    fcb3:	e8 e8 49 ff ff       	call   46a0 <operand_read>
    fcb8:	5a                   	pop    %edx
    fcb9:	59                   	pop    %ecx
    fcba:	ff 74 24 50          	pushl  0x50(%esp)
    fcbe:	ff 74 24 30          	pushl  0x30(%esp)
    fcc2:	e8 c9 b3 ff ff       	call   b090 <alu_add>
    fcc7:	89 3c 24             	mov    %edi,(%esp)
    fcca:	89 44 24 58          	mov    %eax,0x58(%esp)
    fcce:	e8 5d 4b ff ff       	call   4830 <operand_write>
    fcd3:	8b 54 24 18          	mov    0x18(%esp),%edx
    fcd7:	89 3c 24             	mov    %edi,(%esp)
    fcda:	52                   	push   %edx
    fcdb:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    fcdf:	c0 e8 03             	shr    $0x3,%al
    fce2:	01 f0                	add    %esi,%eax
    fce4:	0f b6 c0             	movzbl %al,%eax
    fce7:	50                   	push   %eax
    fce8:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    fcee:	50                   	push   %eax
    fcef:	8d 83 a9 0c ff ff    	lea    -0xf357(%ebx),%eax
    fcf5:	50                   	push   %eax
    fcf6:	e8 05 43 ff ff       	call   4000 <print_asm_2>
    fcfb:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    fcff:	81 c4 8c 00 00 00    	add    $0x8c,%esp
    fd05:	5b                   	pop    %ebx
    fd06:	c0 e8 03             	shr    $0x3,%al
    fd09:	0f b6 c0             	movzbl %al,%eax
    fd0c:	01 f0                	add    %esi,%eax
    fd0e:	5e                   	pop    %esi
    fd0f:	5f                   	pop    %edi
    fd10:	5d                   	pop    %ebp
    fd11:	c3                   	ret    
    fd12:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    fd19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000fd20 <add_i2rm_bv>:
    fd20:	55                   	push   %ebp
    fd21:	57                   	push   %edi
    fd22:	56                   	push   %esi
    fd23:	53                   	push   %ebx
    fd24:	e8 97 2f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fd29:	81 c3 d7 b2 01 00    	add    $0x1b2d7,%ebx
    fd2f:	83 ec 70             	sub    $0x70,%esp
    fd32:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
    fd39:	8d 7c 24 40          	lea    0x40(%esp),%edi
    fd3d:	8b ac 24 84 00 00 00 	mov    0x84(%esp),%ebp
    fd44:	c7 44 24 2c 08 00 00 	movl   $0x8,0x2c(%esp)
    fd4b:	00 
    fd4c:	88 44 24 10          	mov    %al,0x10(%esp)
    fd50:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    fd56:	89 44 24 0c          	mov    %eax,0xc(%esp)
    fd5a:	0f b6 00             	movzbl (%eax),%eax
    fd5d:	89 44 24 50          	mov    %eax,0x50(%esp)
    fd61:	57                   	push   %edi
    fd62:	8d 44 24 14          	lea    0x14(%esp),%eax
    fd66:	50                   	push   %eax
    fd67:	8d 45 01             	lea    0x1(%ebp),%eax
    fd6a:	50                   	push   %eax
    fd6b:	e8 70 48 ff ff       	call   45e0 <modrm_opcode_rm>
    fd70:	89 c6                	mov    %eax,%esi
    fd72:	89 3c 24             	mov    %edi,(%esp)
    fd75:	e8 26 49 ff ff       	call   46a0 <operand_read>
    fd7a:	8d 44 2e 01          	lea    0x1(%esi,%ebp,1),%eax
    fd7e:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    fd85:	00 
    fd86:	83 c6 02             	add    $0x2,%esi
    fd89:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    fd8d:	58                   	pop    %eax
    fd8e:	8d 6c 24 24          	lea    0x24(%esp),%ebp
    fd92:	55                   	push   %ebp
    fd93:	e8 08 49 ff ff       	call   46a0 <operand_read>
    fd98:	8b 44 24 18          	mov    0x18(%esp),%eax
    fd9c:	83 c4 10             	add    $0x10,%esp
    fd9f:	0f b6 00             	movzbl (%eax),%eax
    fda2:	8d 50 f0             	lea    -0x10(%eax),%edx
    fda5:	81 e2 ef 00 00 00    	and    $0xef,%edx
    fdab:	75 65                	jne    fe12 <add_i2rm_bv+0xf2>
    fdad:	3c 10                	cmp    $0x10,%al
    fdaf:	74 4f                	je     fe00 <add_i2rm_bv+0xe0>
    fdb1:	0f be 44 24 24       	movsbl 0x24(%esp),%eax
    fdb6:	89 44 24 24          	mov    %eax,0x24(%esp)
    fdba:	83 ec 08             	sub    $0x8,%esp
    fdbd:	ff 74 24 50          	pushl  0x50(%esp)
    fdc1:	50                   	push   %eax
    fdc2:	e8 c9 b2 ff ff       	call   b090 <alu_add>
    fdc7:	89 3c 24             	mov    %edi,(%esp)
    fdca:	89 44 24 58          	mov    %eax,0x58(%esp)
    fdce:	e8 5d 4a ff ff       	call   4830 <operand_write>
    fdd3:	89 f0                	mov    %esi,%eax
    fdd5:	89 3c 24             	mov    %edi,(%esp)
    fdd8:	55                   	push   %ebp
    fdd9:	0f b6 c0             	movzbl %al,%eax
    fddc:	50                   	push   %eax
    fddd:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    fde3:	50                   	push   %eax
    fde4:	8d 83 a9 0c ff ff    	lea    -0xf357(%ebx),%eax
    fdea:	50                   	push   %eax
    fdeb:	e8 10 42 ff ff       	call   4000 <print_asm_2>
    fdf0:	81 c4 8c 00 00 00    	add    $0x8c,%esp
    fdf6:	89 f0                	mov    %esi,%eax
    fdf8:	5b                   	pop    %ebx
    fdf9:	5e                   	pop    %esi
    fdfa:	5f                   	pop    %edi
    fdfb:	5d                   	pop    %ebp
    fdfc:	c3                   	ret    
    fdfd:	8d 76 00             	lea    0x0(%esi),%esi
    fe00:	8b 44 24 24          	mov    0x24(%esp),%eax
    fe04:	c1 e0 08             	shl    $0x8,%eax
    fe07:	66 c1 f8 08          	sar    $0x8,%ax
    fe0b:	98                   	cwtl   
    fe0c:	89 44 24 24          	mov    %eax,0x24(%esp)
    fe10:	eb a8                	jmp    fdba <add_i2rm_bv+0x9a>
    fe12:	8d 83 bc 0b ff ff    	lea    -0xf444(%ebx),%eax
    fe18:	50                   	push   %eax
    fe19:	8d 83 a6 0b ff ff    	lea    -0xf45a(%ebx),%eax
    fe1f:	6a 27                	push   $0x27
    fe21:	50                   	push   %eax
    fe22:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
    fe28:	50                   	push   %eax
    fe29:	e8 62 2a ff ff       	call   2890 <__assert_fail@plt>
    fe2e:	66 90                	xchg   %ax,%ax

0000fe30 <add_i2eax_v>:
    fe30:	55                   	push   %ebp
    fe31:	57                   	push   %edi
    fe32:	56                   	push   %esi
    fe33:	53                   	push   %ebx
    fe34:	e8 87 2e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fe39:	81 c3 c7 b1 01 00    	add    $0x1b1c7,%ebx
    fe3f:	83 ec 68             	sub    $0x68,%esp
    fe42:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
    fe48:	8b 4c 24 7c          	mov    0x7c(%esp),%ecx
    fe4c:	8d 6c 24 14          	lea    0x14(%esp),%ebp
    fe50:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    fe57:	00 
    fe58:	0f b6 17             	movzbl (%edi),%edx
    fe5b:	89 54 24 24          	mov    %edx,0x24(%esp)
    fe5f:	89 d0                	mov    %edx,%eax
    fe61:	8d 51 01             	lea    0x1(%ecx),%edx
    fe64:	c0 e8 03             	shr    $0x3,%al
    fe67:	89 54 24 18          	mov    %edx,0x18(%esp)
    fe6b:	55                   	push   %ebp
    fe6c:	0f b6 f0             	movzbl %al,%esi
    fe6f:	83 c6 01             	add    $0x1,%esi
    fe72:	e8 29 48 ff ff       	call   46a0 <operand_read>
    fe77:	0f b6 07             	movzbl (%edi),%eax
    fe7a:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
    fe81:	00 
    fe82:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
    fe89:	00 
    fe8a:	89 44 24 4c          	mov    %eax,0x4c(%esp)
    fe8e:	58                   	pop    %eax
    fe8f:	8d 7c 24 38          	lea    0x38(%esp),%edi
    fe93:	57                   	push   %edi
    fe94:	e8 07 48 ff ff       	call   46a0 <operand_read>
    fe99:	5a                   	pop    %edx
    fe9a:	59                   	pop    %ecx
    fe9b:	ff 74 24 40          	pushl  0x40(%esp)
    fe9f:	ff 74 24 20          	pushl  0x20(%esp)
    fea3:	e8 e8 b1 ff ff       	call   b090 <alu_add>
    fea8:	89 3c 24             	mov    %edi,(%esp)
    feab:	89 44 24 48          	mov    %eax,0x48(%esp)
    feaf:	e8 7c 49 ff ff       	call   4830 <operand_write>
    feb4:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    feba:	89 3c 24             	mov    %edi,(%esp)
    febd:	55                   	push   %ebp
    febe:	56                   	push   %esi
    febf:	50                   	push   %eax
    fec0:	8d 83 a9 0c ff ff    	lea    -0xf357(%ebx),%eax
    fec6:	50                   	push   %eax
    fec7:	e8 34 41 ff ff       	call   4000 <print_asm_2>
    fecc:	83 c4 7c             	add    $0x7c,%esp
    fecf:	89 f0                	mov    %esi,%eax
    fed1:	5b                   	pop    %ebx
    fed2:	5e                   	pop    %esi
    fed3:	5f                   	pop    %edi
    fed4:	5d                   	pop    %ebp
    fed5:	c3                   	ret    
    fed6:	8d 76 00             	lea    0x0(%esi),%esi
    fed9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000fee0 <add_r2rm_v>:
    fee0:	55                   	push   %ebp
    fee1:	57                   	push   %edi
    fee2:	56                   	push   %esi
    fee3:	53                   	push   %ebx
    fee4:	e8 d7 2d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    fee9:	81 c3 17 b1 01 00    	add    $0x1b117,%ebx
    feef:	83 ec 60             	sub    $0x60,%esp
    fef2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    fef8:	8d 7c 24 30          	lea    0x30(%esp),%edi
    fefc:	0f b6 00             	movzbl (%eax),%eax
    feff:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    ff03:	89 44 24 40          	mov    %eax,0x40(%esp)
    ff07:	57                   	push   %edi
    ff08:	8d 6c 24 10          	lea    0x10(%esp),%ebp
    ff0c:	55                   	push   %ebp
    ff0d:	8b 44 24 7c          	mov    0x7c(%esp),%eax
    ff11:	83 c0 01             	add    $0x1,%eax
    ff14:	50                   	push   %eax
    ff15:	e8 76 46 ff ff       	call   4590 <modrm_r_rm>
    ff1a:	89 2c 24             	mov    %ebp,(%esp)
    ff1d:	8d 70 01             	lea    0x1(%eax),%esi
    ff20:	e8 7b 47 ff ff       	call   46a0 <operand_read>
    ff25:	89 3c 24             	mov    %edi,(%esp)
    ff28:	e8 73 47 ff ff       	call   46a0 <operand_read>
    ff2d:	58                   	pop    %eax
    ff2e:	5a                   	pop    %edx
    ff2f:	ff 74 24 40          	pushl  0x40(%esp)
    ff33:	ff 74 24 20          	pushl  0x20(%esp)
    ff37:	e8 54 b1 ff ff       	call   b090 <alu_add>
    ff3c:	89 3c 24             	mov    %edi,(%esp)
    ff3f:	89 44 24 48          	mov    %eax,0x48(%esp)
    ff43:	e8 e8 48 ff ff       	call   4830 <operand_write>
    ff48:	89 f0                	mov    %esi,%eax
    ff4a:	89 3c 24             	mov    %edi,(%esp)
    ff4d:	55                   	push   %ebp
    ff4e:	0f b6 c0             	movzbl %al,%eax
    ff51:	50                   	push   %eax
    ff52:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    ff58:	50                   	push   %eax
    ff59:	8d 83 a9 0c ff ff    	lea    -0xf357(%ebx),%eax
    ff5f:	50                   	push   %eax
    ff60:	e8 9b 40 ff ff       	call   4000 <print_asm_2>
    ff65:	83 c4 7c             	add    $0x7c,%esp
    ff68:	89 f0                	mov    %esi,%eax
    ff6a:	5b                   	pop    %ebx
    ff6b:	5e                   	pop    %esi
    ff6c:	5f                   	pop    %edi
    ff6d:	5d                   	pop    %ebp
    ff6e:	c3                   	ret    
    ff6f:	90                   	nop

0000ff70 <add_rm2r_v>:
    ff70:	55                   	push   %ebp
    ff71:	57                   	push   %edi
    ff72:	56                   	push   %esi
    ff73:	53                   	push   %ebx
    ff74:	e8 47 2d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
    ff79:	81 c3 87 b0 01 00    	add    $0x1b087,%ebx
    ff7f:	83 ec 60             	sub    $0x60,%esp
    ff82:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
    ff88:	8d 6c 24 30          	lea    0x30(%esp),%ebp
    ff8c:	0f b6 00             	movzbl (%eax),%eax
    ff8f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    ff93:	89 44 24 40          	mov    %eax,0x40(%esp)
    ff97:	55                   	push   %ebp
    ff98:	8d 7c 24 10          	lea    0x10(%esp),%edi
    ff9c:	57                   	push   %edi
    ff9d:	8b 44 24 7c          	mov    0x7c(%esp),%eax
    ffa1:	83 c0 01             	add    $0x1,%eax
    ffa4:	50                   	push   %eax
    ffa5:	e8 e6 45 ff ff       	call   4590 <modrm_r_rm>
    ffaa:	89 3c 24             	mov    %edi,(%esp)
    ffad:	8d 70 01             	lea    0x1(%eax),%esi
    ffb0:	e8 eb 46 ff ff       	call   46a0 <operand_read>
    ffb5:	89 2c 24             	mov    %ebp,(%esp)
    ffb8:	e8 e3 46 ff ff       	call   46a0 <operand_read>
    ffbd:	58                   	pop    %eax
    ffbe:	5a                   	pop    %edx
    ffbf:	ff 74 24 40          	pushl  0x40(%esp)
    ffc3:	ff 74 24 20          	pushl  0x20(%esp)
    ffc7:	e8 c4 b0 ff ff       	call   b090 <alu_add>
    ffcc:	89 3c 24             	mov    %edi,(%esp)
    ffcf:	89 44 24 24          	mov    %eax,0x24(%esp)
    ffd3:	e8 58 48 ff ff       	call   4830 <operand_write>
    ffd8:	89 f0                	mov    %esi,%eax
    ffda:	89 3c 24             	mov    %edi,(%esp)
    ffdd:	55                   	push   %ebp
    ffde:	0f b6 c0             	movzbl %al,%eax
    ffe1:	50                   	push   %eax
    ffe2:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
    ffe8:	50                   	push   %eax
    ffe9:	8d 83 a9 0c ff ff    	lea    -0xf357(%ebx),%eax
    ffef:	50                   	push   %eax
    fff0:	e8 0b 40 ff ff       	call   4000 <print_asm_2>
    fff5:	83 c4 7c             	add    $0x7c,%esp
    fff8:	89 f0                	mov    %esi,%eax
    fffa:	5b                   	pop    %ebx
    fffb:	5e                   	pop    %esi
    fffc:	5f                   	pop    %edi
    fffd:	5d                   	pop    %ebp
    fffe:	c3                   	ret    
    ffff:	90                   	nop

00010000 <add_rm2r_b>:
   10000:	55                   	push   %ebp
   10001:	57                   	push   %edi
   10002:	56                   	push   %esi
   10003:	53                   	push   %ebx
   10004:	e8 b7 2c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10009:	81 c3 f7 af 01 00    	add    $0x1aff7,%ebx
   1000f:	83 ec 60             	sub    $0x60,%esp
   10012:	8d 6c 24 30          	lea    0x30(%esp),%ebp
   10016:	c7 44 24 1c 08 00 00 	movl   $0x8,0x1c(%esp)
   1001d:	00 
   1001e:	c7 44 24 40 08 00 00 	movl   $0x8,0x40(%esp)
   10025:	00 
   10026:	55                   	push   %ebp
   10027:	8d 7c 24 10          	lea    0x10(%esp),%edi
   1002b:	57                   	push   %edi
   1002c:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   10030:	83 c0 01             	add    $0x1,%eax
   10033:	50                   	push   %eax
   10034:	e8 57 45 ff ff       	call   4590 <modrm_r_rm>
   10039:	89 3c 24             	mov    %edi,(%esp)
   1003c:	8d 70 01             	lea    0x1(%eax),%esi
   1003f:	e8 5c 46 ff ff       	call   46a0 <operand_read>
   10044:	89 2c 24             	mov    %ebp,(%esp)
   10047:	e8 54 46 ff ff       	call   46a0 <operand_read>
   1004c:	58                   	pop    %eax
   1004d:	5a                   	pop    %edx
   1004e:	ff 74 24 40          	pushl  0x40(%esp)
   10052:	ff 74 24 20          	pushl  0x20(%esp)
   10056:	e8 35 b0 ff ff       	call   b090 <alu_add>
   1005b:	89 3c 24             	mov    %edi,(%esp)
   1005e:	89 44 24 24          	mov    %eax,0x24(%esp)
   10062:	e8 c9 47 ff ff       	call   4830 <operand_write>
   10067:	89 f0                	mov    %esi,%eax
   10069:	89 3c 24             	mov    %edi,(%esp)
   1006c:	55                   	push   %ebp
   1006d:	0f b6 c0             	movzbl %al,%eax
   10070:	50                   	push   %eax
   10071:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   10077:	50                   	push   %eax
   10078:	8d 83 a9 0c ff ff    	lea    -0xf357(%ebx),%eax
   1007e:	50                   	push   %eax
   1007f:	e8 7c 3f ff ff       	call   4000 <print_asm_2>
   10084:	83 c4 7c             	add    $0x7c,%esp
   10087:	89 f0                	mov    %esi,%eax
   10089:	5b                   	pop    %ebx
   1008a:	5e                   	pop    %esi
   1008b:	5f                   	pop    %edi
   1008c:	5d                   	pop    %ebp
   1008d:	c3                   	ret    
   1008e:	66 90                	xchg   %ax,%ax

00010090 <neg_rm_v>:
   10090:	57                   	push   %edi
   10091:	56                   	push   %esi
   10092:	53                   	push   %ebx
   10093:	e8 28 2c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10098:	81 c3 68 af 01 00    	add    $0x1af68,%ebx
   1009e:	83 ec 38             	sub    $0x38,%esp
   100a1:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   100a7:	8d 7c 24 14          	lea    0x14(%esp),%edi
   100ab:	0f b6 00             	movzbl (%eax),%eax
   100ae:	89 44 24 24          	mov    %eax,0x24(%esp)
   100b2:	57                   	push   %edi
   100b3:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   100b7:	83 c0 01             	add    $0x1,%eax
   100ba:	50                   	push   %eax
   100bb:	e8 a0 45 ff ff       	call   4660 <modrm_rm>
   100c0:	89 3c 24             	mov    %edi,(%esp)
   100c3:	8d 70 01             	lea    0x1(%eax),%esi
   100c6:	e8 d5 45 ff ff       	call   46a0 <operand_read>
   100cb:	8b 54 24 28          	mov    0x28(%esp),%edx
   100cf:	83 c4 10             	add    $0x10,%esp
   100d2:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   100d8:	85 d2                	test   %edx,%edx
   100da:	74 24                	je     10100 <neg_rm_v+0x70>
   100dc:	80 48 24 01          	orb    $0x1,0x24(%eax)
   100e0:	f7 da                	neg    %edx
   100e2:	83 ec 0c             	sub    $0xc,%esp
   100e5:	89 54 24 24          	mov    %edx,0x24(%esp)
   100e9:	57                   	push   %edi
   100ea:	e8 41 47 ff ff       	call   4830 <operand_write>
   100ef:	83 c4 40             	add    $0x40,%esp
   100f2:	89 f0                	mov    %esi,%eax
   100f4:	5b                   	pop    %ebx
   100f5:	5e                   	pop    %esi
   100f6:	5f                   	pop    %edi
   100f7:	c3                   	ret    
   100f8:	90                   	nop
   100f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10100:	80 60 24 fe          	andb   $0xfe,0x24(%eax)
   10104:	eb da                	jmp    100e0 <neg_rm_v+0x50>
   10106:	66 90                	xchg   %ax,%ax
   10108:	66 90                	xchg   %ax,%ax
   1010a:	66 90                	xchg   %ax,%ax
   1010c:	66 90                	xchg   %ax,%ax
   1010e:	66 90                	xchg   %ax,%ax

00010110 <bt_r2rm_v>:
   10110:	55                   	push   %ebp
   10111:	57                   	push   %edi
   10112:	56                   	push   %esi
   10113:	53                   	push   %ebx
   10114:	e8 a7 2b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10119:	81 c3 e7 ae 01 00    	add    $0x1aee7,%ebx
   1011f:	83 ec 10             	sub    $0x10,%esp
   10122:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10128:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   1012e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   10134:	0f b6 00             	movzbl (%eax),%eax
   10137:	56                   	push   %esi
   10138:	57                   	push   %edi
   10139:	89 46 10             	mov    %eax,0x10(%esi)
   1013c:	89 47 10             	mov    %eax,0x10(%edi)
   1013f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   10143:	83 c0 01             	add    $0x1,%eax
   10146:	50                   	push   %eax
   10147:	e8 44 44 ff ff       	call   4590 <modrm_r_rm>
   1014c:	8d 68 01             	lea    0x1(%eax),%ebp
   1014f:	83 c4 10             	add    $0x10,%esp
   10152:	89 e8                	mov    %ebp,%eax
   10154:	0f b6 c8             	movzbl %al,%ecx
   10157:	8b 46 10             	mov    0x10(%esi),%eax
   1015a:	83 f8 08             	cmp    $0x8,%eax
   1015d:	74 61                	je     101c0 <bt_r2rm_v+0xb0>
   1015f:	83 f8 10             	cmp    $0x10,%eax
   10162:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   10168:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1016e:	0f 44 c2             	cmove  %edx,%eax
   10171:	83 ec 0c             	sub    $0xc,%esp
   10174:	56                   	push   %esi
   10175:	57                   	push   %edi
   10176:	51                   	push   %ecx
   10177:	50                   	push   %eax
   10178:	8d 83 c8 0b ff ff    	lea    -0xf438(%ebx),%eax
   1017e:	50                   	push   %eax
   1017f:	e8 7c 3e ff ff       	call   4000 <print_asm_2>
   10184:	83 c4 14             	add    $0x14,%esp
   10187:	57                   	push   %edi
   10188:	e8 13 45 ff ff       	call   46a0 <operand_read>
   1018d:	89 34 24             	mov    %esi,(%esp)
   10190:	e8 0b 45 ff ff       	call   46a0 <operand_read>
   10195:	8b 4f 0c             	mov    0xc(%edi),%ecx
   10198:	8b 56 0c             	mov    0xc(%esi),%edx
   1019b:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   101a1:	d3 ea                	shr    %cl,%edx
   101a3:	89 d1                	mov    %edx,%ecx
   101a5:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   101a9:	83 e1 01             	and    $0x1,%ecx
   101ac:	83 e2 fe             	and    $0xfffffffe,%edx
   101af:	09 ca                	or     %ecx,%edx
   101b1:	88 50 24             	mov    %dl,0x24(%eax)
   101b4:	83 c4 1c             	add    $0x1c,%esp
   101b7:	89 e8                	mov    %ebp,%eax
   101b9:	5b                   	pop    %ebx
   101ba:	5e                   	pop    %esi
   101bb:	5f                   	pop    %edi
   101bc:	5d                   	pop    %ebp
   101bd:	c3                   	ret    
   101be:	66 90                	xchg   %ax,%ax
   101c0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   101c6:	eb a9                	jmp    10171 <bt_r2rm_v+0x61>
   101c8:	66 90                	xchg   %ax,%ax
   101ca:	66 90                	xchg   %ax,%ax
   101cc:	66 90                	xchg   %ax,%ax
   101ce:	66 90                	xchg   %ax,%ax

000101d0 <push_i_v>:
   101d0:	55                   	push   %ebp
   101d1:	57                   	push   %edi
   101d2:	56                   	push   %esi
   101d3:	53                   	push   %ebx
   101d4:	e8 e7 2a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   101d9:	81 c3 27 ae 01 00    	add    $0x1ae27,%ebx
   101df:	83 ec 48             	sub    $0x48,%esp
   101e2:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   101e8:	8b 4c 24 5c          	mov    0x5c(%esp),%ecx
   101ec:	8d 6c 24 18          	lea    0x18(%esp),%ebp
   101f0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   101f7:	00 
   101f8:	c6 44 24 20 01       	movb   $0x1,0x20(%esp)
   101fd:	0f b6 17             	movzbl (%edi),%edx
   10200:	89 54 24 28          	mov    %edx,0x28(%esp)
   10204:	89 d0                	mov    %edx,%eax
   10206:	8d 51 01             	lea    0x1(%ecx),%edx
   10209:	c0 e8 03             	shr    $0x3,%al
   1020c:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   10210:	55                   	push   %ebp
   10211:	0f b6 f0             	movzbl %al,%esi
   10214:	83 c6 01             	add    $0x1,%esi
   10217:	e8 84 44 ff ff       	call   46a0 <operand_read>
   1021c:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   10222:	0f b6 07             	movzbl (%edi),%eax
   10225:	c7 44 24 1c 02 00 00 	movl   $0x2,0x1c(%esp)
   1022c:	00 
   1022d:	c6 44 24 24 02       	movb   $0x2,0x24(%esp)
   10232:	8b 4a 10             	mov    0x10(%edx),%ecx
   10235:	c0 e8 03             	shr    $0x3,%al
   10238:	0f b6 c0             	movzbl %al,%eax
   1023b:	29 c1                	sub    %eax,%ecx
   1023d:	89 4c 24 20          	mov    %ecx,0x20(%esp)
   10241:	89 4a 10             	mov    %ecx,0x10(%edx)
   10244:	89 2c 24             	mov    %ebp,(%esp)
   10247:	e8 e4 45 ff ff       	call   4830 <operand_write>
   1024c:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   10252:	55                   	push   %ebp
   10253:	56                   	push   %esi
   10254:	50                   	push   %eax
   10255:	8d 83 cb 0b ff ff    	lea    -0xf435(%ebx),%eax
   1025b:	50                   	push   %eax
   1025c:	e8 af 3c ff ff       	call   3f10 <print_asm_1>
   10261:	83 c4 5c             	add    $0x5c,%esp
   10264:	89 f0                	mov    %esi,%eax
   10266:	5b                   	pop    %ebx
   10267:	5e                   	pop    %esi
   10268:	5f                   	pop    %edi
   10269:	5d                   	pop    %ebp
   1026a:	c3                   	ret    
   1026b:	90                   	nop
   1026c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00010270 <push_i_b>:
   10270:	56                   	push   %esi
   10271:	53                   	push   %ebx
   10272:	e8 49 2a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10277:	81 c3 89 ad 01 00    	add    $0x1ad89,%ebx
   1027d:	83 ec 40             	sub    $0x40,%esp
   10280:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   10284:	8d 74 24 18          	lea    0x18(%esp),%esi
   10288:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1028f:	00 
   10290:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
   10297:	00 
   10298:	c6 44 24 20 01       	movb   $0x1,0x20(%esp)
   1029d:	83 c0 01             	add    $0x1,%eax
   102a0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   102a4:	56                   	push   %esi
   102a5:	e8 f6 43 ff ff       	call   46a0 <operand_read>
   102aa:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   102b0:	c7 44 24 1c 02 00 00 	movl   $0x2,0x1c(%esp)
   102b7:	00 
   102b8:	c7 44 24 2c 20 00 00 	movl   $0x20,0x2c(%esp)
   102bf:	00 
   102c0:	c6 44 24 24 02       	movb   $0x2,0x24(%esp)
   102c5:	8b 42 10             	mov    0x10(%edx),%eax
   102c8:	83 e8 04             	sub    $0x4,%eax
   102cb:	89 44 24 20          	mov    %eax,0x20(%esp)
   102cf:	89 42 10             	mov    %eax,0x10(%edx)
   102d2:	89 34 24             	mov    %esi,(%esp)
   102d5:	e8 56 45 ff ff       	call   4830 <operand_write>
   102da:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   102e0:	56                   	push   %esi
   102e1:	6a 02                	push   $0x2
   102e3:	50                   	push   %eax
   102e4:	8d 83 cb 0b ff ff    	lea    -0xf435(%ebx),%eax
   102ea:	50                   	push   %eax
   102eb:	e8 20 3c ff ff       	call   3f10 <print_asm_1>
   102f0:	83 c4 54             	add    $0x54,%esp
   102f3:	b8 02 00 00 00       	mov    $0x2,%eax
   102f8:	5b                   	pop    %ebx
   102f9:	5e                   	pop    %esi
   102fa:	c3                   	ret    
   102fb:	90                   	nop
   102fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00010300 <push_ecx_v>:
   10300:	53                   	push   %ebx
   10301:	e8 ba 29 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10306:	81 c3 fa ac 01 00    	add    $0x1acfa,%ebx
   1030c:	83 ec 44             	sub    $0x44,%esp
   1030f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10315:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1031c:	00 
   1031d:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   10322:	0f b6 10             	movzbl (%eax),%edx
   10325:	89 54 24 28          	mov    %edx,0x28(%esp)
   10329:	89 d0                	mov    %edx,%eax
   1032b:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   10331:	c0 e8 03             	shr    $0x3,%al
   10334:	0f b6 c0             	movzbl %al,%eax
   10337:	8b 4a 04             	mov    0x4(%edx),%ecx
   1033a:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   1033e:	8b 4a 10             	mov    0x10(%edx),%ecx
   10341:	29 c1                	sub    %eax,%ecx
   10343:	8d 44 24 18          	lea    0x18(%esp),%eax
   10347:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   1034b:	89 4a 10             	mov    %ecx,0x10(%edx)
   1034e:	50                   	push   %eax
   1034f:	e8 dc 44 ff ff       	call   4830 <operand_write>
   10354:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1035a:	83 c4 0c             	add    $0xc,%esp
   1035d:	6a 01                	push   $0x1
   1035f:	50                   	push   %eax
   10360:	8d 83 d1 0b ff ff    	lea    -0xf42f(%ebx),%eax
   10366:	50                   	push   %eax
   10367:	e8 c4 3a ff ff       	call   3e30 <print_asm_0>
   1036c:	83 c4 48             	add    $0x48,%esp
   1036f:	b8 01 00 00 00       	mov    $0x1,%eax
   10374:	5b                   	pop    %ebx
   10375:	c3                   	ret    
   10376:	8d 76 00             	lea    0x0(%esi),%esi
   10379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010380 <push_eax_v>:
   10380:	53                   	push   %ebx
   10381:	e8 3a 29 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10386:	81 c3 7a ac 01 00    	add    $0x1ac7a,%ebx
   1038c:	83 ec 44             	sub    $0x44,%esp
   1038f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10395:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1039c:	00 
   1039d:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   103a2:	0f b6 10             	movzbl (%eax),%edx
   103a5:	89 54 24 28          	mov    %edx,0x28(%esp)
   103a9:	89 d0                	mov    %edx,%eax
   103ab:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   103b1:	c0 e8 03             	shr    $0x3,%al
   103b4:	0f b6 c0             	movzbl %al,%eax
   103b7:	8b 0a                	mov    (%edx),%ecx
   103b9:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   103bd:	8b 4a 10             	mov    0x10(%edx),%ecx
   103c0:	29 c1                	sub    %eax,%ecx
   103c2:	8d 44 24 18          	lea    0x18(%esp),%eax
   103c6:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   103ca:	89 4a 10             	mov    %ecx,0x10(%edx)
   103cd:	50                   	push   %eax
   103ce:	e8 5d 44 ff ff       	call   4830 <operand_write>
   103d3:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   103d9:	83 c4 0c             	add    $0xc,%esp
   103dc:	6a 01                	push   $0x1
   103de:	50                   	push   %eax
   103df:	8d 83 da 0b ff ff    	lea    -0xf426(%ebx),%eax
   103e5:	50                   	push   %eax
   103e6:	e8 45 3a ff ff       	call   3e30 <print_asm_0>
   103eb:	83 c4 48             	add    $0x48,%esp
   103ee:	b8 01 00 00 00       	mov    $0x1,%eax
   103f3:	5b                   	pop    %ebx
   103f4:	c3                   	ret    
   103f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   103f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010400 <push_ebp_v>:
   10400:	53                   	push   %ebx
   10401:	e8 ba 28 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10406:	81 c3 fa ab 01 00    	add    $0x1abfa,%ebx
   1040c:	83 ec 44             	sub    $0x44,%esp
   1040f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10415:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1041c:	00 
   1041d:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   10422:	0f b6 10             	movzbl (%eax),%edx
   10425:	89 54 24 28          	mov    %edx,0x28(%esp)
   10429:	89 d0                	mov    %edx,%eax
   1042b:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   10431:	c0 e8 03             	shr    $0x3,%al
   10434:	0f b6 c0             	movzbl %al,%eax
   10437:	8b 4a 14             	mov    0x14(%edx),%ecx
   1043a:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   1043e:	8b 4a 10             	mov    0x10(%edx),%ecx
   10441:	29 c1                	sub    %eax,%ecx
   10443:	8d 44 24 18          	lea    0x18(%esp),%eax
   10447:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   1044b:	89 4a 10             	mov    %ecx,0x10(%edx)
   1044e:	50                   	push   %eax
   1044f:	e8 dc 43 ff ff       	call   4830 <operand_write>
   10454:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1045a:	83 c4 0c             	add    $0xc,%esp
   1045d:	6a 01                	push   $0x1
   1045f:	50                   	push   %eax
   10460:	8d 83 e3 0b ff ff    	lea    -0xf41d(%ebx),%eax
   10466:	50                   	push   %eax
   10467:	e8 c4 39 ff ff       	call   3e30 <print_asm_0>
   1046c:	83 c4 48             	add    $0x48,%esp
   1046f:	b8 01 00 00 00       	mov    $0x1,%eax
   10474:	5b                   	pop    %ebx
   10475:	c3                   	ret    
   10476:	8d 76 00             	lea    0x0(%esi),%esi
   10479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010480 <push_esi_v>:
   10480:	53                   	push   %ebx
   10481:	e8 3a 28 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10486:	81 c3 7a ab 01 00    	add    $0x1ab7a,%ebx
   1048c:	83 ec 44             	sub    $0x44,%esp
   1048f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10495:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1049c:	00 
   1049d:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   104a2:	0f b6 10             	movzbl (%eax),%edx
   104a5:	89 54 24 28          	mov    %edx,0x28(%esp)
   104a9:	89 d0                	mov    %edx,%eax
   104ab:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   104b1:	c0 e8 03             	shr    $0x3,%al
   104b4:	0f b6 c0             	movzbl %al,%eax
   104b7:	8b 4a 18             	mov    0x18(%edx),%ecx
   104ba:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   104be:	8b 4a 10             	mov    0x10(%edx),%ecx
   104c1:	29 c1                	sub    %eax,%ecx
   104c3:	8d 44 24 18          	lea    0x18(%esp),%eax
   104c7:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   104cb:	89 4a 10             	mov    %ecx,0x10(%edx)
   104ce:	50                   	push   %eax
   104cf:	e8 5c 43 ff ff       	call   4830 <operand_write>
   104d4:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   104da:	83 c4 0c             	add    $0xc,%esp
   104dd:	6a 01                	push   $0x1
   104df:	50                   	push   %eax
   104e0:	8d 83 ec 0b ff ff    	lea    -0xf414(%ebx),%eax
   104e6:	50                   	push   %eax
   104e7:	e8 44 39 ff ff       	call   3e30 <print_asm_0>
   104ec:	83 c4 48             	add    $0x48,%esp
   104ef:	b8 01 00 00 00       	mov    $0x1,%eax
   104f4:	5b                   	pop    %ebx
   104f5:	c3                   	ret    
   104f6:	8d 76 00             	lea    0x0(%esi),%esi
   104f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010500 <push_edi_v>:
   10500:	53                   	push   %ebx
   10501:	e8 ba 27 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10506:	81 c3 fa aa 01 00    	add    $0x1aafa,%ebx
   1050c:	83 ec 44             	sub    $0x44,%esp
   1050f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10515:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1051c:	00 
   1051d:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   10522:	0f b6 10             	movzbl (%eax),%edx
   10525:	89 54 24 28          	mov    %edx,0x28(%esp)
   10529:	89 d0                	mov    %edx,%eax
   1052b:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   10531:	c0 e8 03             	shr    $0x3,%al
   10534:	0f b6 c0             	movzbl %al,%eax
   10537:	8b 4a 1c             	mov    0x1c(%edx),%ecx
   1053a:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   1053e:	8b 4a 10             	mov    0x10(%edx),%ecx
   10541:	29 c1                	sub    %eax,%ecx
   10543:	8d 44 24 18          	lea    0x18(%esp),%eax
   10547:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   1054b:	89 4a 10             	mov    %ecx,0x10(%edx)
   1054e:	50                   	push   %eax
   1054f:	e8 dc 42 ff ff       	call   4830 <operand_write>
   10554:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1055a:	83 c4 0c             	add    $0xc,%esp
   1055d:	6a 01                	push   $0x1
   1055f:	50                   	push   %eax
   10560:	8d 83 f5 0b ff ff    	lea    -0xf40b(%ebx),%eax
   10566:	50                   	push   %eax
   10567:	e8 c4 38 ff ff       	call   3e30 <print_asm_0>
   1056c:	83 c4 48             	add    $0x48,%esp
   1056f:	b8 01 00 00 00       	mov    $0x1,%eax
   10574:	5b                   	pop    %ebx
   10575:	c3                   	ret    
   10576:	8d 76 00             	lea    0x0(%esi),%esi
   10579:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010580 <push_m_v>:
   10580:	55                   	push   %ebp
   10581:	57                   	push   %edi
   10582:	56                   	push   %esi
   10583:	53                   	push   %ebx
   10584:	e8 37 27 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10589:	81 c3 77 aa 01 00    	add    $0x1aa77,%ebx
   1058f:	83 ec 50             	sub    $0x50,%esp
   10592:	8b 44 24 68          	mov    0x68(%esp),%eax
   10596:	8d ab 77 13 00 00    	lea    0x1377(%ebx),%ebp
   1059c:	8d 7c 24 20          	lea    0x20(%esp),%edi
   105a0:	88 44 24 10          	mov    %al,0x10(%esp)
   105a4:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   105a8:	89 44 24 30          	mov    %eax,0x30(%esp)
   105ac:	57                   	push   %edi
   105ad:	8d 44 24 14          	lea    0x14(%esp),%eax
   105b1:	50                   	push   %eax
   105b2:	8b 44 24 6c          	mov    0x6c(%esp),%eax
   105b6:	83 c0 01             	add    $0x1,%eax
   105b9:	50                   	push   %eax
   105ba:	e8 21 40 ff ff       	call   45e0 <modrm_opcode_rm>
   105bf:	89 3c 24             	mov    %edi,(%esp)
   105c2:	8d 70 01             	lea    0x1(%eax),%esi
   105c5:	e8 d6 40 ff ff       	call   46a0 <operand_read>
   105ca:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   105d0:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   105d4:	c6 44 24 34 02       	movb   $0x2,0x34(%esp)
   105d9:	8b 4a 10             	mov    0x10(%edx),%ecx
   105dc:	c0 e8 03             	shr    $0x3,%al
   105df:	0f b6 c0             	movzbl %al,%eax
   105e2:	29 c1                	sub    %eax,%ecx
   105e4:	89 4c 24 30          	mov    %ecx,0x30(%esp)
   105e8:	89 4a 10             	mov    %ecx,0x10(%edx)
   105eb:	89 3c 24             	mov    %edi,(%esp)
   105ee:	e8 3d 42 ff ff       	call   4830 <operand_write>
   105f3:	89 f0                	mov    %esi,%eax
   105f5:	57                   	push   %edi
   105f6:	0f b6 c0             	movzbl %al,%eax
   105f9:	50                   	push   %eax
   105fa:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   10600:	50                   	push   %eax
   10601:	8d 83 fe 0b ff ff    	lea    -0xf402(%ebx),%eax
   10607:	50                   	push   %eax
   10608:	e8 03 39 ff ff       	call   3f10 <print_asm_1>
   1060d:	83 c4 6c             	add    $0x6c,%esp
   10610:	89 f0                	mov    %esi,%eax
   10612:	5b                   	pop    %ebx
   10613:	5e                   	pop    %esi
   10614:	5f                   	pop    %edi
   10615:	5d                   	pop    %ebp
   10616:	c3                   	ret    
   10617:	89 f6                	mov    %esi,%esi
   10619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010620 <push_ebx_v>:
   10620:	53                   	push   %ebx
   10621:	e8 9a 26 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10626:	81 c3 da a9 01 00    	add    $0x1a9da,%ebx
   1062c:	83 ec 44             	sub    $0x44,%esp
   1062f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10635:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1063c:	00 
   1063d:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   10642:	0f b6 10             	movzbl (%eax),%edx
   10645:	89 54 24 28          	mov    %edx,0x28(%esp)
   10649:	89 d0                	mov    %edx,%eax
   1064b:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   10651:	c0 e8 03             	shr    $0x3,%al
   10654:	0f b6 c0             	movzbl %al,%eax
   10657:	8b 4a 0c             	mov    0xc(%edx),%ecx
   1065a:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   1065e:	8b 4a 10             	mov    0x10(%edx),%ecx
   10661:	29 c1                	sub    %eax,%ecx
   10663:	8d 44 24 18          	lea    0x18(%esp),%eax
   10667:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   1066b:	89 4a 10             	mov    %ecx,0x10(%edx)
   1066e:	50                   	push   %eax
   1066f:	e8 bc 41 ff ff       	call   4830 <operand_write>
   10674:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1067a:	83 c4 0c             	add    $0xc,%esp
   1067d:	6a 01                	push   $0x1
   1067f:	50                   	push   %eax
   10680:	8d 83 06 0c ff ff    	lea    -0xf3fa(%ebx),%eax
   10686:	50                   	push   %eax
   10687:	e8 a4 37 ff ff       	call   3e30 <print_asm_0>
   1068c:	83 c4 48             	add    $0x48,%esp
   1068f:	b8 01 00 00 00       	mov    $0x1,%eax
   10694:	5b                   	pop    %ebx
   10695:	c3                   	ret    
   10696:	8d 76 00             	lea    0x0(%esi),%esi
   10699:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000106a0 <push_edx_v>:
   106a0:	53                   	push   %ebx
   106a1:	e8 1a 26 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   106a6:	81 c3 5a a9 01 00    	add    $0x1a95a,%ebx
   106ac:	83 ec 44             	sub    $0x44,%esp
   106af:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   106b5:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   106bc:	00 
   106bd:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   106c2:	0f b6 10             	movzbl (%eax),%edx
   106c5:	89 54 24 28          	mov    %edx,0x28(%esp)
   106c9:	89 d0                	mov    %edx,%eax
   106cb:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   106d1:	c0 e8 03             	shr    $0x3,%al
   106d4:	0f b6 c0             	movzbl %al,%eax
   106d7:	8b 4a 08             	mov    0x8(%edx),%ecx
   106da:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   106de:	8b 4a 10             	mov    0x10(%edx),%ecx
   106e1:	29 c1                	sub    %eax,%ecx
   106e3:	8d 44 24 18          	lea    0x18(%esp),%eax
   106e7:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   106eb:	89 4a 10             	mov    %ecx,0x10(%edx)
   106ee:	50                   	push   %eax
   106ef:	e8 3c 41 ff ff       	call   4830 <operand_write>
   106f4:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   106fa:	83 c4 0c             	add    $0xc,%esp
   106fd:	6a 01                	push   $0x1
   106ff:	50                   	push   %eax
   10700:	8d 83 0f 0c ff ff    	lea    -0xf3f1(%ebx),%eax
   10706:	50                   	push   %eax
   10707:	e8 24 37 ff ff       	call   3e30 <print_asm_0>
   1070c:	83 c4 48             	add    $0x48,%esp
   1070f:	b8 01 00 00 00       	mov    $0x1,%eax
   10714:	5b                   	pop    %ebx
   10715:	c3                   	ret    
   10716:	8d 76 00             	lea    0x0(%esi),%esi
   10719:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010720 <push_esp_v>:
   10720:	53                   	push   %ebx
   10721:	e8 9a 25 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10726:	81 c3 da a8 01 00    	add    $0x1a8da,%ebx
   1072c:	83 ec 44             	sub    $0x44,%esp
   1072f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10735:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
   1073b:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   10742:	00 
   10743:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   10748:	0f b6 10             	movzbl (%eax),%edx
   1074b:	89 54 24 28          	mov    %edx,0x28(%esp)
   1074f:	89 d0                	mov    %edx,%eax
   10751:	8b 51 10             	mov    0x10(%ecx),%edx
   10754:	c0 e8 03             	shr    $0x3,%al
   10757:	0f b6 c0             	movzbl %al,%eax
   1075a:	89 54 24 24          	mov    %edx,0x24(%esp)
   1075e:	29 c2                	sub    %eax,%edx
   10760:	8d 44 24 18          	lea    0x18(%esp),%eax
   10764:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   10768:	89 51 10             	mov    %edx,0x10(%ecx)
   1076b:	50                   	push   %eax
   1076c:	e8 bf 40 ff ff       	call   4830 <operand_write>
   10771:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   10777:	83 c4 0c             	add    $0xc,%esp
   1077a:	6a 01                	push   $0x1
   1077c:	50                   	push   %eax
   1077d:	8d 83 18 0c ff ff    	lea    -0xf3e8(%ebx),%eax
   10783:	50                   	push   %eax
   10784:	e8 a7 36 ff ff       	call   3e30 <print_asm_0>
   10789:	83 c4 48             	add    $0x48,%esp
   1078c:	b8 01 00 00 00       	mov    $0x1,%eax
   10791:	5b                   	pop    %ebx
   10792:	c3                   	ret    
   10793:	66 90                	xchg   %ax,%ax
   10795:	66 90                	xchg   %ax,%ax
   10797:	66 90                	xchg   %ax,%ax
   10799:	66 90                	xchg   %ax,%ax
   1079b:	66 90                	xchg   %ax,%ax
   1079d:	66 90                	xchg   %ax,%ax
   1079f:	90                   	nop

000107a0 <instr_execute_2op>:
   107a0:	57                   	push   %edi
   107a1:	56                   	push   %esi
   107a2:	53                   	push   %ebx
   107a3:	e8 18 25 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   107a8:	81 c3 58 a8 01 00    	add    $0x1a858,%ebx
   107ae:	83 ec 0c             	sub    $0xc,%esp
   107b1:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   107b7:	57                   	push   %edi
   107b8:	e8 e3 3e ff ff       	call   46a0 <operand_read>
   107bd:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   107c3:	89 34 24             	mov    %esi,(%esp)
   107c6:	e8 d5 3e ff ff       	call   46a0 <operand_read>
   107cb:	58                   	pop    %eax
   107cc:	5a                   	pop    %edx
   107cd:	ff 76 0c             	pushl  0xc(%esi)
   107d0:	ff 77 0c             	pushl  0xc(%edi)
   107d3:	e8 18 ab ff ff       	call   b2f0 <alu_sub>
   107d8:	89 34 24             	mov    %esi,(%esp)
   107db:	89 46 0c             	mov    %eax,0xc(%esi)
   107de:	e8 4d 40 ff ff       	call   4830 <operand_write>
   107e3:	83 c4 10             	add    $0x10,%esp
   107e6:	5b                   	pop    %ebx
   107e7:	5e                   	pop    %esi
   107e8:	5f                   	pop    %edi
   107e9:	c3                   	ret    
   107ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000107f0 <sub_i2rm_bv>:
   107f0:	55                   	push   %ebp
   107f1:	57                   	push   %edi
   107f2:	56                   	push   %esi
   107f3:	53                   	push   %ebx
   107f4:	e8 c7 24 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   107f9:	81 c3 07 a8 01 00    	add    $0x1a807,%ebx
   107ff:	83 ec 70             	sub    $0x70,%esp
   10802:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
   10809:	8d 7c 24 40          	lea    0x40(%esp),%edi
   1080d:	8b ac 24 84 00 00 00 	mov    0x84(%esp),%ebp
   10814:	c7 44 24 2c 08 00 00 	movl   $0x8,0x2c(%esp)
   1081b:	00 
   1081c:	88 44 24 10          	mov    %al,0x10(%esp)
   10820:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10826:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1082a:	0f b6 00             	movzbl (%eax),%eax
   1082d:	89 44 24 50          	mov    %eax,0x50(%esp)
   10831:	57                   	push   %edi
   10832:	8d 44 24 14          	lea    0x14(%esp),%eax
   10836:	50                   	push   %eax
   10837:	8d 45 01             	lea    0x1(%ebp),%eax
   1083a:	50                   	push   %eax
   1083b:	e8 a0 3d ff ff       	call   45e0 <modrm_opcode_rm>
   10840:	89 c6                	mov    %eax,%esi
   10842:	89 3c 24             	mov    %edi,(%esp)
   10845:	e8 56 3e ff ff       	call   46a0 <operand_read>
   1084a:	8d 44 2e 01          	lea    0x1(%esi,%ebp,1),%eax
   1084e:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   10855:	00 
   10856:	83 c6 02             	add    $0x2,%esi
   10859:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   1085d:	58                   	pop    %eax
   1085e:	8d 6c 24 24          	lea    0x24(%esp),%ebp
   10862:	55                   	push   %ebp
   10863:	e8 38 3e ff ff       	call   46a0 <operand_read>
   10868:	8b 44 24 18          	mov    0x18(%esp),%eax
   1086c:	0f b6 10             	movzbl (%eax),%edx
   1086f:	89 54 24 38          	mov    %edx,0x38(%esp)
   10873:	83 c4 10             	add    $0x10,%esp
   10876:	80 fa 10             	cmp    $0x10,%dl
   10879:	74 65                	je     108e0 <sub_i2rm_bv+0xf0>
   1087b:	80 fa 20             	cmp    $0x20,%dl
   1087e:	74 50                	je     108d0 <sub_i2rm_bv+0xe0>
   10880:	8b 44 24 24          	mov    0x24(%esp),%eax
   10884:	83 ec 08             	sub    $0x8,%esp
   10887:	ff 74 24 50          	pushl  0x50(%esp)
   1088b:	50                   	push   %eax
   1088c:	e8 5f aa ff ff       	call   b2f0 <alu_sub>
   10891:	89 3c 24             	mov    %edi,(%esp)
   10894:	89 44 24 58          	mov    %eax,0x58(%esp)
   10898:	e8 93 3f ff ff       	call   4830 <operand_write>
   1089d:	89 f0                	mov    %esi,%eax
   1089f:	89 3c 24             	mov    %edi,(%esp)
   108a2:	55                   	push   %ebp
   108a3:	0f b6 c0             	movzbl %al,%eax
   108a6:	50                   	push   %eax
   108a7:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   108ad:	50                   	push   %eax
   108ae:	8d 83 21 0c ff ff    	lea    -0xf3df(%ebx),%eax
   108b4:	50                   	push   %eax
   108b5:	e8 46 37 ff ff       	call   4000 <print_asm_2>
   108ba:	81 c4 8c 00 00 00    	add    $0x8c,%esp
   108c0:	89 f0                	mov    %esi,%eax
   108c2:	5b                   	pop    %ebx
   108c3:	5e                   	pop    %esi
   108c4:	5f                   	pop    %edi
   108c5:	5d                   	pop    %ebp
   108c6:	c3                   	ret    
   108c7:	89 f6                	mov    %esi,%esi
   108c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   108d0:	0f be 44 24 24       	movsbl 0x24(%esp),%eax
   108d5:	89 44 24 24          	mov    %eax,0x24(%esp)
   108d9:	eb a9                	jmp    10884 <sub_i2rm_bv+0x94>
   108db:	90                   	nop
   108dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   108e0:	8b 44 24 24          	mov    0x24(%esp),%eax
   108e4:	c1 e0 08             	shl    $0x8,%eax
   108e7:	66 c1 f8 08          	sar    $0x8,%ax
   108eb:	98                   	cwtl   
   108ec:	89 44 24 24          	mov    %eax,0x24(%esp)
   108f0:	eb 92                	jmp    10884 <sub_i2rm_bv+0x94>
   108f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   108f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010900 <sub_i2eax_v>:
   10900:	57                   	push   %edi
   10901:	56                   	push   %esi
   10902:	53                   	push   %ebx
   10903:	e8 b8 23 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10908:	81 c3 f8 a6 01 00    	add    $0x1a6f8,%ebx
   1090e:	83 ec 5c             	sub    $0x5c,%esp
   10911:	8d b3 77 13 00 00    	lea    0x1377(%ebx),%esi
   10917:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1091e:	00 
   1091f:	0f b6 06             	movzbl (%esi),%eax
   10922:	89 44 24 24          	mov    %eax,0x24(%esp)
   10926:	89 44 24 48          	mov    %eax,0x48(%esp)
   1092a:	8b 44 24 6c          	mov    0x6c(%esp),%eax
   1092e:	83 c0 01             	add    $0x1,%eax
   10931:	89 44 24 18          	mov    %eax,0x18(%esp)
   10935:	8d 44 24 14          	lea    0x14(%esp),%eax
   10939:	50                   	push   %eax
   1093a:	e8 61 3d ff ff       	call   46a0 <operand_read>
   1093f:	0f b6 06             	movzbl (%esi),%eax
   10942:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   10949:	00 
   1094a:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
   10951:	00 
   10952:	c0 e8 03             	shr    $0x3,%al
   10955:	0f b6 f0             	movzbl %al,%esi
   10958:	58                   	pop    %eax
   10959:	83 c6 01             	add    $0x1,%esi
   1095c:	8d 7c 24 38          	lea    0x38(%esp),%edi
   10960:	57                   	push   %edi
   10961:	e8 3a 3d ff ff       	call   46a0 <operand_read>
   10966:	5a                   	pop    %edx
   10967:	59                   	pop    %ecx
   10968:	ff 74 24 40          	pushl  0x40(%esp)
   1096c:	ff 74 24 20          	pushl  0x20(%esp)
   10970:	e8 7b a9 ff ff       	call   b2f0 <alu_sub>
   10975:	89 3c 24             	mov    %edi,(%esp)
   10978:	89 44 24 48          	mov    %eax,0x48(%esp)
   1097c:	e8 af 3e ff ff       	call   4830 <operand_write>
   10981:	83 c4 60             	add    $0x60,%esp
   10984:	89 f0                	mov    %esi,%eax
   10986:	5b                   	pop    %ebx
   10987:	5e                   	pop    %esi
   10988:	5f                   	pop    %edi
   10989:	c3                   	ret    
   1098a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00010990 <sub_rm2r_v>:
   10990:	55                   	push   %ebp
   10991:	57                   	push   %edi
   10992:	56                   	push   %esi
   10993:	53                   	push   %ebx
   10994:	e8 27 23 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10999:	81 c3 67 a6 01 00    	add    $0x1a667,%ebx
   1099f:	83 ec 10             	sub    $0x10,%esp
   109a2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   109a8:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   109ae:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   109b4:	0f b6 00             	movzbl (%eax),%eax
   109b7:	89 45 10             	mov    %eax,0x10(%ebp)
   109ba:	89 47 10             	mov    %eax,0x10(%edi)
   109bd:	55                   	push   %ebp
   109be:	57                   	push   %edi
   109bf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   109c3:	83 c0 01             	add    $0x1,%eax
   109c6:	50                   	push   %eax
   109c7:	e8 c4 3b ff ff       	call   4590 <modrm_r_rm>
   109cc:	8d 70 01             	lea    0x1(%eax),%esi
   109cf:	83 c4 10             	add    $0x10,%esp
   109d2:	89 f0                	mov    %esi,%eax
   109d4:	0f b6 c8             	movzbl %al,%ecx
   109d7:	8b 47 10             	mov    0x10(%edi),%eax
   109da:	83 f8 08             	cmp    $0x8,%eax
   109dd:	74 41                	je     10a20 <sub_rm2r_v+0x90>
   109df:	83 f8 10             	cmp    $0x10,%eax
   109e2:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   109e8:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   109ee:	0f 44 c2             	cmove  %edx,%eax
   109f1:	83 ec 0c             	sub    $0xc,%esp
   109f4:	57                   	push   %edi
   109f5:	55                   	push   %ebp
   109f6:	51                   	push   %ecx
   109f7:	50                   	push   %eax
   109f8:	8d 83 21 0c ff ff    	lea    -0xf3df(%ebx),%eax
   109fe:	50                   	push   %eax
   109ff:	e8 fc 35 ff ff       	call   4000 <print_asm_2>
   10a04:	83 c4 20             	add    $0x20,%esp
   10a07:	e8 94 fd ff ff       	call   107a0 <instr_execute_2op>
   10a0c:	83 c4 0c             	add    $0xc,%esp
   10a0f:	89 f0                	mov    %esi,%eax
   10a11:	5b                   	pop    %ebx
   10a12:	5e                   	pop    %esi
   10a13:	5f                   	pop    %edi
   10a14:	5d                   	pop    %ebp
   10a15:	c3                   	ret    
   10a16:	8d 76 00             	lea    0x0(%esi),%esi
   10a19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   10a20:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   10a26:	eb c9                	jmp    109f1 <sub_rm2r_v+0x61>
   10a28:	90                   	nop
   10a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00010a30 <sub_r2rm_v>:
   10a30:	55                   	push   %ebp
   10a31:	57                   	push   %edi
   10a32:	56                   	push   %esi
   10a33:	53                   	push   %ebx
   10a34:	e8 87 22 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10a39:	81 c3 c7 a5 01 00    	add    $0x1a5c7,%ebx
   10a3f:	83 ec 10             	sub    $0x10,%esp
   10a42:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10a48:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   10a4e:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   10a54:	0f b6 00             	movzbl (%eax),%eax
   10a57:	89 45 10             	mov    %eax,0x10(%ebp)
   10a5a:	89 47 10             	mov    %eax,0x10(%edi)
   10a5d:	57                   	push   %edi
   10a5e:	55                   	push   %ebp
   10a5f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   10a63:	83 c0 01             	add    $0x1,%eax
   10a66:	50                   	push   %eax
   10a67:	e8 24 3b ff ff       	call   4590 <modrm_r_rm>
   10a6c:	8d 70 01             	lea    0x1(%eax),%esi
   10a6f:	83 c4 10             	add    $0x10,%esp
   10a72:	89 f0                	mov    %esi,%eax
   10a74:	0f b6 c8             	movzbl %al,%ecx
   10a77:	8b 47 10             	mov    0x10(%edi),%eax
   10a7a:	83 f8 08             	cmp    $0x8,%eax
   10a7d:	74 41                	je     10ac0 <sub_r2rm_v+0x90>
   10a7f:	83 f8 10             	cmp    $0x10,%eax
   10a82:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   10a88:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   10a8e:	0f 44 c2             	cmove  %edx,%eax
   10a91:	83 ec 0c             	sub    $0xc,%esp
   10a94:	57                   	push   %edi
   10a95:	55                   	push   %ebp
   10a96:	51                   	push   %ecx
   10a97:	50                   	push   %eax
   10a98:	8d 83 21 0c ff ff    	lea    -0xf3df(%ebx),%eax
   10a9e:	50                   	push   %eax
   10a9f:	e8 5c 35 ff ff       	call   4000 <print_asm_2>
   10aa4:	83 c4 20             	add    $0x20,%esp
   10aa7:	e8 f4 fc ff ff       	call   107a0 <instr_execute_2op>
   10aac:	83 c4 0c             	add    $0xc,%esp
   10aaf:	89 f0                	mov    %esi,%eax
   10ab1:	5b                   	pop    %ebx
   10ab2:	5e                   	pop    %esi
   10ab3:	5f                   	pop    %edi
   10ab4:	5d                   	pop    %ebp
   10ab5:	c3                   	ret    
   10ab6:	8d 76 00             	lea    0x0(%esi),%esi
   10ab9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   10ac0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   10ac6:	eb c9                	jmp    10a91 <sub_r2rm_v+0x61>
   10ac8:	90                   	nop
   10ac9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00010ad0 <sub_i2rm_v>:
   10ad0:	55                   	push   %ebp
   10ad1:	57                   	push   %edi
   10ad2:	56                   	push   %esi
   10ad3:	53                   	push   %ebx
   10ad4:	e8 e7 21 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10ad9:	81 c3 27 a5 01 00    	add    $0x1a527,%ebx
   10adf:	83 ec 24             	sub    $0x24,%esp
   10ae2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10ae8:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   10aec:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   10af2:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   10af8:	0f b6 00             	movzbl (%eax),%eax
   10afb:	89 42 10             	mov    %eax,0x10(%edx)
   10afe:	89 47 10             	mov    %eax,0x10(%edi)
   10b01:	8d 45 01             	lea    0x1(%ebp),%eax
   10b04:	52                   	push   %edx
   10b05:	89 54 24 18          	mov    %edx,0x18(%esp)
   10b09:	50                   	push   %eax
   10b0a:	e8 51 3b ff ff       	call   4660 <modrm_rm>
   10b0f:	8b 77 10             	mov    0x10(%edi),%esi
   10b12:	83 c0 01             	add    $0x1,%eax
   10b15:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   10b19:	01 c5                	add    %eax,%ebp
   10b1b:	83 c4 10             	add    $0x10,%esp
   10b1e:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   10b24:	89 6f 04             	mov    %ebp,0x4(%edi)
   10b27:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   10b2b:	c1 ee 03             	shr    $0x3,%esi
   10b2e:	01 c6                	add    %eax,%esi
   10b30:	89 f0                	mov    %esi,%eax
   10b32:	0f b6 e8             	movzbl %al,%ebp
   10b35:	8b 42 10             	mov    0x10(%edx),%eax
   10b38:	83 f8 08             	cmp    $0x8,%eax
   10b3b:	74 3b                	je     10b78 <sub_i2rm_v+0xa8>
   10b3d:	83 f8 10             	cmp    $0x10,%eax
   10b40:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   10b46:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   10b4c:	0f 44 c1             	cmove  %ecx,%eax
   10b4f:	83 ec 0c             	sub    $0xc,%esp
   10b52:	52                   	push   %edx
   10b53:	57                   	push   %edi
   10b54:	55                   	push   %ebp
   10b55:	50                   	push   %eax
   10b56:	8d 83 21 0c ff ff    	lea    -0xf3df(%ebx),%eax
   10b5c:	50                   	push   %eax
   10b5d:	e8 9e 34 ff ff       	call   4000 <print_asm_2>
   10b62:	83 c4 20             	add    $0x20,%esp
   10b65:	e8 36 fc ff ff       	call   107a0 <instr_execute_2op>
   10b6a:	83 c4 1c             	add    $0x1c,%esp
   10b6d:	89 f0                	mov    %esi,%eax
   10b6f:	5b                   	pop    %ebx
   10b70:	5e                   	pop    %esi
   10b71:	5f                   	pop    %edi
   10b72:	5d                   	pop    %ebp
   10b73:	c3                   	ret    
   10b74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10b78:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   10b7e:	eb cf                	jmp    10b4f <sub_i2rm_v+0x7f>

00010b80 <instr_execute_2op>:
   10b80:	57                   	push   %edi
   10b81:	56                   	push   %esi
   10b82:	53                   	push   %ebx
   10b83:	e8 38 21 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10b88:	81 c3 78 a4 01 00    	add    $0x1a478,%ebx
   10b8e:	83 ec 0c             	sub    $0xc,%esp
   10b91:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   10b97:	57                   	push   %edi
   10b98:	e8 03 3b ff ff       	call   46a0 <operand_read>
   10b9d:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   10ba3:	89 34 24             	mov    %esi,(%esp)
   10ba6:	e8 f5 3a ff ff       	call   46a0 <operand_read>
   10bab:	58                   	pop    %eax
   10bac:	5a                   	pop    %edx
   10bad:	ff 76 0c             	pushl  0xc(%esi)
   10bb0:	ff 77 0c             	pushl  0xc(%edi)
   10bb3:	e8 18 aa ff ff       	call   b5d0 <alu_and>
   10bb8:	83 c4 10             	add    $0x10,%esp
   10bbb:	89 46 0c             	mov    %eax,0xc(%esi)
   10bbe:	5b                   	pop    %ebx
   10bbf:	5e                   	pop    %esi
   10bc0:	5f                   	pop    %edi
   10bc1:	c3                   	ret    
   10bc2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10bc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010bd0 <test_r2rm_b>:
   10bd0:	55                   	push   %ebp
   10bd1:	57                   	push   %edi
   10bd2:	56                   	push   %esi
   10bd3:	53                   	push   %ebx
   10bd4:	e8 e7 20 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10bd9:	81 c3 27 a4 01 00    	add    $0x1a427,%ebx
   10bdf:	83 ec 10             	sub    $0x10,%esp
   10be2:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   10be8:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   10bee:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   10bf5:	57                   	push   %edi
   10bf6:	55                   	push   %ebp
   10bf7:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   10bfb:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   10c02:	83 c0 01             	add    $0x1,%eax
   10c05:	50                   	push   %eax
   10c06:	e8 85 39 ff ff       	call   4590 <modrm_r_rm>
   10c0b:	8d 70 01             	lea    0x1(%eax),%esi
   10c0e:	83 c4 10             	add    $0x10,%esp
   10c11:	89 f0                	mov    %esi,%eax
   10c13:	0f b6 c8             	movzbl %al,%ecx
   10c16:	8b 47 10             	mov    0x10(%edi),%eax
   10c19:	83 f8 08             	cmp    $0x8,%eax
   10c1c:	74 3a                	je     10c58 <test_r2rm_b+0x88>
   10c1e:	83 f8 10             	cmp    $0x10,%eax
   10c21:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   10c27:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   10c2d:	0f 44 c2             	cmove  %edx,%eax
   10c30:	83 ec 0c             	sub    $0xc,%esp
   10c33:	57                   	push   %edi
   10c34:	55                   	push   %ebp
   10c35:	51                   	push   %ecx
   10c36:	50                   	push   %eax
   10c37:	8d 83 24 12 ff ff    	lea    -0xeddc(%ebx),%eax
   10c3d:	50                   	push   %eax
   10c3e:	e8 bd 33 ff ff       	call   4000 <print_asm_2>
   10c43:	83 c4 20             	add    $0x20,%esp
   10c46:	e8 35 ff ff ff       	call   10b80 <instr_execute_2op>
   10c4b:	83 c4 0c             	add    $0xc,%esp
   10c4e:	89 f0                	mov    %esi,%eax
   10c50:	5b                   	pop    %ebx
   10c51:	5e                   	pop    %esi
   10c52:	5f                   	pop    %edi
   10c53:	5d                   	pop    %ebp
   10c54:	c3                   	ret    
   10c55:	8d 76 00             	lea    0x0(%esi),%esi
   10c58:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   10c5e:	eb d0                	jmp    10c30 <test_r2rm_b+0x60>

00010c60 <test_i2rm_v>:
   10c60:	55                   	push   %ebp
   10c61:	57                   	push   %edi
   10c62:	56                   	push   %esi
   10c63:	53                   	push   %ebx
   10c64:	e8 57 20 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10c69:	81 c3 97 a3 01 00    	add    $0x1a397,%ebx
   10c6f:	83 ec 24             	sub    $0x24,%esp
   10c72:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10c78:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   10c7c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   10c82:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   10c88:	0f b6 00             	movzbl (%eax),%eax
   10c8b:	89 42 10             	mov    %eax,0x10(%edx)
   10c8e:	89 47 10             	mov    %eax,0x10(%edi)
   10c91:	8d 45 01             	lea    0x1(%ebp),%eax
   10c94:	52                   	push   %edx
   10c95:	89 54 24 18          	mov    %edx,0x18(%esp)
   10c99:	50                   	push   %eax
   10c9a:	e8 c1 39 ff ff       	call   4660 <modrm_rm>
   10c9f:	8b 77 10             	mov    0x10(%edi),%esi
   10ca2:	83 c0 01             	add    $0x1,%eax
   10ca5:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   10ca9:	01 c5                	add    %eax,%ebp
   10cab:	83 c4 10             	add    $0x10,%esp
   10cae:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   10cb4:	89 6f 04             	mov    %ebp,0x4(%edi)
   10cb7:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   10cbb:	c1 ee 03             	shr    $0x3,%esi
   10cbe:	01 c6                	add    %eax,%esi
   10cc0:	89 f0                	mov    %esi,%eax
   10cc2:	0f b6 e8             	movzbl %al,%ebp
   10cc5:	8b 42 10             	mov    0x10(%edx),%eax
   10cc8:	83 f8 08             	cmp    $0x8,%eax
   10ccb:	74 3b                	je     10d08 <test_i2rm_v+0xa8>
   10ccd:	83 f8 10             	cmp    $0x10,%eax
   10cd0:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   10cd6:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   10cdc:	0f 44 c1             	cmove  %ecx,%eax
   10cdf:	83 ec 0c             	sub    $0xc,%esp
   10ce2:	52                   	push   %edx
   10ce3:	57                   	push   %edi
   10ce4:	55                   	push   %ebp
   10ce5:	50                   	push   %eax
   10ce6:	8d 83 24 12 ff ff    	lea    -0xeddc(%ebx),%eax
   10cec:	50                   	push   %eax
   10ced:	e8 0e 33 ff ff       	call   4000 <print_asm_2>
   10cf2:	83 c4 20             	add    $0x20,%esp
   10cf5:	e8 86 fe ff ff       	call   10b80 <instr_execute_2op>
   10cfa:	83 c4 1c             	add    $0x1c,%esp
   10cfd:	89 f0                	mov    %esi,%eax
   10cff:	5b                   	pop    %ebx
   10d00:	5e                   	pop    %esi
   10d01:	5f                   	pop    %edi
   10d02:	5d                   	pop    %ebp
   10d03:	c3                   	ret    
   10d04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10d08:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   10d0e:	eb cf                	jmp    10cdf <test_i2rm_v+0x7f>

00010d10 <test_i2rm_b>:
   10d10:	55                   	push   %ebp
   10d11:	57                   	push   %edi
   10d12:	56                   	push   %esi
   10d13:	53                   	push   %ebx
   10d14:	e8 a7 1f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10d19:	81 c3 e7 a2 01 00    	add    $0x1a2e7,%ebx
   10d1f:	83 ec 24             	sub    $0x24,%esp
   10d22:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   10d26:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   10d2c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   10d32:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   10d39:	8d 45 01             	lea    0x1(%ebp),%eax
   10d3c:	52                   	push   %edx
   10d3d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   10d44:	89 54 24 18          	mov    %edx,0x18(%esp)
   10d48:	50                   	push   %eax
   10d49:	e8 12 39 ff ff       	call   4660 <modrm_rm>
   10d4e:	8b 77 10             	mov    0x10(%edi),%esi
   10d51:	83 c0 01             	add    $0x1,%eax
   10d54:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   10d58:	01 c5                	add    %eax,%ebp
   10d5a:	83 c4 10             	add    $0x10,%esp
   10d5d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   10d63:	89 6f 04             	mov    %ebp,0x4(%edi)
   10d66:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   10d6a:	c1 ee 03             	shr    $0x3,%esi
   10d6d:	01 c6                	add    %eax,%esi
   10d6f:	89 f0                	mov    %esi,%eax
   10d71:	0f b6 e8             	movzbl %al,%ebp
   10d74:	8b 42 10             	mov    0x10(%edx),%eax
   10d77:	83 f8 08             	cmp    $0x8,%eax
   10d7a:	74 3c                	je     10db8 <test_i2rm_b+0xa8>
   10d7c:	83 f8 10             	cmp    $0x10,%eax
   10d7f:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   10d85:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   10d8b:	0f 44 c1             	cmove  %ecx,%eax
   10d8e:	83 ec 0c             	sub    $0xc,%esp
   10d91:	52                   	push   %edx
   10d92:	57                   	push   %edi
   10d93:	55                   	push   %ebp
   10d94:	50                   	push   %eax
   10d95:	8d 83 24 12 ff ff    	lea    -0xeddc(%ebx),%eax
   10d9b:	50                   	push   %eax
   10d9c:	e8 5f 32 ff ff       	call   4000 <print_asm_2>
   10da1:	83 c4 20             	add    $0x20,%esp
   10da4:	e8 d7 fd ff ff       	call   10b80 <instr_execute_2op>
   10da9:	83 c4 1c             	add    $0x1c,%esp
   10dac:	89 f0                	mov    %esi,%eax
   10dae:	5b                   	pop    %ebx
   10daf:	5e                   	pop    %esi
   10db0:	5f                   	pop    %edi
   10db1:	5d                   	pop    %ebp
   10db2:	c3                   	ret    
   10db3:	90                   	nop
   10db4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10db8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   10dbe:	eb ce                	jmp    10d8e <test_i2rm_b+0x7e>

00010dc0 <test_r2rm_v>:
   10dc0:	55                   	push   %ebp
   10dc1:	57                   	push   %edi
   10dc2:	56                   	push   %esi
   10dc3:	53                   	push   %ebx
   10dc4:	e8 f7 1e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10dc9:	81 c3 37 a2 01 00    	add    $0x1a237,%ebx
   10dcf:	83 ec 60             	sub    $0x60,%esp
   10dd2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10dd8:	8d 6c 24 30          	lea    0x30(%esp),%ebp
   10ddc:	0f b6 00             	movzbl (%eax),%eax
   10ddf:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   10de3:	89 44 24 40          	mov    %eax,0x40(%esp)
   10de7:	55                   	push   %ebp
   10de8:	8d 7c 24 10          	lea    0x10(%esp),%edi
   10dec:	57                   	push   %edi
   10ded:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   10df1:	83 c0 01             	add    $0x1,%eax
   10df4:	50                   	push   %eax
   10df5:	e8 96 37 ff ff       	call   4590 <modrm_r_rm>
   10dfa:	89 3c 24             	mov    %edi,(%esp)
   10dfd:	8d 70 01             	lea    0x1(%eax),%esi
   10e00:	e8 9b 38 ff ff       	call   46a0 <operand_read>
   10e05:	89 2c 24             	mov    %ebp,(%esp)
   10e08:	e8 93 38 ff ff       	call   46a0 <operand_read>
   10e0d:	58                   	pop    %eax
   10e0e:	5a                   	pop    %edx
   10e0f:	ff 74 24 40          	pushl  0x40(%esp)
   10e13:	ff 74 24 20          	pushl  0x20(%esp)
   10e17:	e8 b4 a7 ff ff       	call   b5d0 <alu_and>
   10e1c:	89 f0                	mov    %esi,%eax
   10e1e:	89 2c 24             	mov    %ebp,(%esp)
   10e21:	57                   	push   %edi
   10e22:	0f b6 c0             	movzbl %al,%eax
   10e25:	50                   	push   %eax
   10e26:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   10e2c:	50                   	push   %eax
   10e2d:	8d 83 24 12 ff ff    	lea    -0xeddc(%ebx),%eax
   10e33:	50                   	push   %eax
   10e34:	e8 c7 31 ff ff       	call   4000 <print_asm_2>
   10e39:	83 c4 7c             	add    $0x7c,%esp
   10e3c:	89 f0                	mov    %esi,%eax
   10e3e:	5b                   	pop    %ebx
   10e3f:	5e                   	pop    %esi
   10e40:	5f                   	pop    %edi
   10e41:	5d                   	pop    %ebp
   10e42:	c3                   	ret    
   10e43:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   10e49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010e50 <test_i2ax_v>:
   10e50:	56                   	push   %esi
   10e51:	53                   	push   %ebx
   10e52:	e8 69 1e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10e57:	81 c3 a9 a1 01 00    	add    $0x1a1a9,%ebx
   10e5d:	83 ec 60             	sub    $0x60,%esp
   10e60:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   10e66:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   10e6d:	00 
   10e6e:	0f b6 30             	movzbl (%eax),%esi
   10e71:	89 f0                	mov    %esi,%eax
   10e73:	0f b6 c0             	movzbl %al,%eax
   10e76:	89 44 24 24          	mov    %eax,0x24(%esp)
   10e7a:	89 44 24 48          	mov    %eax,0x48(%esp)
   10e7e:	8b 44 24 6c          	mov    0x6c(%esp),%eax
   10e82:	83 c0 01             	add    $0x1,%eax
   10e85:	89 44 24 18          	mov    %eax,0x18(%esp)
   10e89:	8d 44 24 14          	lea    0x14(%esp),%eax
   10e8d:	50                   	push   %eax
   10e8e:	e8 0d 38 ff ff       	call   46a0 <operand_read>
   10e93:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   10e9a:	00 
   10e9b:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
   10ea2:	00 
   10ea3:	58                   	pop    %eax
   10ea4:	8d 44 24 38          	lea    0x38(%esp),%eax
   10ea8:	50                   	push   %eax
   10ea9:	e8 f2 37 ff ff       	call   46a0 <operand_read>
   10eae:	5a                   	pop    %edx
   10eaf:	59                   	pop    %ecx
   10eb0:	ff 74 24 40          	pushl  0x40(%esp)
   10eb4:	ff 74 24 20          	pushl  0x20(%esp)
   10eb8:	e8 13 a7 ff ff       	call   b5d0 <alu_and>
   10ebd:	89 f0                	mov    %esi,%eax
   10ebf:	83 c4 64             	add    $0x64,%esp
   10ec2:	c0 e8 03             	shr    $0x3,%al
   10ec5:	0f b6 c0             	movzbl %al,%eax
   10ec8:	83 c0 01             	add    $0x1,%eax
   10ecb:	5b                   	pop    %ebx
   10ecc:	5e                   	pop    %esi
   10ecd:	c3                   	ret    
   10ece:	66 90                	xchg   %ax,%ax

00010ed0 <test_i2al_b>:
   10ed0:	53                   	push   %ebx
   10ed1:	e8 ea 1d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10ed6:	81 c3 2a a1 01 00    	add    $0x1a12a,%ebx
   10edc:	83 ec 64             	sub    $0x64,%esp
   10edf:	8b 44 24 6c          	mov    0x6c(%esp),%eax
   10ee3:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   10eea:	00 
   10eeb:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   10ef2:	00 
   10ef3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   10efa:	00 
   10efb:	83 c0 01             	add    $0x1,%eax
   10efe:	89 44 24 18          	mov    %eax,0x18(%esp)
   10f02:	8d 44 24 14          	lea    0x14(%esp),%eax
   10f06:	50                   	push   %eax
   10f07:	e8 94 37 ff ff       	call   46a0 <operand_read>
   10f0c:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   10f13:	00 
   10f14:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
   10f1b:	00 
   10f1c:	58                   	pop    %eax
   10f1d:	8d 44 24 38          	lea    0x38(%esp),%eax
   10f21:	50                   	push   %eax
   10f22:	e8 79 37 ff ff       	call   46a0 <operand_read>
   10f27:	5a                   	pop    %edx
   10f28:	59                   	pop    %ecx
   10f29:	ff 74 24 40          	pushl  0x40(%esp)
   10f2d:	ff 74 24 20          	pushl  0x20(%esp)
   10f31:	e8 9a a6 ff ff       	call   b5d0 <alu_and>
   10f36:	83 c4 68             	add    $0x68,%esp
   10f39:	b8 02 00 00 00       	mov    $0x2,%eax
   10f3e:	5b                   	pop    %ebx
   10f3f:	c3                   	ret    

00010f40 <call_rel_v>:
   10f40:	55                   	push   %ebp
   10f41:	57                   	push   %edi
   10f42:	56                   	push   %esi
   10f43:	53                   	push   %ebx
   10f44:	e8 77 1d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   10f49:	81 c3 b7 a0 01 00    	add    $0x1a0b7,%ebx
   10f4f:	83 ec 78             	sub    $0x78,%esp
   10f52:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   10f58:	8b b4 24 8c 00 00 00 	mov    0x8c(%esp),%esi
   10f5f:	c7 44 24 24 02 00 00 	movl   $0x2,0x24(%esp)
   10f66:	00 
   10f67:	c6 44 24 2c 02       	movb   $0x2,0x2c(%esp)
   10f6c:	0f b6 0f             	movzbl (%edi),%ecx
   10f6f:	88 4c 24 1b          	mov    %cl,0x1b(%esp)
   10f73:	89 c8                	mov    %ecx,%eax
   10f75:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
   10f7b:	c0 e8 03             	shr    $0x3,%al
   10f7e:	0f b6 c0             	movzbl %al,%eax
   10f81:	8b 51 10             	mov    0x10(%ecx),%edx
   10f84:	8d 68 01             	lea    0x1(%eax),%ebp
   10f87:	29 c2                	sub    %eax,%edx
   10f89:	89 51 10             	mov    %edx,0x10(%ecx)
   10f8c:	89 d0                	mov    %edx,%eax
   10f8e:	0f b6 54 24 1b       	movzbl 0x1b(%esp),%edx
   10f93:	89 44 24 28          	mov    %eax,0x28(%esp)
   10f97:	8d 44 24 24          	lea    0x24(%esp),%eax
   10f9b:	89 54 24 34          	mov    %edx,0x34(%esp)
   10f9f:	8d 54 35 00          	lea    0x0(%ebp,%esi,1),%edx
   10fa3:	83 c6 01             	add    $0x1,%esi
   10fa6:	89 54 24 30          	mov    %edx,0x30(%esp)
   10faa:	50                   	push   %eax
   10fab:	e8 80 38 ff ff       	call   4830 <operand_write>
   10fb0:	0f b6 07             	movzbl (%edi),%eax
   10fb3:	89 74 24 50          	mov    %esi,0x50(%esp)
   10fb7:	c7 44 24 4c 00 00 00 	movl   $0x0,0x4c(%esp)
   10fbe:	00 
   10fbf:	89 44 24 5c          	mov    %eax,0x5c(%esp)
   10fc3:	58                   	pop    %eax
   10fc4:	8d 74 24 48          	lea    0x48(%esp),%esi
   10fc8:	56                   	push   %esi
   10fc9:	e8 d2 36 ff ff       	call   46a0 <operand_read>
   10fce:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   10fd4:	56                   	push   %esi
   10fd5:	55                   	push   %ebp
   10fd6:	50                   	push   %eax
   10fd7:	8d 83 25 0c ff ff    	lea    -0xf3db(%ebx),%eax
   10fdd:	50                   	push   %eax
   10fde:	e8 2d 2f ff ff       	call   3f10 <print_asm_1>
   10fe3:	0f b6 17             	movzbl (%edi),%edx
   10fe6:	83 c4 20             	add    $0x20,%esp
   10fe9:	8d 42 f0             	lea    -0x10(%edx),%eax
   10fec:	a8 ef                	test   $0xef,%al
   10fee:	75 17                	jne    11007 <call_rel_v+0xc7>
   10ff0:	0f bf 44 24 48       	movswl 0x48(%esp),%eax
   10ff5:	80 fa 10             	cmp    $0x10,%dl
   10ff8:	0f 45 44 24 48       	cmovne 0x48(%esp),%eax
   10ffd:	83 c4 6c             	add    $0x6c,%esp
   11000:	5b                   	pop    %ebx
   11001:	5e                   	pop    %esi
   11002:	5f                   	pop    %edi
   11003:	01 e8                	add    %ebp,%eax
   11005:	5d                   	pop    %ebp
   11006:	c3                   	ret    
   11007:	8d 83 68 0c ff ff    	lea    -0xf398(%ebx),%eax
   1100d:	50                   	push   %eax
   1100e:	8d 83 2a 0c ff ff    	lea    -0xf3d6(%ebx),%eax
   11014:	6a 15                	push   $0x15
   11016:	50                   	push   %eax
   11017:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   1101d:	50                   	push   %eax
   1101e:	e8 6d 18 ff ff       	call   2890 <__assert_fail@plt>
   11023:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11029:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00011030 <call_rm_v>:
   11030:	55                   	push   %ebp
   11031:	57                   	push   %edi
   11032:	56                   	push   %esi
   11033:	53                   	push   %ebx
   11034:	e8 87 1c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11039:	81 c3 c7 9f 01 00    	add    $0x19fc7,%ebx
   1103f:	83 ec 70             	sub    $0x70,%esp
   11042:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
   11049:	8d ab 77 13 00 00    	lea    0x1377(%ebx),%ebp
   1104f:	8d 74 24 1c          	lea    0x1c(%esp),%esi
   11053:	8d bb 60 1d 05 00    	lea    0x51d60(%ebx),%edi
   11059:	88 44 24 10          	mov    %al,0x10(%esp)
   1105d:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   11061:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   11065:	56                   	push   %esi
   11066:	89 c2                	mov    %eax,%edx
   11068:	c0 ea 03             	shr    $0x3,%dl
   1106b:	8d 44 24 14          	lea    0x14(%esp),%eax
   1106f:	0f b6 d2             	movzbl %dl,%edx
   11072:	29 57 10             	sub    %edx,0x10(%edi)
   11075:	50                   	push   %eax
   11076:	8b 84 24 8c 00 00 00 	mov    0x8c(%esp),%eax
   1107d:	83 c0 01             	add    $0x1,%eax
   11080:	50                   	push   %eax
   11081:	e8 5a 35 ff ff       	call   45e0 <modrm_opcode_rm>
   11086:	83 c0 01             	add    $0x1,%eax
   11089:	89 34 24             	mov    %esi,(%esp)
   1108c:	89 44 24 18          	mov    %eax,0x18(%esp)
   11090:	e8 0b 36 ff ff       	call   46a0 <operand_read>
   11095:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   11099:	c7 44 24 4c 02 00 00 	movl   $0x2,0x4c(%esp)
   110a0:	00 
   110a1:	c6 44 24 54 02       	movb   $0x2,0x54(%esp)
   110a6:	89 44 24 5c          	mov    %eax,0x5c(%esp)
   110aa:	8b 47 10             	mov    0x10(%edi),%eax
   110ad:	89 44 24 50          	mov    %eax,0x50(%esp)
   110b1:	8b 44 24 18          	mov    0x18(%esp),%eax
   110b5:	03 84 24 90 00 00 00 	add    0x90(%esp),%eax
   110bc:	89 44 24 58          	mov    %eax,0x58(%esp)
   110c0:	58                   	pop    %eax
   110c1:	8d 44 24 48          	lea    0x48(%esp),%eax
   110c5:	50                   	push   %eax
   110c6:	e8 65 37 ff ff       	call   4830 <operand_write>
   110cb:	56                   	push   %esi
   110cc:	0f b6 74 24 1c       	movzbl 0x1c(%esp),%esi
   110d1:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   110d7:	56                   	push   %esi
   110d8:	50                   	push   %eax
   110d9:	8d 83 40 0c ff ff    	lea    -0xf3c0(%ebx),%eax
   110df:	50                   	push   %eax
   110e0:	e8 2b 2e ff ff       	call   3f10 <print_asm_1>
   110e5:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   110e9:	83 c4 20             	add    $0x20,%esp
   110ec:	8d 50 f0             	lea    -0x10(%eax),%edx
   110ef:	81 e2 ef 00 00 00    	and    $0xef,%edx
   110f5:	75 2b                	jne    11122 <call_rm_v+0xf2>
   110f7:	3c 10                	cmp    $0x10,%al
   110f9:	74 15                	je     11110 <call_rm_v+0xe0>
   110fb:	8b 44 24 24          	mov    0x24(%esp),%eax
   110ff:	89 47 20             	mov    %eax,0x20(%edi)
   11102:	83 c4 6c             	add    $0x6c,%esp
   11105:	31 c0                	xor    %eax,%eax
   11107:	5b                   	pop    %ebx
   11108:	5e                   	pop    %esi
   11109:	5f                   	pop    %edi
   1110a:	5d                   	pop    %ebp
   1110b:	c3                   	ret    
   1110c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11110:	0f b7 44 24 24       	movzwl 0x24(%esp),%eax
   11115:	89 47 20             	mov    %eax,0x20(%edi)
   11118:	83 c4 6c             	add    $0x6c,%esp
   1111b:	31 c0                	xor    %eax,%eax
   1111d:	5b                   	pop    %ebx
   1111e:	5e                   	pop    %esi
   1111f:	5f                   	pop    %edi
   11120:	5d                   	pop    %ebp
   11121:	c3                   	ret    
   11122:	8d 83 5c 0c ff ff    	lea    -0xf3a4(%ebx),%eax
   11128:	50                   	push   %eax
   11129:	8d 83 2a 0c ff ff    	lea    -0xf3d6(%ebx),%eax
   1112f:	6a 2e                	push   $0x2e
   11131:	50                   	push   %eax
   11132:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   11138:	50                   	push   %eax
   11139:	e8 52 17 ff ff       	call   2890 <__assert_fail@plt>
   1113e:	66 90                	xchg   %ax,%ax

00011140 <leave_v>:
   11140:	57                   	push   %edi
   11141:	56                   	push   %esi
   11142:	53                   	push   %ebx
   11143:	e8 78 1b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11148:	81 c3 b8 9e 01 00    	add    $0x19eb8,%ebx
   1114e:	83 ec 3c             	sub    $0x3c,%esp
   11151:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   11157:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   1115d:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   11164:	00 
   11165:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   1116a:	8b 46 14             	mov    0x14(%esi),%eax
   1116d:	0f b6 17             	movzbl (%edi),%edx
   11170:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   11174:	89 46 10             	mov    %eax,0x10(%esi)
   11177:	8d 44 24 18          	lea    0x18(%esp),%eax
   1117b:	89 54 24 28          	mov    %edx,0x28(%esp)
   1117f:	50                   	push   %eax
   11180:	e8 1b 35 ff ff       	call   46a0 <operand_read>
   11185:	8b 44 24 28          	mov    0x28(%esp),%eax
   11189:	83 c4 0c             	add    $0xc,%esp
   1118c:	6a 01                	push   $0x1
   1118e:	89 46 14             	mov    %eax,0x14(%esi)
   11191:	0f b6 07             	movzbl (%edi),%eax
   11194:	c0 e8 03             	shr    $0x3,%al
   11197:	0f b6 c0             	movzbl %al,%eax
   1119a:	01 46 10             	add    %eax,0x10(%esi)
   1119d:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   111a3:	50                   	push   %eax
   111a4:	8d 83 46 0c ff ff    	lea    -0xf3ba(%ebx),%eax
   111aa:	50                   	push   %eax
   111ab:	e8 80 2c ff ff       	call   3e30 <print_asm_0>
   111b0:	83 c4 40             	add    $0x40,%esp
   111b3:	b8 01 00 00 00       	mov    $0x1,%eax
   111b8:	5b                   	pop    %ebx
   111b9:	5e                   	pop    %esi
   111ba:	5f                   	pop    %edi
   111bb:	c3                   	ret    
   111bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000111c0 <ret_v>:
   111c0:	57                   	push   %edi
   111c1:	56                   	push   %esi
   111c2:	53                   	push   %ebx
   111c3:	e8 f8 1a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   111c8:	81 c3 38 9e 01 00    	add    $0x19e38,%ebx
   111ce:	83 ec 3c             	sub    $0x3c,%esp
   111d1:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   111d7:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   111dd:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   111e4:	00 
   111e5:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   111ea:	0f b6 07             	movzbl (%edi),%eax
   111ed:	89 44 24 28          	mov    %eax,0x28(%esp)
   111f1:	8b 46 10             	mov    0x10(%esi),%eax
   111f4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   111f8:	8d 44 24 18          	lea    0x18(%esp),%eax
   111fc:	50                   	push   %eax
   111fd:	e8 9e 34 ff ff       	call   46a0 <operand_read>
   11202:	0f b6 07             	movzbl (%edi),%eax
   11205:	83 c4 0c             	add    $0xc,%esp
   11208:	6a 01                	push   $0x1
   1120a:	c0 e8 03             	shr    $0x3,%al
   1120d:	0f b6 c0             	movzbl %al,%eax
   11210:	01 46 10             	add    %eax,0x10(%esi)
   11213:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11219:	50                   	push   %eax
   1121a:	8d 83 4c 0c ff ff    	lea    -0xf3b4(%ebx),%eax
   11220:	50                   	push   %eax
   11221:	e8 0a 2c ff ff       	call   3e30 <print_asm_0>
   11226:	0f b6 07             	movzbl (%edi),%eax
   11229:	83 c4 10             	add    $0x10,%esp
   1122c:	8d 50 f0             	lea    -0x10(%eax),%edx
   1122f:	81 e2 ef 00 00 00    	and    $0xef,%edx
   11235:	75 2a                	jne    11261 <ret_v+0xa1>
   11237:	3c 10                	cmp    $0x10,%al
   11239:	74 15                	je     11250 <ret_v+0x90>
   1123b:	8b 44 24 18          	mov    0x18(%esp),%eax
   1123f:	89 46 20             	mov    %eax,0x20(%esi)
   11242:	83 c4 30             	add    $0x30,%esp
   11245:	31 c0                	xor    %eax,%eax
   11247:	5b                   	pop    %ebx
   11248:	5e                   	pop    %esi
   11249:	5f                   	pop    %edi
   1124a:	c3                   	ret    
   1124b:	90                   	nop
   1124c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11250:	0f b7 44 24 18       	movzwl 0x18(%esp),%eax
   11255:	89 46 20             	mov    %eax,0x20(%esi)
   11258:	83 c4 30             	add    $0x30,%esp
   1125b:	31 c0                	xor    %eax,%eax
   1125d:	5b                   	pop    %ebx
   1125e:	5e                   	pop    %esi
   1125f:	5f                   	pop    %edi
   11260:	c3                   	ret    
   11261:	8d 83 54 0c ff ff    	lea    -0xf3ac(%ebx),%eax
   11267:	50                   	push   %eax
   11268:	8d 83 2a 0c ff ff    	lea    -0xf3d6(%ebx),%eax
   1126e:	6a 56                	push   $0x56
   11270:	50                   	push   %eax
   11271:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   11277:	50                   	push   %eax
   11278:	e8 13 16 ff ff       	call   2890 <__assert_fail@plt>
   1127d:	8d 76 00             	lea    0x0(%esi),%esi

00011280 <ret_imm_v>:
   11280:	57                   	push   %edi
   11281:	56                   	push   %esi
   11282:	53                   	push   %ebx
   11283:	e8 38 1a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11288:	81 c3 78 9d 01 00    	add    $0x19d78,%ebx
   1128e:	83 ec 5c             	sub    $0x5c,%esp
   11291:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   11297:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   1129d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   112a4:	00 
   112a5:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
   112ac:	00 
   112ad:	c7 44 24 24 10 00 00 	movl   $0x10,0x24(%esp)
   112b4:	00 
   112b5:	0f b6 07             	movzbl (%edi),%eax
   112b8:	89 44 24 48          	mov    %eax,0x48(%esp)
   112bc:	8b 46 10             	mov    0x10(%esi),%eax
   112bf:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   112c3:	8d 44 24 38          	lea    0x38(%esp),%eax
   112c7:	50                   	push   %eax
   112c8:	e8 d3 33 ff ff       	call   46a0 <operand_read>
   112cd:	0f b6 07             	movzbl (%edi),%eax
   112d0:	c0 e8 03             	shr    $0x3,%al
   112d3:	0f b6 c0             	movzbl %al,%eax
   112d6:	01 46 10             	add    %eax,0x10(%esi)
   112d9:	8b 44 24 70          	mov    0x70(%esp),%eax
   112dd:	83 c0 01             	add    $0x1,%eax
   112e0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   112e4:	58                   	pop    %eax
   112e5:	8d 7c 24 14          	lea    0x14(%esp),%edi
   112e9:	57                   	push   %edi
   112ea:	e8 b1 33 ff ff       	call   46a0 <operand_read>
   112ef:	8b 44 24 24          	mov    0x24(%esp),%eax
   112f3:	01 46 10             	add    %eax,0x10(%esi)
   112f6:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   112fc:	57                   	push   %edi
   112fd:	6a 02                	push   $0x2
   112ff:	50                   	push   %eax
   11300:	8d 83 4c 0c ff ff    	lea    -0xf3b4(%ebx),%eax
   11306:	50                   	push   %eax
   11307:	e8 04 2c ff ff       	call   3f10 <print_asm_1>
   1130c:	8b 44 24 58          	mov    0x58(%esp),%eax
   11310:	89 46 20             	mov    %eax,0x20(%esi)
   11313:	83 c4 70             	add    $0x70,%esp
   11316:	31 c0                	xor    %eax,%eax
   11318:	5b                   	pop    %ebx
   11319:	5e                   	pop    %esi
   1131a:	5f                   	pop    %edi
   1131b:	c3                   	ret    
   1131c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00011320 <lea_v>:
   11320:	55                   	push   %ebp
   11321:	57                   	push   %edi
   11322:	56                   	push   %esi
   11323:	53                   	push   %ebx
   11324:	e8 97 19 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11329:	81 c3 d7 9c 01 00    	add    $0x19cd7,%ebx
   1132f:	83 ec 60             	sub    $0x60,%esp
   11332:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   11338:	8d 6c 24 0c          	lea    0xc(%esp),%ebp
   1133c:	0f b6 00             	movzbl (%eax),%eax
   1133f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   11343:	89 44 24 40          	mov    %eax,0x40(%esp)
   11347:	55                   	push   %ebp
   11348:	8d 7c 24 34          	lea    0x34(%esp),%edi
   1134c:	57                   	push   %edi
   1134d:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   11351:	83 c0 01             	add    $0x1,%eax
   11354:	50                   	push   %eax
   11355:	e8 36 32 ff ff       	call   4590 <modrm_r_rm>
   1135a:	8d 70 01             	lea    0x1(%eax),%esi
   1135d:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11361:	89 3c 24             	mov    %edi,(%esp)
   11364:	89 44 24 48          	mov    %eax,0x48(%esp)
   11368:	e8 c3 34 ff ff       	call   4830 <operand_write>
   1136d:	89 f0                	mov    %esi,%eax
   1136f:	89 3c 24             	mov    %edi,(%esp)
   11372:	55                   	push   %ebp
   11373:	0f b6 c0             	movzbl %al,%eax
   11376:	50                   	push   %eax
   11377:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1137d:	50                   	push   %eax
   1137e:	8d 83 50 0c ff ff    	lea    -0xf3b0(%ebx),%eax
   11384:	50                   	push   %eax
   11385:	e8 76 2c ff ff       	call   4000 <print_asm_2>
   1138a:	83 c4 7c             	add    $0x7c,%esp
   1138d:	89 f0                	mov    %esi,%eax
   1138f:	5b                   	pop    %ebx
   11390:	5e                   	pop    %esi
   11391:	5f                   	pop    %edi
   11392:	5d                   	pop    %ebp
   11393:	c3                   	ret    
   11394:	66 90                	xchg   %ax,%ax
   11396:	66 90                	xchg   %ax,%ax
   11398:	66 90                	xchg   %ax,%ax
   1139a:	66 90                	xchg   %ax,%ax
   1139c:	66 90                	xchg   %ax,%ax
   1139e:	66 90                	xchg   %ax,%ax

000113a0 <stos_b>:
   113a0:	56                   	push   %esi
   113a1:	53                   	push   %ebx
   113a2:	e8 19 19 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   113a7:	81 c3 59 9c 01 00    	add    $0x19c59,%ebx
   113ad:	83 ec 60             	sub    $0x60,%esp
   113b0:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   113b6:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   113bd:	00 
   113be:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   113c5:	00 
   113c6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   113cd:	00 
   113ce:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   113d5:	00 
   113d6:	c6 44 24 40 00       	movb   $0x0,0x40(%esp)
   113db:	8b 46 1c             	mov    0x1c(%esi),%eax
   113de:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   113e5:	00 
   113e6:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   113ea:	8d 44 24 14          	lea    0x14(%esp),%eax
   113ee:	50                   	push   %eax
   113ef:	e8 ac 32 ff ff       	call   46a0 <operand_read>
   113f4:	8b 44 24 24          	mov    0x24(%esp),%eax
   113f8:	89 44 24 48          	mov    %eax,0x48(%esp)
   113fc:	58                   	pop    %eax
   113fd:	31 c0                	xor    %eax,%eax
   113ff:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   11403:	0f 95 c0             	setne  %al
   11406:	f7 d8                	neg    %eax
   11408:	83 c8 01             	or     $0x1,%eax
   1140b:	01 46 1c             	add    %eax,0x1c(%esi)
   1140e:	8d 44 24 38          	lea    0x38(%esp),%eax
   11412:	50                   	push   %eax
   11413:	e8 18 34 ff ff       	call   4830 <operand_write>
   11418:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1141e:	83 c4 0c             	add    $0xc,%esp
   11421:	6a 01                	push   $0x1
   11423:	50                   	push   %eax
   11424:	8d 83 73 0c ff ff    	lea    -0xf38d(%ebx),%eax
   1142a:	50                   	push   %eax
   1142b:	e8 00 2a ff ff       	call   3e30 <print_asm_0>
   11430:	83 c4 64             	add    $0x64,%esp
   11433:	b8 01 00 00 00       	mov    $0x1,%eax
   11438:	5b                   	pop    %ebx
   11439:	5e                   	pop    %esi
   1143a:	c3                   	ret    
   1143b:	90                   	nop
   1143c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00011440 <stos_v>:
   11440:	57                   	push   %edi
   11441:	56                   	push   %esi
   11442:	53                   	push   %ebx
   11443:	e8 78 18 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11448:	81 c3 b8 9b 01 00    	add    $0x19bb8,%ebx
   1144e:	83 ec 5c             	sub    $0x5c,%esp
   11451:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   11457:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   1145d:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   11464:	00 
   11465:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1146c:	00 
   1146d:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   11474:	00 
   11475:	c6 44 24 40 00       	movb   $0x0,0x40(%esp)
   1147a:	0f b6 07             	movzbl (%edi),%eax
   1147d:	89 44 24 24          	mov    %eax,0x24(%esp)
   11481:	89 44 24 48          	mov    %eax,0x48(%esp)
   11485:	8b 46 1c             	mov    0x1c(%esi),%eax
   11488:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   1148c:	8d 44 24 14          	lea    0x14(%esp),%eax
   11490:	50                   	push   %eax
   11491:	e8 0a 32 ff ff       	call   46a0 <operand_read>
   11496:	8b 44 24 24          	mov    0x24(%esp),%eax
   1149a:	89 44 24 48          	mov    %eax,0x48(%esp)
   1149e:	83 c4 10             	add    $0x10,%esp
   114a1:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   114a5:	74 41                	je     114e8 <stos_v+0xa8>
   114a7:	0f b6 07             	movzbl (%edi),%eax
   114aa:	c1 f8 03             	sar    $0x3,%eax
   114ad:	f7 d8                	neg    %eax
   114af:	83 ec 0c             	sub    $0xc,%esp
   114b2:	01 46 1c             	add    %eax,0x1c(%esi)
   114b5:	8d 44 24 38          	lea    0x38(%esp),%eax
   114b9:	50                   	push   %eax
   114ba:	e8 71 33 ff ff       	call   4830 <operand_write>
   114bf:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   114c5:	83 c4 0c             	add    $0xc,%esp
   114c8:	6a 01                	push   $0x1
   114ca:	50                   	push   %eax
   114cb:	8d 83 73 0c ff ff    	lea    -0xf38d(%ebx),%eax
   114d1:	50                   	push   %eax
   114d2:	e8 59 29 ff ff       	call   3e30 <print_asm_0>
   114d7:	83 c4 60             	add    $0x60,%esp
   114da:	b8 01 00 00 00       	mov    $0x1,%eax
   114df:	5b                   	pop    %ebx
   114e0:	5e                   	pop    %esi
   114e1:	5f                   	pop    %edi
   114e2:	c3                   	ret    
   114e3:	90                   	nop
   114e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   114e8:	0f b6 07             	movzbl (%edi),%eax
   114eb:	c0 e8 03             	shr    $0x3,%al
   114ee:	0f b6 c0             	movzbl %al,%eax
   114f1:	eb bc                	jmp    114af <stos_v+0x6f>
   114f3:	66 90                	xchg   %ax,%ax
   114f5:	66 90                	xchg   %ax,%ax
   114f7:	66 90                	xchg   %ax,%ax
   114f9:	66 90                	xchg   %ax,%ax
   114fb:	66 90                	xchg   %ax,%ax
   114fd:	66 90                	xchg   %ax,%ax
   114ff:	90                   	nop

00011500 <INT>:
   11500:	53                   	push   %ebx
   11501:	e8 ba 17 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11506:	81 c3 fa 9a 01 00    	add    $0x19afa,%ebx
   1150c:	83 ec 44             	sub    $0x44,%esp
   1150f:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   11513:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
   1151a:	00 
   1151b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   11522:	00 
   11523:	83 c0 01             	add    $0x1,%eax
   11526:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1152a:	8d 44 24 18          	lea    0x18(%esp),%eax
   1152e:	50                   	push   %eax
   1152f:	e8 6c 31 ff ff       	call   46a0 <operand_read>
   11534:	0f b6 44 24 28       	movzbl 0x28(%esp),%eax
   11539:	89 04 24             	mov    %eax,(%esp)
   1153c:	e8 5f a9 ff ff       	call   bea0 <raise_sw_intr>
   11541:	83 c4 48             	add    $0x48,%esp
   11544:	31 c0                	xor    %eax,%eax
   11546:	5b                   	pop    %ebx
   11547:	c3                   	ret    
   11548:	66 90                	xchg   %ax,%ax
   1154a:	66 90                	xchg   %ax,%ax
   1154c:	66 90                	xchg   %ax,%ax
   1154e:	66 90                	xchg   %ax,%ax

00011550 <opcode_2_byte>:
   11550:	56                   	push   %esi
   11551:	53                   	push   %ebx
   11552:	e8 69 17 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11557:	81 c3 a9 9a 01 00    	add    $0x19aa9,%ebx
   1155d:	83 ec 0c             	sub    $0xc,%esp
   11560:	8b 44 24 18          	mov    0x18(%esp),%eax
   11564:	6a 01                	push   $0x1
   11566:	8d 70 01             	lea    0x1(%eax),%esi
   11569:	56                   	push   %esi
   1156a:	e8 71 8d 00 00       	call   1a2e0 <instr_fetch>
   1156f:	5a                   	pop    %edx
   11570:	59                   	pop    %ecx
   11571:	0f b6 c0             	movzbl %al,%eax
   11574:	8d 93 00 05 00 00    	lea    0x500(%ebx),%edx
   1157a:	50                   	push   %eax
   1157b:	56                   	push   %esi
   1157c:	ff 14 82             	call   *(%edx,%eax,4)
   1157f:	83 c4 14             	add    $0x14,%esp
   11582:	83 c0 01             	add    $0x1,%eax
   11585:	5b                   	pop    %ebx
   11586:	5e                   	pop    %esi
   11587:	c3                   	ret    
   11588:	66 90                	xchg   %ax,%ax
   1158a:	66 90                	xchg   %ax,%ax
   1158c:	66 90                	xchg   %ax,%ax
   1158e:	66 90                	xchg   %ax,%ax

00011590 <x87_fldl>:
   11590:	57                   	push   %edi
   11591:	56                   	push   %esi
   11592:	53                   	push   %ebx
   11593:	e8 28 17 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11598:	81 c3 68 9a 01 00    	add    $0x19a68,%ebx
   1159e:	83 ec 18             	sub    $0x18,%esp
   115a1:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   115a7:	56                   	push   %esi
   115a8:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   115ac:	c7 46 10 20 00 00 00 	movl   $0x20,0x10(%esi)
   115b3:	83 c0 01             	add    $0x1,%eax
   115b6:	50                   	push   %eax
   115b7:	e8 a4 30 ff ff       	call   4660 <modrm_rm>
   115bc:	89 34 24             	mov    %esi,(%esp)
   115bf:	8d 78 01             	lea    0x1(%eax),%edi
   115c2:	e8 d9 30 ff ff       	call   46a0 <operand_read>
   115c7:	8b 46 0c             	mov    0xc(%esi),%eax
   115ca:	89 34 24             	mov    %esi,(%esp)
   115cd:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   115d4:	00 
   115d5:	83 46 04 04          	addl   $0x4,0x4(%esi)
   115d9:	89 44 24 10          	mov    %eax,0x10(%esp)
   115dd:	e8 be 30 ff ff       	call   46a0 <operand_read>
   115e2:	8b 46 0c             	mov    0xc(%esi),%eax
   115e5:	89 44 24 14          	mov    %eax,0x14(%esp)
   115e9:	89 f8                	mov    %edi,%eax
   115eb:	83 c4 0c             	add    $0xc,%esp
   115ee:	0f b6 c0             	movzbl %al,%eax
   115f1:	50                   	push   %eax
   115f2:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   115f8:	50                   	push   %eax
   115f9:	8d 83 78 0c ff ff    	lea    -0xf388(%ebx),%eax
   115ff:	50                   	push   %eax
   11600:	e8 2b 28 ff ff       	call   3e30 <print_asm_0>
   11605:	dd 44 24 10          	fldl   0x10(%esp)
   11609:	d9 5c 24 1c          	fstps  0x1c(%esp)
   1160d:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11611:	89 04 24             	mov    %eax,(%esp)
   11614:	e8 47 95 ff ff       	call   ab60 <fpu_load>
   11619:	83 c4 20             	add    $0x20,%esp
   1161c:	89 f8                	mov    %edi,%eax
   1161e:	5b                   	pop    %ebx
   1161f:	5e                   	pop    %esi
   11620:	5f                   	pop    %edi
   11621:	c3                   	ret    
   11622:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00011630 <x87_flds>:
   11630:	57                   	push   %edi
   11631:	56                   	push   %esi
   11632:	53                   	push   %ebx
   11633:	e8 88 16 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11638:	81 c3 c8 99 01 00    	add    $0x199c8,%ebx
   1163e:	83 ec 08             	sub    $0x8,%esp
   11641:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   11647:	57                   	push   %edi
   11648:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1164c:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11653:	83 c0 01             	add    $0x1,%eax
   11656:	50                   	push   %eax
   11657:	e8 04 30 ff ff       	call   4660 <modrm_rm>
   1165c:	8d 70 01             	lea    0x1(%eax),%esi
   1165f:	89 3c 24             	mov    %edi,(%esp)
   11662:	e8 39 30 ff ff       	call   46a0 <operand_read>
   11667:	89 f0                	mov    %esi,%eax
   11669:	83 c4 0c             	add    $0xc,%esp
   1166c:	0f b6 c0             	movzbl %al,%eax
   1166f:	50                   	push   %eax
   11670:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11676:	50                   	push   %eax
   11677:	8d 83 7d 0c ff ff    	lea    -0xf383(%ebx),%eax
   1167d:	50                   	push   %eax
   1167e:	e8 ad 27 ff ff       	call   3e30 <print_asm_0>
   11683:	58                   	pop    %eax
   11684:	ff 77 0c             	pushl  0xc(%edi)
   11687:	e8 d4 94 ff ff       	call   ab60 <fpu_load>
   1168c:	83 c4 10             	add    $0x10,%esp
   1168f:	89 f0                	mov    %esi,%eax
   11691:	5b                   	pop    %ebx
   11692:	5e                   	pop    %esi
   11693:	5f                   	pop    %edi
   11694:	c3                   	ret    
   11695:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11699:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000116a0 <x87_fildl>:
   116a0:	57                   	push   %edi
   116a1:	56                   	push   %esi
   116a2:	53                   	push   %ebx
   116a3:	e8 18 16 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   116a8:	81 c3 58 99 01 00    	add    $0x19958,%ebx
   116ae:	83 ec 18             	sub    $0x18,%esp
   116b1:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   116b7:	57                   	push   %edi
   116b8:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   116bc:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   116c3:	83 c0 01             	add    $0x1,%eax
   116c6:	50                   	push   %eax
   116c7:	e8 94 2f ff ff       	call   4660 <modrm_rm>
   116cc:	89 3c 24             	mov    %edi,(%esp)
   116cf:	8d 70 01             	lea    0x1(%eax),%esi
   116d2:	e8 c9 2f ff ff       	call   46a0 <operand_read>
   116d7:	58                   	pop    %eax
   116d8:	db 47 0c             	fildl  0xc(%edi)
   116db:	d9 5c 24 18          	fstps  0x18(%esp)
   116df:	ff 74 24 18          	pushl  0x18(%esp)
   116e3:	e8 78 94 ff ff       	call   ab60 <fpu_load>
   116e8:	89 f0                	mov    %esi,%eax
   116ea:	83 c4 0c             	add    $0xc,%esp
   116ed:	0f b6 c0             	movzbl %al,%eax
   116f0:	50                   	push   %eax
   116f1:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   116f7:	50                   	push   %eax
   116f8:	8d 83 82 0c ff ff    	lea    -0xf37e(%ebx),%eax
   116fe:	50                   	push   %eax
   116ff:	e8 2c 27 ff ff       	call   3e30 <print_asm_0>
   11704:	83 c4 20             	add    $0x20,%esp
   11707:	89 f0                	mov    %esi,%eax
   11709:	5b                   	pop    %ebx
   1170a:	5e                   	pop    %esi
   1170b:	5f                   	pop    %edi
   1170c:	c3                   	ret    
   1170d:	8d 76 00             	lea    0x0(%esi),%esi

00011710 <x87_fldx>:
   11710:	57                   	push   %edi
   11711:	56                   	push   %esi
   11712:	53                   	push   %ebx
   11713:	8b 44 24 10          	mov    0x10(%esp),%eax
   11717:	e8 a4 15 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1171c:	81 c3 e4 98 01 00    	add    $0x198e4,%ebx
   11722:	83 ec 08             	sub    $0x8,%esp
   11725:	8d 70 01             	lea    0x1(%eax),%esi
   11728:	6a 01                	push   $0x1
   1172a:	56                   	push   %esi
   1172b:	e8 b0 8b 00 00       	call   1a2e0 <instr_fetch>
   11730:	2d e8 00 00 00       	sub    $0xe8,%eax
   11735:	83 c4 10             	add    $0x10,%esp
   11738:	83 f8 06             	cmp    $0x6,%eax
   1173b:	0f 87 af 00 00 00    	ja     117f0 <.L14+0x10>
   11741:	8b 8c 83 20 0d ff ff 	mov    -0xf2e0(%ebx,%eax,4),%ecx
   11748:	01 d9                	add    %ebx,%ecx
   1174a:	ff e1                	jmp    *%ecx
   1174c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00011750 <.L15>:
   11750:	8d 83 3c 0d ff ff    	lea    -0xf2c4(%ebx),%eax
   11756:	50                   	push   %eax
   11757:	6a 47                	push   $0x47
   11759:	8d 83 88 0c ff ff    	lea    -0xf378(%ebx),%eax
   1175f:	50                   	push   %eax
   11760:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
   11766:	50                   	push   %eax
   11767:	e8 24 11 ff ff       	call   2890 <__assert_fail@plt>
   1176c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00011770 <.L16>:
   11770:	83 ec 0c             	sub    $0xc,%esp
   11773:	be 02 00 00 00       	mov    $0x2,%esi
   11778:	6a 00                	push   $0x0
   1177a:	e8 e1 93 ff ff       	call   ab60 <fpu_load>
   1177f:	83 c4 10             	add    $0x10,%esp
   11782:	89 f0                	mov    %esi,%eax
   11784:	5b                   	pop    %ebx
   11785:	5e                   	pop    %esi
   11786:	5f                   	pop    %edi
   11787:	c3                   	ret    
   11788:	90                   	nop
   11789:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00011790 <.L9>:
   11790:	83 ec 0c             	sub    $0xc,%esp
   11793:	be 02 00 00 00       	mov    $0x2,%esi
   11798:	68 00 00 80 3f       	push   $0x3f800000
   1179d:	e8 be 93 ff ff       	call   ab60 <fpu_load>
   117a2:	83 c4 10             	add    $0x10,%esp
   117a5:	89 f0                	mov    %esi,%eax
   117a7:	5b                   	pop    %ebx
   117a8:	5e                   	pop    %esi
   117a9:	5f                   	pop    %edi
   117aa:	c3                   	ret    
   117ab:	90                   	nop
   117ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000117b0 <.L11>:
   117b0:	8d 83 3c 0d ff ff    	lea    -0xf2c4(%ebx),%eax
   117b6:	50                   	push   %eax
   117b7:	6a 3f                	push   $0x3f
   117b9:	eb 9e                	jmp    11759 <.L15+0x9>
   117bb:	90                   	nop
   117bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000117c0 <.L12>:
   117c0:	8d 83 3c 0d ff ff    	lea    -0xf2c4(%ebx),%eax
   117c6:	50                   	push   %eax
   117c7:	6a 41                	push   $0x41
   117c9:	eb 8e                	jmp    11759 <.L15+0x9>
   117cb:	90                   	nop
   117cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000117d0 <.L13>:
   117d0:	8d 83 3c 0d ff ff    	lea    -0xf2c4(%ebx),%eax
   117d6:	50                   	push   %eax
   117d7:	6a 43                	push   $0x43
   117d9:	e9 7b ff ff ff       	jmp    11759 <.L15+0x9>
   117de:	66 90                	xchg   %ax,%ax

000117e0 <.L14>:
   117e0:	8d 83 3c 0d ff ff    	lea    -0xf2c4(%ebx),%eax
   117e6:	50                   	push   %eax
   117e7:	6a 45                	push   $0x45
   117e9:	e9 6b ff ff ff       	jmp    11759 <.L15+0x9>
   117ee:	66 90                	xchg   %ax,%ax
   117f0:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   117f6:	83 ec 08             	sub    $0x8,%esp
   117f9:	57                   	push   %edi
   117fa:	56                   	push   %esi
   117fb:	c7 47 10 10 00 00 00 	movl   $0x10,0x10(%edi)
   11802:	e8 59 2e ff ff       	call   4660 <modrm_rm>
   11807:	89 3c 24             	mov    %edi,(%esp)
   1180a:	8d 70 01             	lea    0x1(%eax),%esi
   1180d:	e8 8e 2e ff ff       	call   46a0 <operand_read>
   11812:	8d 83 20 1e 05 00    	lea    0x51e20(%ebx),%eax
   11818:	8b 57 0c             	mov    0xc(%edi),%edx
   1181b:	83 c4 0c             	add    $0xc,%esp
   1181e:	66 89 50 24          	mov    %dx,0x24(%eax)
   11822:	89 f0                	mov    %esi,%eax
   11824:	0f b6 c0             	movzbl %al,%eax
   11827:	50                   	push   %eax
   11828:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1182e:	50                   	push   %eax
   1182f:	8d 83 9c 0c ff ff    	lea    -0xf364(%ebx),%eax
   11835:	50                   	push   %eax
   11836:	e8 f5 25 ff ff       	call   3e30 <print_asm_0>
   1183b:	83 c4 10             	add    $0x10,%esp
   1183e:	89 f0                	mov    %esi,%eax
   11840:	5b                   	pop    %ebx
   11841:	5e                   	pop    %esi
   11842:	5f                   	pop    %edi
   11843:	c3                   	ret    
   11844:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1184a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00011850 <x87_fadds>:
   11850:	57                   	push   %edi
   11851:	56                   	push   %esi
   11852:	53                   	push   %ebx
   11853:	8b 44 24 10          	mov    0x10(%esp),%eax
   11857:	e8 64 14 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1185c:	81 c3 a4 97 01 00    	add    $0x197a4,%ebx
   11862:	83 ec 08             	sub    $0x8,%esp
   11865:	8d 70 01             	lea    0x1(%eax),%esi
   11868:	6a 01                	push   $0x1
   1186a:	56                   	push   %esi
   1186b:	e8 70 8a 00 00       	call   1a2e0 <instr_fetch>
   11870:	2d c0 00 00 00       	sub    $0xc0,%eax
   11875:	83 c4 10             	add    $0x10,%esp
   11878:	83 f8 07             	cmp    $0x7,%eax
   1187b:	77 4b                	ja     118c8 <x87_fadds+0x78>
   1187d:	83 ec 08             	sub    $0x8,%esp
   11880:	6a 01                	push   $0x1
   11882:	56                   	push   %esi
   11883:	be 02 00 00 00       	mov    $0x2,%esi
   11888:	e8 53 8a 00 00       	call   1a2e0 <instr_fetch>
   1188d:	5a                   	pop    %edx
   1188e:	59                   	pop    %ecx
   1188f:	83 e0 07             	and    $0x7,%eax
   11892:	6a 00                	push   $0x0
   11894:	50                   	push   %eax
   11895:	e8 b6 93 ff ff       	call   ac50 <fpu_add_idx>
   1189a:	83 c4 10             	add    $0x10,%esp
   1189d:	b8 02 00 00 00       	mov    $0x2,%eax
   118a2:	83 ec 04             	sub    $0x4,%esp
   118a5:	50                   	push   %eax
   118a6:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   118ac:	50                   	push   %eax
   118ad:	8d 83 a2 0c ff ff    	lea    -0xf35e(%ebx),%eax
   118b3:	50                   	push   %eax
   118b4:	e8 77 25 ff ff       	call   3e30 <print_asm_0>
   118b9:	83 c4 10             	add    $0x10,%esp
   118bc:	89 f0                	mov    %esi,%eax
   118be:	5b                   	pop    %ebx
   118bf:	5e                   	pop    %esi
   118c0:	5f                   	pop    %edi
   118c1:	c3                   	ret    
   118c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   118c8:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   118ce:	83 ec 08             	sub    $0x8,%esp
   118d1:	57                   	push   %edi
   118d2:	56                   	push   %esi
   118d3:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   118da:	e8 81 2d ff ff       	call   4660 <modrm_rm>
   118df:	89 3c 24             	mov    %edi,(%esp)
   118e2:	8d 70 01             	lea    0x1(%eax),%esi
   118e5:	e8 b6 2d ff ff       	call   46a0 <operand_read>
   118ea:	58                   	pop    %eax
   118eb:	ff 77 0c             	pushl  0xc(%edi)
   118ee:	e8 1d 93 ff ff       	call   ac10 <fpu_add>
   118f3:	89 f0                	mov    %esi,%eax
   118f5:	83 c4 10             	add    $0x10,%esp
   118f8:	0f b6 c0             	movzbl %al,%eax
   118fb:	eb a5                	jmp    118a2 <x87_fadds+0x52>
   118fd:	8d 76 00             	lea    0x0(%esi),%esi

00011900 <x87_faddx>:
   11900:	57                   	push   %edi
   11901:	56                   	push   %esi
   11902:	53                   	push   %ebx
   11903:	e8 b8 13 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11908:	81 c3 f8 96 01 00    	add    $0x196f8,%ebx
   1190e:	83 ec 18             	sub    $0x18,%esp
   11911:	8b 44 24 28          	mov    0x28(%esp),%eax
   11915:	6a 01                	push   $0x1
   11917:	8d 70 01             	lea    0x1(%eax),%esi
   1191a:	56                   	push   %esi
   1191b:	e8 c0 89 00 00       	call   1a2e0 <instr_fetch>
   11920:	2d c0 00 00 00       	sub    $0xc0,%eax
   11925:	83 c4 10             	add    $0x10,%esp
   11928:	83 f8 07             	cmp    $0x7,%eax
   1192b:	77 53                	ja     11980 <x87_faddx+0x80>
   1192d:	83 ec 08             	sub    $0x8,%esp
   11930:	6a 01                	push   $0x1
   11932:	56                   	push   %esi
   11933:	be 02 00 00 00       	mov    $0x2,%esi
   11938:	e8 a3 89 00 00       	call   1a2e0 <instr_fetch>
   1193d:	5a                   	pop    %edx
   1193e:	59                   	pop    %ecx
   1193f:	83 e0 07             	and    $0x7,%eax
   11942:	50                   	push   %eax
   11943:	50                   	push   %eax
   11944:	e8 07 93 ff ff       	call   ac50 <fpu_add_idx>
   11949:	e8 62 92 ff ff       	call   abb0 <fpu_store>
   1194e:	83 c4 10             	add    $0x10,%esp
   11951:	b8 02 00 00 00       	mov    $0x2,%eax
   11956:	83 ec 04             	sub    $0x4,%esp
   11959:	50                   	push   %eax
   1195a:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11960:	50                   	push   %eax
   11961:	8d 83 a8 0c ff ff    	lea    -0xf358(%ebx),%eax
   11967:	50                   	push   %eax
   11968:	e8 c3 24 ff ff       	call   3e30 <print_asm_0>
   1196d:	83 c4 20             	add    $0x20,%esp
   11970:	89 f0                	mov    %esi,%eax
   11972:	5b                   	pop    %ebx
   11973:	5e                   	pop    %esi
   11974:	5f                   	pop    %edi
   11975:	c3                   	ret    
   11976:	8d 76 00             	lea    0x0(%esi),%esi
   11979:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   11980:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   11986:	83 ec 08             	sub    $0x8,%esp
   11989:	57                   	push   %edi
   1198a:	56                   	push   %esi
   1198b:	c7 47 10 10 00 00 00 	movl   $0x10,0x10(%edi)
   11992:	e8 c9 2c ff ff       	call   4660 <modrm_rm>
   11997:	89 3c 24             	mov    %edi,(%esp)
   1199a:	8d 70 01             	lea    0x1(%eax),%esi
   1199d:	e8 fe 2c ff ff       	call   46a0 <operand_read>
   119a2:	58                   	pop    %eax
   119a3:	db 47 0c             	fildl  0xc(%edi)
   119a6:	d9 5c 24 18          	fstps  0x18(%esp)
   119aa:	ff 74 24 18          	pushl  0x18(%esp)
   119ae:	e8 5d 92 ff ff       	call   ac10 <fpu_add>
   119b3:	89 f0                	mov    %esi,%eax
   119b5:	83 c4 10             	add    $0x10,%esp
   119b8:	0f b6 c0             	movzbl %al,%eax
   119bb:	eb 99                	jmp    11956 <x87_faddx+0x56>
   119bd:	8d 76 00             	lea    0x0(%esi),%esi

000119c0 <x87_faddlx>:
   119c0:	57                   	push   %edi
   119c1:	56                   	push   %esi
   119c2:	53                   	push   %ebx
   119c3:	e8 f8 12 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   119c8:	81 c3 38 96 01 00    	add    $0x19638,%ebx
   119ce:	83 ec 18             	sub    $0x18,%esp
   119d1:	8b 44 24 28          	mov    0x28(%esp),%eax
   119d5:	6a 01                	push   $0x1
   119d7:	8d 70 01             	lea    0x1(%eax),%esi
   119da:	56                   	push   %esi
   119db:	e8 00 89 00 00       	call   1a2e0 <instr_fetch>
   119e0:	2d c0 00 00 00       	sub    $0xc0,%eax
   119e5:	83 c4 10             	add    $0x10,%esp
   119e8:	83 f8 07             	cmp    $0x7,%eax
   119eb:	77 4b                	ja     11a38 <x87_faddlx+0x78>
   119ed:	83 ec 08             	sub    $0x8,%esp
   119f0:	6a 01                	push   $0x1
   119f2:	56                   	push   %esi
   119f3:	be 02 00 00 00       	mov    $0x2,%esi
   119f8:	e8 e3 88 00 00       	call   1a2e0 <instr_fetch>
   119fd:	5a                   	pop    %edx
   119fe:	59                   	pop    %ecx
   119ff:	83 e0 07             	and    $0x7,%eax
   11a02:	50                   	push   %eax
   11a03:	50                   	push   %eax
   11a04:	e8 47 92 ff ff       	call   ac50 <fpu_add_idx>
   11a09:	83 c4 10             	add    $0x10,%esp
   11a0c:	b8 02 00 00 00       	mov    $0x2,%eax
   11a11:	83 ec 04             	sub    $0x4,%esp
   11a14:	50                   	push   %eax
   11a15:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11a1b:	50                   	push   %eax
   11a1c:	8d 83 ad 0c ff ff    	lea    -0xf353(%ebx),%eax
   11a22:	50                   	push   %eax
   11a23:	e8 08 24 ff ff       	call   3e30 <print_asm_0>
   11a28:	83 c4 20             	add    $0x20,%esp
   11a2b:	89 f0                	mov    %esi,%eax
   11a2d:	5b                   	pop    %ebx
   11a2e:	5e                   	pop    %esi
   11a2f:	5f                   	pop    %edi
   11a30:	c3                   	ret    
   11a31:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11a38:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   11a3e:	83 ec 08             	sub    $0x8,%esp
   11a41:	57                   	push   %edi
   11a42:	56                   	push   %esi
   11a43:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11a4a:	e8 11 2c ff ff       	call   4660 <modrm_rm>
   11a4f:	89 3c 24             	mov    %edi,(%esp)
   11a52:	8d 70 01             	lea    0x1(%eax),%esi
   11a55:	e8 46 2c ff ff       	call   46a0 <operand_read>
   11a5a:	8b 47 0c             	mov    0xc(%edi),%eax
   11a5d:	89 3c 24             	mov    %edi,(%esp)
   11a60:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   11a67:	00 
   11a68:	83 47 04 04          	addl   $0x4,0x4(%edi)
   11a6c:	89 44 24 10          	mov    %eax,0x10(%esp)
   11a70:	e8 2b 2c ff ff       	call   46a0 <operand_read>
   11a75:	8b 47 0c             	mov    0xc(%edi),%eax
   11a78:	89 44 24 14          	mov    %eax,0x14(%esp)
   11a7c:	dd 44 24 10          	fldl   0x10(%esp)
   11a80:	d9 5c 24 1c          	fstps  0x1c(%esp)
   11a84:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11a88:	89 04 24             	mov    %eax,(%esp)
   11a8b:	e8 80 91 ff ff       	call   ac10 <fpu_add>
   11a90:	89 f0                	mov    %esi,%eax
   11a92:	83 c4 10             	add    $0x10,%esp
   11a95:	0f b6 c0             	movzbl %al,%eax
   11a98:	e9 74 ff ff ff       	jmp    11a11 <x87_faddlx+0x51>
   11a9d:	8d 76 00             	lea    0x0(%esi),%esi

00011aa0 <x87_fsubs>:
   11aa0:	57                   	push   %edi
   11aa1:	56                   	push   %esi
   11aa2:	53                   	push   %ebx
   11aa3:	e8 18 12 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11aa8:	81 c3 58 95 01 00    	add    $0x19558,%ebx
   11aae:	83 ec 08             	sub    $0x8,%esp
   11ab1:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   11ab7:	57                   	push   %edi
   11ab8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11abc:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11ac3:	83 c0 01             	add    $0x1,%eax
   11ac6:	50                   	push   %eax
   11ac7:	e8 94 2b ff ff       	call   4660 <modrm_rm>
   11acc:	89 3c 24             	mov    %edi,(%esp)
   11acf:	8d 70 01             	lea    0x1(%eax),%esi
   11ad2:	e8 c9 2b ff ff       	call   46a0 <operand_read>
   11ad7:	58                   	pop    %eax
   11ad8:	ff 77 0c             	pushl  0xc(%edi)
   11adb:	e8 c0 91 ff ff       	call   aca0 <fpu_sub>
   11ae0:	89 f0                	mov    %esi,%eax
   11ae2:	83 c4 0c             	add    $0xc,%esp
   11ae5:	0f b6 c0             	movzbl %al,%eax
   11ae8:	50                   	push   %eax
   11ae9:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11aef:	50                   	push   %eax
   11af0:	8d 83 b3 0c ff ff    	lea    -0xf34d(%ebx),%eax
   11af6:	50                   	push   %eax
   11af7:	e8 34 23 ff ff       	call   3e30 <print_asm_0>
   11afc:	83 c4 10             	add    $0x10,%esp
   11aff:	89 f0                	mov    %esi,%eax
   11b01:	5b                   	pop    %ebx
   11b02:	5e                   	pop    %esi
   11b03:	5f                   	pop    %edi
   11b04:	c3                   	ret    
   11b05:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11b09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00011b10 <x87_fmuls>:
   11b10:	57                   	push   %edi
   11b11:	56                   	push   %esi
   11b12:	53                   	push   %ebx
   11b13:	e8 a8 11 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11b18:	81 c3 e8 94 01 00    	add    $0x194e8,%ebx
   11b1e:	83 ec 08             	sub    $0x8,%esp
   11b21:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   11b27:	57                   	push   %edi
   11b28:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11b2c:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11b33:	83 c0 01             	add    $0x1,%eax
   11b36:	50                   	push   %eax
   11b37:	e8 24 2b ff ff       	call   4660 <modrm_rm>
   11b3c:	89 3c 24             	mov    %edi,(%esp)
   11b3f:	8d 70 01             	lea    0x1(%eax),%esi
   11b42:	e8 59 2b ff ff       	call   46a0 <operand_read>
   11b47:	58                   	pop    %eax
   11b48:	ff 77 0c             	pushl  0xc(%edi)
   11b4b:	e8 90 91 ff ff       	call   ace0 <fpu_mul>
   11b50:	89 f0                	mov    %esi,%eax
   11b52:	83 c4 0c             	add    $0xc,%esp
   11b55:	0f b6 c0             	movzbl %al,%eax
   11b58:	50                   	push   %eax
   11b59:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11b5f:	50                   	push   %eax
   11b60:	8d 83 b9 0c ff ff    	lea    -0xf347(%ebx),%eax
   11b66:	50                   	push   %eax
   11b67:	e8 c4 22 ff ff       	call   3e30 <print_asm_0>
   11b6c:	83 c4 10             	add    $0x10,%esp
   11b6f:	89 f0                	mov    %esi,%eax
   11b71:	5b                   	pop    %ebx
   11b72:	5e                   	pop    %esi
   11b73:	5f                   	pop    %edi
   11b74:	c3                   	ret    
   11b75:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11b79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00011b80 <x87_fmullx>:
   11b80:	57                   	push   %edi
   11b81:	56                   	push   %esi
   11b82:	53                   	push   %ebx
   11b83:	e8 38 11 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11b88:	81 c3 78 94 01 00    	add    $0x19478,%ebx
   11b8e:	83 ec 18             	sub    $0x18,%esp
   11b91:	8b 44 24 28          	mov    0x28(%esp),%eax
   11b95:	6a 01                	push   $0x1
   11b97:	8d 70 01             	lea    0x1(%eax),%esi
   11b9a:	56                   	push   %esi
   11b9b:	e8 40 87 00 00       	call   1a2e0 <instr_fetch>
   11ba0:	2d c8 00 00 00       	sub    $0xc8,%eax
   11ba5:	83 c4 10             	add    $0x10,%esp
   11ba8:	83 f8 07             	cmp    $0x7,%eax
   11bab:	77 4b                	ja     11bf8 <x87_fmullx+0x78>
   11bad:	83 ec 08             	sub    $0x8,%esp
   11bb0:	6a 01                	push   $0x1
   11bb2:	56                   	push   %esi
   11bb3:	be 02 00 00 00       	mov    $0x2,%esi
   11bb8:	e8 23 87 00 00       	call   1a2e0 <instr_fetch>
   11bbd:	5a                   	pop    %edx
   11bbe:	59                   	pop    %ecx
   11bbf:	83 e0 07             	and    $0x7,%eax
   11bc2:	50                   	push   %eax
   11bc3:	50                   	push   %eax
   11bc4:	e8 57 91 ff ff       	call   ad20 <fpu_mul_idx>
   11bc9:	83 c4 10             	add    $0x10,%esp
   11bcc:	b8 02 00 00 00       	mov    $0x2,%eax
   11bd1:	83 ec 04             	sub    $0x4,%esp
   11bd4:	50                   	push   %eax
   11bd5:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11bdb:	50                   	push   %eax
   11bdc:	8d 83 bf 0c ff ff    	lea    -0xf341(%ebx),%eax
   11be2:	50                   	push   %eax
   11be3:	e8 48 22 ff ff       	call   3e30 <print_asm_0>
   11be8:	83 c4 20             	add    $0x20,%esp
   11beb:	89 f0                	mov    %esi,%eax
   11bed:	5b                   	pop    %ebx
   11bee:	5e                   	pop    %esi
   11bef:	5f                   	pop    %edi
   11bf0:	c3                   	ret    
   11bf1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11bf8:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   11bfe:	83 ec 08             	sub    $0x8,%esp
   11c01:	57                   	push   %edi
   11c02:	56                   	push   %esi
   11c03:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11c0a:	e8 51 2a ff ff       	call   4660 <modrm_rm>
   11c0f:	89 3c 24             	mov    %edi,(%esp)
   11c12:	8d 70 01             	lea    0x1(%eax),%esi
   11c15:	e8 86 2a ff ff       	call   46a0 <operand_read>
   11c1a:	8b 47 0c             	mov    0xc(%edi),%eax
   11c1d:	89 3c 24             	mov    %edi,(%esp)
   11c20:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   11c27:	00 
   11c28:	83 47 04 04          	addl   $0x4,0x4(%edi)
   11c2c:	89 44 24 10          	mov    %eax,0x10(%esp)
   11c30:	e8 6b 2a ff ff       	call   46a0 <operand_read>
   11c35:	8b 47 0c             	mov    0xc(%edi),%eax
   11c38:	89 44 24 14          	mov    %eax,0x14(%esp)
   11c3c:	dd 44 24 10          	fldl   0x10(%esp)
   11c40:	d9 5c 24 1c          	fstps  0x1c(%esp)
   11c44:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11c48:	89 04 24             	mov    %eax,(%esp)
   11c4b:	e8 90 90 ff ff       	call   ace0 <fpu_mul>
   11c50:	89 f0                	mov    %esi,%eax
   11c52:	83 c4 10             	add    $0x10,%esp
   11c55:	0f b6 c0             	movzbl %al,%eax
   11c58:	e9 74 ff ff ff       	jmp    11bd1 <x87_fmullx+0x51>
   11c5d:	8d 76 00             	lea    0x0(%esi),%esi

00011c60 <x87_fdivs>:
   11c60:	57                   	push   %edi
   11c61:	56                   	push   %esi
   11c62:	53                   	push   %ebx
   11c63:	e8 58 10 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11c68:	81 c3 98 93 01 00    	add    $0x19398,%ebx
   11c6e:	83 ec 08             	sub    $0x8,%esp
   11c71:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   11c77:	57                   	push   %edi
   11c78:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11c7c:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11c83:	83 c0 01             	add    $0x1,%eax
   11c86:	50                   	push   %eax
   11c87:	e8 d4 29 ff ff       	call   4660 <modrm_rm>
   11c8c:	89 3c 24             	mov    %edi,(%esp)
   11c8f:	8d 70 01             	lea    0x1(%eax),%esi
   11c92:	e8 09 2a ff ff       	call   46a0 <operand_read>
   11c97:	58                   	pop    %eax
   11c98:	ff 77 0c             	pushl  0xc(%edi)
   11c9b:	e8 d0 90 ff ff       	call   ad70 <fpu_div>
   11ca0:	89 f0                	mov    %esi,%eax
   11ca2:	83 c4 0c             	add    $0xc,%esp
   11ca5:	0f b6 c0             	movzbl %al,%eax
   11ca8:	50                   	push   %eax
   11ca9:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11caf:	50                   	push   %eax
   11cb0:	8d 83 c5 0c ff ff    	lea    -0xf33b(%ebx),%eax
   11cb6:	50                   	push   %eax
   11cb7:	e8 74 21 ff ff       	call   3e30 <print_asm_0>
   11cbc:	83 c4 10             	add    $0x10,%esp
   11cbf:	89 f0                	mov    %esi,%eax
   11cc1:	5b                   	pop    %ebx
   11cc2:	5e                   	pop    %esi
   11cc3:	5f                   	pop    %edi
   11cc4:	c3                   	ret    
   11cc5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11cc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00011cd0 <x87_fstps>:
   11cd0:	57                   	push   %edi
   11cd1:	56                   	push   %esi
   11cd2:	53                   	push   %ebx
   11cd3:	e8 e8 0f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11cd8:	81 c3 28 93 01 00    	add    $0x19328,%ebx
   11cde:	83 ec 08             	sub    $0x8,%esp
   11ce1:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   11ce7:	57                   	push   %edi
   11ce8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11cec:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11cf3:	83 c0 01             	add    $0x1,%eax
   11cf6:	50                   	push   %eax
   11cf7:	e8 64 29 ff ff       	call   4660 <modrm_rm>
   11cfc:	8d 70 01             	lea    0x1(%eax),%esi
   11cff:	e8 ac 8e ff ff       	call   abb0 <fpu_store>
   11d04:	89 3c 24             	mov    %edi,(%esp)
   11d07:	89 47 0c             	mov    %eax,0xc(%edi)
   11d0a:	e8 21 2b ff ff       	call   4830 <operand_write>
   11d0f:	89 f0                	mov    %esi,%eax
   11d11:	83 c4 0c             	add    $0xc,%esp
   11d14:	0f b6 c0             	movzbl %al,%eax
   11d17:	50                   	push   %eax
   11d18:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11d1e:	50                   	push   %eax
   11d1f:	8d 83 cb 0c ff ff    	lea    -0xf335(%ebx),%eax
   11d25:	50                   	push   %eax
   11d26:	e8 05 21 ff ff       	call   3e30 <print_asm_0>
   11d2b:	83 c4 10             	add    $0x10,%esp
   11d2e:	89 f0                	mov    %esi,%eax
   11d30:	5b                   	pop    %ebx
   11d31:	5e                   	pop    %esi
   11d32:	5f                   	pop    %edi
   11d33:	c3                   	ret    
   11d34:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11d3a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00011d40 <x87_fxch>:
   11d40:	53                   	push   %ebx
   11d41:	e8 7a 0f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11d46:	81 c3 ba 92 01 00    	add    $0x192ba,%ebx
   11d4c:	83 ec 10             	sub    $0x10,%esp
   11d4f:	6a 01                	push   $0x1
   11d51:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11d55:	83 c0 01             	add    $0x1,%eax
   11d58:	50                   	push   %eax
   11d59:	e8 82 85 00 00       	call   1a2e0 <instr_fetch>
   11d5e:	83 e0 07             	and    $0x7,%eax
   11d61:	89 04 24             	mov    %eax,(%esp)
   11d64:	e8 47 90 ff ff       	call   adb0 <fpu_xch>
   11d69:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11d6f:	83 c4 0c             	add    $0xc,%esp
   11d72:	6a 02                	push   $0x2
   11d74:	50                   	push   %eax
   11d75:	8d 83 d1 0c ff ff    	lea    -0xf32f(%ebx),%eax
   11d7b:	50                   	push   %eax
   11d7c:	e8 af 20 ff ff       	call   3e30 <print_asm_0>
   11d81:	83 c4 18             	add    $0x18,%esp
   11d84:	b8 02 00 00 00       	mov    $0x2,%eax
   11d89:	5b                   	pop    %ebx
   11d8a:	c3                   	ret    
   11d8b:	90                   	nop
   11d8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00011d90 <x87_fucompp>:
   11d90:	53                   	push   %ebx
   11d91:	e8 2a 0f ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11d96:	81 c3 6a 92 01 00    	add    $0x1926a,%ebx
   11d9c:	83 ec 14             	sub    $0x14,%esp
   11d9f:	6a 01                	push   $0x1
   11da1:	e8 7a 90 ff ff       	call   ae20 <fpu_cmp>
   11da6:	e8 05 8e ff ff       	call   abb0 <fpu_store>
   11dab:	e8 00 8e ff ff       	call   abb0 <fpu_store>
   11db0:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11db6:	83 c4 0c             	add    $0xc,%esp
   11db9:	6a 02                	push   $0x2
   11dbb:	50                   	push   %eax
   11dbc:	8d 83 d6 0c ff ff    	lea    -0xf32a(%ebx),%eax
   11dc2:	50                   	push   %eax
   11dc3:	e8 68 20 ff ff       	call   3e30 <print_asm_0>
   11dc8:	83 c4 18             	add    $0x18,%esp
   11dcb:	b8 02 00 00 00       	mov    $0x2,%eax
   11dd0:	5b                   	pop    %ebx
   11dd1:	c3                   	ret    
   11dd2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11dd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00011de0 <x87_fnstsw>:
   11de0:	53                   	push   %ebx
   11de1:	e8 da 0e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11de6:	81 c3 1a 92 01 00    	add    $0x1921a,%ebx
   11dec:	83 ec 0c             	sub    $0xc,%esp
   11def:	8d 93 20 1e 05 00    	lea    0x51e20(%ebx),%edx
   11df5:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   11dfb:	0f b7 52 20          	movzwl 0x20(%edx),%edx
   11dff:	66 89 10             	mov    %dx,(%eax)
   11e02:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11e08:	6a 02                	push   $0x2
   11e0a:	50                   	push   %eax
   11e0b:	8d 83 de 0c ff ff    	lea    -0xf322(%ebx),%eax
   11e11:	50                   	push   %eax
   11e12:	e8 19 20 ff ff       	call   3e30 <print_asm_0>
   11e17:	83 c4 18             	add    $0x18,%esp
   11e1a:	b8 02 00 00 00       	mov    $0x2,%eax
   11e1f:	5b                   	pop    %ebx
   11e20:	c3                   	ret    
   11e21:	eb 0d                	jmp    11e30 <x87_fstpx>
   11e23:	90                   	nop
   11e24:	90                   	nop
   11e25:	90                   	nop
   11e26:	90                   	nop
   11e27:	90                   	nop
   11e28:	90                   	nop
   11e29:	90                   	nop
   11e2a:	90                   	nop
   11e2b:	90                   	nop
   11e2c:	90                   	nop
   11e2d:	90                   	nop
   11e2e:	90                   	nop
   11e2f:	90                   	nop

00011e30 <x87_fstpx>:
   11e30:	55                   	push   %ebp
   11e31:	57                   	push   %edi
   11e32:	56                   	push   %esi
   11e33:	53                   	push   %ebx
   11e34:	e8 87 0e ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11e39:	81 c3 c7 91 01 00    	add    $0x191c7,%ebx
   11e3f:	83 ec 24             	sub    $0x24,%esp
   11e42:	8b 44 24 38          	mov    0x38(%esp),%eax
   11e46:	6a 01                	push   $0x1
   11e48:	8d 70 01             	lea    0x1(%eax),%esi
   11e4b:	56                   	push   %esi
   11e4c:	e8 8f 84 00 00       	call   1a2e0 <instr_fetch>
   11e51:	2d d8 00 00 00       	sub    $0xd8,%eax
   11e56:	83 c4 10             	add    $0x10,%esp
   11e59:	83 f8 07             	cmp    $0x7,%eax
   11e5c:	77 52                	ja     11eb0 <x87_fstpx+0x80>
   11e5e:	83 ec 08             	sub    $0x8,%esp
   11e61:	6a 01                	push   $0x1
   11e63:	56                   	push   %esi
   11e64:	be 02 00 00 00       	mov    $0x2,%esi
   11e69:	e8 72 84 00 00       	call   1a2e0 <instr_fetch>
   11e6e:	83 e0 07             	and    $0x7,%eax
   11e71:	89 04 24             	mov    %eax,(%esp)
   11e74:	e8 77 8f ff ff       	call   adf0 <fpu_copy>
   11e79:	e8 32 8d ff ff       	call   abb0 <fpu_store>
   11e7e:	83 c4 10             	add    $0x10,%esp
   11e81:	b8 02 00 00 00       	mov    $0x2,%eax
   11e86:	83 ec 04             	sub    $0x4,%esp
   11e89:	50                   	push   %eax
   11e8a:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11e90:	50                   	push   %eax
   11e91:	8d 83 e5 0c ff ff    	lea    -0xf31b(%ebx),%eax
   11e97:	50                   	push   %eax
   11e98:	e8 93 1f ff ff       	call   3e30 <print_asm_0>
   11e9d:	83 c4 2c             	add    $0x2c,%esp
   11ea0:	89 f0                	mov    %esi,%eax
   11ea2:	5b                   	pop    %ebx
   11ea3:	5e                   	pop    %esi
   11ea4:	5f                   	pop    %edi
   11ea5:	5d                   	pop    %ebp
   11ea6:	c3                   	ret    
   11ea7:	89 f6                	mov    %esi,%esi
   11ea9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   11eb0:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   11eb6:	83 ec 08             	sub    $0x8,%esp
   11eb9:	57                   	push   %edi
   11eba:	56                   	push   %esi
   11ebb:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11ec2:	e8 99 27 ff ff       	call   4660 <modrm_rm>
   11ec7:	8d 70 01             	lea    0x1(%eax),%esi
   11eca:	e8 e1 8c ff ff       	call   abb0 <fpu_store>
   11ecf:	89 44 24 18          	mov    %eax,0x18(%esp)
   11ed3:	89 3c 24             	mov    %edi,(%esp)
   11ed6:	d9 44 24 18          	flds   0x18(%esp)
   11eda:	dd 5c 24 18          	fstpl  0x18(%esp)
   11ede:	8b 44 24 18          	mov    0x18(%esp),%eax
   11ee2:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
   11ee6:	89 47 0c             	mov    %eax,0xc(%edi)
   11ee9:	e8 42 29 ff ff       	call   4830 <operand_write>
   11eee:	89 3c 24             	mov    %edi,(%esp)
   11ef1:	83 47 04 04          	addl   $0x4,0x4(%edi)
   11ef5:	89 6f 0c             	mov    %ebp,0xc(%edi)
   11ef8:	e8 33 29 ff ff       	call   4830 <operand_write>
   11efd:	89 f0                	mov    %esi,%eax
   11eff:	83 c4 10             	add    $0x10,%esp
   11f02:	0f b6 c0             	movzbl %al,%eax
   11f05:	e9 7c ff ff ff       	jmp    11e86 <x87_fstpx+0x56>
   11f0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00011f10 <x87_fstx>:
   11f10:	55                   	push   %ebp
   11f11:	57                   	push   %edi
   11f12:	56                   	push   %esi
   11f13:	53                   	push   %ebx
   11f14:	e8 a7 0d ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11f19:	81 c3 e7 90 01 00    	add    $0x190e7,%ebx
   11f1f:	83 ec 24             	sub    $0x24,%esp
   11f22:	8b 44 24 38          	mov    0x38(%esp),%eax
   11f26:	6a 01                	push   $0x1
   11f28:	8d 70 01             	lea    0x1(%eax),%esi
   11f2b:	56                   	push   %esi
   11f2c:	e8 af 83 00 00       	call   1a2e0 <instr_fetch>
   11f31:	2d d0 00 00 00       	sub    $0xd0,%eax
   11f36:	83 c4 10             	add    $0x10,%esp
   11f39:	83 f8 07             	cmp    $0x7,%eax
   11f3c:	77 4a                	ja     11f88 <x87_fstx+0x78>
   11f3e:	83 ec 08             	sub    $0x8,%esp
   11f41:	6a 01                	push   $0x1
   11f43:	56                   	push   %esi
   11f44:	be 02 00 00 00       	mov    $0x2,%esi
   11f49:	e8 92 83 00 00       	call   1a2e0 <instr_fetch>
   11f4e:	83 e0 07             	and    $0x7,%eax
   11f51:	89 04 24             	mov    %eax,(%esp)
   11f54:	e8 97 8e ff ff       	call   adf0 <fpu_copy>
   11f59:	83 c4 10             	add    $0x10,%esp
   11f5c:	b8 02 00 00 00       	mov    $0x2,%eax
   11f61:	83 ec 04             	sub    $0x4,%esp
   11f64:	50                   	push   %eax
   11f65:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   11f6b:	50                   	push   %eax
   11f6c:	8d 83 ea 0c ff ff    	lea    -0xf316(%ebx),%eax
   11f72:	50                   	push   %eax
   11f73:	e8 b8 1e ff ff       	call   3e30 <print_asm_0>
   11f78:	83 c4 2c             	add    $0x2c,%esp
   11f7b:	89 f0                	mov    %esi,%eax
   11f7d:	5b                   	pop    %ebx
   11f7e:	5e                   	pop    %esi
   11f7f:	5f                   	pop    %edi
   11f80:	5d                   	pop    %ebp
   11f81:	c3                   	ret    
   11f82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11f88:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   11f8e:	83 ec 08             	sub    $0x8,%esp
   11f91:	57                   	push   %edi
   11f92:	56                   	push   %esi
   11f93:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   11f9a:	e8 c1 26 ff ff       	call   4660 <modrm_rm>
   11f9f:	8d 70 01             	lea    0x1(%eax),%esi
   11fa2:	e8 49 8c ff ff       	call   abf0 <fpu_peek>
   11fa7:	89 44 24 18          	mov    %eax,0x18(%esp)
   11fab:	89 3c 24             	mov    %edi,(%esp)
   11fae:	d9 44 24 18          	flds   0x18(%esp)
   11fb2:	dd 5c 24 18          	fstpl  0x18(%esp)
   11fb6:	8b 44 24 18          	mov    0x18(%esp),%eax
   11fba:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
   11fbe:	89 47 0c             	mov    %eax,0xc(%edi)
   11fc1:	e8 6a 28 ff ff       	call   4830 <operand_write>
   11fc6:	89 3c 24             	mov    %edi,(%esp)
   11fc9:	83 47 04 04          	addl   $0x4,0x4(%edi)
   11fcd:	89 6f 0c             	mov    %ebp,0xc(%edi)
   11fd0:	e8 5b 28 ff ff       	call   4830 <operand_write>
   11fd5:	89 f0                	mov    %esi,%eax
   11fd7:	83 c4 10             	add    $0x10,%esp
   11fda:	0f b6 c0             	movzbl %al,%eax
   11fdd:	eb 82                	jmp    11f61 <x87_fstx+0x51>
   11fdf:	90                   	nop

00011fe0 <x87_fsts>:
   11fe0:	57                   	push   %edi
   11fe1:	56                   	push   %esi
   11fe2:	53                   	push   %ebx
   11fe3:	e8 d8 0c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   11fe8:	81 c3 18 90 01 00    	add    $0x19018,%ebx
   11fee:	83 ec 08             	sub    $0x8,%esp
   11ff1:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   11ff7:	57                   	push   %edi
   11ff8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11ffc:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   12003:	83 c0 01             	add    $0x1,%eax
   12006:	50                   	push   %eax
   12007:	e8 54 26 ff ff       	call   4660 <modrm_rm>
   1200c:	8d 70 01             	lea    0x1(%eax),%esi
   1200f:	e8 dc 8b ff ff       	call   abf0 <fpu_peek>
   12014:	89 3c 24             	mov    %edi,(%esp)
   12017:	89 47 0c             	mov    %eax,0xc(%edi)
   1201a:	e8 11 28 ff ff       	call   4830 <operand_write>
   1201f:	89 f0                	mov    %esi,%eax
   12021:	83 c4 0c             	add    $0xc,%esp
   12024:	0f b6 c0             	movzbl %al,%eax
   12027:	50                   	push   %eax
   12028:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1202e:	50                   	push   %eax
   1202f:	8d 83 ee 0c ff ff    	lea    -0xf312(%ebx),%eax
   12035:	50                   	push   %eax
   12036:	e8 f5 1d ff ff       	call   3e30 <print_asm_0>
   1203b:	83 c4 10             	add    $0x10,%esp
   1203e:	89 f0                	mov    %esi,%eax
   12040:	5b                   	pop    %ebx
   12041:	5e                   	pop    %esi
   12042:	5f                   	pop    %edi
   12043:	c3                   	ret    
   12044:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1204a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00012050 <x87_fucom>:
   12050:	53                   	push   %ebx
   12051:	e8 6a 0c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12056:	81 c3 aa 8f 01 00    	add    $0x18faa,%ebx
   1205c:	83 ec 10             	sub    $0x10,%esp
   1205f:	6a 01                	push   $0x1
   12061:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   12065:	83 c0 01             	add    $0x1,%eax
   12068:	50                   	push   %eax
   12069:	e8 72 82 00 00       	call   1a2e0 <instr_fetch>
   1206e:	83 e0 07             	and    $0x7,%eax
   12071:	89 04 24             	mov    %eax,(%esp)
   12074:	e8 a7 8d ff ff       	call   ae20 <fpu_cmp>
   12079:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1207f:	83 c4 0c             	add    $0xc,%esp
   12082:	6a 02                	push   $0x2
   12084:	50                   	push   %eax
   12085:	8d 83 f3 0c ff ff    	lea    -0xf30d(%ebx),%eax
   1208b:	50                   	push   %eax
   1208c:	e8 9f 1d ff ff       	call   3e30 <print_asm_0>
   12091:	83 c4 18             	add    $0x18,%esp
   12094:	b8 02 00 00 00       	mov    $0x2,%eax
   12099:	5b                   	pop    %ebx
   1209a:	c3                   	ret    
   1209b:	90                   	nop
   1209c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000120a0 <x87_fucomi>:
   120a0:	53                   	push   %ebx
   120a1:	e8 1a 0c ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   120a6:	81 c3 5a 8f 01 00    	add    $0x18f5a,%ebx
   120ac:	83 ec 10             	sub    $0x10,%esp
   120af:	6a 01                	push   $0x1
   120b1:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   120b5:	83 c0 01             	add    $0x1,%eax
   120b8:	50                   	push   %eax
   120b9:	e8 22 82 00 00       	call   1a2e0 <instr_fetch>
   120be:	83 e0 07             	and    $0x7,%eax
   120c1:	89 04 24             	mov    %eax,(%esp)
   120c4:	e8 c7 8d ff ff       	call   ae90 <fpu_cmpi>
   120c9:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   120cf:	83 c4 0c             	add    $0xc,%esp
   120d2:	6a 02                	push   $0x2
   120d4:	50                   	push   %eax
   120d5:	8d 83 f9 0c ff ff    	lea    -0xf307(%ebx),%eax
   120db:	50                   	push   %eax
   120dc:	e8 4f 1d ff ff       	call   3e30 <print_asm_0>
   120e1:	83 c4 18             	add    $0x18,%esp
   120e4:	b8 02 00 00 00       	mov    $0x2,%eax
   120e9:	5b                   	pop    %ebx
   120ea:	c3                   	ret    
   120eb:	90                   	nop
   120ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000120f0 <x87_fucomip>:
   120f0:	53                   	push   %ebx
   120f1:	e8 ca 0b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   120f6:	81 c3 0a 8f 01 00    	add    $0x18f0a,%ebx
   120fc:	83 ec 10             	sub    $0x10,%esp
   120ff:	6a 01                	push   $0x1
   12101:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   12105:	83 c0 01             	add    $0x1,%eax
   12108:	50                   	push   %eax
   12109:	e8 d2 81 00 00       	call   1a2e0 <instr_fetch>
   1210e:	83 e0 07             	and    $0x7,%eax
   12111:	89 04 24             	mov    %eax,(%esp)
   12114:	e8 77 8d ff ff       	call   ae90 <fpu_cmpi>
   12119:	e8 92 8a ff ff       	call   abb0 <fpu_store>
   1211e:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   12124:	83 c4 0c             	add    $0xc,%esp
   12127:	6a 02                	push   $0x2
   12129:	50                   	push   %eax
   1212a:	8d 83 00 0d ff ff    	lea    -0xf300(%ebx),%eax
   12130:	50                   	push   %eax
   12131:	e8 fa 1c ff ff       	call   3e30 <print_asm_0>
   12136:	83 c4 18             	add    $0x18,%esp
   12139:	b8 02 00 00 00       	mov    $0x2,%eax
   1213e:	5b                   	pop    %ebx
   1213f:	c3                   	ret    

00012140 <x87_fucomp>:
   12140:	53                   	push   %ebx
   12141:	e8 7a 0b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12146:	81 c3 ba 8e 01 00    	add    $0x18eba,%ebx
   1214c:	83 ec 10             	sub    $0x10,%esp
   1214f:	6a 01                	push   $0x1
   12151:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   12155:	83 c0 01             	add    $0x1,%eax
   12158:	50                   	push   %eax
   12159:	e8 82 81 00 00       	call   1a2e0 <instr_fetch>
   1215e:	83 e0 07             	and    $0x7,%eax
   12161:	89 04 24             	mov    %eax,(%esp)
   12164:	e8 b7 8c ff ff       	call   ae20 <fpu_cmp>
   12169:	e8 42 8a ff ff       	call   abb0 <fpu_store>
   1216e:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   12174:	83 c4 0c             	add    $0xc,%esp
   12177:	6a 02                	push   $0x2
   12179:	50                   	push   %eax
   1217a:	8d 83 08 0d ff ff    	lea    -0xf2f8(%ebx),%eax
   12180:	50                   	push   %eax
   12181:	e8 aa 1c ff ff       	call   3e30 <print_asm_0>
   12186:	83 c4 18             	add    $0x18,%esp
   12189:	b8 02 00 00 00       	mov    $0x2,%eax
   1218e:	5b                   	pop    %ebx
   1218f:	c3                   	ret    

00012190 <x87_fnstcw>:
   12190:	57                   	push   %edi
   12191:	56                   	push   %esi
   12192:	53                   	push   %ebx
   12193:	e8 28 0b ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12198:	81 c3 68 8e 01 00    	add    $0x18e68,%ebx
   1219e:	83 ec 08             	sub    $0x8,%esp
   121a1:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   121a7:	57                   	push   %edi
   121a8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   121ac:	c7 47 10 10 00 00 00 	movl   $0x10,0x10(%edi)
   121b3:	83 c0 01             	add    $0x1,%eax
   121b6:	50                   	push   %eax
   121b7:	e8 a4 24 ff ff       	call   4660 <modrm_rm>
   121bc:	8d 70 01             	lea    0x1(%eax),%esi
   121bf:	8d 83 20 1e 05 00    	lea    0x51e20(%ebx),%eax
   121c5:	0f b7 40 24          	movzwl 0x24(%eax),%eax
   121c9:	89 3c 24             	mov    %edi,(%esp)
   121cc:	89 47 0c             	mov    %eax,0xc(%edi)
   121cf:	e8 5c 26 ff ff       	call   4830 <operand_write>
   121d4:	89 f0                	mov    %esi,%eax
   121d6:	83 c4 0c             	add    $0xc,%esp
   121d9:	0f b6 c0             	movzbl %al,%eax
   121dc:	50                   	push   %eax
   121dd:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   121e3:	50                   	push   %eax
   121e4:	8d 83 0f 0d ff ff    	lea    -0xf2f1(%ebx),%eax
   121ea:	50                   	push   %eax
   121eb:	e8 40 1c ff ff       	call   3e30 <print_asm_0>
   121f0:	83 c4 10             	add    $0x10,%esp
   121f3:	89 f0                	mov    %esi,%eax
   121f5:	5b                   	pop    %ebx
   121f6:	5e                   	pop    %esi
   121f7:	5f                   	pop    %edi
   121f8:	c3                   	ret    
   121f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00012200 <x87_fistpl>:
   12200:	57                   	push   %edi
   12201:	56                   	push   %esi
   12202:	53                   	push   %ebx
   12203:	e8 b8 0a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12208:	81 c3 f8 8d 01 00    	add    $0x18df8,%ebx
   1220e:	83 ec 18             	sub    $0x18,%esp
   12211:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   12217:	57                   	push   %edi
   12218:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1221c:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   12223:	83 c0 01             	add    $0x1,%eax
   12226:	50                   	push   %eax
   12227:	e8 34 24 ff ff       	call   4660 <modrm_rm>
   1222c:	8d 70 01             	lea    0x1(%eax),%esi
   1222f:	e8 7c 89 ff ff       	call   abb0 <fpu_store>
   12234:	d9 7c 24 1e          	fnstcw 0x1e(%esp)
   12238:	89 44 24 18          	mov    %eax,0x18(%esp)
   1223c:	0f b7 44 24 1e       	movzwl 0x1e(%esp),%eax
   12241:	d9 44 24 18          	flds   0x18(%esp)
   12245:	89 3c 24             	mov    %edi,(%esp)
   12248:	b4 0c                	mov    $0xc,%ah
   1224a:	66 89 44 24 1c       	mov    %ax,0x1c(%esp)
   1224f:	d9 6c 24 1c          	fldcw  0x1c(%esp)
   12253:	db 5f 0c             	fistpl 0xc(%edi)
   12256:	d9 6c 24 1e          	fldcw  0x1e(%esp)
   1225a:	e8 d1 25 ff ff       	call   4830 <operand_write>
   1225f:	89 f0                	mov    %esi,%eax
   12261:	83 c4 0c             	add    $0xc,%esp
   12264:	0f b6 c0             	movzbl %al,%eax
   12267:	50                   	push   %eax
   12268:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1226e:	50                   	push   %eax
   1226f:	8d 83 16 0d ff ff    	lea    -0xf2ea(%ebx),%eax
   12275:	50                   	push   %eax
   12276:	e8 b5 1b ff ff       	call   3e30 <print_asm_0>
   1227b:	83 c4 20             	add    $0x20,%esp
   1227e:	89 f0                	mov    %esi,%eax
   12280:	5b                   	pop    %ebx
   12281:	5e                   	pop    %esi
   12282:	5f                   	pop    %edi
   12283:	c3                   	ret    
   12284:	66 90                	xchg   %ax,%ax
   12286:	66 90                	xchg   %ax,%ax
   12288:	66 90                	xchg   %ax,%ax
   1228a:	66 90                	xchg   %ax,%ax
   1228c:	66 90                	xchg   %ax,%ax
   1228e:	66 90                	xchg   %ax,%ax

00012290 <out_al2dx>:
   12290:	53                   	push   %ebx
   12291:	e8 2a 0a ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12296:	81 c3 6a 8d 01 00    	add    $0x18d6a,%ebx
   1229c:	83 ec 64             	sub    $0x64,%esp
   1229f:	8d 44 24 14          	lea    0x14(%esp),%eax
   122a3:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   122aa:	00 
   122ab:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   122b2:	00 
   122b3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   122ba:	00 
   122bb:	50                   	push   %eax
   122bc:	e8 df 23 ff ff       	call   46a0 <operand_read>
   122c1:	c7 44 24 4c 10 00 00 	movl   $0x10,0x4c(%esp)
   122c8:	00 
   122c9:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   122d0:	00 
   122d1:	c7 44 24 40 02 00 00 	movl   $0x2,0x40(%esp)
   122d8:	00 
   122d9:	58                   	pop    %eax
   122da:	8d 44 24 38          	lea    0x38(%esp),%eax
   122de:	50                   	push   %eax
   122df:	e8 bc 23 ff ff       	call   46a0 <operand_read>
   122e4:	83 c4 0c             	add    $0xc,%esp
   122e7:	ff 74 24 18          	pushl  0x18(%esp)
   122eb:	6a 01                	push   $0x1
   122ed:	0f b7 44 24 44       	movzwl 0x44(%esp),%eax
   122f2:	50                   	push   %eax
   122f3:	e8 f8 0a ff ff       	call   2df0 <pio_write>
   122f8:	83 c4 68             	add    $0x68,%esp
   122fb:	b8 01 00 00 00       	mov    $0x1,%eax
   12300:	5b                   	pop    %ebx
   12301:	c3                   	ret    
   12302:	66 90                	xchg   %ax,%ax
   12304:	66 90                	xchg   %ax,%ax
   12306:	66 90                	xchg   %ax,%ax
   12308:	66 90                	xchg   %ax,%ax
   1230a:	66 90                	xchg   %ax,%ax
   1230c:	66 90                	xchg   %ax,%ax
   1230e:	66 90                	xchg   %ax,%ax

00012310 <instr_execute_2op>:
   12310:	57                   	push   %edi
   12311:	56                   	push   %esi
   12312:	53                   	push   %ebx
   12313:	e8 a8 09 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12318:	81 c3 e8 8c 01 00    	add    $0x18ce8,%ebx
   1231e:	83 ec 0c             	sub    $0xc,%esp
   12321:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   12327:	57                   	push   %edi
   12328:	e8 73 23 ff ff       	call   46a0 <operand_read>
   1232d:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   12333:	89 34 24             	mov    %esi,(%esp)
   12336:	e8 65 23 ff ff       	call   46a0 <operand_read>
   1233b:	58                   	pop    %eax
   1233c:	5a                   	pop    %edx
   1233d:	ff 76 0c             	pushl  0xc(%esi)
   12340:	ff 77 0c             	pushl  0xc(%edi)
   12343:	e8 78 93 ff ff       	call   b6c0 <alu_or>
   12348:	89 34 24             	mov    %esi,(%esp)
   1234b:	89 46 0c             	mov    %eax,0xc(%esi)
   1234e:	e8 dd 24 ff ff       	call   4830 <operand_write>
   12353:	83 c4 10             	add    $0x10,%esp
   12356:	5b                   	pop    %ebx
   12357:	5e                   	pop    %esi
   12358:	5f                   	pop    %edi
   12359:	c3                   	ret    
   1235a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00012360 <or_r2rm_v>:
   12360:	55                   	push   %ebp
   12361:	57                   	push   %edi
   12362:	56                   	push   %esi
   12363:	53                   	push   %ebx
   12364:	e8 57 09 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12369:	81 c3 97 8c 01 00    	add    $0x18c97,%ebx
   1236f:	83 ec 10             	sub    $0x10,%esp
   12372:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   12378:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   1237e:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   12384:	0f b6 00             	movzbl (%eax),%eax
   12387:	89 45 10             	mov    %eax,0x10(%ebp)
   1238a:	89 47 10             	mov    %eax,0x10(%edi)
   1238d:	57                   	push   %edi
   1238e:	55                   	push   %ebp
   1238f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   12393:	83 c0 01             	add    $0x1,%eax
   12396:	50                   	push   %eax
   12397:	e8 f4 21 ff ff       	call   4590 <modrm_r_rm>
   1239c:	8d 70 01             	lea    0x1(%eax),%esi
   1239f:	83 c4 10             	add    $0x10,%esp
   123a2:	89 f0                	mov    %esi,%eax
   123a4:	0f b6 c8             	movzbl %al,%ecx
   123a7:	8b 47 10             	mov    0x10(%edi),%eax
   123aa:	83 f8 08             	cmp    $0x8,%eax
   123ad:	74 41                	je     123f0 <or_r2rm_v+0x90>
   123af:	83 f8 10             	cmp    $0x10,%eax
   123b2:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   123b8:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   123be:	0f 44 c2             	cmove  %edx,%eax
   123c1:	83 ec 0c             	sub    $0xc,%esp
   123c4:	57                   	push   %edi
   123c5:	55                   	push   %ebp
   123c6:	51                   	push   %ecx
   123c7:	50                   	push   %eax
   123c8:	8d 83 7d 10 ff ff    	lea    -0xef83(%ebx),%eax
   123ce:	50                   	push   %eax
   123cf:	e8 2c 1c ff ff       	call   4000 <print_asm_2>
   123d4:	83 c4 20             	add    $0x20,%esp
   123d7:	e8 34 ff ff ff       	call   12310 <instr_execute_2op>
   123dc:	83 c4 0c             	add    $0xc,%esp
   123df:	89 f0                	mov    %esi,%eax
   123e1:	5b                   	pop    %ebx
   123e2:	5e                   	pop    %esi
   123e3:	5f                   	pop    %edi
   123e4:	5d                   	pop    %ebp
   123e5:	c3                   	ret    
   123e6:	8d 76 00             	lea    0x0(%esi),%esi
   123e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   123f0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   123f6:	eb c9                	jmp    123c1 <or_r2rm_v+0x61>
   123f8:	90                   	nop
   123f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00012400 <or_rm2r_b>:
   12400:	55                   	push   %ebp
   12401:	57                   	push   %edi
   12402:	56                   	push   %esi
   12403:	53                   	push   %ebx
   12404:	e8 b7 08 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12409:	81 c3 f7 8b 01 00    	add    $0x18bf7,%ebx
   1240f:	83 ec 10             	sub    $0x10,%esp
   12412:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   12418:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   1241e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   12425:	55                   	push   %ebp
   12426:	57                   	push   %edi
   12427:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1242b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   12432:	83 c0 01             	add    $0x1,%eax
   12435:	50                   	push   %eax
   12436:	e8 55 21 ff ff       	call   4590 <modrm_r_rm>
   1243b:	8d 70 01             	lea    0x1(%eax),%esi
   1243e:	83 c4 10             	add    $0x10,%esp
   12441:	89 f0                	mov    %esi,%eax
   12443:	0f b6 c8             	movzbl %al,%ecx
   12446:	8b 47 10             	mov    0x10(%edi),%eax
   12449:	83 f8 08             	cmp    $0x8,%eax
   1244c:	74 3a                	je     12488 <or_rm2r_b+0x88>
   1244e:	83 f8 10             	cmp    $0x10,%eax
   12451:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   12457:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1245d:	0f 44 c2             	cmove  %edx,%eax
   12460:	83 ec 0c             	sub    $0xc,%esp
   12463:	57                   	push   %edi
   12464:	55                   	push   %ebp
   12465:	51                   	push   %ecx
   12466:	50                   	push   %eax
   12467:	8d 83 7d 10 ff ff    	lea    -0xef83(%ebx),%eax
   1246d:	50                   	push   %eax
   1246e:	e8 8d 1b ff ff       	call   4000 <print_asm_2>
   12473:	83 c4 20             	add    $0x20,%esp
   12476:	e8 95 fe ff ff       	call   12310 <instr_execute_2op>
   1247b:	83 c4 0c             	add    $0xc,%esp
   1247e:	89 f0                	mov    %esi,%eax
   12480:	5b                   	pop    %ebx
   12481:	5e                   	pop    %esi
   12482:	5f                   	pop    %edi
   12483:	5d                   	pop    %ebp
   12484:	c3                   	ret    
   12485:	8d 76 00             	lea    0x0(%esi),%esi
   12488:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   1248e:	eb d0                	jmp    12460 <or_rm2r_b+0x60>

00012490 <or_i2rm_b>:
   12490:	55                   	push   %ebp
   12491:	57                   	push   %edi
   12492:	56                   	push   %esi
   12493:	53                   	push   %ebx
   12494:	e8 27 08 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12499:	81 c3 67 8b 01 00    	add    $0x18b67,%ebx
   1249f:	83 ec 24             	sub    $0x24,%esp
   124a2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   124a6:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   124ac:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   124b2:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   124b9:	8d 45 01             	lea    0x1(%ebp),%eax
   124bc:	52                   	push   %edx
   124bd:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   124c4:	89 54 24 18          	mov    %edx,0x18(%esp)
   124c8:	50                   	push   %eax
   124c9:	e8 92 21 ff ff       	call   4660 <modrm_rm>
   124ce:	8b 77 10             	mov    0x10(%edi),%esi
   124d1:	83 c0 01             	add    $0x1,%eax
   124d4:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   124d8:	01 c5                	add    %eax,%ebp
   124da:	83 c4 10             	add    $0x10,%esp
   124dd:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   124e3:	89 6f 04             	mov    %ebp,0x4(%edi)
   124e6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   124ea:	c1 ee 03             	shr    $0x3,%esi
   124ed:	01 c6                	add    %eax,%esi
   124ef:	89 f0                	mov    %esi,%eax
   124f1:	0f b6 e8             	movzbl %al,%ebp
   124f4:	8b 42 10             	mov    0x10(%edx),%eax
   124f7:	83 f8 08             	cmp    $0x8,%eax
   124fa:	74 3c                	je     12538 <or_i2rm_b+0xa8>
   124fc:	83 f8 10             	cmp    $0x10,%eax
   124ff:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   12505:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1250b:	0f 44 c1             	cmove  %ecx,%eax
   1250e:	83 ec 0c             	sub    $0xc,%esp
   12511:	52                   	push   %edx
   12512:	57                   	push   %edi
   12513:	55                   	push   %ebp
   12514:	50                   	push   %eax
   12515:	8d 83 7d 10 ff ff    	lea    -0xef83(%ebx),%eax
   1251b:	50                   	push   %eax
   1251c:	e8 df 1a ff ff       	call   4000 <print_asm_2>
   12521:	83 c4 20             	add    $0x20,%esp
   12524:	e8 e7 fd ff ff       	call   12310 <instr_execute_2op>
   12529:	83 c4 1c             	add    $0x1c,%esp
   1252c:	89 f0                	mov    %esi,%eax
   1252e:	5b                   	pop    %ebx
   1252f:	5e                   	pop    %esi
   12530:	5f                   	pop    %edi
   12531:	5d                   	pop    %ebp
   12532:	c3                   	ret    
   12533:	90                   	nop
   12534:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12538:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   1253e:	eb ce                	jmp    1250e <or_i2rm_b+0x7e>

00012540 <or_i2rm_v>:
   12540:	55                   	push   %ebp
   12541:	57                   	push   %edi
   12542:	56                   	push   %esi
   12543:	53                   	push   %ebx
   12544:	e8 77 07 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12549:	81 c3 b7 8a 01 00    	add    $0x18ab7,%ebx
   1254f:	83 ec 24             	sub    $0x24,%esp
   12552:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   12558:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1255c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   12562:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   12568:	0f b6 00             	movzbl (%eax),%eax
   1256b:	89 42 10             	mov    %eax,0x10(%edx)
   1256e:	89 47 10             	mov    %eax,0x10(%edi)
   12571:	8d 45 01             	lea    0x1(%ebp),%eax
   12574:	52                   	push   %edx
   12575:	89 54 24 18          	mov    %edx,0x18(%esp)
   12579:	50                   	push   %eax
   1257a:	e8 e1 20 ff ff       	call   4660 <modrm_rm>
   1257f:	8b 77 10             	mov    0x10(%edi),%esi
   12582:	83 c0 01             	add    $0x1,%eax
   12585:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   12589:	01 c5                	add    %eax,%ebp
   1258b:	83 c4 10             	add    $0x10,%esp
   1258e:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   12594:	89 6f 04             	mov    %ebp,0x4(%edi)
   12597:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1259b:	c1 ee 03             	shr    $0x3,%esi
   1259e:	01 c6                	add    %eax,%esi
   125a0:	89 f0                	mov    %esi,%eax
   125a2:	0f b6 e8             	movzbl %al,%ebp
   125a5:	8b 42 10             	mov    0x10(%edx),%eax
   125a8:	83 f8 08             	cmp    $0x8,%eax
   125ab:	74 3b                	je     125e8 <or_i2rm_v+0xa8>
   125ad:	83 f8 10             	cmp    $0x10,%eax
   125b0:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   125b6:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   125bc:	0f 44 c1             	cmove  %ecx,%eax
   125bf:	83 ec 0c             	sub    $0xc,%esp
   125c2:	52                   	push   %edx
   125c3:	57                   	push   %edi
   125c4:	55                   	push   %ebp
   125c5:	50                   	push   %eax
   125c6:	8d 83 7d 10 ff ff    	lea    -0xef83(%ebx),%eax
   125cc:	50                   	push   %eax
   125cd:	e8 2e 1a ff ff       	call   4000 <print_asm_2>
   125d2:	83 c4 20             	add    $0x20,%esp
   125d5:	e8 36 fd ff ff       	call   12310 <instr_execute_2op>
   125da:	83 c4 1c             	add    $0x1c,%esp
   125dd:	89 f0                	mov    %esi,%eax
   125df:	5b                   	pop    %ebx
   125e0:	5e                   	pop    %esi
   125e1:	5f                   	pop    %edi
   125e2:	5d                   	pop    %ebp
   125e3:	c3                   	ret    
   125e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   125e8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   125ee:	eb cf                	jmp    125bf <or_i2rm_v+0x7f>

000125f0 <or_rm2r_v>:
   125f0:	55                   	push   %ebp
   125f1:	57                   	push   %edi
   125f2:	56                   	push   %esi
   125f3:	53                   	push   %ebx
   125f4:	e8 c7 06 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   125f9:	81 c3 07 8a 01 00    	add    $0x18a07,%ebx
   125ff:	83 ec 10             	sub    $0x10,%esp
   12602:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   12608:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   1260e:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   12614:	0f b6 00             	movzbl (%eax),%eax
   12617:	89 45 10             	mov    %eax,0x10(%ebp)
   1261a:	89 47 10             	mov    %eax,0x10(%edi)
   1261d:	55                   	push   %ebp
   1261e:	57                   	push   %edi
   1261f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   12623:	83 c0 01             	add    $0x1,%eax
   12626:	50                   	push   %eax
   12627:	e8 64 1f ff ff       	call   4590 <modrm_r_rm>
   1262c:	8d 70 01             	lea    0x1(%eax),%esi
   1262f:	83 c4 10             	add    $0x10,%esp
   12632:	89 f0                	mov    %esi,%eax
   12634:	0f b6 c8             	movzbl %al,%ecx
   12637:	8b 47 10             	mov    0x10(%edi),%eax
   1263a:	83 f8 08             	cmp    $0x8,%eax
   1263d:	74 41                	je     12680 <or_rm2r_v+0x90>
   1263f:	83 f8 10             	cmp    $0x10,%eax
   12642:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   12648:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1264e:	0f 44 c2             	cmove  %edx,%eax
   12651:	83 ec 0c             	sub    $0xc,%esp
   12654:	57                   	push   %edi
   12655:	55                   	push   %ebp
   12656:	51                   	push   %ecx
   12657:	50                   	push   %eax
   12658:	8d 83 7d 10 ff ff    	lea    -0xef83(%ebx),%eax
   1265e:	50                   	push   %eax
   1265f:	e8 9c 19 ff ff       	call   4000 <print_asm_2>
   12664:	83 c4 20             	add    $0x20,%esp
   12667:	e8 a4 fc ff ff       	call   12310 <instr_execute_2op>
   1266c:	83 c4 0c             	add    $0xc,%esp
   1266f:	89 f0                	mov    %esi,%eax
   12671:	5b                   	pop    %ebx
   12672:	5e                   	pop    %esi
   12673:	5f                   	pop    %edi
   12674:	5d                   	pop    %ebp
   12675:	c3                   	ret    
   12676:	8d 76 00             	lea    0x0(%esi),%esi
   12679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   12680:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   12686:	eb c9                	jmp    12651 <or_rm2r_v+0x61>
   12688:	90                   	nop
   12689:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00012690 <or_i2rm_bv>:
   12690:	55                   	push   %ebp
   12691:	57                   	push   %edi
   12692:	56                   	push   %esi
   12693:	53                   	push   %ebx
   12694:	e8 27 06 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12699:	81 c3 67 89 01 00    	add    $0x18967,%ebx
   1269f:	83 ec 70             	sub    $0x70,%esp
   126a2:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
   126a9:	8d 7c 24 40          	lea    0x40(%esp),%edi
   126ad:	8b b4 24 84 00 00 00 	mov    0x84(%esp),%esi
   126b4:	c7 44 24 2c 08 00 00 	movl   $0x8,0x2c(%esp)
   126bb:	00 
   126bc:	88 44 24 10          	mov    %al,0x10(%esp)
   126c0:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   126c6:	89 44 24 0c          	mov    %eax,0xc(%esp)
   126ca:	0f b6 00             	movzbl (%eax),%eax
   126cd:	89 44 24 50          	mov    %eax,0x50(%esp)
   126d1:	57                   	push   %edi
   126d2:	8d 44 24 14          	lea    0x14(%esp),%eax
   126d6:	50                   	push   %eax
   126d7:	8d 46 01             	lea    0x1(%esi),%eax
   126da:	50                   	push   %eax
   126db:	e8 00 1f ff ff       	call   45e0 <modrm_opcode_rm>
   126e0:	89 c5                	mov    %eax,%ebp
   126e2:	89 3c 24             	mov    %edi,(%esp)
   126e5:	e8 b6 1f ff ff       	call   46a0 <operand_read>
   126ea:	8d 54 35 01          	lea    0x1(%ebp,%esi,1),%edx
   126ee:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   126f5:	00 
   126f6:	8d 75 02             	lea    0x2(%ebp),%esi
   126f9:	89 54 24 2c          	mov    %edx,0x2c(%esp)
   126fd:	58                   	pop    %eax
   126fe:	8d 6c 24 24          	lea    0x24(%esp),%ebp
   12702:	55                   	push   %ebp
   12703:	e8 98 1f ff ff       	call   46a0 <operand_read>
   12708:	8b 44 24 18          	mov    0x18(%esp),%eax
   1270c:	83 c4 10             	add    $0x10,%esp
   1270f:	0f b6 10             	movzbl (%eax),%edx
   12712:	8d 4a f0             	lea    -0x10(%edx),%ecx
   12715:	81 e1 ef 00 00 00    	and    $0xef,%ecx
   1271b:	75 5d                	jne    1277a <or_i2rm_bv+0xea>
   1271d:	80 fa 10             	cmp    $0x10,%dl
   12720:	74 4e                	je     12770 <or_i2rm_bv+0xe0>
   12722:	81 64 24 24 ff 00 00 	andl   $0xff,0x24(%esp)
   12729:	00 
   1272a:	8d 46 01             	lea    0x1(%esi),%eax
   1272d:	83 ec 0c             	sub    $0xc,%esp
   12730:	57                   	push   %edi
   12731:	55                   	push   %ebp
   12732:	0f b6 c0             	movzbl %al,%eax
   12735:	50                   	push   %eax
   12736:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1273c:	50                   	push   %eax
   1273d:	8d 83 7d 10 ff ff    	lea    -0xef83(%ebx),%eax
   12743:	50                   	push   %eax
   12744:	e8 b7 18 ff ff       	call   4000 <print_asm_2>
   12749:	83 c4 18             	add    $0x18,%esp
   1274c:	ff 74 24 50          	pushl  0x50(%esp)
   12750:	ff 74 24 30          	pushl  0x30(%esp)
   12754:	e8 67 8f ff ff       	call   b6c0 <alu_or>
   12759:	89 3c 24             	mov    %edi,(%esp)
   1275c:	89 44 24 58          	mov    %eax,0x58(%esp)
   12760:	e8 cb 20 ff ff       	call   4830 <operand_write>
   12765:	83 c4 7c             	add    $0x7c,%esp
   12768:	89 f0                	mov    %esi,%eax
   1276a:	5b                   	pop    %ebx
   1276b:	5e                   	pop    %esi
   1276c:	5f                   	pop    %edi
   1276d:	5d                   	pop    %ebp
   1276e:	c3                   	ret    
   1276f:	90                   	nop
   12770:	81 64 24 24 ff ff ff 	andl   $0xffffff,0x24(%esp)
   12777:	00 
   12778:	eb b0                	jmp    1272a <or_i2rm_bv+0x9a>
   1277a:	8d 83 58 0d ff ff    	lea    -0xf2a8(%ebx),%eax
   12780:	50                   	push   %eax
   12781:	8d 83 45 0d ff ff    	lea    -0xf2bb(%ebx),%eax
   12787:	6a 1f                	push   $0x1f
   12789:	50                   	push   %eax
   1278a:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   12790:	50                   	push   %eax
   12791:	e8 fa 00 ff ff       	call   2890 <__assert_fail@plt>
   12796:	66 90                	xchg   %ax,%ax
   12798:	66 90                	xchg   %ax,%ax
   1279a:	66 90                	xchg   %ax,%ax
   1279c:	66 90                	xchg   %ax,%ax
   1279e:	66 90                	xchg   %ax,%ax

000127a0 <imul_rm2r_v>:
   127a0:	55                   	push   %ebp
   127a1:	57                   	push   %edi
   127a2:	56                   	push   %esi
   127a3:	53                   	push   %ebx
   127a4:	e8 17 05 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   127a9:	81 c3 57 88 01 00    	add    $0x18857,%ebx
   127af:	83 ec 70             	sub    $0x70,%esp
   127b2:	8d ab 77 13 00 00    	lea    0x1377(%ebx),%ebp
   127b8:	8d 7c 24 40          	lea    0x40(%esp),%edi
   127bc:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   127c0:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   127c4:	89 44 24 50          	mov    %eax,0x50(%esp)
   127c8:	57                   	push   %edi
   127c9:	8d 74 24 20          	lea    0x20(%esp),%esi
   127cd:	56                   	push   %esi
   127ce:	8b 84 24 8c 00 00 00 	mov    0x8c(%esp),%eax
   127d5:	83 c0 01             	add    $0x1,%eax
   127d8:	50                   	push   %eax
   127d9:	e8 b2 1d ff ff       	call   4590 <modrm_r_rm>
   127de:	83 c0 01             	add    $0x1,%eax
   127e1:	89 34 24             	mov    %esi,(%esp)
   127e4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   127e8:	e8 b3 1e ff ff       	call   46a0 <operand_read>
   127ed:	89 3c 24             	mov    %edi,(%esp)
   127f0:	e8 ab 1e ff ff       	call   46a0 <operand_read>
   127f5:	0f b6 4d 00          	movzbl 0x0(%ebp),%ecx
   127f9:	8b 54 24 34          	mov    0x34(%esp),%edx
   127fd:	83 c4 10             	add    $0x10,%esp
   12800:	8d 69 f8             	lea    -0x8(%ecx),%ebp
   12803:	89 c8                	mov    %ecx,%eax
   12805:	81 e5 f7 00 00 00    	and    $0xf7,%ebp
   1280b:	74 05                	je     12812 <imul_rm2r_v+0x72>
   1280d:	83 f9 20             	cmp    $0x20,%ecx
   12810:	75 7c                	jne    1288e <imul_rm2r_v+0xee>
   12812:	3c 08                	cmp    $0x8,%al
   12814:	74 6a                	je     12880 <imul_rm2r_v+0xe0>
   12816:	3c 10                	cmp    $0x10,%al
   12818:	74 56                	je     12870 <imul_rm2r_v+0xd0>
   1281a:	3c 08                	cmp    $0x8,%al
   1281c:	8b 6c 24 48          	mov    0x48(%esp),%ebp
   12820:	74 65                	je     12887 <imul_rm2r_v+0xe7>
   12822:	3c 10                	cmp    $0x10,%al
   12824:	74 51                	je     12877 <imul_rm2r_v+0xd7>
   12826:	83 ec 04             	sub    $0x4,%esp
   12829:	51                   	push   %ecx
   1282a:	52                   	push   %edx
   1282b:	55                   	push   %ebp
   1282c:	e8 cf 8c ff ff       	call   b500 <alu_imul>
   12831:	89 34 24             	mov    %esi,(%esp)
   12834:	89 44 24 34          	mov    %eax,0x34(%esp)
   12838:	e8 f3 1f ff ff       	call   4830 <operand_write>
   1283d:	89 34 24             	mov    %esi,(%esp)
   12840:	57                   	push   %edi
   12841:	8b 7c 24 20          	mov    0x20(%esp),%edi
   12845:	89 f8                	mov    %edi,%eax
   12847:	0f b6 c0             	movzbl %al,%eax
   1284a:	50                   	push   %eax
   1284b:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   12851:	50                   	push   %eax
   12852:	8d 83 63 0d ff ff    	lea    -0xf29d(%ebx),%eax
   12858:	50                   	push   %eax
   12859:	e8 a2 17 ff ff       	call   4000 <print_asm_2>
   1285e:	81 c4 8c 00 00 00    	add    $0x8c,%esp
   12864:	89 f8                	mov    %edi,%eax
   12866:	5b                   	pop    %ebx
   12867:	5e                   	pop    %esi
   12868:	5f                   	pop    %edi
   12869:	5d                   	pop    %ebp
   1286a:	c3                   	ret    
   1286b:	90                   	nop
   1286c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12870:	8b 6c 24 48          	mov    0x48(%esp),%ebp
   12874:	0f bf d2             	movswl %dx,%edx
   12877:	0f bf ed             	movswl %bp,%ebp
   1287a:	eb aa                	jmp    12826 <imul_rm2r_v+0x86>
   1287c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12880:	8b 6c 24 48          	mov    0x48(%esp),%ebp
   12884:	0f be d2             	movsbl %dl,%edx
   12887:	89 e8                	mov    %ebp,%eax
   12889:	0f be e8             	movsbl %al,%ebp
   1288c:	eb 98                	jmp    12826 <imul_rm2r_v+0x86>
   1288e:	8d 83 68 0d ff ff    	lea    -0xf298(%ebx),%eax
   12894:	50                   	push   %eax
   12895:	8d 83 d7 09 ff ff    	lea    -0xf629(%ebx),%eax
   1289b:	6a 2a                	push   $0x2a
   1289d:	50                   	push   %eax
   1289e:	8d 83 14 0a ff ff    	lea    -0xf5ec(%ebx),%eax
   128a4:	50                   	push   %eax
   128a5:	e8 e6 ff fe ff       	call   2890 <__assert_fail@plt>
   128aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000128b0 <imul_rm2a_b>:
   128b0:	55                   	push   %ebp
   128b1:	57                   	push   %edi
   128b2:	56                   	push   %esi
   128b3:	53                   	push   %ebx
   128b4:	e8 07 04 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   128b9:	81 c3 47 87 01 00    	add    $0x18747,%ebx
   128bf:	81 ec 94 00 00 00    	sub    $0x94,%esp
   128c5:	8d 7c 24 40          	lea    0x40(%esp),%edi
   128c9:	c7 44 24 2c 08 00 00 	movl   $0x8,0x2c(%esp)
   128d0:	00 
   128d1:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   128d8:	00 
   128d9:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   128e0:	00 
   128e1:	c7 44 24 50 08 00 00 	movl   $0x8,0x50(%esp)
   128e8:	00 
   128e9:	57                   	push   %edi
   128ea:	8b 84 24 ac 00 00 00 	mov    0xac(%esp),%eax
   128f1:	83 c0 01             	add    $0x1,%eax
   128f4:	50                   	push   %eax
   128f5:	e8 66 1d ff ff       	call   4660 <modrm_rm>
   128fa:	83 c0 01             	add    $0x1,%eax
   128fd:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   12901:	58                   	pop    %eax
   12902:	8d 6c 24 20          	lea    0x20(%esp),%ebp
   12906:	55                   	push   %ebp
   12907:	e8 94 1d ff ff       	call   46a0 <operand_read>
   1290c:	89 3c 24             	mov    %edi,(%esp)
   1290f:	e8 8c 1d ff ff       	call   46a0 <operand_read>
   12914:	83 c4 0c             	add    $0xc,%esp
   12917:	6a 08                	push   $0x8
   12919:	0f be 44 24 28       	movsbl 0x28(%esp),%eax
   1291e:	50                   	push   %eax
   1291f:	0f be 44 24 50       	movsbl 0x50(%esp),%eax
   12924:	50                   	push   %eax
   12925:	e8 d6 8b ff ff       	call   b500 <alu_imul>
   1292a:	c7 44 24 7c 10 00 00 	movl   $0x10,0x7c(%esp)
   12931:	00 
   12932:	c7 44 24 6c 01 00 00 	movl   $0x1,0x6c(%esp)
   12939:	00 
   1293a:	c7 44 24 70 00 00 00 	movl   $0x0,0x70(%esp)
   12941:	00 
   12942:	89 44 24 78          	mov    %eax,0x78(%esp)
   12946:	5a                   	pop    %edx
   12947:	8d 74 24 68          	lea    0x68(%esp),%esi
   1294b:	56                   	push   %esi
   1294c:	e8 df 1e ff ff       	call   4830 <operand_write>
   12951:	59                   	pop    %ecx
   12952:	58                   	pop    %eax
   12953:	56                   	push   %esi
   12954:	55                   	push   %ebp
   12955:	57                   	push   %edi
   12956:	8b 74 24 20          	mov    0x20(%esp),%esi
   1295a:	89 f0                	mov    %esi,%eax
   1295c:	0f b6 c0             	movzbl %al,%eax
   1295f:	50                   	push   %eax
   12960:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   12966:	50                   	push   %eax
   12967:	8d 83 63 0d ff ff    	lea    -0xf29d(%ebx),%eax
   1296d:	50                   	push   %eax
   1296e:	e8 ad 17 ff ff       	call   4120 <print_asm_3>
   12973:	81 c4 ac 00 00 00    	add    $0xac,%esp
   12979:	89 f0                	mov    %esi,%eax
   1297b:	5b                   	pop    %ebx
   1297c:	5e                   	pop    %esi
   1297d:	5f                   	pop    %edi
   1297e:	5d                   	pop    %ebp
   1297f:	c3                   	ret    

00012980 <imul_rm2a_v>:
   12980:	55                   	push   %ebp
   12981:	57                   	push   %edi
   12982:	56                   	push   %esi
   12983:	53                   	push   %ebx
   12984:	e8 37 03 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12989:	81 c3 77 86 01 00    	add    $0x18677,%ebx
   1298f:	81 ec b4 00 00 00    	sub    $0xb4,%esp
   12995:	8d ab 77 13 00 00    	lea    0x1377(%ebx),%ebp
   1299b:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
   1299f:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
   129a6:	00 
   129a7:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   129ae:	00 
   129af:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   129b3:	89 44 24 28          	mov    %eax,0x28(%esp)
   129b7:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   129bb:	57                   	push   %edi
   129bc:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   129c3:	83 c0 01             	add    $0x1,%eax
   129c6:	50                   	push   %eax
   129c7:	e8 94 1c ff ff       	call   4660 <modrm_rm>
   129cc:	83 c0 01             	add    $0x1,%eax
   129cf:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   129d3:	58                   	pop    %eax
   129d4:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   129d8:	50                   	push   %eax
   129d9:	e8 c2 1c ff ff       	call   46a0 <operand_read>
   129de:	89 3c 24             	mov    %edi,(%esp)
   129e1:	e8 ba 1c ff ff       	call   46a0 <operand_read>
   129e6:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   129ed:	00 
   129ee:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   129f5:	01 00 00 00 
   129f9:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   12a00:	00 
   12a01:	c7 84 24 90 00 00 00 	movl   $0x2,0x90(%esp)
   12a08:	02 00 00 00 
   12a0c:	83 c4 10             	add    $0x10,%esp
   12a0f:	80 7d 00 10          	cmpb   $0x10,0x0(%ebp)
   12a13:	0f 84 7f 00 00 00    	je     12a98 <imul_rm2a_v+0x118>
   12a19:	83 ec 04             	sub    $0x4,%esp
   12a1c:	6a 20                	push   $0x20
   12a1e:	ff 74 24 24          	pushl  0x24(%esp)
   12a22:	ff 74 24 4c          	pushl  0x4c(%esp)
   12a26:	e8 d5 8a ff ff       	call   b500 <alu_imul>
   12a2b:	c7 44 24 78 20 00 00 	movl   $0x20,0x78(%esp)
   12a32:	00 
   12a33:	c7 84 24 9c 00 00 00 	movl   $0x20,0x9c(%esp)
   12a3a:	20 00 00 00 
   12a3e:	89 44 24 74          	mov    %eax,0x74(%esp)
   12a42:	89 94 24 98 00 00 00 	mov    %edx,0x98(%esp)
   12a49:	58                   	pop    %eax
   12a4a:	5a                   	pop    %edx
   12a4b:	8d 74 24 60          	lea    0x60(%esp),%esi
   12a4f:	56                   	push   %esi
   12a50:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   12a57:	55                   	push   %ebp
   12a58:	57                   	push   %edi
   12a59:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
   12a5e:	52                   	push   %edx
   12a5f:	8d 93 f9 00 ff ff    	lea    -0xff07(%ebx),%edx
   12a65:	52                   	push   %edx
   12a66:	8d 93 63 0d ff ff    	lea    -0xf29d(%ebx),%edx
   12a6c:	52                   	push   %edx
   12a6d:	e8 ae 16 ff ff       	call   4120 <print_asm_3>
   12a72:	83 c4 20             	add    $0x20,%esp
   12a75:	83 ec 0c             	sub    $0xc,%esp
   12a78:	56                   	push   %esi
   12a79:	e8 b2 1d ff ff       	call   4830 <operand_write>
   12a7e:	89 2c 24             	mov    %ebp,(%esp)
   12a81:	e8 aa 1d ff ff       	call   4830 <operand_write>
   12a86:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   12a8a:	81 c4 bc 00 00 00    	add    $0xbc,%esp
   12a90:	5b                   	pop    %ebx
   12a91:	5e                   	pop    %esi
   12a92:	5f                   	pop    %edi
   12a93:	5d                   	pop    %ebp
   12a94:	c3                   	ret    
   12a95:	8d 76 00             	lea    0x0(%esi),%esi
   12a98:	83 ec 04             	sub    $0x4,%esp
   12a9b:	6a 10                	push   $0x10
   12a9d:	0f bf 44 24 24       	movswl 0x24(%esp),%eax
   12aa2:	50                   	push   %eax
   12aa3:	0f bf 44 24 4c       	movswl 0x4c(%esp),%eax
   12aa8:	50                   	push   %eax
   12aa9:	e8 52 8a ff ff       	call   b500 <alu_imul>
   12aae:	0f b7 d0             	movzwl %ax,%edx
   12ab1:	c1 e8 10             	shr    $0x10,%eax
   12ab4:	c7 44 24 78 10 00 00 	movl   $0x10,0x78(%esp)
   12abb:	00 
   12abc:	89 54 24 74          	mov    %edx,0x74(%esp)
   12ac0:	c7 84 24 9c 00 00 00 	movl   $0x10,0x9c(%esp)
   12ac7:	10 00 00 00 
   12acb:	89 84 24 98 00 00 00 	mov    %eax,0x98(%esp)
   12ad2:	59                   	pop    %ecx
   12ad3:	5e                   	pop    %esi
   12ad4:	8d 74 24 60          	lea    0x60(%esp),%esi
   12ad8:	56                   	push   %esi
   12ad9:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   12ae0:	55                   	push   %ebp
   12ae1:	57                   	push   %edi
   12ae2:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
   12ae7:	52                   	push   %edx
   12ae8:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   12aee:	e9 72 ff ff ff       	jmp    12a65 <imul_rm2a_v+0xe5>
   12af3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   12af9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00012b00 <imul_irm2r_v>:
   12b00:	55                   	push   %ebp
   12b01:	57                   	push   %edi
   12b02:	56                   	push   %esi
   12b03:	53                   	push   %ebx
   12b04:	e8 b7 01 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12b09:	81 c3 f7 84 01 00    	add    $0x184f7,%ebx
   12b0f:	81 ec 90 00 00 00    	sub    $0x90,%esp
   12b15:	8d b3 77 13 00 00    	lea    0x1377(%ebx),%esi
   12b1b:	8d 6c 24 3c          	lea    0x3c(%esp),%ebp
   12b1f:	8b bc 24 a4 00 00 00 	mov    0xa4(%esp),%edi
   12b26:	0f b6 06             	movzbl (%esi),%eax
   12b29:	89 44 24 28          	mov    %eax,0x28(%esp)
   12b2d:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   12b31:	55                   	push   %ebp
   12b32:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   12b36:	89 44 24 0c          	mov    %eax,0xc(%esp)
   12b3a:	50                   	push   %eax
   12b3b:	8d 47 01             	lea    0x1(%edi),%eax
   12b3e:	50                   	push   %eax
   12b3f:	e8 4c 1a ff ff       	call   4590 <modrm_r_rm>
   12b44:	83 c0 01             	add    $0x1,%eax
   12b47:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   12b4e:	00 
   12b4f:	89 2c 24             	mov    %ebp,(%esp)
   12b52:	89 c2                	mov    %eax,%edx
   12b54:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   12b58:	0f b6 06             	movzbl (%esi),%eax
   12b5b:	01 d7                	add    %edx,%edi
   12b5d:	89 7c 24 70          	mov    %edi,0x70(%esp)
   12b61:	89 44 24 7c          	mov    %eax,0x7c(%esp)
   12b65:	e8 36 1b ff ff       	call   46a0 <operand_read>
   12b6a:	5f                   	pop    %edi
   12b6b:	8d 7c 24 68          	lea    0x68(%esp),%edi
   12b6f:	57                   	push   %edi
   12b70:	e8 2b 1b ff ff       	call   46a0 <operand_read>
   12b75:	0f b6 0e             	movzbl (%esi),%ecx
   12b78:	8b 54 24 54          	mov    0x54(%esp),%edx
   12b7c:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   12b80:	89 c8                	mov    %ecx,%eax
   12b82:	83 e9 08             	sub    $0x8,%ecx
   12b85:	83 c4 10             	add    $0x10,%esp
   12b88:	81 e1 f7 00 00 00    	and    $0xf7,%ecx
   12b8e:	74 0b                	je     12b9b <imul_irm2r_v+0x9b>
   12b90:	83 7c 24 08 20       	cmpl   $0x20,0x8(%esp)
   12b95:	0f 85 91 00 00 00    	jne    12c2c <imul_irm2r_v+0x12c>
   12b9b:	3c 08                	cmp    $0x8,%al
   12b9d:	0f 84 7d 00 00 00    	je     12c20 <imul_irm2r_v+0x120>
   12ba3:	3c 10                	cmp    $0x10,%al
   12ba5:	74 69                	je     12c10 <imul_irm2r_v+0x110>
   12ba7:	3c 08                	cmp    $0x8,%al
   12ba9:	8b 4c 24 68          	mov    0x68(%esp),%ecx
   12bad:	74 78                	je     12c27 <imul_irm2r_v+0x127>
   12baf:	3c 10                	cmp    $0x10,%al
   12bb1:	74 64                	je     12c17 <imul_irm2r_v+0x117>
   12bb3:	83 ec 04             	sub    $0x4,%esp
   12bb6:	ff 74 24 0c          	pushl  0xc(%esp)
   12bba:	52                   	push   %edx
   12bbb:	51                   	push   %ecx
   12bbc:	e8 3f 89 ff ff       	call   b500 <alu_imul>
   12bc1:	89 44 24 30          	mov    %eax,0x30(%esp)
   12bc5:	58                   	pop    %eax
   12bc6:	ff 74 24 10          	pushl  0x10(%esp)
   12bca:	e8 61 1c ff ff       	call   4830 <operand_write>
   12bcf:	0f b6 06             	movzbl (%esi),%eax
   12bd2:	5a                   	pop    %edx
   12bd3:	59                   	pop    %ecx
   12bd4:	ff 74 24 0c          	pushl  0xc(%esp)
   12bd8:	55                   	push   %ebp
   12bd9:	57                   	push   %edi
   12bda:	8b 7c 24 20          	mov    0x20(%esp),%edi
   12bde:	c0 e8 03             	shr    $0x3,%al
   12be1:	01 f8                	add    %edi,%eax
   12be3:	0f b6 c0             	movzbl %al,%eax
   12be6:	50                   	push   %eax
   12be7:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   12bed:	50                   	push   %eax
   12bee:	8d 83 63 0d ff ff    	lea    -0xf29d(%ebx),%eax
   12bf4:	50                   	push   %eax
   12bf5:	e8 26 15 ff ff       	call   4120 <print_asm_3>
   12bfa:	0f b6 06             	movzbl (%esi),%eax
   12bfd:	81 c4 ac 00 00 00    	add    $0xac,%esp
   12c03:	5b                   	pop    %ebx
   12c04:	5e                   	pop    %esi
   12c05:	c0 e8 03             	shr    $0x3,%al
   12c08:	0f b6 c0             	movzbl %al,%eax
   12c0b:	01 f8                	add    %edi,%eax
   12c0d:	5f                   	pop    %edi
   12c0e:	5d                   	pop    %ebp
   12c0f:	c3                   	ret    
   12c10:	8b 4c 24 68          	mov    0x68(%esp),%ecx
   12c14:	0f bf d2             	movswl %dx,%edx
   12c17:	0f bf c9             	movswl %cx,%ecx
   12c1a:	eb 97                	jmp    12bb3 <imul_irm2r_v+0xb3>
   12c1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12c20:	8b 4c 24 68          	mov    0x68(%esp),%ecx
   12c24:	0f be d2             	movsbl %dl,%edx
   12c27:	0f be c9             	movsbl %cl,%ecx
   12c2a:	eb 87                	jmp    12bb3 <imul_irm2r_v+0xb3>
   12c2c:	8d 83 68 0d ff ff    	lea    -0xf298(%ebx),%eax
   12c32:	50                   	push   %eax
   12c33:	8d 83 d7 09 ff ff    	lea    -0xf629(%ebx),%eax
   12c39:	6a 2a                	push   $0x2a
   12c3b:	50                   	push   %eax
   12c3c:	8d 83 14 0a ff ff    	lea    -0xf5ec(%ebx),%eax
   12c42:	50                   	push   %eax
   12c43:	e8 48 fc fe ff       	call   2890 <__assert_fail@plt>
   12c48:	90                   	nop
   12c49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00012c50 <imul_i8rm2r_v>:
   12c50:	55                   	push   %ebp
   12c51:	57                   	push   %edi
   12c52:	56                   	push   %esi
   12c53:	53                   	push   %ebx
   12c54:	e8 67 00 ff ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12c59:	81 c3 a7 83 01 00    	add    $0x183a7,%ebx
   12c5f:	81 ec 90 00 00 00    	sub    $0x90,%esp
   12c65:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   12c6b:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
   12c6f:	8b b4 24 a4 00 00 00 	mov    0xa4(%esp),%esi
   12c76:	89 44 24 04          	mov    %eax,0x4(%esp)
   12c7a:	0f b6 00             	movzbl (%eax),%eax
   12c7d:	89 44 24 28          	mov    %eax,0x28(%esp)
   12c81:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   12c85:	8d 46 01             	lea    0x1(%esi),%eax
   12c88:	57                   	push   %edi
   12c89:	8d 6c 24 1c          	lea    0x1c(%esp),%ebp
   12c8d:	55                   	push   %ebp
   12c8e:	50                   	push   %eax
   12c8f:	e8 fc 18 ff ff       	call   4590 <modrm_r_rm>
   12c94:	8d 48 01             	lea    0x1(%eax),%ecx
   12c97:	89 44 24 14          	mov    %eax,0x14(%esp)
   12c9b:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   12ca2:	00 
   12ca3:	c7 44 24 7c 08 00 00 	movl   $0x8,0x7c(%esp)
   12caa:	00 
   12cab:	89 3c 24             	mov    %edi,(%esp)
   12cae:	01 ce                	add    %ecx,%esi
   12cb0:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   12cb4:	89 74 24 70          	mov    %esi,0x70(%esp)
   12cb8:	e8 e3 19 ff ff       	call   46a0 <operand_read>
   12cbd:	5e                   	pop    %esi
   12cbe:	8d 74 24 68          	lea    0x68(%esp),%esi
   12cc2:	89 74 24 18          	mov    %esi,0x18(%esp)
   12cc6:	56                   	push   %esi
   12cc7:	e8 d4 19 ff ff       	call   46a0 <operand_read>
   12ccc:	8b 44 24 10          	mov    0x10(%esp),%eax
   12cd0:	8b 54 24 54          	mov    0x54(%esp),%edx
   12cd4:	83 c4 10             	add    $0x10,%esp
   12cd7:	0f b6 08             	movzbl (%eax),%ecx
   12cda:	8d 71 f8             	lea    -0x8(%ecx),%esi
   12cdd:	89 c8                	mov    %ecx,%eax
   12cdf:	81 e6 f7 00 00 00    	and    $0xf7,%esi
   12ce5:	74 05                	je     12cec <imul_i8rm2r_v+0x9c>
   12ce7:	83 f9 20             	cmp    $0x20,%ecx
   12cea:	75 79                	jne    12d65 <imul_i8rm2r_v+0x115>
   12cec:	3c 08                	cmp    $0x8,%al
   12cee:	74 70                	je     12d60 <imul_i8rm2r_v+0x110>
   12cf0:	0f bf f2             	movswl %dx,%esi
   12cf3:	3c 10                	cmp    $0x10,%al
   12cf5:	0f 44 d6             	cmove  %esi,%edx
   12cf8:	83 ec 04             	sub    $0x4,%esp
   12cfb:	51                   	push   %ecx
   12cfc:	52                   	push   %edx
   12cfd:	0f be 44 24 74       	movsbl 0x74(%esp),%eax
   12d02:	50                   	push   %eax
   12d03:	e8 f8 87 ff ff       	call   b500 <alu_imul>
   12d08:	89 2c 24             	mov    %ebp,(%esp)
   12d0b:	89 44 24 30          	mov    %eax,0x30(%esp)
   12d0f:	e8 1c 1b ff ff       	call   4830 <operand_write>
   12d14:	0f b6 44 24 18       	movzbl 0x18(%esp),%eax
   12d19:	5a                   	pop    %edx
   12d1a:	59                   	pop    %ecx
   12d1b:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   12d1f:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   12d25:	83 c0 01             	add    $0x1,%eax
   12d28:	0f b6 c0             	movzbl %al,%eax
   12d2b:	80 39 10             	cmpb   $0x10,(%ecx)
   12d2e:	8d 8b f9 00 ff ff    	lea    -0xff07(%ebx),%ecx
   12d34:	55                   	push   %ebp
   12d35:	57                   	push   %edi
   12d36:	ff 74 24 1c          	pushl  0x1c(%esp)
   12d3a:	50                   	push   %eax
   12d3b:	8d 83 63 0d ff ff    	lea    -0xf29d(%ebx),%eax
   12d41:	0f 45 d1             	cmovne %ecx,%edx
   12d44:	52                   	push   %edx
   12d45:	50                   	push   %eax
   12d46:	e8 d5 13 ff ff       	call   4120 <print_asm_3>
   12d4b:	8b 44 24 24          	mov    0x24(%esp),%eax
   12d4f:	81 c4 ac 00 00 00    	add    $0xac,%esp
   12d55:	5b                   	pop    %ebx
   12d56:	5e                   	pop    %esi
   12d57:	83 c0 02             	add    $0x2,%eax
   12d5a:	5f                   	pop    %edi
   12d5b:	5d                   	pop    %ebp
   12d5c:	c3                   	ret    
   12d5d:	8d 76 00             	lea    0x0(%esi),%esi
   12d60:	0f be d2             	movsbl %dl,%edx
   12d63:	eb 93                	jmp    12cf8 <imul_i8rm2r_v+0xa8>
   12d65:	8d 83 68 0d ff ff    	lea    -0xf298(%ebx),%eax
   12d6b:	50                   	push   %eax
   12d6c:	8d 83 d7 09 ff ff    	lea    -0xf629(%ebx),%eax
   12d72:	6a 2a                	push   $0x2a
   12d74:	50                   	push   %eax
   12d75:	8d 83 14 0a ff ff    	lea    -0xf5ec(%ebx),%eax
   12d7b:	50                   	push   %eax
   12d7c:	e8 0f fb fe ff       	call   2890 <__assert_fail@plt>
   12d81:	eb 0d                	jmp    12d90 <imul_r2rm_v>
   12d83:	90                   	nop
   12d84:	90                   	nop
   12d85:	90                   	nop
   12d86:	90                   	nop
   12d87:	90                   	nop
   12d88:	90                   	nop
   12d89:	90                   	nop
   12d8a:	90                   	nop
   12d8b:	90                   	nop
   12d8c:	90                   	nop
   12d8d:	90                   	nop
   12d8e:	90                   	nop
   12d8f:	90                   	nop

00012d90 <imul_r2rm_v>:
   12d90:	55                   	push   %ebp
   12d91:	57                   	push   %edi
   12d92:	56                   	push   %esi
   12d93:	53                   	push   %ebx
   12d94:	e8 27 ff fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12d99:	81 c3 67 82 01 00    	add    $0x18267,%ebx
   12d9f:	83 ec 70             	sub    $0x70,%esp
   12da2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   12da8:	8d 6c 24 40          	lea    0x40(%esp),%ebp
   12dac:	89 44 24 10          	mov    %eax,0x10(%esp)
   12db0:	0f b6 00             	movzbl (%eax),%eax
   12db3:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   12db7:	89 44 24 50          	mov    %eax,0x50(%esp)
   12dbb:	55                   	push   %ebp
   12dbc:	8d 7c 24 20          	lea    0x20(%esp),%edi
   12dc0:	57                   	push   %edi
   12dc1:	8b b4 24 8c 00 00 00 	mov    0x8c(%esp),%esi
   12dc8:	8d 46 01             	lea    0x1(%esi),%eax
   12dcb:	50                   	push   %eax
   12dcc:	e8 bf 17 ff ff       	call   4590 <modrm_r_rm>
   12dd1:	89 2c 24             	mov    %ebp,(%esp)
   12dd4:	8d 70 01             	lea    0x1(%eax),%esi
   12dd7:	e8 c4 18 ff ff       	call   46a0 <operand_read>
   12ddc:	89 3c 24             	mov    %edi,(%esp)
   12ddf:	e8 bc 18 ff ff       	call   46a0 <operand_read>
   12de4:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   12de8:	8b 54 24 58          	mov    0x58(%esp),%edx
   12dec:	83 c4 10             	add    $0x10,%esp
   12def:	0f b6 08             	movzbl (%eax),%ecx
   12df2:	8d 69 f8             	lea    -0x8(%ecx),%ebp
   12df5:	89 c8                	mov    %ecx,%eax
   12df7:	81 e5 f7 00 00 00    	and    $0xf7,%ebp
   12dfd:	74 05                	je     12e04 <imul_r2rm_v+0x74>
   12dff:	83 f9 20             	cmp    $0x20,%ecx
   12e02:	75 5a                	jne    12e5e <imul_r2rm_v+0xce>
   12e04:	3c 08                	cmp    $0x8,%al
   12e06:	74 48                	je     12e50 <imul_r2rm_v+0xc0>
   12e08:	3c 10                	cmp    $0x10,%al
   12e0a:	74 34                	je     12e40 <imul_r2rm_v+0xb0>
   12e0c:	3c 08                	cmp    $0x8,%al
   12e0e:	8b 6c 24 24          	mov    0x24(%esp),%ebp
   12e12:	74 43                	je     12e57 <imul_r2rm_v+0xc7>
   12e14:	3c 10                	cmp    $0x10,%al
   12e16:	74 2f                	je     12e47 <imul_r2rm_v+0xb7>
   12e18:	83 ec 04             	sub    $0x4,%esp
   12e1b:	51                   	push   %ecx
   12e1c:	52                   	push   %edx
   12e1d:	55                   	push   %ebp
   12e1e:	e8 dd 86 ff ff       	call   b500 <alu_imul>
   12e23:	89 3c 24             	mov    %edi,(%esp)
   12e26:	89 44 24 58          	mov    %eax,0x58(%esp)
   12e2a:	e8 01 1a ff ff       	call   4830 <operand_write>
   12e2f:	83 c4 7c             	add    $0x7c,%esp
   12e32:	89 f0                	mov    %esi,%eax
   12e34:	5b                   	pop    %ebx
   12e35:	5e                   	pop    %esi
   12e36:	5f                   	pop    %edi
   12e37:	5d                   	pop    %ebp
   12e38:	c3                   	ret    
   12e39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   12e40:	8b 6c 24 24          	mov    0x24(%esp),%ebp
   12e44:	0f bf d2             	movswl %dx,%edx
   12e47:	0f bf ed             	movswl %bp,%ebp
   12e4a:	eb cc                	jmp    12e18 <imul_r2rm_v+0x88>
   12e4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12e50:	8b 6c 24 24          	mov    0x24(%esp),%ebp
   12e54:	0f be d2             	movsbl %dl,%edx
   12e57:	89 e8                	mov    %ebp,%eax
   12e59:	0f be e8             	movsbl %al,%ebp
   12e5c:	eb ba                	jmp    12e18 <imul_r2rm_v+0x88>
   12e5e:	8d 83 68 0d ff ff    	lea    -0xf298(%ebx),%eax
   12e64:	50                   	push   %eax
   12e65:	8d 83 d7 09 ff ff    	lea    -0xf629(%ebx),%eax
   12e6b:	6a 2a                	push   $0x2a
   12e6d:	50                   	push   %eax
   12e6e:	8d 83 14 0a ff ff    	lea    -0xf5ec(%ebx),%eax
   12e74:	50                   	push   %eax
   12e75:	e8 16 fa fe ff       	call   2890 <__assert_fail@plt>
   12e7a:	66 90                	xchg   %ax,%ax
   12e7c:	66 90                	xchg   %ax,%ax
   12e7e:	66 90                	xchg   %ax,%ax

00012e80 <sti>:
   12e80:	e8 65 04 ff ff       	call   32ea <__x86.get_pc_thunk.ax>
   12e85:	05 7b 81 01 00       	add    $0x1817b,%eax
   12e8a:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   12e90:	80 48 25 02          	orb    $0x2,0x25(%eax)
   12e94:	b8 01 00 00 00       	mov    $0x1,%eax
   12e99:	c3                   	ret    
   12e9a:	66 90                	xchg   %ax,%ax
   12e9c:	66 90                	xchg   %ax,%ax
   12e9e:	66 90                	xchg   %ax,%ax

00012ea0 <pusha_v>:
   12ea0:	55                   	push   %ebp
   12ea1:	57                   	push   %edi
   12ea2:	31 ff                	xor    %edi,%edi
   12ea4:	56                   	push   %esi
   12ea5:	53                   	push   %ebx
   12ea6:	e8 15 fe fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12eab:	81 c3 55 81 01 00    	add    $0x18155,%ebx
   12eb1:	81 ec 3c 01 00 00    	sub    $0x13c,%esp
   12eb7:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   12ebd:	8d 74 24 10          	lea    0x10(%esp),%esi
   12ec1:	89 f5                	mov    %esi,%ebp
   12ec3:	89 44 24 0c          	mov    %eax,0xc(%esp)
   12ec7:	89 f6                	mov    %esi,%esi
   12ec9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   12ed0:	8b 44 24 0c          	mov    0xc(%esp),%eax
   12ed4:	83 ec 0c             	sub    $0xc,%esp
   12ed7:	89 7d 04             	mov    %edi,0x4(%ebp)
   12eda:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   12ee1:	83 c7 01             	add    $0x1,%edi
   12ee4:	0f b6 10             	movzbl (%eax),%edx
   12ee7:	89 55 10             	mov    %edx,0x10(%ebp)
   12eea:	55                   	push   %ebp
   12eeb:	83 c5 24             	add    $0x24,%ebp
   12eee:	e8 ad 17 ff ff       	call   46a0 <operand_read>
   12ef3:	83 c4 10             	add    $0x10,%esp
   12ef6:	83 ff 08             	cmp    $0x8,%edi
   12ef9:	75 d5                	jne    12ed0 <pusha_v+0x30>
   12efb:	8b 44 24 0c          	mov    0xc(%esp),%eax
   12eff:	0f b6 00             	movzbl (%eax),%eax
   12f02:	8d 50 f0             	lea    -0x10(%eax),%edx
   12f05:	81 e2 ef 00 00 00    	and    $0xef,%edx
   12f0b:	75 77                	jne    12f84 <pusha_v+0xe4>
   12f0d:	8d ab 60 1d 05 00    	lea    0x51d60(%ebx),%ebp
   12f13:	3c 10                	cmp    $0x10,%al
   12f15:	8b 4d 10             	mov    0x10(%ebp),%ecx
   12f18:	74 5e                	je     12f78 <pusha_v+0xd8>
   12f1a:	89 8c 24 ac 00 00 00 	mov    %ecx,0xac(%esp)
   12f21:	8d bc 24 30 01 00 00 	lea    0x130(%esp),%edi
   12f28:	eb 10                	jmp    12f3a <pusha_v+0x9a>
   12f2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   12f30:	8b 44 24 0c          	mov    0xc(%esp),%eax
   12f34:	8b 4d 10             	mov    0x10(%ebp),%ecx
   12f37:	0f b6 00             	movzbl (%eax),%eax
   12f3a:	c0 e8 03             	shr    $0x3,%al
   12f3d:	83 ec 0c             	sub    $0xc,%esp
   12f40:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   12f46:	0f b6 c0             	movzbl %al,%eax
   12f49:	c6 46 08 02          	movb   $0x2,0x8(%esi)
   12f4d:	29 c1                	sub    %eax,%ecx
   12f4f:	89 4e 04             	mov    %ecx,0x4(%esi)
   12f52:	89 4d 10             	mov    %ecx,0x10(%ebp)
   12f55:	56                   	push   %esi
   12f56:	83 c6 24             	add    $0x24,%esi
   12f59:	e8 d2 18 ff ff       	call   4830 <operand_write>
   12f5e:	83 c4 10             	add    $0x10,%esp
   12f61:	39 f7                	cmp    %esi,%edi
   12f63:	75 cb                	jne    12f30 <pusha_v+0x90>
   12f65:	81 c4 3c 01 00 00    	add    $0x13c,%esp
   12f6b:	b8 01 00 00 00       	mov    $0x1,%eax
   12f70:	5b                   	pop    %ebx
   12f71:	5e                   	pop    %esi
   12f72:	5f                   	pop    %edi
   12f73:	5d                   	pop    %ebp
   12f74:	c3                   	ret    
   12f75:	8d 76 00             	lea    0x0(%esi),%esi
   12f78:	0f b7 d1             	movzwl %cx,%edx
   12f7b:	89 94 24 ac 00 00 00 	mov    %edx,0xac(%esp)
   12f82:	eb 9d                	jmp    12f21 <pusha_v+0x81>
   12f84:	8d 83 88 0d ff ff    	lea    -0xf278(%ebx),%eax
   12f8a:	50                   	push   %eax
   12f8b:	8d 83 71 0d ff ff    	lea    -0xf28f(%ebx),%eax
   12f91:	6a 0e                	push   $0xe
   12f93:	50                   	push   %eax
   12f94:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   12f9a:	50                   	push   %eax
   12f9b:	e8 f0 f8 fe ff       	call   2890 <__assert_fail@plt>

00012fa0 <inv>:
   12fa0:	56                   	push   %esi
   12fa1:	53                   	push   %ebx
   12fa2:	e8 19 fd fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   12fa7:	81 c3 59 80 01 00    	add    $0x18059,%ebx
   12fad:	83 ec 2c             	sub    $0x2c,%esp
   12fb0:	8b 74 24 38          	mov    0x38(%esp),%esi
   12fb4:	6a 04                	push   $0x4
   12fb6:	56                   	push   %esi
   12fb7:	e8 24 73 00 00       	call   1a2e0 <instr_fetch>
   12fbc:	89 44 24 10          	mov    %eax,0x10(%esp)
   12fc0:	58                   	pop    %eax
   12fc1:	8d 46 04             	lea    0x4(%esi),%eax
   12fc4:	5a                   	pop    %edx
   12fc5:	6a 04                	push   $0x4
   12fc7:	50                   	push   %eax
   12fc8:	e8 13 73 00 00       	call   1a2e0 <instr_fetch>
   12fcd:	89 c1                	mov    %eax,%ecx
   12fcf:	83 c4 08             	add    $0x8,%esp
   12fd2:	c1 e9 10             	shr    $0x10,%ecx
   12fd5:	89 ca                	mov    %ecx,%edx
   12fd7:	89 c1                	mov    %eax,%ecx
   12fd9:	c1 e9 18             	shr    $0x18,%ecx
   12fdc:	0f b6 d2             	movzbl %dl,%edx
   12fdf:	51                   	push   %ecx
   12fe0:	52                   	push   %edx
   12fe1:	0f b6 d4             	movzbl %ah,%edx
   12fe4:	0f b6 c0             	movzbl %al,%eax
   12fe7:	52                   	push   %edx
   12fe8:	50                   	push   %eax
   12fe9:	0f b6 44 24 1b       	movzbl 0x1b(%esp),%eax
   12fee:	50                   	push   %eax
   12fef:	0f b6 44 24 1e       	movzbl 0x1e(%esp),%eax
   12ff4:	50                   	push   %eax
   12ff5:	0f b6 44 24 21       	movzbl 0x21(%esp),%eax
   12ffa:	50                   	push   %eax
   12ffb:	0f b6 44 24 24       	movzbl 0x24(%esp),%eax
   13000:	50                   	push   %eax
   13001:	8d 83 90 0d ff ff    	lea    -0xf270(%ebx),%eax
   13007:	56                   	push   %esi
   13008:	50                   	push   %eax
   13009:	e8 b2 f7 fe ff       	call   27c0 <printf@plt>
   1300e:	8d 83 dc 0d ff ff    	lea    -0xf224(%ebx),%eax
   13014:	83 c4 28             	add    $0x28,%esp
   13017:	56                   	push   %esi
   13018:	50                   	push   %eax
   13019:	e8 a2 f7 fe ff       	call   27c0 <printf@plt>
   1301e:	58                   	pop    %eax
   1301f:	8d 83 80 0e ff ff    	lea    -0xf180(%ebx),%eax
   13025:	5a                   	pop    %edx
   13026:	56                   	push   %esi
   13027:	50                   	push   %eax
   13028:	e8 93 f7 fe ff       	call   27c0 <printf@plt>
   1302d:	8d 83 20 12 00 00    	lea    0x1220(%ebx),%eax
   13033:	59                   	pop    %ecx
   13034:	5e                   	pop    %esi
   13035:	50                   	push   %eax
   13036:	8d 83 dc 0e ff ff    	lea    -0xf124(%ebx),%eax
   1303c:	50                   	push   %eax
   1303d:	e8 7e f7 fe ff       	call   27c0 <printf@plt>
   13042:	8d 83 a4 0f ff ff    	lea    -0xf05c(%ebx),%eax
   13048:	50                   	push   %eax
   13049:	8d 83 8e 0f ff ff    	lea    -0xf072(%ebx),%eax
   1304f:	6a 3a                	push   $0x3a
   13051:	50                   	push   %eax
   13052:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
   13058:	50                   	push   %eax
   13059:	e8 32 f8 fe ff       	call   2890 <__assert_fail@plt>
   1305e:	66 90                	xchg   %ax,%ax

00013060 <instr_execute_2op>:
   13060:	57                   	push   %edi
   13061:	56                   	push   %esi
   13062:	53                   	push   %ebx
   13063:	e8 58 fc fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13068:	81 c3 98 7f 01 00    	add    $0x17f98,%ebx
   1306e:	83 ec 0c             	sub    $0xc,%esp
   13071:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   13077:	57                   	push   %edi
   13078:	e8 23 16 ff ff       	call   46a0 <operand_read>
   1307d:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   13083:	89 34 24             	mov    %esi,(%esp)
   13086:	e8 15 16 ff ff       	call   46a0 <operand_read>
   1308b:	83 c4 0c             	add    $0xc,%esp
   1308e:	ff 76 10             	pushl  0x10(%esi)
   13091:	ff 76 0c             	pushl  0xc(%esi)
   13094:	ff 77 0c             	pushl  0xc(%edi)
   13097:	e8 94 86 ff ff       	call   b730 <alu_shl>
   1309c:	89 34 24             	mov    %esi,(%esp)
   1309f:	89 46 0c             	mov    %eax,0xc(%esi)
   130a2:	e8 89 17 ff ff       	call   4830 <operand_write>
   130a7:	83 c4 10             	add    $0x10,%esp
   130aa:	5b                   	pop    %ebx
   130ab:	5e                   	pop    %esi
   130ac:	5f                   	pop    %edi
   130ad:	c3                   	ret    
   130ae:	66 90                	xchg   %ax,%ax

000130b0 <instr_execute_1op>:
   130b0:	56                   	push   %esi
   130b1:	53                   	push   %ebx
   130b2:	e8 09 fc fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   130b7:	81 c3 49 7f 01 00    	add    $0x17f49,%ebx
   130bd:	83 ec 10             	sub    $0x10,%esp
   130c0:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   130c6:	56                   	push   %esi
   130c7:	e8 d4 15 ff ff       	call   46a0 <operand_read>
   130cc:	83 c4 0c             	add    $0xc,%esp
   130cf:	ff 76 10             	pushl  0x10(%esi)
   130d2:	ff 76 0c             	pushl  0xc(%esi)
   130d5:	6a 01                	push   $0x1
   130d7:	e8 54 86 ff ff       	call   b730 <alu_shl>
   130dc:	89 34 24             	mov    %esi,(%esp)
   130df:	89 46 0c             	mov    %eax,0xc(%esi)
   130e2:	e8 49 17 ff ff       	call   4830 <operand_write>
   130e7:	83 c4 14             	add    $0x14,%esp
   130ea:	5b                   	pop    %ebx
   130eb:	5e                   	pop    %esi
   130ec:	c3                   	ret    
   130ed:	8d 76 00             	lea    0x0(%esi),%esi

000130f0 <shl_i2rm_b>:
   130f0:	55                   	push   %ebp
   130f1:	57                   	push   %edi
   130f2:	56                   	push   %esi
   130f3:	53                   	push   %ebx
   130f4:	e8 c7 fb fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   130f9:	81 c3 07 7f 01 00    	add    $0x17f07,%ebx
   130ff:	83 ec 24             	sub    $0x24,%esp
   13102:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   13106:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   1310c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   13112:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   13119:	8d 45 01             	lea    0x1(%ebp),%eax
   1311c:	52                   	push   %edx
   1311d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   13124:	89 54 24 18          	mov    %edx,0x18(%esp)
   13128:	50                   	push   %eax
   13129:	e8 32 15 ff ff       	call   4660 <modrm_rm>
   1312e:	8b 77 10             	mov    0x10(%edi),%esi
   13131:	83 c0 01             	add    $0x1,%eax
   13134:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   13138:	01 c5                	add    %eax,%ebp
   1313a:	83 c4 10             	add    $0x10,%esp
   1313d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   13143:	89 6f 04             	mov    %ebp,0x4(%edi)
   13146:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1314a:	c1 ee 03             	shr    $0x3,%esi
   1314d:	01 c6                	add    %eax,%esi
   1314f:	89 f0                	mov    %esi,%eax
   13151:	0f b6 e8             	movzbl %al,%ebp
   13154:	8b 42 10             	mov    0x10(%edx),%eax
   13157:	83 f8 08             	cmp    $0x8,%eax
   1315a:	74 3c                	je     13198 <shl_i2rm_b+0xa8>
   1315c:	83 f8 10             	cmp    $0x10,%eax
   1315f:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   13165:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1316b:	0f 44 c1             	cmove  %ecx,%eax
   1316e:	83 ec 0c             	sub    $0xc,%esp
   13171:	52                   	push   %edx
   13172:	57                   	push   %edi
   13173:	55                   	push   %ebp
   13174:	50                   	push   %eax
   13175:	8d 83 a8 0f ff ff    	lea    -0xf058(%ebx),%eax
   1317b:	50                   	push   %eax
   1317c:	e8 7f 0e ff ff       	call   4000 <print_asm_2>
   13181:	83 c4 20             	add    $0x20,%esp
   13184:	e8 d7 fe ff ff       	call   13060 <instr_execute_2op>
   13189:	83 c4 1c             	add    $0x1c,%esp
   1318c:	89 f0                	mov    %esi,%eax
   1318e:	5b                   	pop    %ebx
   1318f:	5e                   	pop    %esi
   13190:	5f                   	pop    %edi
   13191:	5d                   	pop    %ebp
   13192:	c3                   	ret    
   13193:	90                   	nop
   13194:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13198:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   1319e:	eb ce                	jmp    1316e <shl_i2rm_b+0x7e>

000131a0 <shl_i2rm_bv>:
   131a0:	55                   	push   %ebp
   131a1:	57                   	push   %edi
   131a2:	56                   	push   %esi
   131a3:	53                   	push   %ebx
   131a4:	e8 17 fb fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   131a9:	81 c3 57 7e 01 00    	add    $0x17e57,%ebx
   131af:	83 ec 24             	sub    $0x24,%esp
   131b2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   131b8:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   131bc:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   131c2:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   131c8:	0f b6 00             	movzbl (%eax),%eax
   131cb:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   131d2:	89 42 10             	mov    %eax,0x10(%edx)
   131d5:	52                   	push   %edx
   131d6:	8d 45 01             	lea    0x1(%ebp),%eax
   131d9:	89 54 24 18          	mov    %edx,0x18(%esp)
   131dd:	50                   	push   %eax
   131de:	e8 7d 14 ff ff       	call   4660 <modrm_rm>
   131e3:	8b 77 10             	mov    0x10(%edi),%esi
   131e6:	83 c0 01             	add    $0x1,%eax
   131e9:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   131ed:	01 c5                	add    %eax,%ebp
   131ef:	83 c4 10             	add    $0x10,%esp
   131f2:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   131f8:	89 6f 04             	mov    %ebp,0x4(%edi)
   131fb:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   131ff:	c1 ee 03             	shr    $0x3,%esi
   13202:	01 c6                	add    %eax,%esi
   13204:	89 f0                	mov    %esi,%eax
   13206:	0f b6 e8             	movzbl %al,%ebp
   13209:	8b 42 10             	mov    0x10(%edx),%eax
   1320c:	83 f8 08             	cmp    $0x8,%eax
   1320f:	74 3f                	je     13250 <shl_i2rm_bv+0xb0>
   13211:	83 f8 10             	cmp    $0x10,%eax
   13214:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   1321a:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   13220:	0f 44 c1             	cmove  %ecx,%eax
   13223:	83 ec 0c             	sub    $0xc,%esp
   13226:	52                   	push   %edx
   13227:	57                   	push   %edi
   13228:	55                   	push   %ebp
   13229:	50                   	push   %eax
   1322a:	8d 83 a8 0f ff ff    	lea    -0xf058(%ebx),%eax
   13230:	50                   	push   %eax
   13231:	e8 ca 0d ff ff       	call   4000 <print_asm_2>
   13236:	83 c4 20             	add    $0x20,%esp
   13239:	e8 22 fe ff ff       	call   13060 <instr_execute_2op>
   1323e:	83 c4 1c             	add    $0x1c,%esp
   13241:	89 f0                	mov    %esi,%eax
   13243:	5b                   	pop    %ebx
   13244:	5e                   	pop    %esi
   13245:	5f                   	pop    %edi
   13246:	5d                   	pop    %ebp
   13247:	c3                   	ret    
   13248:	90                   	nop
   13249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13250:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   13256:	eb cb                	jmp    13223 <shl_i2rm_bv+0x83>
   13258:	90                   	nop
   13259:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013260 <shl_c2rm_b>:
   13260:	55                   	push   %ebp
   13261:	57                   	push   %edi
   13262:	56                   	push   %esi
   13263:	53                   	push   %ebx
   13264:	e8 57 fa fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13269:	81 c3 97 7d 01 00    	add    $0x17d97,%ebx
   1326f:	83 ec 14             	sub    $0x14,%esp
   13272:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
   13278:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   1327e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   13285:	55                   	push   %ebp
   13286:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1328a:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   13291:	83 c0 01             	add    $0x1,%eax
   13294:	50                   	push   %eax
   13295:	e8 c6 13 ff ff       	call   4660 <modrm_rm>
   1329a:	8d 70 01             	lea    0x1(%eax),%esi
   1329d:	83 c4 10             	add    $0x10,%esp
   132a0:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   132a6:	c7 47 04 01 00 00 00 	movl   $0x1,0x4(%edi)
   132ad:	89 f0                	mov    %esi,%eax
   132af:	0f b6 c8             	movzbl %al,%ecx
   132b2:	8b 45 10             	mov    0x10(%ebp),%eax
   132b5:	83 f8 08             	cmp    $0x8,%eax
   132b8:	74 3e                	je     132f8 <shl_c2rm_b+0x98>
   132ba:	83 f8 10             	cmp    $0x10,%eax
   132bd:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   132c3:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   132c9:	0f 44 c2             	cmove  %edx,%eax
   132cc:	83 ec 0c             	sub    $0xc,%esp
   132cf:	55                   	push   %ebp
   132d0:	57                   	push   %edi
   132d1:	51                   	push   %ecx
   132d2:	50                   	push   %eax
   132d3:	8d 83 a8 0f ff ff    	lea    -0xf058(%ebx),%eax
   132d9:	50                   	push   %eax
   132da:	e8 21 0d ff ff       	call   4000 <print_asm_2>
   132df:	83 c4 20             	add    $0x20,%esp
   132e2:	e8 79 fd ff ff       	call   13060 <instr_execute_2op>
   132e7:	83 c4 0c             	add    $0xc,%esp
   132ea:	89 f0                	mov    %esi,%eax
   132ec:	5b                   	pop    %ebx
   132ed:	5e                   	pop    %esi
   132ee:	5f                   	pop    %edi
   132ef:	5d                   	pop    %ebp
   132f0:	c3                   	ret    
   132f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   132f8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   132fe:	eb cc                	jmp    132cc <shl_c2rm_b+0x6c>

00013300 <shl_c2rm_bv>:
   13300:	55                   	push   %ebp
   13301:	57                   	push   %edi
   13302:	56                   	push   %esi
   13303:	53                   	push   %ebx
   13304:	e8 b7 f9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13309:	81 c3 f7 7c 01 00    	add    $0x17cf7,%ebx
   1330f:	83 ec 14             	sub    $0x14,%esp
   13312:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   13318:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
   1331e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   13324:	0f b6 00             	movzbl (%eax),%eax
   13327:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1332e:	89 45 10             	mov    %eax,0x10(%ebp)
   13331:	55                   	push   %ebp
   13332:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   13336:	83 c0 01             	add    $0x1,%eax
   13339:	50                   	push   %eax
   1333a:	e8 21 13 ff ff       	call   4660 <modrm_rm>
   1333f:	8d 70 01             	lea    0x1(%eax),%esi
   13342:	83 c4 10             	add    $0x10,%esp
   13345:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   1334b:	c7 47 04 01 00 00 00 	movl   $0x1,0x4(%edi)
   13352:	89 f0                	mov    %esi,%eax
   13354:	0f b6 c8             	movzbl %al,%ecx
   13357:	8b 45 10             	mov    0x10(%ebp),%eax
   1335a:	83 f8 08             	cmp    $0x8,%eax
   1335d:	74 41                	je     133a0 <shl_c2rm_bv+0xa0>
   1335f:	83 f8 10             	cmp    $0x10,%eax
   13362:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   13368:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1336e:	0f 44 c2             	cmove  %edx,%eax
   13371:	83 ec 0c             	sub    $0xc,%esp
   13374:	55                   	push   %ebp
   13375:	57                   	push   %edi
   13376:	51                   	push   %ecx
   13377:	50                   	push   %eax
   13378:	8d 83 a8 0f ff ff    	lea    -0xf058(%ebx),%eax
   1337e:	50                   	push   %eax
   1337f:	e8 7c 0c ff ff       	call   4000 <print_asm_2>
   13384:	83 c4 20             	add    $0x20,%esp
   13387:	e8 d4 fc ff ff       	call   13060 <instr_execute_2op>
   1338c:	83 c4 0c             	add    $0xc,%esp
   1338f:	89 f0                	mov    %esi,%eax
   13391:	5b                   	pop    %ebx
   13392:	5e                   	pop    %esi
   13393:	5f                   	pop    %edi
   13394:	5d                   	pop    %ebp
   13395:	c3                   	ret    
   13396:	8d 76 00             	lea    0x0(%esi),%esi
   13399:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   133a0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   133a6:	eb c9                	jmp    13371 <shl_c2rm_bv+0x71>
   133a8:	90                   	nop
   133a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000133b0 <shl_rm_b>:
   133b0:	55                   	push   %ebp
   133b1:	57                   	push   %edi
   133b2:	56                   	push   %esi
   133b3:	53                   	push   %ebx
   133b4:	e8 07 f9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   133b9:	81 c3 47 7c 01 00    	add    $0x17c47,%ebx
   133bf:	83 ec 14             	sub    $0x14,%esp
   133c2:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   133c8:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   133ce:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   133d5:	55                   	push   %ebp
   133d6:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   133da:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   133e1:	83 c0 01             	add    $0x1,%eax
   133e4:	50                   	push   %eax
   133e5:	e8 76 12 ff ff       	call   4660 <modrm_rm>
   133ea:	8d 70 01             	lea    0x1(%eax),%esi
   133ed:	83 c4 10             	add    $0x10,%esp
   133f0:	89 f0                	mov    %esi,%eax
   133f2:	0f b6 c8             	movzbl %al,%ecx
   133f5:	8b 47 10             	mov    0x10(%edi),%eax
   133f8:	83 f8 08             	cmp    $0x8,%eax
   133fb:	74 33                	je     13430 <shl_rm_b+0x80>
   133fd:	83 f8 10             	cmp    $0x10,%eax
   13400:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   13406:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1340c:	0f 44 c2             	cmove  %edx,%eax
   1340f:	55                   	push   %ebp
   13410:	51                   	push   %ecx
   13411:	50                   	push   %eax
   13412:	8d 83 a8 0f ff ff    	lea    -0xf058(%ebx),%eax
   13418:	50                   	push   %eax
   13419:	e8 f2 0a ff ff       	call   3f10 <print_asm_1>
   1341e:	e8 8d fc ff ff       	call   130b0 <instr_execute_1op>
   13423:	83 c4 1c             	add    $0x1c,%esp
   13426:	89 f0                	mov    %esi,%eax
   13428:	5b                   	pop    %ebx
   13429:	5e                   	pop    %esi
   1342a:	5f                   	pop    %edi
   1342b:	5d                   	pop    %ebp
   1342c:	c3                   	ret    
   1342d:	8d 76 00             	lea    0x0(%esi),%esi
   13430:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   13436:	eb d7                	jmp    1340f <shl_rm_b+0x5f>
   13438:	90                   	nop
   13439:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013440 <shl_rm_v>:
   13440:	55                   	push   %ebp
   13441:	57                   	push   %edi
   13442:	56                   	push   %esi
   13443:	53                   	push   %ebx
   13444:	e8 77 f8 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13449:	81 c3 b7 7b 01 00    	add    $0x17bb7,%ebx
   1344f:	83 ec 14             	sub    $0x14,%esp
   13452:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   13458:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   1345e:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   13464:	0f b6 00             	movzbl (%eax),%eax
   13467:	89 45 10             	mov    %eax,0x10(%ebp)
   1346a:	89 47 10             	mov    %eax,0x10(%edi)
   1346d:	55                   	push   %ebp
   1346e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   13472:	83 c0 01             	add    $0x1,%eax
   13475:	50                   	push   %eax
   13476:	e8 e5 11 ff ff       	call   4660 <modrm_rm>
   1347b:	8d 70 01             	lea    0x1(%eax),%esi
   1347e:	83 c4 10             	add    $0x10,%esp
   13481:	89 f0                	mov    %esi,%eax
   13483:	0f b6 c8             	movzbl %al,%ecx
   13486:	8b 47 10             	mov    0x10(%edi),%eax
   13489:	83 f8 08             	cmp    $0x8,%eax
   1348c:	74 32                	je     134c0 <shl_rm_v+0x80>
   1348e:	83 f8 10             	cmp    $0x10,%eax
   13491:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   13497:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1349d:	0f 44 c2             	cmove  %edx,%eax
   134a0:	55                   	push   %ebp
   134a1:	51                   	push   %ecx
   134a2:	50                   	push   %eax
   134a3:	8d 83 a8 0f ff ff    	lea    -0xf058(%ebx),%eax
   134a9:	50                   	push   %eax
   134aa:	e8 61 0a ff ff       	call   3f10 <print_asm_1>
   134af:	e8 fc fb ff ff       	call   130b0 <instr_execute_1op>
   134b4:	83 c4 1c             	add    $0x1c,%esp
   134b7:	89 f0                	mov    %esi,%eax
   134b9:	5b                   	pop    %ebx
   134ba:	5e                   	pop    %esi
   134bb:	5f                   	pop    %edi
   134bc:	5d                   	pop    %ebp
   134bd:	c3                   	ret    
   134be:	66 90                	xchg   %ax,%ax
   134c0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   134c6:	eb d8                	jmp    134a0 <shl_rm_v+0x60>
   134c8:	66 90                	xchg   %ax,%ax
   134ca:	66 90                	xchg   %ax,%ax
   134cc:	66 90                	xchg   %ax,%ax
   134ce:	66 90                	xchg   %ax,%ax

000134d0 <cli>:
   134d0:	e8 15 fe fe ff       	call   32ea <__x86.get_pc_thunk.ax>
   134d5:	05 2b 7b 01 00       	add    $0x17b2b,%eax
   134da:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   134e0:	80 60 25 fd          	andb   $0xfd,0x25(%eax)
   134e4:	b8 01 00 00 00       	mov    $0x1,%eax
   134e9:	c3                   	ret    
   134ea:	66 90                	xchg   %ax,%ax
   134ec:	66 90                	xchg   %ax,%ax
   134ee:	66 90                	xchg   %ax,%ax

000134f0 <div_rm2a_b>:
   134f0:	55                   	push   %ebp
   134f1:	57                   	push   %edi
   134f2:	56                   	push   %esi
   134f3:	53                   	push   %ebx
   134f4:	e8 c7 f7 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   134f9:	81 c3 07 7b 01 00    	add    $0x17b07,%ebx
   134ff:	81 ec b8 00 00 00    	sub    $0xb8,%esp
   13505:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
   13509:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   13510:	00 
   13511:	c7 44 24 2c 10 00 00 	movl   $0x10,0x2c(%esp)
   13518:	00 
   13519:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   13520:	00 
   13521:	57                   	push   %edi
   13522:	e8 79 11 ff ff       	call   46a0 <operand_read>
   13527:	c7 44 24 54 08 00 00 	movl   $0x8,0x54(%esp)
   1352e:	00 
   1352f:	58                   	pop    %eax
   13530:	5a                   	pop    %edx
   13531:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   13535:	56                   	push   %esi
   13536:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   1353d:	83 c0 01             	add    $0x1,%eax
   13540:	50                   	push   %eax
   13541:	e8 1a 11 ff ff       	call   4660 <modrm_rm>
   13546:	83 c0 01             	add    $0x1,%eax
   13549:	89 34 24             	mov    %esi,(%esp)
   1354c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   13550:	e8 4b 11 ff ff       	call   46a0 <operand_read>
   13555:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   13559:	31 d2                	xor    %edx,%edx
   1355b:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
   13562:	52                   	push   %edx
   13563:	31 d2                	xor    %edx,%edx
   13565:	50                   	push   %eax
   13566:	8b 44 24 58          	mov    0x58(%esp),%eax
   1356a:	52                   	push   %edx
   1356b:	50                   	push   %eax
   1356c:	e8 9f 7f ff ff       	call   b510 <alu_div>
   13571:	83 c4 20             	add    $0x20,%esp
   13574:	89 c5                	mov    %eax,%ebp
   13576:	31 d2                	xor    %edx,%edx
   13578:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1357c:	52                   	push   %edx
   1357d:	31 d2                	xor    %edx,%edx
   1357f:	50                   	push   %eax
   13580:	8b 44 24 48          	mov    0x48(%esp),%eax
   13584:	52                   	push   %edx
   13585:	50                   	push   %eax
   13586:	e8 e5 7f ff ff       	call   b570 <alu_mod>
   1358b:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   13592:	01 00 00 00 
   13596:	89 44 24 74          	mov    %eax,0x74(%esp)
   1359a:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   135a1:	00 
   135a2:	c7 84 24 9c 00 00 00 	movl   $0x8,0x9c(%esp)
   135a9:	08 00 00 00 
   135ad:	c7 44 24 78 08 00 00 	movl   $0x8,0x78(%esp)
   135b4:	00 
   135b5:	c7 44 24 6c 04 00 00 	movl   $0x4,0x6c(%esp)
   135bc:	00 
   135bd:	c7 84 24 90 00 00 00 	movl   $0x0,0x90(%esp)
   135c4:	00 00 00 00 
   135c8:	89 ac 24 98 00 00 00 	mov    %ebp,0x98(%esp)
   135cf:	59                   	pop    %ecx
   135d0:	8d 44 24 64          	lea    0x64(%esp),%eax
   135d4:	50                   	push   %eax
   135d5:	e8 56 12 ff ff       	call   4830 <operand_write>
   135da:	5d                   	pop    %ebp
   135db:	8d 84 24 88 00 00 00 	lea    0x88(%esp),%eax
   135e2:	50                   	push   %eax
   135e3:	e8 48 12 ff ff       	call   4830 <operand_write>
   135e8:	89 3c 24             	mov    %edi,(%esp)
   135eb:	56                   	push   %esi
   135ec:	8b 7c 24 20          	mov    0x20(%esp),%edi
   135f0:	89 f8                	mov    %edi,%eax
   135f2:	0f b6 c0             	movzbl %al,%eax
   135f5:	50                   	push   %eax
   135f6:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   135fc:	50                   	push   %eax
   135fd:	8d 83 be 10 ff ff    	lea    -0xef42(%ebx),%eax
   13603:	50                   	push   %eax
   13604:	e8 f7 09 ff ff       	call   4000 <print_asm_2>
   13609:	81 c4 cc 00 00 00    	add    $0xcc,%esp
   1360f:	89 f8                	mov    %edi,%eax
   13611:	5b                   	pop    %ebx
   13612:	5e                   	pop    %esi
   13613:	5f                   	pop    %edi
   13614:	5d                   	pop    %ebp
   13615:	c3                   	ret    
   13616:	8d 76 00             	lea    0x0(%esi),%esi
   13619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00013620 <div_rm2a_v>:
   13620:	55                   	push   %ebp
   13621:	57                   	push   %edi
   13622:	56                   	push   %esi
   13623:	53                   	push   %ebx
   13624:	e8 97 f6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13629:	81 c3 d7 79 01 00    	add    $0x179d7,%ebx
   1362f:	81 ec a8 00 00 00    	sub    $0xa8,%esp
   13635:	8d b3 77 13 00 00    	lea    0x1377(%ebx),%esi
   1363b:	8d 6c 24 30          	lea    0x30(%esp),%ebp
   1363f:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   13646:	00 
   13647:	c7 44 24 54 01 00 00 	movl   $0x1,0x54(%esp)
   1364e:	00 
   1364f:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   13656:	00 
   13657:	c7 44 24 58 02 00 00 	movl   $0x2,0x58(%esp)
   1365e:	00 
   1365f:	0f b6 06             	movzbl (%esi),%eax
   13662:	89 44 24 40          	mov    %eax,0x40(%esp)
   13666:	89 44 24 64          	mov    %eax,0x64(%esp)
   1366a:	55                   	push   %ebp
   1366b:	e8 30 10 ff ff       	call   46a0 <operand_read>
   13670:	58                   	pop    %eax
   13671:	8d 44 24 54          	lea    0x54(%esp),%eax
   13675:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   13679:	50                   	push   %eax
   1367a:	e8 21 10 ff ff       	call   46a0 <operand_read>
   1367f:	0f b6 06             	movzbl (%esi),%eax
   13682:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%esp)
   13689:	58                   	pop    %eax
   1368a:	5a                   	pop    %edx
   1368b:	8d 44 24 74          	lea    0x74(%esp),%eax
   1368f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   13693:	89 c7                	mov    %eax,%edi
   13695:	50                   	push   %eax
   13696:	8b 84 24 bc 00 00 00 	mov    0xbc(%esp),%eax
   1369d:	83 c0 01             	add    $0x1,%eax
   136a0:	50                   	push   %eax
   136a1:	e8 ba 0f ff ff       	call   4660 <modrm_rm>
   136a6:	83 c0 01             	add    $0x1,%eax
   136a9:	89 3c 24             	mov    %edi,(%esp)
   136ac:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   136b0:	e8 eb 0f ff ff       	call   46a0 <operand_read>
   136b5:	0f b6 06             	movzbl (%esi),%eax
   136b8:	83 c4 10             	add    $0x10,%esp
   136bb:	3c 10                	cmp    $0x10,%al
   136bd:	0f 84 9d 00 00 00    	je     13760 <div_rm2a_v+0x140>
   136c3:	8b 74 24 30          	mov    0x30(%esp),%esi
   136c7:	8b 7c 24 54          	mov    0x54(%esp),%edi
   136cb:	83 ec 0c             	sub    $0xc,%esp
   136ce:	50                   	push   %eax
   136cf:	31 d2                	xor    %edx,%edx
   136d1:	57                   	push   %edi
   136d2:	56                   	push   %esi
   136d3:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   136da:	52                   	push   %edx
   136db:	50                   	push   %eax
   136dc:	e8 2f 7e ff ff       	call   b510 <alu_div>
   136e1:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   136e5:	83 c4 20             	add    $0x20,%esp
   136e8:	31 d2                	xor    %edx,%edx
   136ea:	57                   	push   %edi
   136eb:	56                   	push   %esi
   136ec:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   136f3:	52                   	push   %edx
   136f4:	50                   	push   %eax
   136f5:	e8 76 7e ff ff       	call   b570 <alu_mod>
   136fa:	89 44 24 28          	mov    %eax,0x28(%esp)
   136fe:	5a                   	pop    %edx
   136ff:	59                   	pop    %ecx
   13700:	55                   	push   %ebp
   13701:	ff 74 24 1c          	pushl  0x1c(%esp)
   13705:	ff 74 24 24          	pushl  0x24(%esp)
   13709:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
   1370e:	52                   	push   %edx
   1370f:	8d 93 f9 00 ff ff    	lea    -0xff07(%ebx),%edx
   13715:	52                   	push   %edx
   13716:	8d 93 be 10 ff ff    	lea    -0xef42(%ebx),%edx
   1371c:	52                   	push   %edx
   1371d:	e8 fe 09 ff ff       	call   4120 <print_asm_3>
   13722:	83 c4 20             	add    $0x20,%esp
   13725:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   13729:	8b 44 24 18          	mov    0x18(%esp),%eax
   1372d:	89 4c 24 30          	mov    %ecx,0x30(%esp)
   13731:	89 44 24 54          	mov    %eax,0x54(%esp)
   13735:	83 ec 0c             	sub    $0xc,%esp
   13738:	55                   	push   %ebp
   13739:	e8 f2 10 ff ff       	call   4830 <operand_write>
   1373e:	58                   	pop    %eax
   1373f:	ff 74 24 1c          	pushl  0x1c(%esp)
   13743:	e8 e8 10 ff ff       	call   4830 <operand_write>
   13748:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1374c:	81 c4 ac 00 00 00    	add    $0xac,%esp
   13752:	5b                   	pop    %ebx
   13753:	5e                   	pop    %esi
   13754:	5f                   	pop    %edi
   13755:	5d                   	pop    %ebp
   13756:	c3                   	ret    
   13757:	89 f6                	mov    %esi,%esi
   13759:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   13760:	83 ec 0c             	sub    $0xc,%esp
   13763:	31 d2                	xor    %edx,%edx
   13765:	6a 10                	push   $0x10
   13767:	8b 44 24 64          	mov    0x64(%esp),%eax
   1376b:	c1 e0 10             	shl    $0x10,%eax
   1376e:	0b 44 24 40          	or     0x40(%esp),%eax
   13772:	52                   	push   %edx
   13773:	31 d2                	xor    %edx,%edx
   13775:	50                   	push   %eax
   13776:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   1377d:	52                   	push   %edx
   1377e:	50                   	push   %eax
   1377f:	e8 8c 7d ff ff       	call   b510 <alu_div>
   13784:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   13788:	83 c4 20             	add    $0x20,%esp
   1378b:	8b 44 24 54          	mov    0x54(%esp),%eax
   1378f:	31 d2                	xor    %edx,%edx
   13791:	c1 e0 10             	shl    $0x10,%eax
   13794:	0b 44 24 30          	or     0x30(%esp),%eax
   13798:	52                   	push   %edx
   13799:	31 d2                	xor    %edx,%edx
   1379b:	50                   	push   %eax
   1379c:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   137a3:	52                   	push   %edx
   137a4:	50                   	push   %eax
   137a5:	e8 c6 7d ff ff       	call   b570 <alu_mod>
   137aa:	89 44 24 28          	mov    %eax,0x28(%esp)
   137ae:	5e                   	pop    %esi
   137af:	5f                   	pop    %edi
   137b0:	55                   	push   %ebp
   137b1:	ff 74 24 1c          	pushl  0x1c(%esp)
   137b5:	ff 74 24 24          	pushl  0x24(%esp)
   137b9:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
   137be:	52                   	push   %edx
   137bf:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   137c5:	52                   	push   %edx
   137c6:	8d 93 be 10 ff ff    	lea    -0xef42(%ebx),%edx
   137cc:	52                   	push   %edx
   137cd:	e8 4e 09 ff ff       	call   4120 <print_asm_3>
   137d2:	83 c4 20             	add    $0x20,%esp
   137d5:	8b 44 24 18          	mov    0x18(%esp),%eax
   137d9:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   137dd:	e9 4b ff ff ff       	jmp    1372d <div_rm2a_v+0x10d>
   137e2:	66 90                	xchg   %ax,%ax
   137e4:	66 90                	xchg   %ax,%ax
   137e6:	66 90                	xchg   %ax,%ax
   137e8:	66 90                	xchg   %ax,%ax
   137ea:	66 90                	xchg   %ax,%ax
   137ec:	66 90                	xchg   %ax,%ax
   137ee:	66 90                	xchg   %ax,%ax

000137f0 <in_dx2al>:
   137f0:	53                   	push   %ebx
   137f1:	e8 ca f4 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   137f6:	81 c3 0a 78 01 00    	add    $0x1780a,%ebx
   137fc:	83 ec 64             	sub    $0x64,%esp
   137ff:	8d 44 24 38          	lea    0x38(%esp),%eax
   13803:	c7 44 24 48 10 00 00 	movl   $0x10,0x48(%esp)
   1380a:	00 
   1380b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   13812:	00 
   13813:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   1381a:	00 
   1381b:	50                   	push   %eax
   1381c:	e8 7f 0e ff ff       	call   46a0 <operand_read>
   13821:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
   13828:	00 
   13829:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
   13830:	00 
   13831:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   13838:	00 
   13839:	58                   	pop    %eax
   1383a:	5a                   	pop    %edx
   1383b:	6a 01                	push   $0x1
   1383d:	0f b7 44 24 44       	movzwl 0x44(%esp),%eax
   13842:	50                   	push   %eax
   13843:	e8 a8 f6 fe ff       	call   2ef0 <pio_read>
   13848:	89 44 24 24          	mov    %eax,0x24(%esp)
   1384c:	59                   	pop    %ecx
   1384d:	8d 44 24 14          	lea    0x14(%esp),%eax
   13851:	50                   	push   %eax
   13852:	e8 d9 0f ff ff       	call   4830 <operand_write>
   13857:	83 c4 68             	add    $0x68,%esp
   1385a:	b8 01 00 00 00       	mov    $0x1,%eax
   1385f:	5b                   	pop    %ebx
   13860:	c3                   	ret    
   13861:	eb 0d                	jmp    13870 <in_dx2eax_v>
   13863:	90                   	nop
   13864:	90                   	nop
   13865:	90                   	nop
   13866:	90                   	nop
   13867:	90                   	nop
   13868:	90                   	nop
   13869:	90                   	nop
   1386a:	90                   	nop
   1386b:	90                   	nop
   1386c:	90                   	nop
   1386d:	90                   	nop
   1386e:	90                   	nop
   1386f:	90                   	nop

00013870 <in_dx2eax_v>:
   13870:	53                   	push   %ebx
   13871:	e8 4a f4 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13876:	81 c3 8a 77 01 00    	add    $0x1778a,%ebx
   1387c:	83 ec 64             	sub    $0x64,%esp
   1387f:	8d 44 24 14          	lea    0x14(%esp),%eax
   13883:	c7 44 24 24 10 00 00 	movl   $0x10,0x24(%esp)
   1388a:	00 
   1388b:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   13892:	00 
   13893:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1389a:	00 
   1389b:	50                   	push   %eax
   1389c:	e8 ff 0d ff ff       	call   46a0 <operand_read>
   138a1:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   138a7:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   138ae:	00 
   138af:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
   138b6:	00 
   138b7:	0f b6 10             	movzbl (%eax),%edx
   138ba:	89 d0                	mov    %edx,%eax
   138bc:	89 54 24 4c          	mov    %edx,0x4c(%esp)
   138c0:	c0 e8 03             	shr    $0x3,%al
   138c3:	5a                   	pop    %edx
   138c4:	0f b6 c0             	movzbl %al,%eax
   138c7:	59                   	pop    %ecx
   138c8:	50                   	push   %eax
   138c9:	0f b7 44 24 20       	movzwl 0x20(%esp),%eax
   138ce:	50                   	push   %eax
   138cf:	e8 1c f6 fe ff       	call   2ef0 <pio_read>
   138d4:	89 44 24 48          	mov    %eax,0x48(%esp)
   138d8:	58                   	pop    %eax
   138d9:	8d 44 24 38          	lea    0x38(%esp),%eax
   138dd:	50                   	push   %eax
   138de:	e8 4d 0f ff ff       	call   4830 <operand_write>
   138e3:	83 c4 68             	add    $0x68,%esp
   138e6:	b8 01 00 00 00       	mov    $0x1,%eax
   138eb:	5b                   	pop    %ebx
   138ec:	c3                   	ret    
   138ed:	66 90                	xchg   %ax,%ax
   138ef:	90                   	nop

000138f0 <nemu_trap>:
   138f0:	55                   	push   %ebp
   138f1:	57                   	push   %edi
   138f2:	56                   	push   %esi
   138f3:	53                   	push   %ebx
   138f4:	e8 c7 f3 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   138f9:	81 c3 07 77 01 00    	add    $0x17707,%ebx
   138ff:	83 ec 0c             	sub    $0xc,%esp
   13902:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   13908:	8b 06                	mov    (%esi),%eax
   1390a:	83 f8 04             	cmp    $0x4,%eax
   1390d:	74 41                	je     13950 <nemu_trap+0x60>
   1390f:	85 c0                	test   %eax,%eax
   13911:	8d 93 bc 0f ff ff    	lea    -0xf044(%ebx),%edx
   13917:	8d 83 ac 0f ff ff    	lea    -0xf054(%ebx),%eax
   1391d:	0f 45 c2             	cmovne %edx,%eax
   13920:	83 ec 04             	sub    $0x4,%esp
   13923:	ff 74 24 24          	pushl  0x24(%esp)
   13927:	50                   	push   %eax
   13928:	8d 83 ec 0f ff ff    	lea    -0xf014(%ebx),%eax
   1392e:	50                   	push   %eax
   1392f:	e8 8c ee fe ff       	call   27c0 <printf@plt>
   13934:	8d 83 48 1e 05 00    	lea    0x51e48(%ebx),%eax
   1393a:	83 c4 10             	add    $0x10,%esp
   1393d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   13943:	83 c4 0c             	add    $0xc,%esp
   13946:	b8 01 00 00 00       	mov    $0x1,%eax
   1394b:	5b                   	pop    %ebx
   1394c:	5e                   	pop    %esi
   1394d:	5f                   	pop    %edi
   1394e:	5d                   	pop    %ebp
   1394f:	c3                   	ret    
   13950:	8d 83 cb 0f ff ff    	lea    -0xf035(%ebx),%eax
   13956:	83 ec 0c             	sub    $0xc,%esp
   13959:	31 ed                	xor    %ebp,%ebp
   1395b:	50                   	push   %eax
   1395c:	e8 5f ee fe ff       	call   27c0 <printf@plt>
   13961:	8b 46 08             	mov    0x8(%esi),%eax
   13964:	83 c4 10             	add    $0x10,%esp
   13967:	8b bb d8 ff ff ff    	mov    -0x28(%ebx),%edi
   1396d:	85 c0                	test   %eax,%eax
   1396f:	74 d2                	je     13943 <nemu_trap+0x53>
   13971:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13978:	8b 46 04             	mov    0x4(%esi),%eax
   1397b:	83 ec 04             	sub    $0x4,%esp
   1397e:	6a 01                	push   $0x1
   13980:	6a 03                	push   $0x3
   13982:	01 e8                	add    %ebp,%eax
   13984:	83 c5 01             	add    $0x1,%ebp
   13987:	50                   	push   %eax
   13988:	e8 23 68 00 00       	call   1a1b0 <vaddr_read>
   1398d:	5a                   	pop    %edx
   1398e:	59                   	pop    %ecx
   1398f:	0f be c0             	movsbl %al,%eax
   13992:	ff 37                	pushl  (%edi)
   13994:	50                   	push   %eax
   13995:	e8 76 ee fe ff       	call   2810 <_IO_putc@plt>
   1399a:	83 c4 10             	add    $0x10,%esp
   1399d:	39 6e 08             	cmp    %ebp,0x8(%esi)
   139a0:	77 d6                	ja     13978 <nemu_trap+0x88>
   139a2:	83 c4 0c             	add    $0xc,%esp
   139a5:	b8 01 00 00 00       	mov    $0x1,%eax
   139aa:	5b                   	pop    %ebx
   139ab:	5e                   	pop    %esi
   139ac:	5f                   	pop    %edi
   139ad:	5d                   	pop    %ebp
   139ae:	c3                   	ret    
   139af:	90                   	nop

000139b0 <break_point>:
   139b0:	53                   	push   %ebx
   139b1:	e8 0a f3 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   139b6:	81 c3 4a 76 01 00    	add    $0x1764a,%ebx
   139bc:	83 ec 10             	sub    $0x10,%esp
   139bf:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   139c5:	ff 70 20             	pushl  0x20(%eax)
   139c8:	8d 83 10 10 ff ff    	lea    -0xeff0(%ebx),%eax
   139ce:	50                   	push   %eax
   139cf:	e8 ec ed fe ff       	call   27c0 <printf@plt>
   139d4:	8d 83 48 1e 05 00    	lea    0x51e48(%ebx),%eax
   139da:	c7 00 03 00 00 00    	movl   $0x3,(%eax)
   139e0:	83 c4 18             	add    $0x18,%esp
   139e3:	b8 01 00 00 00       	mov    $0x1,%eax
   139e8:	5b                   	pop    %ebx
   139e9:	c3                   	ret    
   139ea:	66 90                	xchg   %ax,%ax
   139ec:	66 90                	xchg   %ax,%ax
   139ee:	66 90                	xchg   %ax,%ax

000139f0 <setne_b>:
   139f0:	57                   	push   %edi
   139f1:	56                   	push   %esi
   139f2:	53                   	push   %ebx
   139f3:	e8 c8 f2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   139f8:	81 c3 08 76 01 00    	add    $0x17608,%ebx
   139fe:	83 ec 08             	sub    $0x8,%esp
   13a01:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13a07:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13a0d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13a14:	56                   	push   %esi
   13a15:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13a19:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13a20:	83 c0 01             	add    $0x1,%eax
   13a23:	50                   	push   %eax
   13a24:	e8 37 0c ff ff       	call   4660 <modrm_rm>
   13a29:	8d 78 01             	lea    0x1(%eax),%edi
   13a2c:	56                   	push   %esi
   13a2d:	89 f8                	mov    %edi,%eax
   13a2f:	0f b6 c0             	movzbl %al,%eax
   13a32:	50                   	push   %eax
   13a33:	8d 83 61 13 ff ff    	lea    -0xec9f(%ebx),%eax
   13a39:	50                   	push   %eax
   13a3a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13a40:	50                   	push   %eax
   13a41:	e8 ca 04 ff ff       	call   3f10 <print_asm_1>
   13a46:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13a4c:	83 c4 20             	add    $0x20,%esp
   13a4f:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   13a53:	74 1b                	je     13a70 <setne_b+0x80>
   13a55:	83 ec 0c             	sub    $0xc,%esp
   13a58:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13a5f:	56                   	push   %esi
   13a60:	e8 cb 0d ff ff       	call   4830 <operand_write>
   13a65:	83 c4 10             	add    $0x10,%esp
   13a68:	89 f8                	mov    %edi,%eax
   13a6a:	5b                   	pop    %ebx
   13a6b:	5e                   	pop    %esi
   13a6c:	5f                   	pop    %edi
   13a6d:	c3                   	ret    
   13a6e:	66 90                	xchg   %ax,%ax
   13a70:	83 ec 0c             	sub    $0xc,%esp
   13a73:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13a7a:	56                   	push   %esi
   13a7b:	e8 b0 0d ff ff       	call   4830 <operand_write>
   13a80:	83 c4 10             	add    $0x10,%esp
   13a83:	89 f8                	mov    %edi,%eax
   13a85:	5b                   	pop    %ebx
   13a86:	5e                   	pop    %esi
   13a87:	5f                   	pop    %edi
   13a88:	c3                   	ret    
   13a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013a90 <seta_b>:
   13a90:	57                   	push   %edi
   13a91:	56                   	push   %esi
   13a92:	53                   	push   %ebx
   13a93:	e8 28 f2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13a98:	81 c3 68 75 01 00    	add    $0x17568,%ebx
   13a9e:	83 ec 08             	sub    $0x8,%esp
   13aa1:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13aa7:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13aad:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13ab4:	56                   	push   %esi
   13ab5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13ab9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13ac0:	83 c0 01             	add    $0x1,%eax
   13ac3:	50                   	push   %eax
   13ac4:	e8 97 0b ff ff       	call   4660 <modrm_rm>
   13ac9:	8d 78 01             	lea    0x1(%eax),%edi
   13acc:	56                   	push   %esi
   13acd:	89 f8                	mov    %edi,%eax
   13acf:	0f b6 c0             	movzbl %al,%eax
   13ad2:	50                   	push   %eax
   13ad3:	8d 83 52 0c ff ff    	lea    -0xf3ae(%ebx),%eax
   13ad9:	50                   	push   %eax
   13ada:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13ae0:	50                   	push   %eax
   13ae1:	e8 2a 04 ff ff       	call   3f10 <print_asm_1>
   13ae6:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13aec:	83 c4 20             	add    $0x20,%esp
   13aef:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   13af3:	74 1b                	je     13b10 <seta_b+0x80>
   13af5:	83 ec 0c             	sub    $0xc,%esp
   13af8:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13aff:	56                   	push   %esi
   13b00:	e8 2b 0d ff ff       	call   4830 <operand_write>
   13b05:	83 c4 10             	add    $0x10,%esp
   13b08:	89 f8                	mov    %edi,%eax
   13b0a:	5b                   	pop    %ebx
   13b0b:	5e                   	pop    %esi
   13b0c:	5f                   	pop    %edi
   13b0d:	c3                   	ret    
   13b0e:	66 90                	xchg   %ax,%ax
   13b10:	83 ec 0c             	sub    $0xc,%esp
   13b13:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13b1a:	56                   	push   %esi
   13b1b:	e8 10 0d ff ff       	call   4830 <operand_write>
   13b20:	83 c4 10             	add    $0x10,%esp
   13b23:	89 f8                	mov    %edi,%eax
   13b25:	5b                   	pop    %ebx
   13b26:	5e                   	pop    %esi
   13b27:	5f                   	pop    %edi
   13b28:	c3                   	ret    
   13b29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013b30 <setae_b>:
   13b30:	57                   	push   %edi
   13b31:	56                   	push   %esi
   13b32:	53                   	push   %ebx
   13b33:	e8 88 f1 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13b38:	81 c3 c8 74 01 00    	add    $0x174c8,%ebx
   13b3e:	83 ec 08             	sub    $0x8,%esp
   13b41:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13b47:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13b4d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13b54:	56                   	push   %esi
   13b55:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13b59:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13b60:	83 c0 01             	add    $0x1,%eax
   13b63:	50                   	push   %eax
   13b64:	e8 f7 0a ff ff       	call   4660 <modrm_rm>
   13b69:	8d 78 01             	lea    0x1(%eax),%edi
   13b6c:	56                   	push   %esi
   13b6d:	89 f8                	mov    %edi,%eax
   13b6f:	0f b6 c0             	movzbl %al,%eax
   13b72:	50                   	push   %eax
   13b73:	8d 83 ce 0a ff ff    	lea    -0xf532(%ebx),%eax
   13b79:	50                   	push   %eax
   13b7a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13b80:	50                   	push   %eax
   13b81:	e8 8a 03 ff ff       	call   3f10 <print_asm_1>
   13b86:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13b8c:	83 c4 20             	add    $0x20,%esp
   13b8f:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   13b93:	74 1b                	je     13bb0 <setae_b+0x80>
   13b95:	83 ec 0c             	sub    $0xc,%esp
   13b98:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13b9f:	56                   	push   %esi
   13ba0:	e8 8b 0c ff ff       	call   4830 <operand_write>
   13ba5:	83 c4 10             	add    $0x10,%esp
   13ba8:	89 f8                	mov    %edi,%eax
   13baa:	5b                   	pop    %ebx
   13bab:	5e                   	pop    %esi
   13bac:	5f                   	pop    %edi
   13bad:	c3                   	ret    
   13bae:	66 90                	xchg   %ax,%ax
   13bb0:	83 ec 0c             	sub    $0xc,%esp
   13bb3:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13bba:	56                   	push   %esi
   13bbb:	e8 70 0c ff ff       	call   4830 <operand_write>
   13bc0:	83 c4 10             	add    $0x10,%esp
   13bc3:	89 f8                	mov    %edi,%eax
   13bc5:	5b                   	pop    %ebx
   13bc6:	5e                   	pop    %esi
   13bc7:	5f                   	pop    %edi
   13bc8:	c3                   	ret    
   13bc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013bd0 <setbe_b>:
   13bd0:	57                   	push   %edi
   13bd1:	56                   	push   %esi
   13bd2:	53                   	push   %ebx
   13bd3:	e8 e8 f0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13bd8:	81 c3 28 74 01 00    	add    $0x17428,%ebx
   13bde:	83 ec 08             	sub    $0x8,%esp
   13be1:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13be7:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13bed:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13bf4:	56                   	push   %esi
   13bf5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13bf9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13c00:	83 c0 01             	add    $0x1,%eax
   13c03:	50                   	push   %eax
   13c04:	e8 57 0a ff ff       	call   4660 <modrm_rm>
   13c09:	8d 78 01             	lea    0x1(%eax),%edi
   13c0c:	56                   	push   %esi
   13c0d:	89 f8                	mov    %edi,%eax
   13c0f:	0f b6 c0             	movzbl %al,%eax
   13c12:	50                   	push   %eax
   13c13:	8d 83 28 0b ff ff    	lea    -0xf4d8(%ebx),%eax
   13c19:	50                   	push   %eax
   13c1a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13c20:	50                   	push   %eax
   13c21:	e8 ea 02 ff ff       	call   3f10 <print_asm_1>
   13c26:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13c2c:	83 c4 20             	add    $0x20,%esp
   13c2f:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   13c33:	75 1b                	jne    13c50 <setbe_b+0x80>
   13c35:	83 ec 0c             	sub    $0xc,%esp
   13c38:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13c3f:	56                   	push   %esi
   13c40:	e8 eb 0b ff ff       	call   4830 <operand_write>
   13c45:	83 c4 10             	add    $0x10,%esp
   13c48:	89 f8                	mov    %edi,%eax
   13c4a:	5b                   	pop    %ebx
   13c4b:	5e                   	pop    %esi
   13c4c:	5f                   	pop    %edi
   13c4d:	c3                   	ret    
   13c4e:	66 90                	xchg   %ax,%ax
   13c50:	83 ec 0c             	sub    $0xc,%esp
   13c53:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13c5a:	56                   	push   %esi
   13c5b:	e8 d0 0b ff ff       	call   4830 <operand_write>
   13c60:	83 c4 10             	add    $0x10,%esp
   13c63:	89 f8                	mov    %edi,%eax
   13c65:	5b                   	pop    %ebx
   13c66:	5e                   	pop    %esi
   13c67:	5f                   	pop    %edi
   13c68:	c3                   	ret    
   13c69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013c70 <setc_b>:
   13c70:	57                   	push   %edi
   13c71:	56                   	push   %esi
   13c72:	53                   	push   %ebx
   13c73:	e8 48 f0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13c78:	81 c3 88 73 01 00    	add    $0x17388,%ebx
   13c7e:	83 ec 08             	sub    $0x8,%esp
   13c81:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13c87:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13c8d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13c94:	56                   	push   %esi
   13c95:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13c99:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13ca0:	83 c0 01             	add    $0x1,%eax
   13ca3:	50                   	push   %eax
   13ca4:	e8 b7 09 ff ff       	call   4660 <modrm_rm>
   13ca9:	8d 78 01             	lea    0x1(%eax),%edi
   13cac:	56                   	push   %esi
   13cad:	89 f8                	mov    %edi,%eax
   13caf:	0f b6 c0             	movzbl %al,%eax
   13cb2:	50                   	push   %eax
   13cb3:	8d 83 91 17 ff ff    	lea    -0xe86f(%ebx),%eax
   13cb9:	50                   	push   %eax
   13cba:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13cc0:	50                   	push   %eax
   13cc1:	e8 4a 02 ff ff       	call   3f10 <print_asm_1>
   13cc6:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13ccc:	83 c4 20             	add    $0x20,%esp
   13ccf:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   13cd3:	75 1b                	jne    13cf0 <setc_b+0x80>
   13cd5:	83 ec 0c             	sub    $0xc,%esp
   13cd8:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13cdf:	56                   	push   %esi
   13ce0:	e8 4b 0b ff ff       	call   4830 <operand_write>
   13ce5:	83 c4 10             	add    $0x10,%esp
   13ce8:	89 f8                	mov    %edi,%eax
   13cea:	5b                   	pop    %ebx
   13ceb:	5e                   	pop    %esi
   13cec:	5f                   	pop    %edi
   13ced:	c3                   	ret    
   13cee:	66 90                	xchg   %ax,%ax
   13cf0:	83 ec 0c             	sub    $0xc,%esp
   13cf3:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13cfa:	56                   	push   %esi
   13cfb:	e8 30 0b ff ff       	call   4830 <operand_write>
   13d00:	83 c4 10             	add    $0x10,%esp
   13d03:	89 f8                	mov    %edi,%eax
   13d05:	5b                   	pop    %ebx
   13d06:	5e                   	pop    %esi
   13d07:	5f                   	pop    %edi
   13d08:	c3                   	ret    
   13d09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013d10 <sete_b>:
   13d10:	57                   	push   %edi
   13d11:	56                   	push   %esi
   13d12:	53                   	push   %ebx
   13d13:	e8 a8 ef fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13d18:	81 c3 e8 72 01 00    	add    $0x172e8,%ebx
   13d1e:	83 ec 08             	sub    $0x8,%esp
   13d21:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13d27:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13d2d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13d34:	56                   	push   %esi
   13d35:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13d39:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13d40:	83 c0 01             	add    $0x1,%eax
   13d43:	50                   	push   %eax
   13d44:	e8 17 09 ff ff       	call   4660 <modrm_rm>
   13d49:	8d 78 01             	lea    0x1(%eax),%edi
   13d4c:	56                   	push   %esi
   13d4d:	89 f8                	mov    %edi,%eax
   13d4f:	0f b6 c0             	movzbl %al,%eax
   13d52:	50                   	push   %eax
   13d53:	8d 83 cf 0a ff ff    	lea    -0xf531(%ebx),%eax
   13d59:	50                   	push   %eax
   13d5a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13d60:	50                   	push   %eax
   13d61:	e8 aa 01 ff ff       	call   3f10 <print_asm_1>
   13d66:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13d6c:	83 c4 20             	add    $0x20,%esp
   13d6f:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   13d73:	75 1b                	jne    13d90 <sete_b+0x80>
   13d75:	83 ec 0c             	sub    $0xc,%esp
   13d78:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13d7f:	56                   	push   %esi
   13d80:	e8 ab 0a ff ff       	call   4830 <operand_write>
   13d85:	83 c4 10             	add    $0x10,%esp
   13d88:	89 f8                	mov    %edi,%eax
   13d8a:	5b                   	pop    %ebx
   13d8b:	5e                   	pop    %esi
   13d8c:	5f                   	pop    %edi
   13d8d:	c3                   	ret    
   13d8e:	66 90                	xchg   %ax,%ax
   13d90:	83 ec 0c             	sub    $0xc,%esp
   13d93:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13d9a:	56                   	push   %esi
   13d9b:	e8 90 0a ff ff       	call   4830 <operand_write>
   13da0:	83 c4 10             	add    $0x10,%esp
   13da3:	89 f8                	mov    %edi,%eax
   13da5:	5b                   	pop    %ebx
   13da6:	5e                   	pop    %esi
   13da7:	5f                   	pop    %edi
   13da8:	c3                   	ret    
   13da9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013db0 <setg_b>:
   13db0:	57                   	push   %edi
   13db1:	56                   	push   %esi
   13db2:	53                   	push   %ebx
   13db3:	e8 08 ef fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13db8:	81 c3 48 72 01 00    	add    $0x17248,%ebx
   13dbe:	83 ec 08             	sub    $0x8,%esp
   13dc1:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13dc7:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13dcd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13dd4:	56                   	push   %esi
   13dd5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13dd9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13de0:	83 c0 01             	add    $0x1,%eax
   13de3:	50                   	push   %eax
   13de4:	e8 77 08 ff ff       	call   4660 <modrm_rm>
   13de9:	8d 78 01             	lea    0x1(%eax),%edi
   13dec:	56                   	push   %esi
   13ded:	89 f8                	mov    %edi,%eax
   13def:	0f b6 c0             	movzbl %al,%eax
   13df2:	50                   	push   %eax
   13df3:	8d 83 44 12 ff ff    	lea    -0xedbc(%ebx),%eax
   13df9:	50                   	push   %eax
   13dfa:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13e00:	50                   	push   %eax
   13e01:	e8 0a 01 ff ff       	call   3f10 <print_asm_1>
   13e06:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13e0c:	83 c4 20             	add    $0x20,%esp
   13e0f:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   13e13:	f6 c2 40             	test   $0x40,%dl
   13e16:	75 11                	jne    13e29 <setg_b+0x79>
   13e18:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   13e1c:	c0 ea 07             	shr    $0x7,%dl
   13e1f:	c0 e8 03             	shr    $0x3,%al
   13e22:	83 e0 01             	and    $0x1,%eax
   13e25:	38 c2                	cmp    %al,%dl
   13e27:	74 1f                	je     13e48 <setg_b+0x98>
   13e29:	83 ec 0c             	sub    $0xc,%esp
   13e2c:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13e33:	56                   	push   %esi
   13e34:	e8 f7 09 ff ff       	call   4830 <operand_write>
   13e39:	83 c4 10             	add    $0x10,%esp
   13e3c:	89 f8                	mov    %edi,%eax
   13e3e:	5b                   	pop    %ebx
   13e3f:	5e                   	pop    %esi
   13e40:	5f                   	pop    %edi
   13e41:	c3                   	ret    
   13e42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   13e48:	83 ec 0c             	sub    $0xc,%esp
   13e4b:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13e52:	56                   	push   %esi
   13e53:	e8 d8 09 ff ff       	call   4830 <operand_write>
   13e58:	83 c4 10             	add    $0x10,%esp
   13e5b:	eb df                	jmp    13e3c <setg_b+0x8c>
   13e5d:	8d 76 00             	lea    0x0(%esi),%esi

00013e60 <setge_b>:
   13e60:	57                   	push   %edi
   13e61:	56                   	push   %esi
   13e62:	53                   	push   %ebx
   13e63:	e8 58 ee fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13e68:	81 c3 98 71 01 00    	add    $0x17198,%ebx
   13e6e:	83 ec 08             	sub    $0x8,%esp
   13e71:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13e77:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13e7d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13e84:	56                   	push   %esi
   13e85:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13e89:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13e90:	83 c0 01             	add    $0x1,%eax
   13e93:	50                   	push   %eax
   13e94:	e8 c7 07 ff ff       	call   4660 <modrm_rm>
   13e99:	8d 78 01             	lea    0x1(%eax),%edi
   13e9c:	56                   	push   %esi
   13e9d:	89 f8                	mov    %edi,%eax
   13e9f:	0f b6 c0             	movzbl %al,%eax
   13ea2:	50                   	push   %eax
   13ea3:	8d 83 43 0b ff ff    	lea    -0xf4bd(%ebx),%eax
   13ea9:	50                   	push   %eax
   13eaa:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13eb0:	50                   	push   %eax
   13eb1:	e8 5a 00 ff ff       	call   3f10 <print_asm_1>
   13eb6:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13ebc:	83 c4 20             	add    $0x20,%esp
   13ebf:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   13ec3:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   13ec7:	c0 e8 03             	shr    $0x3,%al
   13eca:	c0 ea 07             	shr    $0x7,%dl
   13ecd:	83 e0 01             	and    $0x1,%eax
   13ed0:	38 c2                	cmp    %al,%dl
   13ed2:	74 1c                	je     13ef0 <setge_b+0x90>
   13ed4:	83 ec 0c             	sub    $0xc,%esp
   13ed7:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13ede:	56                   	push   %esi
   13edf:	e8 4c 09 ff ff       	call   4830 <operand_write>
   13ee4:	83 c4 10             	add    $0x10,%esp
   13ee7:	89 f8                	mov    %edi,%eax
   13ee9:	5b                   	pop    %ebx
   13eea:	5e                   	pop    %esi
   13eeb:	5f                   	pop    %edi
   13eec:	c3                   	ret    
   13eed:	8d 76 00             	lea    0x0(%esi),%esi
   13ef0:	83 ec 0c             	sub    $0xc,%esp
   13ef3:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13efa:	56                   	push   %esi
   13efb:	e8 30 09 ff ff       	call   4830 <operand_write>
   13f00:	83 c4 10             	add    $0x10,%esp
   13f03:	89 f8                	mov    %edi,%eax
   13f05:	5b                   	pop    %ebx
   13f06:	5e                   	pop    %esi
   13f07:	5f                   	pop    %edi
   13f08:	c3                   	ret    
   13f09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013f10 <setl_b>:
   13f10:	57                   	push   %edi
   13f11:	56                   	push   %esi
   13f12:	53                   	push   %ebx
   13f13:	e8 a8 ed fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13f18:	81 c3 e8 70 01 00    	add    $0x170e8,%ebx
   13f1e:	83 ec 08             	sub    $0x8,%esp
   13f21:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13f27:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13f2d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13f34:	56                   	push   %esi
   13f35:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13f39:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13f40:	83 c0 01             	add    $0x1,%eax
   13f43:	50                   	push   %eax
   13f44:	e8 17 07 ff ff       	call   4660 <modrm_rm>
   13f49:	8d 78 01             	lea    0x1(%eax),%edi
   13f4c:	56                   	push   %esi
   13f4d:	89 f8                	mov    %edi,%eax
   13f4f:	0f b6 c0             	movzbl %al,%eax
   13f52:	50                   	push   %eax
   13f53:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   13f59:	50                   	push   %eax
   13f5a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   13f60:	50                   	push   %eax
   13f61:	e8 aa ff fe ff       	call   3f10 <print_asm_1>
   13f66:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   13f6c:	83 c4 20             	add    $0x20,%esp
   13f6f:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   13f73:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   13f77:	c0 e8 03             	shr    $0x3,%al
   13f7a:	c0 ea 07             	shr    $0x7,%dl
   13f7d:	83 e0 01             	and    $0x1,%eax
   13f80:	38 c2                	cmp    %al,%dl
   13f82:	74 1c                	je     13fa0 <setl_b+0x90>
   13f84:	83 ec 0c             	sub    $0xc,%esp
   13f87:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   13f8e:	56                   	push   %esi
   13f8f:	e8 9c 08 ff ff       	call   4830 <operand_write>
   13f94:	83 c4 10             	add    $0x10,%esp
   13f97:	89 f8                	mov    %edi,%eax
   13f99:	5b                   	pop    %ebx
   13f9a:	5e                   	pop    %esi
   13f9b:	5f                   	pop    %edi
   13f9c:	c3                   	ret    
   13f9d:	8d 76 00             	lea    0x0(%esi),%esi
   13fa0:	83 ec 0c             	sub    $0xc,%esp
   13fa3:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   13faa:	56                   	push   %esi
   13fab:	e8 80 08 ff ff       	call   4830 <operand_write>
   13fb0:	83 c4 10             	add    $0x10,%esp
   13fb3:	89 f8                	mov    %edi,%eax
   13fb5:	5b                   	pop    %ebx
   13fb6:	5e                   	pop    %esi
   13fb7:	5f                   	pop    %edi
   13fb8:	c3                   	ret    
   13fb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013fc0 <setle_b>:
   13fc0:	57                   	push   %edi
   13fc1:	56                   	push   %esi
   13fc2:	53                   	push   %ebx
   13fc3:	e8 f8 ec fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   13fc8:	81 c3 38 70 01 00    	add    $0x17038,%ebx
   13fce:	83 ec 08             	sub    $0x8,%esp
   13fd1:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   13fd7:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   13fdd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   13fe4:	56                   	push   %esi
   13fe5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   13fe9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13ff0:	83 c0 01             	add    $0x1,%eax
   13ff3:	50                   	push   %eax
   13ff4:	e8 67 06 ff ff       	call   4660 <modrm_rm>
   13ff9:	8d 78 01             	lea    0x1(%eax),%edi
   13ffc:	56                   	push   %esi
   13ffd:	89 f8                	mov    %edi,%eax
   13fff:	0f b6 c0             	movzbl %al,%eax
   14002:	50                   	push   %eax
   14003:	8d 83 9e 15 ff ff    	lea    -0xea62(%ebx),%eax
   14009:	50                   	push   %eax
   1400a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   14010:	50                   	push   %eax
   14011:	e8 fa fe fe ff       	call   3f10 <print_asm_1>
   14016:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   1401c:	83 c4 20             	add    $0x20,%esp
   1401f:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   14023:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   14027:	89 d1                	mov    %edx,%ecx
   14029:	c0 e8 03             	shr    $0x3,%al
   1402c:	c0 e9 07             	shr    $0x7,%cl
   1402f:	83 e0 01             	and    $0x1,%eax
   14032:	38 c1                	cmp    %al,%cl
   14034:	74 05                	je     1403b <setle_b+0x7b>
   14036:	83 e2 40             	and    $0x40,%edx
   14039:	75 1d                	jne    14058 <setle_b+0x98>
   1403b:	83 ec 0c             	sub    $0xc,%esp
   1403e:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   14045:	56                   	push   %esi
   14046:	e8 e5 07 ff ff       	call   4830 <operand_write>
   1404b:	83 c4 10             	add    $0x10,%esp
   1404e:	89 f8                	mov    %edi,%eax
   14050:	5b                   	pop    %ebx
   14051:	5e                   	pop    %esi
   14052:	5f                   	pop    %edi
   14053:	c3                   	ret    
   14054:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14058:	83 ec 0c             	sub    $0xc,%esp
   1405b:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   14062:	56                   	push   %esi
   14063:	e8 c8 07 ff ff       	call   4830 <operand_write>
   14068:	83 c4 10             	add    $0x10,%esp
   1406b:	89 f8                	mov    %edi,%eax
   1406d:	5b                   	pop    %ebx
   1406e:	5e                   	pop    %esi
   1406f:	5f                   	pop    %edi
   14070:	c3                   	ret    
   14071:	eb 0d                	jmp    14080 <setno_b>
   14073:	90                   	nop
   14074:	90                   	nop
   14075:	90                   	nop
   14076:	90                   	nop
   14077:	90                   	nop
   14078:	90                   	nop
   14079:	90                   	nop
   1407a:	90                   	nop
   1407b:	90                   	nop
   1407c:	90                   	nop
   1407d:	90                   	nop
   1407e:	90                   	nop
   1407f:	90                   	nop

00014080 <setno_b>:
   14080:	57                   	push   %edi
   14081:	56                   	push   %esi
   14082:	53                   	push   %ebx
   14083:	e8 38 ec fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14088:	81 c3 78 6f 01 00    	add    $0x16f78,%ebx
   1408e:	83 ec 08             	sub    $0x8,%esp
   14091:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   14097:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1409d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   140a4:	56                   	push   %esi
   140a5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   140a9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   140b0:	83 c0 01             	add    $0x1,%eax
   140b3:	50                   	push   %eax
   140b4:	e8 a7 05 ff ff       	call   4660 <modrm_rm>
   140b9:	8d 78 01             	lea    0x1(%eax),%edi
   140bc:	56                   	push   %esi
   140bd:	89 f8                	mov    %edi,%eax
   140bf:	0f b6 c0             	movzbl %al,%eax
   140c2:	50                   	push   %eax
   140c3:	8d 83 d1 0a ff ff    	lea    -0xf52f(%ebx),%eax
   140c9:	50                   	push   %eax
   140ca:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   140d0:	50                   	push   %eax
   140d1:	e8 3a fe fe ff       	call   3f10 <print_asm_1>
   140d6:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   140dc:	83 c4 20             	add    $0x20,%esp
   140df:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   140e3:	75 1b                	jne    14100 <setno_b+0x80>
   140e5:	83 ec 0c             	sub    $0xc,%esp
   140e8:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   140ef:	56                   	push   %esi
   140f0:	e8 3b 07 ff ff       	call   4830 <operand_write>
   140f5:	83 c4 10             	add    $0x10,%esp
   140f8:	89 f8                	mov    %edi,%eax
   140fa:	5b                   	pop    %ebx
   140fb:	5e                   	pop    %esi
   140fc:	5f                   	pop    %edi
   140fd:	c3                   	ret    
   140fe:	66 90                	xchg   %ax,%ax
   14100:	83 ec 0c             	sub    $0xc,%esp
   14103:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1410a:	56                   	push   %esi
   1410b:	e8 20 07 ff ff       	call   4830 <operand_write>
   14110:	83 c4 10             	add    $0x10,%esp
   14113:	89 f8                	mov    %edi,%eax
   14115:	5b                   	pop    %ebx
   14116:	5e                   	pop    %esi
   14117:	5f                   	pop    %edi
   14118:	c3                   	ret    
   14119:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00014120 <setnp_b>:
   14120:	57                   	push   %edi
   14121:	56                   	push   %esi
   14122:	53                   	push   %ebx
   14123:	e8 98 eb fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14128:	81 c3 d8 6e 01 00    	add    $0x16ed8,%ebx
   1412e:	83 ec 08             	sub    $0x8,%esp
   14131:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   14137:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1413d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   14144:	56                   	push   %esi
   14145:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   14149:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   14150:	83 c0 01             	add    $0x1,%eax
   14153:	50                   	push   %eax
   14154:	e8 07 05 ff ff       	call   4660 <modrm_rm>
   14159:	8d 78 01             	lea    0x1(%eax),%edi
   1415c:	56                   	push   %esi
   1415d:	89 f8                	mov    %edi,%eax
   1415f:	0f b6 c0             	movzbl %al,%eax
   14162:	50                   	push   %eax
   14163:	8d 83 d4 0a ff ff    	lea    -0xf52c(%ebx),%eax
   14169:	50                   	push   %eax
   1416a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   14170:	50                   	push   %eax
   14171:	e8 9a fd fe ff       	call   3f10 <print_asm_1>
   14176:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   1417c:	83 c4 20             	add    $0x20,%esp
   1417f:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   14183:	74 1b                	je     141a0 <setnp_b+0x80>
   14185:	83 ec 0c             	sub    $0xc,%esp
   14188:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1418f:	56                   	push   %esi
   14190:	e8 9b 06 ff ff       	call   4830 <operand_write>
   14195:	83 c4 10             	add    $0x10,%esp
   14198:	89 f8                	mov    %edi,%eax
   1419a:	5b                   	pop    %ebx
   1419b:	5e                   	pop    %esi
   1419c:	5f                   	pop    %edi
   1419d:	c3                   	ret    
   1419e:	66 90                	xchg   %ax,%ax
   141a0:	83 ec 0c             	sub    $0xc,%esp
   141a3:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   141aa:	56                   	push   %esi
   141ab:	e8 80 06 ff ff       	call   4830 <operand_write>
   141b0:	83 c4 10             	add    $0x10,%esp
   141b3:	89 f8                	mov    %edi,%eax
   141b5:	5b                   	pop    %ebx
   141b6:	5e                   	pop    %esi
   141b7:	5f                   	pop    %edi
   141b8:	c3                   	ret    
   141b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000141c0 <setns_b>:
   141c0:	57                   	push   %edi
   141c1:	56                   	push   %esi
   141c2:	53                   	push   %ebx
   141c3:	e8 f8 ea fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   141c8:	81 c3 38 6e 01 00    	add    $0x16e38,%ebx
   141ce:	83 ec 08             	sub    $0x8,%esp
   141d1:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   141d7:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   141dd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   141e4:	56                   	push   %esi
   141e5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   141e9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   141f0:	83 c0 01             	add    $0x1,%eax
   141f3:	50                   	push   %eax
   141f4:	e8 67 04 ff ff       	call   4660 <modrm_rm>
   141f9:	8d 78 01             	lea    0x1(%eax),%edi
   141fc:	56                   	push   %esi
   141fd:	89 f8                	mov    %edi,%eax
   141ff:	0f b6 c0             	movzbl %al,%eax
   14202:	50                   	push   %eax
   14203:	8d 83 d7 0a ff ff    	lea    -0xf529(%ebx),%eax
   14209:	50                   	push   %eax
   1420a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   14210:	50                   	push   %eax
   14211:	e8 fa fc fe ff       	call   3f10 <print_asm_1>
   14216:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   1421c:	83 c4 20             	add    $0x20,%esp
   1421f:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   14223:	78 1b                	js     14240 <setns_b+0x80>
   14225:	83 ec 0c             	sub    $0xc,%esp
   14228:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1422f:	56                   	push   %esi
   14230:	e8 fb 05 ff ff       	call   4830 <operand_write>
   14235:	83 c4 10             	add    $0x10,%esp
   14238:	89 f8                	mov    %edi,%eax
   1423a:	5b                   	pop    %ebx
   1423b:	5e                   	pop    %esi
   1423c:	5f                   	pop    %edi
   1423d:	c3                   	ret    
   1423e:	66 90                	xchg   %ax,%ax
   14240:	83 ec 0c             	sub    $0xc,%esp
   14243:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1424a:	56                   	push   %esi
   1424b:	e8 e0 05 ff ff       	call   4830 <operand_write>
   14250:	83 c4 10             	add    $0x10,%esp
   14253:	89 f8                	mov    %edi,%eax
   14255:	5b                   	pop    %ebx
   14256:	5e                   	pop    %esi
   14257:	5f                   	pop    %edi
   14258:	c3                   	ret    
   14259:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00014260 <seto_b>:
   14260:	57                   	push   %edi
   14261:	56                   	push   %esi
   14262:	53                   	push   %ebx
   14263:	e8 58 ea fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14268:	81 c3 98 6d 01 00    	add    $0x16d98,%ebx
   1426e:	83 ec 08             	sub    $0x8,%esp
   14271:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   14277:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1427d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   14284:	56                   	push   %esi
   14285:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   14289:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   14290:	83 c0 01             	add    $0x1,%eax
   14293:	50                   	push   %eax
   14294:	e8 c7 03 ff ff       	call   4660 <modrm_rm>
   14299:	8d 78 01             	lea    0x1(%eax),%edi
   1429c:	56                   	push   %esi
   1429d:	89 f8                	mov    %edi,%eax
   1429f:	0f b6 c0             	movzbl %al,%eax
   142a2:	50                   	push   %eax
   142a3:	8d 83 89 15 ff ff    	lea    -0xea77(%ebx),%eax
   142a9:	50                   	push   %eax
   142aa:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   142b0:	50                   	push   %eax
   142b1:	e8 5a fc fe ff       	call   3f10 <print_asm_1>
   142b6:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   142bc:	83 c4 20             	add    $0x20,%esp
   142bf:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   142c3:	75 1b                	jne    142e0 <seto_b+0x80>
   142c5:	83 ec 0c             	sub    $0xc,%esp
   142c8:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   142cf:	56                   	push   %esi
   142d0:	e8 5b 05 ff ff       	call   4830 <operand_write>
   142d5:	83 c4 10             	add    $0x10,%esp
   142d8:	89 f8                	mov    %edi,%eax
   142da:	5b                   	pop    %ebx
   142db:	5e                   	pop    %esi
   142dc:	5f                   	pop    %edi
   142dd:	c3                   	ret    
   142de:	66 90                	xchg   %ax,%ax
   142e0:	83 ec 0c             	sub    $0xc,%esp
   142e3:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   142ea:	56                   	push   %esi
   142eb:	e8 40 05 ff ff       	call   4830 <operand_write>
   142f0:	83 c4 10             	add    $0x10,%esp
   142f3:	89 f8                	mov    %edi,%eax
   142f5:	5b                   	pop    %ebx
   142f6:	5e                   	pop    %esi
   142f7:	5f                   	pop    %edi
   142f8:	c3                   	ret    
   142f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00014300 <setp_b>:
   14300:	57                   	push   %edi
   14301:	56                   	push   %esi
   14302:	53                   	push   %ebx
   14303:	e8 b8 e9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14308:	81 c3 f8 6c 01 00    	add    $0x16cf8,%ebx
   1430e:	83 ec 08             	sub    $0x8,%esp
   14311:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   14317:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1431d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   14324:	56                   	push   %esi
   14325:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   14329:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   14330:	83 c0 01             	add    $0x1,%eax
   14333:	50                   	push   %eax
   14334:	e8 27 03 ff ff       	call   4660 <modrm_rm>
   14339:	8d 78 01             	lea    0x1(%eax),%edi
   1433c:	56                   	push   %esi
   1433d:	89 f8                	mov    %edi,%eax
   1433f:	0f b6 c0             	movzbl %al,%eax
   14342:	50                   	push   %eax
   14343:	8d 83 2d 01 ff ff    	lea    -0xfed3(%ebx),%eax
   14349:	50                   	push   %eax
   1434a:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   14350:	50                   	push   %eax
   14351:	e8 ba fb fe ff       	call   3f10 <print_asm_1>
   14356:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   1435c:	83 c4 20             	add    $0x20,%esp
   1435f:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   14363:	75 1b                	jne    14380 <setp_b+0x80>
   14365:	83 ec 0c             	sub    $0xc,%esp
   14368:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1436f:	56                   	push   %esi
   14370:	e8 bb 04 ff ff       	call   4830 <operand_write>
   14375:	83 c4 10             	add    $0x10,%esp
   14378:	89 f8                	mov    %edi,%eax
   1437a:	5b                   	pop    %ebx
   1437b:	5e                   	pop    %esi
   1437c:	5f                   	pop    %edi
   1437d:	c3                   	ret    
   1437e:	66 90                	xchg   %ax,%ax
   14380:	83 ec 0c             	sub    $0xc,%esp
   14383:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1438a:	56                   	push   %esi
   1438b:	e8 a0 04 ff ff       	call   4830 <operand_write>
   14390:	83 c4 10             	add    $0x10,%esp
   14393:	89 f8                	mov    %edi,%eax
   14395:	5b                   	pop    %ebx
   14396:	5e                   	pop    %esi
   14397:	5f                   	pop    %edi
   14398:	c3                   	ret    
   14399:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000143a0 <sets_b>:
   143a0:	57                   	push   %edi
   143a1:	56                   	push   %esi
   143a2:	53                   	push   %ebx
   143a3:	e8 18 e9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   143a8:	81 c3 58 6c 01 00    	add    $0x16c58,%ebx
   143ae:	83 ec 08             	sub    $0x8,%esp
   143b1:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   143b7:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   143bd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   143c4:	56                   	push   %esi
   143c5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   143c9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   143d0:	83 c0 01             	add    $0x1,%eax
   143d3:	50                   	push   %eax
   143d4:	e8 87 02 ff ff       	call   4660 <modrm_rm>
   143d9:	8d 78 01             	lea    0x1(%eax),%edi
   143dc:	56                   	push   %esi
   143dd:	89 f8                	mov    %edi,%eax
   143df:	0f b6 c0             	movzbl %al,%eax
   143e2:	50                   	push   %eax
   143e3:	8d 83 74 fe fe ff    	lea    -0x1018c(%ebx),%eax
   143e9:	50                   	push   %eax
   143ea:	8d 83 30 10 ff ff    	lea    -0xefd0(%ebx),%eax
   143f0:	50                   	push   %eax
   143f1:	e8 1a fb fe ff       	call   3f10 <print_asm_1>
   143f6:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   143fc:	83 c4 20             	add    $0x20,%esp
   143ff:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   14403:	78 1b                	js     14420 <sets_b+0x80>
   14405:	83 ec 0c             	sub    $0xc,%esp
   14408:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1440f:	56                   	push   %esi
   14410:	e8 1b 04 ff ff       	call   4830 <operand_write>
   14415:	83 c4 10             	add    $0x10,%esp
   14418:	89 f8                	mov    %edi,%eax
   1441a:	5b                   	pop    %ebx
   1441b:	5e                   	pop    %esi
   1441c:	5f                   	pop    %edi
   1441d:	c3                   	ret    
   1441e:	66 90                	xchg   %ax,%ax
   14420:	83 ec 0c             	sub    $0xc,%esp
   14423:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1442a:	56                   	push   %esi
   1442b:	e8 00 04 ff ff       	call   4830 <operand_write>
   14430:	83 c4 10             	add    $0x10,%esp
   14433:	89 f8                	mov    %edi,%eax
   14435:	5b                   	pop    %ebx
   14436:	5e                   	pop    %esi
   14437:	5f                   	pop    %edi
   14438:	c3                   	ret    
   14439:	66 90                	xchg   %ax,%ax
   1443b:	66 90                	xchg   %ax,%ax
   1443d:	66 90                	xchg   %ax,%ax
   1443f:	90                   	nop

00014440 <cbw_a_v>:
   14440:	56                   	push   %esi
   14441:	53                   	push   %ebx
   14442:	e8 79 e8 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14447:	81 c3 b9 6b 01 00    	add    $0x16bb9,%ebx
   1444d:	83 ec 04             	sub    $0x4,%esp
   14450:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14456:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   1445c:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   14462:	0f b6 00             	movzbl (%eax),%eax
   14465:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   1446b:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)
   14472:	83 f8 08             	cmp    $0x8,%eax
   14475:	89 42 10             	mov    %eax,0x10(%edx)
   14478:	89 46 10             	mov    %eax,0x10(%esi)
   1447b:	74 53                	je     144d0 <cbw_a_v+0x90>
   1447d:	83 f8 10             	cmp    $0x10,%eax
   14480:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   14486:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1448c:	0f 44 c2             	cmove  %edx,%eax
   1448f:	56                   	push   %esi
   14490:	6a 01                	push   $0x1
   14492:	50                   	push   %eax
   14493:	8d 83 34 10 ff ff    	lea    -0xefcc(%ebx),%eax
   14499:	50                   	push   %eax
   1449a:	e8 71 fa fe ff       	call   3f10 <print_asm_1>
   1449f:	89 34 24             	mov    %esi,(%esp)
   144a2:	e8 f9 01 ff ff       	call   46a0 <operand_read>
   144a7:	83 c4 10             	add    $0x10,%esp
   144aa:	83 7e 10 10          	cmpl   $0x10,0x10(%esi)
   144ae:	74 30                	je     144e0 <cbw_a_v+0xa0>
   144b0:	0f bf 46 0c          	movswl 0xc(%esi),%eax
   144b4:	89 46 0c             	mov    %eax,0xc(%esi)
   144b7:	83 ec 0c             	sub    $0xc,%esp
   144ba:	56                   	push   %esi
   144bb:	e8 70 03 ff ff       	call   4830 <operand_write>
   144c0:	83 c4 14             	add    $0x14,%esp
   144c3:	b8 01 00 00 00       	mov    $0x1,%eax
   144c8:	5b                   	pop    %ebx
   144c9:	5e                   	pop    %esi
   144ca:	c3                   	ret    
   144cb:	90                   	nop
   144cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   144d0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   144d6:	eb b7                	jmp    1448f <cbw_a_v+0x4f>
   144d8:	90                   	nop
   144d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   144e0:	0f be 46 0c          	movsbl 0xc(%esi),%eax
   144e4:	89 46 0c             	mov    %eax,0xc(%esi)
   144e7:	eb ce                	jmp    144b7 <cbw_a_v+0x77>
   144e9:	66 90                	xchg   %ax,%ax
   144eb:	66 90                	xchg   %ax,%ax
   144ed:	66 90                	xchg   %ax,%ax
   144ef:	90                   	nop

000144f0 <instr_execute_1op>:
   144f0:	56                   	push   %esi
   144f1:	53                   	push   %ebx
   144f2:	e8 c9 e7 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   144f7:	81 c3 09 6b 01 00    	add    $0x16b09,%ebx
   144fd:	83 ec 10             	sub    $0x10,%esp
   14500:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   14506:	56                   	push   %esi
   14507:	e8 94 01 ff ff       	call   46a0 <operand_read>
   1450c:	58                   	pop    %eax
   1450d:	5a                   	pop    %edx
   1450e:	ff 76 0c             	pushl  0xc(%esi)
   14511:	6a 01                	push   $0x1
   14513:	e8 d8 6d ff ff       	call   b2f0 <alu_sub>
   14518:	89 34 24             	mov    %esi,(%esp)
   1451b:	89 46 0c             	mov    %eax,0xc(%esi)
   1451e:	e8 0d 03 ff ff       	call   4830 <operand_write>
   14523:	83 c4 14             	add    $0x14,%esp
   14526:	5b                   	pop    %ebx
   14527:	5e                   	pop    %esi
   14528:	c3                   	ret    
   14529:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00014530 <dec_REG_EAX_v>:
   14530:	53                   	push   %ebx
   14531:	e8 8a e7 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14536:	81 c3 ca 6a 01 00    	add    $0x16aca,%ebx
   1453c:	83 ec 08             	sub    $0x8,%esp
   1453f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14545:	0f b6 10             	movzbl (%eax),%edx
   14548:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1454e:	89 50 10             	mov    %edx,0x10(%eax)
   14551:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   14557:	89 50 10             	mov    %edx,0x10(%eax)
   1455a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   14560:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   14567:	50                   	push   %eax
   14568:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1456e:	6a 01                	push   $0x1
   14570:	50                   	push   %eax
   14571:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   14577:	50                   	push   %eax
   14578:	e8 93 f9 fe ff       	call   3f10 <print_asm_1>
   1457d:	e8 6e ff ff ff       	call   144f0 <instr_execute_1op>
   14582:	83 c4 18             	add    $0x18,%esp
   14585:	b8 01 00 00 00       	mov    $0x1,%eax
   1458a:	5b                   	pop    %ebx
   1458b:	c3                   	ret    
   1458c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00014590 <dec_REG_ECX_v>:
   14590:	53                   	push   %ebx
   14591:	e8 2a e7 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14596:	81 c3 6a 6a 01 00    	add    $0x16a6a,%ebx
   1459c:	83 ec 08             	sub    $0x8,%esp
   1459f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   145a5:	0f b6 10             	movzbl (%eax),%edx
   145a8:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   145ae:	89 50 10             	mov    %edx,0x10(%eax)
   145b1:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   145b7:	89 50 10             	mov    %edx,0x10(%eax)
   145ba:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   145c0:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
   145c7:	50                   	push   %eax
   145c8:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   145ce:	6a 01                	push   $0x1
   145d0:	50                   	push   %eax
   145d1:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   145d7:	50                   	push   %eax
   145d8:	e8 33 f9 fe ff       	call   3f10 <print_asm_1>
   145dd:	e8 0e ff ff ff       	call   144f0 <instr_execute_1op>
   145e2:	83 c4 18             	add    $0x18,%esp
   145e5:	b8 01 00 00 00       	mov    $0x1,%eax
   145ea:	5b                   	pop    %ebx
   145eb:	c3                   	ret    
   145ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000145f0 <dec_REG_EDX_v>:
   145f0:	53                   	push   %ebx
   145f1:	e8 ca e6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   145f6:	81 c3 0a 6a 01 00    	add    $0x16a0a,%ebx
   145fc:	83 ec 08             	sub    $0x8,%esp
   145ff:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14605:	0f b6 10             	movzbl (%eax),%edx
   14608:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1460e:	89 50 10             	mov    %edx,0x10(%eax)
   14611:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   14617:	89 50 10             	mov    %edx,0x10(%eax)
   1461a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   14620:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%eax)
   14627:	50                   	push   %eax
   14628:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1462e:	6a 01                	push   $0x1
   14630:	50                   	push   %eax
   14631:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   14637:	50                   	push   %eax
   14638:	e8 d3 f8 fe ff       	call   3f10 <print_asm_1>
   1463d:	e8 ae fe ff ff       	call   144f0 <instr_execute_1op>
   14642:	83 c4 18             	add    $0x18,%esp
   14645:	b8 01 00 00 00       	mov    $0x1,%eax
   1464a:	5b                   	pop    %ebx
   1464b:	c3                   	ret    
   1464c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00014650 <dec_REG_EBX_v>:
   14650:	53                   	push   %ebx
   14651:	e8 6a e6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14656:	81 c3 aa 69 01 00    	add    $0x169aa,%ebx
   1465c:	83 ec 08             	sub    $0x8,%esp
   1465f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14665:	0f b6 10             	movzbl (%eax),%edx
   14668:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1466e:	89 50 10             	mov    %edx,0x10(%eax)
   14671:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   14677:	89 50 10             	mov    %edx,0x10(%eax)
   1467a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   14680:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%eax)
   14687:	50                   	push   %eax
   14688:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1468e:	6a 01                	push   $0x1
   14690:	50                   	push   %eax
   14691:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   14697:	50                   	push   %eax
   14698:	e8 73 f8 fe ff       	call   3f10 <print_asm_1>
   1469d:	e8 4e fe ff ff       	call   144f0 <instr_execute_1op>
   146a2:	83 c4 18             	add    $0x18,%esp
   146a5:	b8 01 00 00 00       	mov    $0x1,%eax
   146aa:	5b                   	pop    %ebx
   146ab:	c3                   	ret    
   146ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000146b0 <dec_REG_EBP_v>:
   146b0:	53                   	push   %ebx
   146b1:	e8 0a e6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   146b6:	81 c3 4a 69 01 00    	add    $0x1694a,%ebx
   146bc:	83 ec 08             	sub    $0x8,%esp
   146bf:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   146c5:	0f b6 10             	movzbl (%eax),%edx
   146c8:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   146ce:	89 50 10             	mov    %edx,0x10(%eax)
   146d1:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   146d7:	89 50 10             	mov    %edx,0x10(%eax)
   146da:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   146e0:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
   146e7:	50                   	push   %eax
   146e8:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   146ee:	6a 01                	push   $0x1
   146f0:	50                   	push   %eax
   146f1:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   146f7:	50                   	push   %eax
   146f8:	e8 13 f8 fe ff       	call   3f10 <print_asm_1>
   146fd:	e8 ee fd ff ff       	call   144f0 <instr_execute_1op>
   14702:	83 c4 18             	add    $0x18,%esp
   14705:	b8 01 00 00 00       	mov    $0x1,%eax
   1470a:	5b                   	pop    %ebx
   1470b:	c3                   	ret    
   1470c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00014710 <dec_REG_ESP_v>:
   14710:	53                   	push   %ebx
   14711:	e8 aa e5 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14716:	81 c3 ea 68 01 00    	add    $0x168ea,%ebx
   1471c:	83 ec 08             	sub    $0x8,%esp
   1471f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14725:	0f b6 10             	movzbl (%eax),%edx
   14728:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1472e:	89 50 10             	mov    %edx,0x10(%eax)
   14731:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   14737:	89 50 10             	mov    %edx,0x10(%eax)
   1473a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   14740:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%eax)
   14747:	50                   	push   %eax
   14748:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1474e:	6a 01                	push   $0x1
   14750:	50                   	push   %eax
   14751:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   14757:	50                   	push   %eax
   14758:	e8 b3 f7 fe ff       	call   3f10 <print_asm_1>
   1475d:	e8 8e fd ff ff       	call   144f0 <instr_execute_1op>
   14762:	83 c4 18             	add    $0x18,%esp
   14765:	b8 01 00 00 00       	mov    $0x1,%eax
   1476a:	5b                   	pop    %ebx
   1476b:	c3                   	ret    
   1476c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00014770 <dec_REG_ESI_v>:
   14770:	53                   	push   %ebx
   14771:	e8 4a e5 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14776:	81 c3 8a 68 01 00    	add    $0x1688a,%ebx
   1477c:	83 ec 08             	sub    $0x8,%esp
   1477f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14785:	0f b6 10             	movzbl (%eax),%edx
   14788:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   1478e:	89 50 10             	mov    %edx,0x10(%eax)
   14791:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   14797:	89 50 10             	mov    %edx,0x10(%eax)
   1479a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   147a0:	c7 40 04 06 00 00 00 	movl   $0x6,0x4(%eax)
   147a7:	50                   	push   %eax
   147a8:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   147ae:	6a 01                	push   $0x1
   147b0:	50                   	push   %eax
   147b1:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   147b7:	50                   	push   %eax
   147b8:	e8 53 f7 fe ff       	call   3f10 <print_asm_1>
   147bd:	e8 2e fd ff ff       	call   144f0 <instr_execute_1op>
   147c2:	83 c4 18             	add    $0x18,%esp
   147c5:	b8 01 00 00 00       	mov    $0x1,%eax
   147ca:	5b                   	pop    %ebx
   147cb:	c3                   	ret    
   147cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000147d0 <dec_REG_EDI_v>:
   147d0:	53                   	push   %ebx
   147d1:	e8 ea e4 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   147d6:	81 c3 2a 68 01 00    	add    $0x1682a,%ebx
   147dc:	83 ec 08             	sub    $0x8,%esp
   147df:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   147e5:	0f b6 10             	movzbl (%eax),%edx
   147e8:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   147ee:	89 50 10             	mov    %edx,0x10(%eax)
   147f1:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   147f7:	89 50 10             	mov    %edx,0x10(%eax)
   147fa:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   14800:	c7 40 04 07 00 00 00 	movl   $0x7,0x4(%eax)
   14807:	50                   	push   %eax
   14808:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1480e:	6a 01                	push   $0x1
   14810:	50                   	push   %eax
   14811:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   14817:	50                   	push   %eax
   14818:	e8 f3 f6 fe ff       	call   3f10 <print_asm_1>
   1481d:	e8 ce fc ff ff       	call   144f0 <instr_execute_1op>
   14822:	83 c4 18             	add    $0x18,%esp
   14825:	b8 01 00 00 00       	mov    $0x1,%eax
   1482a:	5b                   	pop    %ebx
   1482b:	c3                   	ret    
   1482c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00014830 <dec_rm_l>:
   14830:	55                   	push   %ebp
   14831:	57                   	push   %edi
   14832:	56                   	push   %esi
   14833:	53                   	push   %ebx
   14834:	e8 87 e4 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14839:	81 c3 c7 67 01 00    	add    $0x167c7,%ebx
   1483f:	83 ec 14             	sub    $0x14,%esp
   14842:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   14848:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   1484e:	c7 45 10 20 00 00 00 	movl   $0x20,0x10(%ebp)
   14855:	55                   	push   %ebp
   14856:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1485a:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   14861:	83 c0 01             	add    $0x1,%eax
   14864:	50                   	push   %eax
   14865:	e8 f6 fd fe ff       	call   4660 <modrm_rm>
   1486a:	8d 70 01             	lea    0x1(%eax),%esi
   1486d:	83 c4 10             	add    $0x10,%esp
   14870:	89 f0                	mov    %esi,%eax
   14872:	0f b6 c8             	movzbl %al,%ecx
   14875:	8b 47 10             	mov    0x10(%edi),%eax
   14878:	83 f8 08             	cmp    $0x8,%eax
   1487b:	74 33                	je     148b0 <dec_rm_l+0x80>
   1487d:	83 f8 10             	cmp    $0x10,%eax
   14880:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   14886:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1488c:	0f 44 c2             	cmove  %edx,%eax
   1488f:	55                   	push   %ebp
   14890:	51                   	push   %ecx
   14891:	50                   	push   %eax
   14892:	8d 83 38 10 ff ff    	lea    -0xefc8(%ebx),%eax
   14898:	50                   	push   %eax
   14899:	e8 72 f6 fe ff       	call   3f10 <print_asm_1>
   1489e:	e8 4d fc ff ff       	call   144f0 <instr_execute_1op>
   148a3:	83 c4 1c             	add    $0x1c,%esp
   148a6:	89 f0                	mov    %esi,%eax
   148a8:	5b                   	pop    %ebx
   148a9:	5e                   	pop    %esi
   148aa:	5f                   	pop    %edi
   148ab:	5d                   	pop    %ebp
   148ac:	c3                   	ret    
   148ad:	8d 76 00             	lea    0x0(%esi),%esi
   148b0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   148b6:	eb d7                	jmp    1488f <dec_rm_l+0x5f>
   148b8:	66 90                	xchg   %ax,%ax
   148ba:	66 90                	xchg   %ax,%ax
   148bc:	66 90                	xchg   %ax,%ax
   148be:	66 90                	xchg   %ax,%ax

000148c0 <instr_execute_2op>:
   148c0:	57                   	push   %edi
   148c1:	56                   	push   %esi
   148c2:	53                   	push   %ebx
   148c3:	e8 f8 e3 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   148c8:	81 c3 38 67 01 00    	add    $0x16738,%ebx
   148ce:	83 ec 0c             	sub    $0xc,%esp
   148d1:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   148d7:	57                   	push   %edi
   148d8:	e8 c3 fd fe ff       	call   46a0 <operand_read>
   148dd:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   148e3:	89 34 24             	mov    %esi,(%esp)
   148e6:	e8 b5 fd fe ff       	call   46a0 <operand_read>
   148eb:	58                   	pop    %eax
   148ec:	5a                   	pop    %edx
   148ed:	ff 76 0c             	pushl  0xc(%esi)
   148f0:	ff 77 0c             	pushl  0xc(%edi)
   148f3:	e8 f8 69 ff ff       	call   b2f0 <alu_sub>
   148f8:	83 c4 10             	add    $0x10,%esp
   148fb:	89 46 0c             	mov    %eax,0xc(%esi)
   148fe:	5b                   	pop    %ebx
   148ff:	5e                   	pop    %esi
   14900:	5f                   	pop    %edi
   14901:	c3                   	ret    
   14902:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14909:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00014910 <cmps_v>:
   14910:	57                   	push   %edi
   14911:	56                   	push   %esi
   14912:	53                   	push   %ebx
   14913:	e8 a8 e3 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14918:	81 c3 e8 66 01 00    	add    $0x166e8,%ebx
   1491e:	83 ec 5c             	sub    $0x5c,%esp
   14921:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   14927:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   1492d:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   14934:	00 
   14935:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   1493c:	00 
   1493d:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   14942:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   14947:	0f b6 07             	movzbl (%edi),%eax
   1494a:	89 44 24 48          	mov    %eax,0x48(%esp)
   1494e:	89 44 24 24          	mov    %eax,0x24(%esp)
   14952:	8b 46 18             	mov    0x18(%esi),%eax
   14955:	89 44 24 18          	mov    %eax,0x18(%esp)
   14959:	8b 46 1c             	mov    0x1c(%esi),%eax
   1495c:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   14960:	8d 44 24 14          	lea    0x14(%esp),%eax
   14964:	50                   	push   %eax
   14965:	e8 36 fd fe ff       	call   46a0 <operand_read>
   1496a:	58                   	pop    %eax
   1496b:	8d 44 24 38          	lea    0x38(%esp),%eax
   1496f:	50                   	push   %eax
   14970:	e8 2b fd fe ff       	call   46a0 <operand_read>
   14975:	5a                   	pop    %edx
   14976:	59                   	pop    %ecx
   14977:	ff 74 24 1c          	pushl  0x1c(%esp)
   1497b:	ff 74 24 44          	pushl  0x44(%esp)
   1497f:	e8 6c 69 ff ff       	call   b2f0 <alu_sub>
   14984:	83 c4 10             	add    $0x10,%esp
   14987:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   1498b:	74 33                	je     149c0 <cmps_v+0xb0>
   1498d:	0f b6 07             	movzbl (%edi),%eax
   14990:	c1 f8 03             	sar    $0x3,%eax
   14993:	f7 d8                	neg    %eax
   14995:	01 46 18             	add    %eax,0x18(%esi)
   14998:	01 46 1c             	add    %eax,0x1c(%esi)
   1499b:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   149a1:	83 ec 04             	sub    $0x4,%esp
   149a4:	6a 01                	push   $0x1
   149a6:	50                   	push   %eax
   149a7:	8d 83 3c 10 ff ff    	lea    -0xefc4(%ebx),%eax
   149ad:	50                   	push   %eax
   149ae:	e8 7d f4 fe ff       	call   3e30 <print_asm_0>
   149b3:	83 c4 60             	add    $0x60,%esp
   149b6:	b8 01 00 00 00       	mov    $0x1,%eax
   149bb:	5b                   	pop    %ebx
   149bc:	5e                   	pop    %esi
   149bd:	5f                   	pop    %edi
   149be:	c3                   	ret    
   149bf:	90                   	nop
   149c0:	0f b6 07             	movzbl (%edi),%eax
   149c3:	c0 e8 03             	shr    $0x3,%al
   149c6:	0f b6 c0             	movzbl %al,%eax
   149c9:	eb ca                	jmp    14995 <cmps_v+0x85>
   149cb:	90                   	nop
   149cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000149d0 <cmps_b>:
   149d0:	56                   	push   %esi
   149d1:	53                   	push   %ebx
   149d2:	e8 e9 e2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   149d7:	81 c3 29 66 01 00    	add    $0x16629,%ebx
   149dd:	83 ec 60             	sub    $0x60,%esp
   149e0:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   149e6:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   149ed:	00 
   149ee:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   149f5:	00 
   149f6:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   149fd:	00 
   149fe:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   14a05:	00 
   14a06:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   14a0b:	8b 46 18             	mov    0x18(%esi),%eax
   14a0e:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   14a13:	89 44 24 18          	mov    %eax,0x18(%esp)
   14a17:	8b 46 1c             	mov    0x1c(%esi),%eax
   14a1a:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   14a1e:	8d 44 24 14          	lea    0x14(%esp),%eax
   14a22:	50                   	push   %eax
   14a23:	e8 78 fc fe ff       	call   46a0 <operand_read>
   14a28:	58                   	pop    %eax
   14a29:	8d 44 24 38          	lea    0x38(%esp),%eax
   14a2d:	50                   	push   %eax
   14a2e:	e8 6d fc fe ff       	call   46a0 <operand_read>
   14a33:	5a                   	pop    %edx
   14a34:	59                   	pop    %ecx
   14a35:	ff 74 24 1c          	pushl  0x1c(%esp)
   14a39:	ff 74 24 44          	pushl  0x44(%esp)
   14a3d:	e8 ae 68 ff ff       	call   b2f0 <alu_sub>
   14a42:	83 c4 0c             	add    $0xc,%esp
   14a45:	31 c0                	xor    %eax,%eax
   14a47:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   14a4b:	6a 01                	push   $0x1
   14a4d:	0f 95 c0             	setne  %al
   14a50:	f7 d8                	neg    %eax
   14a52:	83 c8 01             	or     $0x1,%eax
   14a55:	01 46 18             	add    %eax,0x18(%esi)
   14a58:	01 46 1c             	add    %eax,0x1c(%esi)
   14a5b:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   14a61:	50                   	push   %eax
   14a62:	8d 83 3c 10 ff ff    	lea    -0xefc4(%ebx),%eax
   14a68:	50                   	push   %eax
   14a69:	e8 c2 f3 fe ff       	call   3e30 <print_asm_0>
   14a6e:	83 c4 64             	add    $0x64,%esp
   14a71:	b8 01 00 00 00       	mov    $0x1,%eax
   14a76:	5b                   	pop    %ebx
   14a77:	5e                   	pop    %esi
   14a78:	c3                   	ret    
   14a79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00014a80 <cmp_i2rm_bv>:
   14a80:	55                   	push   %ebp
   14a81:	57                   	push   %edi
   14a82:	56                   	push   %esi
   14a83:	53                   	push   %ebx
   14a84:	e8 37 e2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14a89:	81 c3 77 65 01 00    	add    $0x16577,%ebx
   14a8f:	83 ec 70             	sub    $0x70,%esp
   14a92:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
   14a99:	8d 7c 24 40          	lea    0x40(%esp),%edi
   14a9d:	8b ac 24 84 00 00 00 	mov    0x84(%esp),%ebp
   14aa4:	88 44 24 10          	mov    %al,0x10(%esp)
   14aa8:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14aae:	0f b6 00             	movzbl (%eax),%eax
   14ab1:	89 44 24 50          	mov    %eax,0x50(%esp)
   14ab5:	57                   	push   %edi
   14ab6:	8d 44 24 14          	lea    0x14(%esp),%eax
   14aba:	50                   	push   %eax
   14abb:	8d 45 01             	lea    0x1(%ebp),%eax
   14abe:	50                   	push   %eax
   14abf:	e8 1c fb fe ff       	call   45e0 <modrm_opcode_rm>
   14ac4:	89 c6                	mov    %eax,%esi
   14ac6:	89 3c 24             	mov    %edi,(%esp)
   14ac9:	e8 d2 fb fe ff       	call   46a0 <operand_read>
   14ace:	8d 44 2e 01          	lea    0x1(%esi,%ebp,1),%eax
   14ad2:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   14ad9:	00 
   14ada:	c7 44 24 38 08 00 00 	movl   $0x8,0x38(%esp)
   14ae1:	00 
   14ae2:	83 c6 02             	add    $0x2,%esi
   14ae5:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   14ae9:	58                   	pop    %eax
   14aea:	8d 6c 24 24          	lea    0x24(%esp),%ebp
   14aee:	55                   	push   %ebp
   14aef:	e8 ac fb fe ff       	call   46a0 <operand_read>
   14af4:	8d 46 01             	lea    0x1(%esi),%eax
   14af7:	89 3c 24             	mov    %edi,(%esp)
   14afa:	55                   	push   %ebp
   14afb:	0f b6 c0             	movzbl %al,%eax
   14afe:	50                   	push   %eax
   14aff:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   14b05:	50                   	push   %eax
   14b06:	8d 83 52 10 ff ff    	lea    -0xefae(%ebx),%eax
   14b0c:	50                   	push   %eax
   14b0d:	e8 ee f4 fe ff       	call   4000 <print_asm_2>
   14b12:	0f be 44 24 44       	movsbl 0x44(%esp),%eax
   14b17:	c7 44 24 48 20 00 00 	movl   $0x20,0x48(%esp)
   14b1e:	00 
   14b1f:	89 44 24 44          	mov    %eax,0x44(%esp)
   14b23:	83 c4 18             	add    $0x18,%esp
   14b26:	ff 74 24 50          	pushl  0x50(%esp)
   14b2a:	50                   	push   %eax
   14b2b:	e8 c0 67 ff ff       	call   b2f0 <alu_sub>
   14b30:	83 c4 7c             	add    $0x7c,%esp
   14b33:	89 f0                	mov    %esi,%eax
   14b35:	5b                   	pop    %ebx
   14b36:	5e                   	pop    %esi
   14b37:	5f                   	pop    %edi
   14b38:	5d                   	pop    %ebp
   14b39:	c3                   	ret    
   14b3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014b40 <cmp_r2rm_v>:
   14b40:	55                   	push   %ebp
   14b41:	57                   	push   %edi
   14b42:	56                   	push   %esi
   14b43:	53                   	push   %ebx
   14b44:	e8 77 e1 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14b49:	81 c3 b7 64 01 00    	add    $0x164b7,%ebx
   14b4f:	83 ec 60             	sub    $0x60,%esp
   14b52:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14b58:	8d 6c 24 30          	lea    0x30(%esp),%ebp
   14b5c:	0f b6 00             	movzbl (%eax),%eax
   14b5f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   14b63:	89 44 24 40          	mov    %eax,0x40(%esp)
   14b67:	55                   	push   %ebp
   14b68:	8d 7c 24 10          	lea    0x10(%esp),%edi
   14b6c:	57                   	push   %edi
   14b6d:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   14b71:	83 c0 01             	add    $0x1,%eax
   14b74:	50                   	push   %eax
   14b75:	e8 16 fa fe ff       	call   4590 <modrm_r_rm>
   14b7a:	89 3c 24             	mov    %edi,(%esp)
   14b7d:	8d 70 01             	lea    0x1(%eax),%esi
   14b80:	e8 1b fb fe ff       	call   46a0 <operand_read>
   14b85:	89 2c 24             	mov    %ebp,(%esp)
   14b88:	e8 13 fb fe ff       	call   46a0 <operand_read>
   14b8d:	58                   	pop    %eax
   14b8e:	5a                   	pop    %edx
   14b8f:	ff 74 24 40          	pushl  0x40(%esp)
   14b93:	ff 74 24 20          	pushl  0x20(%esp)
   14b97:	e8 54 67 ff ff       	call   b2f0 <alu_sub>
   14b9c:	89 44 24 48          	mov    %eax,0x48(%esp)
   14ba0:	89 f0                	mov    %esi,%eax
   14ba2:	89 2c 24             	mov    %ebp,(%esp)
   14ba5:	0f b6 c0             	movzbl %al,%eax
   14ba8:	57                   	push   %edi
   14ba9:	50                   	push   %eax
   14baa:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   14bb0:	50                   	push   %eax
   14bb1:	8d 83 57 10 ff ff    	lea    -0xefa9(%ebx),%eax
   14bb7:	50                   	push   %eax
   14bb8:	e8 43 f4 fe ff       	call   4000 <print_asm_2>
   14bbd:	83 c4 7c             	add    $0x7c,%esp
   14bc0:	89 f0                	mov    %esi,%eax
   14bc2:	5b                   	pop    %ebx
   14bc3:	5e                   	pop    %esi
   14bc4:	5f                   	pop    %edi
   14bc5:	5d                   	pop    %ebp
   14bc6:	c3                   	ret    
   14bc7:	89 f6                	mov    %esi,%esi
   14bc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00014bd0 <cmp_i2al_b>:
   14bd0:	57                   	push   %edi
   14bd1:	56                   	push   %esi
   14bd2:	53                   	push   %ebx
   14bd3:	e8 e8 e0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14bd8:	81 c3 28 64 01 00    	add    $0x16428,%ebx
   14bde:	83 ec 5c             	sub    $0x5c,%esp
   14be1:	8b 44 24 6c          	mov    0x6c(%esp),%eax
   14be5:	8d 74 24 14          	lea    0x14(%esp),%esi
   14be9:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   14bf0:	00 
   14bf1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   14bf8:	00 
   14bf9:	83 c0 01             	add    $0x1,%eax
   14bfc:	89 44 24 18          	mov    %eax,0x18(%esp)
   14c00:	56                   	push   %esi
   14c01:	e8 9a fa fe ff       	call   46a0 <operand_read>
   14c06:	c7 44 24 4c 08 00 00 	movl   $0x8,0x4c(%esp)
   14c0d:	00 
   14c0e:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   14c15:	00 
   14c16:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
   14c1d:	00 
   14c1e:	58                   	pop    %eax
   14c1f:	8d 7c 24 38          	lea    0x38(%esp),%edi
   14c23:	57                   	push   %edi
   14c24:	e8 77 fa fe ff       	call   46a0 <operand_read>
   14c29:	5a                   	pop    %edx
   14c2a:	59                   	pop    %ecx
   14c2b:	ff 74 24 40          	pushl  0x40(%esp)
   14c2f:	ff 74 24 20          	pushl  0x20(%esp)
   14c33:	e8 b8 66 ff ff       	call   b2f0 <alu_sub>
   14c38:	89 44 24 48          	mov    %eax,0x48(%esp)
   14c3c:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   14c42:	89 3c 24             	mov    %edi,(%esp)
   14c45:	56                   	push   %esi
   14c46:	6a 02                	push   $0x2
   14c48:	50                   	push   %eax
   14c49:	8d 83 57 10 ff ff    	lea    -0xefa9(%ebx),%eax
   14c4f:	50                   	push   %eax
   14c50:	e8 ab f3 fe ff       	call   4000 <print_asm_2>
   14c55:	83 c4 70             	add    $0x70,%esp
   14c58:	b8 02 00 00 00       	mov    $0x2,%eax
   14c5d:	5b                   	pop    %ebx
   14c5e:	5e                   	pop    %esi
   14c5f:	5f                   	pop    %edi
   14c60:	c3                   	ret    
   14c61:	eb 0d                	jmp    14c70 <cmp_i2eax_v>
   14c63:	90                   	nop
   14c64:	90                   	nop
   14c65:	90                   	nop
   14c66:	90                   	nop
   14c67:	90                   	nop
   14c68:	90                   	nop
   14c69:	90                   	nop
   14c6a:	90                   	nop
   14c6b:	90                   	nop
   14c6c:	90                   	nop
   14c6d:	90                   	nop
   14c6e:	90                   	nop
   14c6f:	90                   	nop

00014c70 <cmp_i2eax_v>:
   14c70:	55                   	push   %ebp
   14c71:	57                   	push   %edi
   14c72:	56                   	push   %esi
   14c73:	53                   	push   %ebx
   14c74:	e8 47 e0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14c79:	81 c3 87 63 01 00    	add    $0x16387,%ebx
   14c7f:	83 ec 68             	sub    $0x68,%esp
   14c82:	8d b3 77 13 00 00    	lea    0x1377(%ebx),%esi
   14c88:	8d 7c 24 14          	lea    0x14(%esp),%edi
   14c8c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   14c93:	00 
   14c94:	0f b6 06             	movzbl (%esi),%eax
   14c97:	89 44 24 24          	mov    %eax,0x24(%esp)
   14c9b:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   14c9f:	83 c0 01             	add    $0x1,%eax
   14ca2:	89 44 24 18          	mov    %eax,0x18(%esp)
   14ca6:	57                   	push   %edi
   14ca7:	e8 f4 f9 fe ff       	call   46a0 <operand_read>
   14cac:	c7 44 24 4c 20 00 00 	movl   $0x20,0x4c(%esp)
   14cb3:	00 
   14cb4:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   14cbb:	00 
   14cbc:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
   14cc3:	00 
   14cc4:	58                   	pop    %eax
   14cc5:	8d 6c 24 38          	lea    0x38(%esp),%ebp
   14cc9:	55                   	push   %ebp
   14cca:	e8 d1 f9 fe ff       	call   46a0 <operand_read>
   14ccf:	0f b6 06             	movzbl (%esi),%eax
   14cd2:	83 c4 10             	add    $0x10,%esp
   14cd5:	8d 50 f0             	lea    -0x10(%eax),%edx
   14cd8:	81 e2 ef 00 00 00    	and    $0xef,%edx
   14cde:	75 5b                	jne    14d3b <cmp_i2eax_v+0xcb>
   14ce0:	3c 10                	cmp    $0x10,%al
   14ce2:	74 4c                	je     14d30 <cmp_i2eax_v+0xc0>
   14ce4:	8b 44 24 14          	mov    0x14(%esp),%eax
   14ce8:	83 ec 08             	sub    $0x8,%esp
   14ceb:	ff 74 24 40          	pushl  0x40(%esp)
   14cef:	50                   	push   %eax
   14cf0:	e8 fb 65 ff ff       	call   b2f0 <alu_sub>
   14cf5:	89 44 24 24          	mov    %eax,0x24(%esp)
   14cf9:	0f b6 06             	movzbl (%esi),%eax
   14cfc:	89 2c 24             	mov    %ebp,(%esp)
   14cff:	57                   	push   %edi
   14d00:	c0 e8 03             	shr    $0x3,%al
   14d03:	0f b6 f0             	movzbl %al,%esi
   14d06:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   14d0c:	83 c6 01             	add    $0x1,%esi
   14d0f:	56                   	push   %esi
   14d10:	50                   	push   %eax
   14d11:	8d 83 57 10 ff ff    	lea    -0xefa9(%ebx),%eax
   14d17:	50                   	push   %eax
   14d18:	e8 e3 f2 fe ff       	call   4000 <print_asm_2>
   14d1d:	83 c4 7c             	add    $0x7c,%esp
   14d20:	89 f0                	mov    %esi,%eax
   14d22:	5b                   	pop    %ebx
   14d23:	5e                   	pop    %esi
   14d24:	5f                   	pop    %edi
   14d25:	5d                   	pop    %ebp
   14d26:	c3                   	ret    
   14d27:	89 f6                	mov    %esi,%esi
   14d29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   14d30:	0f b7 44 24 14       	movzwl 0x14(%esp),%eax
   14d35:	89 44 24 14          	mov    %eax,0x14(%esp)
   14d39:	eb ad                	jmp    14ce8 <cmp_i2eax_v+0x78>
   14d3b:	8d 83 70 10 ff ff    	lea    -0xef90(%ebx),%eax
   14d41:	50                   	push   %eax
   14d42:	8d 83 5b 10 ff ff    	lea    -0xefa5(%ebx),%eax
   14d48:	6a 79                	push   $0x79
   14d4a:	50                   	push   %eax
   14d4b:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   14d51:	50                   	push   %eax
   14d52:	e8 39 db fe ff       	call   2890 <__assert_fail@plt>
   14d57:	89 f6                	mov    %esi,%esi
   14d59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00014d60 <cmp_i2rm_v>:
   14d60:	55                   	push   %ebp
   14d61:	57                   	push   %edi
   14d62:	56                   	push   %esi
   14d63:	53                   	push   %ebx
   14d64:	e8 57 df fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14d69:	81 c3 97 62 01 00    	add    $0x16297,%ebx
   14d6f:	83 ec 24             	sub    $0x24,%esp
   14d72:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14d78:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   14d7c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   14d82:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   14d88:	0f b6 00             	movzbl (%eax),%eax
   14d8b:	89 42 10             	mov    %eax,0x10(%edx)
   14d8e:	89 47 10             	mov    %eax,0x10(%edi)
   14d91:	8d 45 01             	lea    0x1(%ebp),%eax
   14d94:	52                   	push   %edx
   14d95:	89 54 24 18          	mov    %edx,0x18(%esp)
   14d99:	50                   	push   %eax
   14d9a:	e8 c1 f8 fe ff       	call   4660 <modrm_rm>
   14d9f:	8b 77 10             	mov    0x10(%edi),%esi
   14da2:	83 c0 01             	add    $0x1,%eax
   14da5:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   14da9:	01 c5                	add    %eax,%ebp
   14dab:	83 c4 10             	add    $0x10,%esp
   14dae:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   14db4:	89 6f 04             	mov    %ebp,0x4(%edi)
   14db7:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   14dbb:	c1 ee 03             	shr    $0x3,%esi
   14dbe:	01 c6                	add    %eax,%esi
   14dc0:	89 f0                	mov    %esi,%eax
   14dc2:	0f b6 e8             	movzbl %al,%ebp
   14dc5:	8b 42 10             	mov    0x10(%edx),%eax
   14dc8:	83 f8 08             	cmp    $0x8,%eax
   14dcb:	74 3b                	je     14e08 <cmp_i2rm_v+0xa8>
   14dcd:	83 f8 10             	cmp    $0x10,%eax
   14dd0:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   14dd6:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   14ddc:	0f 44 c1             	cmove  %ecx,%eax
   14ddf:	83 ec 0c             	sub    $0xc,%esp
   14de2:	52                   	push   %edx
   14de3:	57                   	push   %edi
   14de4:	55                   	push   %ebp
   14de5:	50                   	push   %eax
   14de6:	8d 83 57 10 ff ff    	lea    -0xefa9(%ebx),%eax
   14dec:	50                   	push   %eax
   14ded:	e8 0e f2 fe ff       	call   4000 <print_asm_2>
   14df2:	83 c4 20             	add    $0x20,%esp
   14df5:	e8 c6 fa ff ff       	call   148c0 <instr_execute_2op>
   14dfa:	83 c4 1c             	add    $0x1c,%esp
   14dfd:	89 f0                	mov    %esi,%eax
   14dff:	5b                   	pop    %ebx
   14e00:	5e                   	pop    %esi
   14e01:	5f                   	pop    %edi
   14e02:	5d                   	pop    %ebp
   14e03:	c3                   	ret    
   14e04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14e08:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   14e0e:	eb cf                	jmp    14ddf <cmp_i2rm_v+0x7f>

00014e10 <cmp_rm2r_v>:
   14e10:	55                   	push   %ebp
   14e11:	57                   	push   %edi
   14e12:	56                   	push   %esi
   14e13:	53                   	push   %ebx
   14e14:	e8 a7 de fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14e19:	81 c3 e7 61 01 00    	add    $0x161e7,%ebx
   14e1f:	83 ec 10             	sub    $0x10,%esp
   14e22:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   14e28:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   14e2e:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   14e34:	0f b6 00             	movzbl (%eax),%eax
   14e37:	89 45 10             	mov    %eax,0x10(%ebp)
   14e3a:	89 47 10             	mov    %eax,0x10(%edi)
   14e3d:	55                   	push   %ebp
   14e3e:	57                   	push   %edi
   14e3f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   14e43:	83 c0 01             	add    $0x1,%eax
   14e46:	50                   	push   %eax
   14e47:	e8 44 f7 fe ff       	call   4590 <modrm_r_rm>
   14e4c:	8d 70 01             	lea    0x1(%eax),%esi
   14e4f:	83 c4 10             	add    $0x10,%esp
   14e52:	89 f0                	mov    %esi,%eax
   14e54:	0f b6 c8             	movzbl %al,%ecx
   14e57:	8b 47 10             	mov    0x10(%edi),%eax
   14e5a:	83 f8 08             	cmp    $0x8,%eax
   14e5d:	74 41                	je     14ea0 <cmp_rm2r_v+0x90>
   14e5f:	83 f8 10             	cmp    $0x10,%eax
   14e62:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   14e68:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   14e6e:	0f 44 c2             	cmove  %edx,%eax
   14e71:	83 ec 0c             	sub    $0xc,%esp
   14e74:	57                   	push   %edi
   14e75:	55                   	push   %ebp
   14e76:	51                   	push   %ecx
   14e77:	50                   	push   %eax
   14e78:	8d 83 57 10 ff ff    	lea    -0xefa9(%ebx),%eax
   14e7e:	50                   	push   %eax
   14e7f:	e8 7c f1 fe ff       	call   4000 <print_asm_2>
   14e84:	83 c4 20             	add    $0x20,%esp
   14e87:	e8 34 fa ff ff       	call   148c0 <instr_execute_2op>
   14e8c:	83 c4 0c             	add    $0xc,%esp
   14e8f:	89 f0                	mov    %esi,%eax
   14e91:	5b                   	pop    %ebx
   14e92:	5e                   	pop    %esi
   14e93:	5f                   	pop    %edi
   14e94:	5d                   	pop    %ebp
   14e95:	c3                   	ret    
   14e96:	8d 76 00             	lea    0x0(%esi),%esi
   14e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   14ea0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   14ea6:	eb c9                	jmp    14e71 <cmp_rm2r_v+0x61>
   14ea8:	90                   	nop
   14ea9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00014eb0 <cmp_i2rm_b>:
   14eb0:	55                   	push   %ebp
   14eb1:	57                   	push   %edi
   14eb2:	56                   	push   %esi
   14eb3:	53                   	push   %ebx
   14eb4:	e8 07 de fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14eb9:	81 c3 47 61 01 00    	add    $0x16147,%ebx
   14ebf:	83 ec 24             	sub    $0x24,%esp
   14ec2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   14ec6:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   14ecc:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   14ed2:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   14ed9:	8d 45 01             	lea    0x1(%ebp),%eax
   14edc:	52                   	push   %edx
   14edd:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   14ee4:	89 54 24 18          	mov    %edx,0x18(%esp)
   14ee8:	50                   	push   %eax
   14ee9:	e8 72 f7 fe ff       	call   4660 <modrm_rm>
   14eee:	8b 77 10             	mov    0x10(%edi),%esi
   14ef1:	83 c0 01             	add    $0x1,%eax
   14ef4:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   14ef8:	01 c5                	add    %eax,%ebp
   14efa:	83 c4 10             	add    $0x10,%esp
   14efd:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   14f03:	89 6f 04             	mov    %ebp,0x4(%edi)
   14f06:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   14f0a:	c1 ee 03             	shr    $0x3,%esi
   14f0d:	01 c6                	add    %eax,%esi
   14f0f:	89 f0                	mov    %esi,%eax
   14f11:	0f b6 e8             	movzbl %al,%ebp
   14f14:	8b 42 10             	mov    0x10(%edx),%eax
   14f17:	83 f8 08             	cmp    $0x8,%eax
   14f1a:	74 3c                	je     14f58 <cmp_i2rm_b+0xa8>
   14f1c:	83 f8 10             	cmp    $0x10,%eax
   14f1f:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   14f25:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   14f2b:	0f 44 c1             	cmove  %ecx,%eax
   14f2e:	83 ec 0c             	sub    $0xc,%esp
   14f31:	52                   	push   %edx
   14f32:	57                   	push   %edi
   14f33:	55                   	push   %ebp
   14f34:	50                   	push   %eax
   14f35:	8d 83 57 10 ff ff    	lea    -0xefa9(%ebx),%eax
   14f3b:	50                   	push   %eax
   14f3c:	e8 bf f0 fe ff       	call   4000 <print_asm_2>
   14f41:	83 c4 20             	add    $0x20,%esp
   14f44:	e8 77 f9 ff ff       	call   148c0 <instr_execute_2op>
   14f49:	83 c4 1c             	add    $0x1c,%esp
   14f4c:	89 f0                	mov    %esi,%eax
   14f4e:	5b                   	pop    %ebx
   14f4f:	5e                   	pop    %esi
   14f50:	5f                   	pop    %edi
   14f51:	5d                   	pop    %ebp
   14f52:	c3                   	ret    
   14f53:	90                   	nop
   14f54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14f58:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   14f5e:	eb ce                	jmp    14f2e <cmp_i2rm_b+0x7e>

00014f60 <cmp_rm2r_b>:
   14f60:	55                   	push   %ebp
   14f61:	57                   	push   %edi
   14f62:	56                   	push   %esi
   14f63:	53                   	push   %ebx
   14f64:	e8 57 dd fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14f69:	81 c3 97 60 01 00    	add    $0x16097,%ebx
   14f6f:	83 ec 10             	sub    $0x10,%esp
   14f72:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   14f78:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   14f7e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   14f85:	55                   	push   %ebp
   14f86:	57                   	push   %edi
   14f87:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   14f8b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   14f92:	83 c0 01             	add    $0x1,%eax
   14f95:	50                   	push   %eax
   14f96:	e8 f5 f5 fe ff       	call   4590 <modrm_r_rm>
   14f9b:	8d 70 01             	lea    0x1(%eax),%esi
   14f9e:	83 c4 10             	add    $0x10,%esp
   14fa1:	89 f0                	mov    %esi,%eax
   14fa3:	0f b6 c8             	movzbl %al,%ecx
   14fa6:	8b 47 10             	mov    0x10(%edi),%eax
   14fa9:	83 f8 08             	cmp    $0x8,%eax
   14fac:	74 3a                	je     14fe8 <cmp_rm2r_b+0x88>
   14fae:	83 f8 10             	cmp    $0x10,%eax
   14fb1:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   14fb7:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   14fbd:	0f 44 c2             	cmove  %edx,%eax
   14fc0:	83 ec 0c             	sub    $0xc,%esp
   14fc3:	57                   	push   %edi
   14fc4:	55                   	push   %ebp
   14fc5:	51                   	push   %ecx
   14fc6:	50                   	push   %eax
   14fc7:	8d 83 57 10 ff ff    	lea    -0xefa9(%ebx),%eax
   14fcd:	50                   	push   %eax
   14fce:	e8 2d f0 fe ff       	call   4000 <print_asm_2>
   14fd3:	83 c4 20             	add    $0x20,%esp
   14fd6:	e8 e5 f8 ff ff       	call   148c0 <instr_execute_2op>
   14fdb:	83 c4 0c             	add    $0xc,%esp
   14fde:	89 f0                	mov    %esi,%eax
   14fe0:	5b                   	pop    %ebx
   14fe1:	5e                   	pop    %esi
   14fe2:	5f                   	pop    %edi
   14fe3:	5d                   	pop    %ebp
   14fe4:	c3                   	ret    
   14fe5:	8d 76 00             	lea    0x0(%esi),%esi
   14fe8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   14fee:	eb d0                	jmp    14fc0 <cmp_rm2r_b+0x60>

00014ff0 <cmp_r2rm_b>:
   14ff0:	55                   	push   %ebp
   14ff1:	57                   	push   %edi
   14ff2:	56                   	push   %esi
   14ff3:	53                   	push   %ebx
   14ff4:	e8 c7 dc fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   14ff9:	81 c3 07 60 01 00    	add    $0x16007,%ebx
   14fff:	83 ec 10             	sub    $0x10,%esp
   15002:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   15008:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   1500e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   15015:	57                   	push   %edi
   15016:	55                   	push   %ebp
   15017:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1501b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   15022:	83 c0 01             	add    $0x1,%eax
   15025:	50                   	push   %eax
   15026:	e8 65 f5 fe ff       	call   4590 <modrm_r_rm>
   1502b:	8d 70 01             	lea    0x1(%eax),%esi
   1502e:	83 c4 10             	add    $0x10,%esp
   15031:	89 f0                	mov    %esi,%eax
   15033:	0f b6 c8             	movzbl %al,%ecx
   15036:	8b 47 10             	mov    0x10(%edi),%eax
   15039:	83 f8 08             	cmp    $0x8,%eax
   1503c:	74 3a                	je     15078 <cmp_r2rm_b+0x88>
   1503e:	83 f8 10             	cmp    $0x10,%eax
   15041:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   15047:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1504d:	0f 44 c2             	cmove  %edx,%eax
   15050:	83 ec 0c             	sub    $0xc,%esp
   15053:	57                   	push   %edi
   15054:	55                   	push   %ebp
   15055:	51                   	push   %ecx
   15056:	50                   	push   %eax
   15057:	8d 83 57 10 ff ff    	lea    -0xefa9(%ebx),%eax
   1505d:	50                   	push   %eax
   1505e:	e8 9d ef fe ff       	call   4000 <print_asm_2>
   15063:	83 c4 20             	add    $0x20,%esp
   15066:	e8 55 f8 ff ff       	call   148c0 <instr_execute_2op>
   1506b:	83 c4 0c             	add    $0xc,%esp
   1506e:	89 f0                	mov    %esi,%eax
   15070:	5b                   	pop    %ebx
   15071:	5e                   	pop    %esi
   15072:	5f                   	pop    %edi
   15073:	5d                   	pop    %ebp
   15074:	c3                   	ret    
   15075:	8d 76 00             	lea    0x0(%esi),%esi
   15078:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   1507e:	eb d0                	jmp    15050 <cmp_r2rm_b+0x60>

00015080 <data_size_16>:
   15080:	56                   	push   %esi
   15081:	53                   	push   %ebx
   15082:	e8 39 dc fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15087:	81 c3 79 5f 01 00    	add    $0x15f79,%ebx
   1508d:	83 ec 0c             	sub    $0xc,%esp
   15090:	8b 44 24 18          	mov    0x18(%esp),%eax
   15094:	6a 01                	push   $0x1
   15096:	c6 83 77 13 00 00 10 	movb   $0x10,0x1377(%ebx)
   1509d:	8d 70 01             	lea    0x1(%eax),%esi
   150a0:	56                   	push   %esi
   150a1:	e8 3a 52 00 00       	call   1a2e0 <instr_fetch>
   150a6:	5a                   	pop    %edx
   150a7:	59                   	pop    %ecx
   150a8:	0f b6 c0             	movzbl %al,%eax
   150ab:	8d 93 a0 0b 00 00    	lea    0xba0(%ebx),%edx
   150b1:	50                   	push   %eax
   150b2:	56                   	push   %esi
   150b3:	ff 14 82             	call   *(%edx,%eax,4)
   150b6:	c6 83 77 13 00 00 20 	movb   $0x20,0x1377(%ebx)
   150bd:	83 c4 14             	add    $0x14,%esp
   150c0:	83 c0 01             	add    $0x1,%eax
   150c3:	5b                   	pop    %ebx
   150c4:	5e                   	pop    %esi
   150c5:	c3                   	ret    
   150c6:	66 90                	xchg   %ax,%ax
   150c8:	66 90                	xchg   %ax,%ax
   150ca:	66 90                	xchg   %ax,%ax
   150cc:	66 90                	xchg   %ax,%ax
   150ce:	66 90                	xchg   %ax,%ax

000150d0 <xor_r2rm_v>:
   150d0:	55                   	push   %ebp
   150d1:	57                   	push   %edi
   150d2:	56                   	push   %esi
   150d3:	53                   	push   %ebx
   150d4:	e8 e7 db fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   150d9:	81 c3 27 5f 01 00    	add    $0x15f27,%ebx
   150df:	83 ec 10             	sub    $0x10,%esp
   150e2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   150e8:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   150ee:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   150f4:	0f b6 00             	movzbl (%eax),%eax
   150f7:	56                   	push   %esi
   150f8:	57                   	push   %edi
   150f9:	89 46 10             	mov    %eax,0x10(%esi)
   150fc:	89 47 10             	mov    %eax,0x10(%edi)
   150ff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15103:	83 c0 01             	add    $0x1,%eax
   15106:	50                   	push   %eax
   15107:	e8 84 f4 fe ff       	call   4590 <modrm_r_rm>
   1510c:	8d 68 01             	lea    0x1(%eax),%ebp
   1510f:	83 c4 10             	add    $0x10,%esp
   15112:	89 e8                	mov    %ebp,%eax
   15114:	0f b6 c8             	movzbl %al,%ecx
   15117:	8b 46 10             	mov    0x10(%esi),%eax
   1511a:	83 f8 08             	cmp    $0x8,%eax
   1511d:	74 61                	je     15180 <xor_r2rm_v+0xb0>
   1511f:	83 f8 10             	cmp    $0x10,%eax
   15122:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   15128:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1512e:	0f 44 c2             	cmove  %edx,%eax
   15131:	83 ec 0c             	sub    $0xc,%esp
   15134:	56                   	push   %esi
   15135:	57                   	push   %edi
   15136:	51                   	push   %ecx
   15137:	50                   	push   %eax
   15138:	8d 83 7c 10 ff ff    	lea    -0xef84(%ebx),%eax
   1513e:	50                   	push   %eax
   1513f:	e8 bc ee fe ff       	call   4000 <print_asm_2>
   15144:	83 c4 14             	add    $0x14,%esp
   15147:	57                   	push   %edi
   15148:	e8 53 f5 fe ff       	call   46a0 <operand_read>
   1514d:	89 34 24             	mov    %esi,(%esp)
   15150:	e8 4b f5 fe ff       	call   46a0 <operand_read>
   15155:	58                   	pop    %eax
   15156:	5a                   	pop    %edx
   15157:	ff 76 0c             	pushl  0xc(%esi)
   1515a:	ff 77 0c             	pushl  0xc(%edi)
   1515d:	e8 de 64 ff ff       	call   b640 <alu_xor>
   15162:	89 34 24             	mov    %esi,(%esp)
   15165:	89 46 0c             	mov    %eax,0xc(%esi)
   15168:	e8 c3 f6 fe ff       	call   4830 <operand_write>
   1516d:	83 c4 1c             	add    $0x1c,%esp
   15170:	89 e8                	mov    %ebp,%eax
   15172:	5b                   	pop    %ebx
   15173:	5e                   	pop    %esi
   15174:	5f                   	pop    %edi
   15175:	5d                   	pop    %ebp
   15176:	c3                   	ret    
   15177:	89 f6                	mov    %esi,%esi
   15179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   15180:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   15186:	eb a9                	jmp    15131 <xor_r2rm_v+0x61>
   15188:	66 90                	xchg   %ax,%ax
   1518a:	66 90                	xchg   %ax,%ax
   1518c:	66 90                	xchg   %ax,%ax
   1518e:	66 90                	xchg   %ax,%ax

00015190 <cltd>:
   15190:	53                   	push   %ebx
   15191:	e8 2a db fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15196:	81 c3 6a 5e 01 00    	add    $0x15e6a,%ebx
   1519c:	83 ec 64             	sub    $0x64,%esp
   1519f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   151a5:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   151ac:	00 
   151ad:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   151b4:	00 
   151b5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   151bc:	00 
   151bd:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   151c4:	00 
   151c5:	0f b6 00             	movzbl (%eax),%eax
   151c8:	89 44 24 24          	mov    %eax,0x24(%esp)
   151cc:	89 44 24 48          	mov    %eax,0x48(%esp)
   151d0:	8d 44 24 14          	lea    0x14(%esp),%eax
   151d4:	50                   	push   %eax
   151d5:	e8 c6 f4 fe ff       	call   46a0 <operand_read>
   151da:	8b 44 24 24          	mov    0x24(%esp),%eax
   151de:	c1 f8 1f             	sar    $0x1f,%eax
   151e1:	89 44 24 48          	mov    %eax,0x48(%esp)
   151e5:	58                   	pop    %eax
   151e6:	8d 44 24 38          	lea    0x38(%esp),%eax
   151ea:	50                   	push   %eax
   151eb:	e8 40 f6 fe ff       	call   4830 <operand_write>
   151f0:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   151f6:	83 c4 0c             	add    $0xc,%esp
   151f9:	6a 01                	push   $0x1
   151fb:	50                   	push   %eax
   151fc:	8d 83 80 10 ff ff    	lea    -0xef80(%ebx),%eax
   15202:	50                   	push   %eax
   15203:	e8 28 ec fe ff       	call   3e30 <print_asm_0>
   15208:	83 c4 68             	add    $0x68,%esp
   1520b:	b8 01 00 00 00       	mov    $0x1,%eax
   15210:	5b                   	pop    %ebx
   15211:	c3                   	ret    
   15212:	66 90                	xchg   %ax,%ax
   15214:	66 90                	xchg   %ax,%ax
   15216:	66 90                	xchg   %ax,%ax
   15218:	66 90                	xchg   %ax,%ax
   1521a:	66 90                	xchg   %ax,%ax
   1521c:	66 90                	xchg   %ax,%ax
   1521e:	66 90                	xchg   %ax,%ax

00015220 <HLT_Thread>:
   15220:	56                   	push   %esi
   15221:	53                   	push   %ebx
   15222:	e8 99 da fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15227:	81 c3 d9 5d 01 00    	add    $0x15dd9,%ebx
   1522d:	83 ec 04             	sub    $0x4,%esp
   15230:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   15236:	80 be a0 00 00 00 00 	cmpb   $0x0,0xa0(%esi)
   1523d:	75 17                	jne    15256 <HLT_Thread+0x36>
   1523f:	90                   	nop
   15240:	83 ec 0c             	sub    $0xc,%esp
   15243:	6a 01                	push   $0x1
   15245:	e8 f6 d3 fe ff       	call   2640 <SDL_Delay@plt>
   1524a:	83 c4 10             	add    $0x10,%esp
   1524d:	80 be a0 00 00 00 00 	cmpb   $0x0,0xa0(%esi)
   15254:	74 ea                	je     15240 <HLT_Thread+0x20>
   15256:	83 c4 04             	add    $0x4,%esp
   15259:	31 c0                	xor    %eax,%eax
   1525b:	5b                   	pop    %ebx
   1525c:	5e                   	pop    %esi
   1525d:	c3                   	ret    
   1525e:	66 90                	xchg   %ax,%ax

00015260 <hlt>:
   15260:	53                   	push   %ebx
   15261:	e8 5a da fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15266:	81 c3 9a 5d 01 00    	add    $0x15d9a,%ebx
   1526c:	83 ec 0c             	sub    $0xc,%esp
   1526f:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15275:	6a 01                	push   $0x1
   15277:	50                   	push   %eax
   15278:	8d 83 85 10 ff ff    	lea    -0xef7b(%ebx),%eax
   1527e:	50                   	push   %eax
   1527f:	e8 ac eb fe ff       	call   3e30 <print_asm_0>
   15284:	58                   	pop    %eax
   15285:	8d 83 20 a2 fe ff    	lea    -0x15de0(%ebx),%eax
   1528b:	5a                   	pop    %edx
   1528c:	6a 00                	push   $0x0
   1528e:	50                   	push   %eax
   1528f:	e8 ec d3 fe ff       	call   2680 <SDL_CreateThread@plt>
   15294:	83 c4 10             	add    $0x10,%esp
   15297:	85 c0                	test   %eax,%eax
   15299:	74 1d                	je     152b8 <hlt+0x58>
   1529b:	83 ec 08             	sub    $0x8,%esp
   1529e:	6a 00                	push   $0x0
   152a0:	50                   	push   %eax
   152a1:	e8 ca d5 fe ff       	call   2870 <SDL_WaitThread@plt>
   152a6:	83 c4 10             	add    $0x10,%esp
   152a9:	b8 01 00 00 00       	mov    $0x1,%eax
   152ae:	83 c4 08             	add    $0x8,%esp
   152b1:	5b                   	pop    %ebx
   152b2:	c3                   	ret    
   152b3:	90                   	nop
   152b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   152b8:	e8 a3 d3 fe ff       	call   2660 <SDL_GetError@plt>
   152bd:	83 ec 08             	sub    $0x8,%esp
   152c0:	50                   	push   %eax
   152c1:	8d 83 8c 10 ff ff    	lea    -0xef74(%ebx),%eax
   152c7:	50                   	push   %eax
   152c8:	e8 f3 d4 fe ff       	call   27c0 <printf@plt>
   152cd:	83 c4 10             	add    $0x10,%esp
   152d0:	b8 01 00 00 00       	mov    $0x1,%eax
   152d5:	83 c4 08             	add    $0x8,%esp
   152d8:	5b                   	pop    %ebx
   152d9:	c3                   	ret    
   152da:	66 90                	xchg   %ax,%ax
   152dc:	66 90                	xchg   %ax,%ax
   152de:	66 90                	xchg   %ax,%ax

000152e0 <setne_rm_b>:
   152e0:	57                   	push   %edi
   152e1:	56                   	push   %esi
   152e2:	53                   	push   %ebx
   152e3:	e8 d8 d9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   152e8:	81 c3 18 5d 01 00    	add    $0x15d18,%ebx
   152ee:	83 ec 38             	sub    $0x38,%esp
   152f1:	8d 7c 24 14          	lea    0x14(%esp),%edi
   152f5:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   152fc:	00 
   152fd:	57                   	push   %edi
   152fe:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   15302:	83 c0 01             	add    $0x1,%eax
   15305:	50                   	push   %eax
   15306:	e8 55 f3 fe ff       	call   4660 <modrm_rm>
   1530b:	8d 70 01             	lea    0x1(%eax),%esi
   1530e:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   15314:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   15318:	89 3c 24             	mov    %edi,(%esp)
   1531b:	c0 ea 06             	shr    $0x6,%dl
   1531e:	83 f2 01             	xor    $0x1,%edx
   15321:	83 e2 01             	and    $0x1,%edx
   15324:	89 54 24 28          	mov    %edx,0x28(%esp)
   15328:	e8 03 f5 fe ff       	call   4830 <operand_write>
   1532d:	89 f0                	mov    %esi,%eax
   1532f:	57                   	push   %edi
   15330:	0f b6 c0             	movzbl %al,%eax
   15333:	50                   	push   %eax
   15334:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1533a:	50                   	push   %eax
   1533b:	8d 83 b2 10 ff ff    	lea    -0xef4e(%ebx),%eax
   15341:	50                   	push   %eax
   15342:	e8 c9 eb fe ff       	call   3f10 <print_asm_1>
   15347:	83 c4 50             	add    $0x50,%esp
   1534a:	89 f0                	mov    %esi,%eax
   1534c:	5b                   	pop    %ebx
   1534d:	5e                   	pop    %esi
   1534e:	5f                   	pop    %edi
   1534f:	c3                   	ret    

00015350 <sete_rm_b>:
   15350:	57                   	push   %edi
   15351:	56                   	push   %esi
   15352:	53                   	push   %ebx
   15353:	e8 68 d9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15358:	81 c3 a8 5c 01 00    	add    $0x15ca8,%ebx
   1535e:	83 ec 38             	sub    $0x38,%esp
   15361:	8d 7c 24 14          	lea    0x14(%esp),%edi
   15365:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   1536c:	00 
   1536d:	57                   	push   %edi
   1536e:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   15372:	83 c0 01             	add    $0x1,%eax
   15375:	50                   	push   %eax
   15376:	e8 e5 f2 fe ff       	call   4660 <modrm_rm>
   1537b:	8d 70 01             	lea    0x1(%eax),%esi
   1537e:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   15384:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   15388:	89 3c 24             	mov    %edi,(%esp)
   1538b:	c0 ea 06             	shr    $0x6,%dl
   1538e:	83 e2 01             	and    $0x1,%edx
   15391:	89 54 24 28          	mov    %edx,0x28(%esp)
   15395:	e8 96 f4 fe ff       	call   4830 <operand_write>
   1539a:	89 f0                	mov    %esi,%eax
   1539c:	57                   	push   %edi
   1539d:	0f b6 c0             	movzbl %al,%eax
   153a0:	50                   	push   %eax
   153a1:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   153a7:	50                   	push   %eax
   153a8:	8d 83 b8 10 ff ff    	lea    -0xef48(%ebx),%eax
   153ae:	50                   	push   %eax
   153af:	e8 5c eb fe ff       	call   3f10 <print_asm_1>
   153b4:	83 c4 50             	add    $0x50,%esp
   153b7:	89 f0                	mov    %esi,%eax
   153b9:	5b                   	pop    %ebx
   153ba:	5e                   	pop    %esi
   153bb:	5f                   	pop    %edi
   153bc:	c3                   	ret    
   153bd:	66 90                	xchg   %ax,%ax
   153bf:	90                   	nop

000153c0 <idiv_rm2a_b>:
   153c0:	55                   	push   %ebp
   153c1:	57                   	push   %edi
   153c2:	56                   	push   %esi
   153c3:	53                   	push   %ebx
   153c4:	e8 f7 d8 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   153c9:	81 c3 37 5c 01 00    	add    $0x15c37,%ebx
   153cf:	81 ec b8 00 00 00    	sub    $0xb8,%esp
   153d5:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
   153d9:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   153e0:	00 
   153e1:	c7 44 24 2c 10 00 00 	movl   $0x10,0x2c(%esp)
   153e8:	00 
   153e9:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   153f0:	00 
   153f1:	57                   	push   %edi
   153f2:	e8 a9 f2 fe ff       	call   46a0 <operand_read>
   153f7:	c7 44 24 54 08 00 00 	movl   $0x8,0x54(%esp)
   153fe:	00 
   153ff:	58                   	pop    %eax
   15400:	5a                   	pop    %edx
   15401:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   15405:	56                   	push   %esi
   15406:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   1540d:	83 c0 01             	add    $0x1,%eax
   15410:	50                   	push   %eax
   15411:	e8 4a f2 fe ff       	call   4660 <modrm_rm>
   15416:	83 c0 01             	add    $0x1,%eax
   15419:	89 34 24             	mov    %esi,(%esp)
   1541c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   15420:	e8 7b f2 fe ff       	call   46a0 <operand_read>
   15425:	0f bf 44 24 2c       	movswl 0x2c(%esp),%eax
   1542a:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
   15431:	99                   	cltd   
   15432:	52                   	push   %edx
   15433:	50                   	push   %eax
   15434:	0f be 44 24 58       	movsbl 0x58(%esp),%eax
   15439:	99                   	cltd   
   1543a:	52                   	push   %edx
   1543b:	50                   	push   %eax
   1543c:	e8 ff 60 ff ff       	call   b540 <alu_idiv>
   15441:	83 c4 20             	add    $0x20,%esp
   15444:	89 c5                	mov    %eax,%ebp
   15446:	0f bf 44 24 1c       	movswl 0x1c(%esp),%eax
   1544b:	99                   	cltd   
   1544c:	52                   	push   %edx
   1544d:	50                   	push   %eax
   1544e:	0f be 44 24 48       	movsbl 0x48(%esp),%eax
   15453:	99                   	cltd   
   15454:	52                   	push   %edx
   15455:	50                   	push   %eax
   15456:	e8 45 61 ff ff       	call   b5a0 <alu_imod>
   1545b:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   15462:	01 00 00 00 
   15466:	89 44 24 74          	mov    %eax,0x74(%esp)
   1546a:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   15471:	00 
   15472:	c7 84 24 9c 00 00 00 	movl   $0x8,0x9c(%esp)
   15479:	08 00 00 00 
   1547d:	c7 44 24 78 08 00 00 	movl   $0x8,0x78(%esp)
   15484:	00 
   15485:	c7 44 24 6c 04 00 00 	movl   $0x4,0x6c(%esp)
   1548c:	00 
   1548d:	c7 84 24 90 00 00 00 	movl   $0x0,0x90(%esp)
   15494:	00 00 00 00 
   15498:	89 ac 24 98 00 00 00 	mov    %ebp,0x98(%esp)
   1549f:	59                   	pop    %ecx
   154a0:	8d 44 24 64          	lea    0x64(%esp),%eax
   154a4:	50                   	push   %eax
   154a5:	e8 86 f3 fe ff       	call   4830 <operand_write>
   154aa:	5d                   	pop    %ebp
   154ab:	8d 84 24 88 00 00 00 	lea    0x88(%esp),%eax
   154b2:	50                   	push   %eax
   154b3:	e8 78 f3 fe ff       	call   4830 <operand_write>
   154b8:	89 3c 24             	mov    %edi,(%esp)
   154bb:	56                   	push   %esi
   154bc:	8b 7c 24 20          	mov    0x20(%esp),%edi
   154c0:	89 f8                	mov    %edi,%eax
   154c2:	0f b6 c0             	movzbl %al,%eax
   154c5:	50                   	push   %eax
   154c6:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   154cc:	50                   	push   %eax
   154cd:	8d 83 bd 10 ff ff    	lea    -0xef43(%ebx),%eax
   154d3:	50                   	push   %eax
   154d4:	e8 27 eb fe ff       	call   4000 <print_asm_2>
   154d9:	81 c4 cc 00 00 00    	add    $0xcc,%esp
   154df:	89 f8                	mov    %edi,%eax
   154e1:	5b                   	pop    %ebx
   154e2:	5e                   	pop    %esi
   154e3:	5f                   	pop    %edi
   154e4:	5d                   	pop    %ebp
   154e5:	c3                   	ret    
   154e6:	8d 76 00             	lea    0x0(%esi),%esi
   154e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000154f0 <idiv_rm2a_v>:
   154f0:	55                   	push   %ebp
   154f1:	57                   	push   %edi
   154f2:	56                   	push   %esi
   154f3:	53                   	push   %ebx
   154f4:	e8 c7 d7 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   154f9:	81 c3 07 5b 01 00    	add    $0x15b07,%ebx
   154ff:	81 ec a8 00 00 00    	sub    $0xa8,%esp
   15505:	8d b3 77 13 00 00    	lea    0x1377(%ebx),%esi
   1550b:	8d 6c 24 30          	lea    0x30(%esp),%ebp
   1550f:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   15516:	00 
   15517:	c7 44 24 54 01 00 00 	movl   $0x1,0x54(%esp)
   1551e:	00 
   1551f:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   15526:	00 
   15527:	c7 44 24 58 02 00 00 	movl   $0x2,0x58(%esp)
   1552e:	00 
   1552f:	0f b6 06             	movzbl (%esi),%eax
   15532:	89 44 24 40          	mov    %eax,0x40(%esp)
   15536:	89 44 24 64          	mov    %eax,0x64(%esp)
   1553a:	55                   	push   %ebp
   1553b:	e8 60 f1 fe ff       	call   46a0 <operand_read>
   15540:	58                   	pop    %eax
   15541:	8d 44 24 54          	lea    0x54(%esp),%eax
   15545:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   15549:	50                   	push   %eax
   1554a:	e8 51 f1 fe ff       	call   46a0 <operand_read>
   1554f:	0f b6 06             	movzbl (%esi),%eax
   15552:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%esp)
   15559:	58                   	pop    %eax
   1555a:	5a                   	pop    %edx
   1555b:	8d 44 24 74          	lea    0x74(%esp),%eax
   1555f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   15563:	89 c7                	mov    %eax,%edi
   15565:	50                   	push   %eax
   15566:	8b 84 24 bc 00 00 00 	mov    0xbc(%esp),%eax
   1556d:	83 c0 01             	add    $0x1,%eax
   15570:	50                   	push   %eax
   15571:	e8 ea f0 fe ff       	call   4660 <modrm_rm>
   15576:	83 c0 01             	add    $0x1,%eax
   15579:	89 3c 24             	mov    %edi,(%esp)
   1557c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   15580:	e8 1b f1 fe ff       	call   46a0 <operand_read>
   15585:	0f b6 06             	movzbl (%esi),%eax
   15588:	83 c4 10             	add    $0x10,%esp
   1558b:	3c 10                	cmp    $0x10,%al
   1558d:	0f 84 95 00 00 00    	je     15628 <idiv_rm2a_v+0x138>
   15593:	8b 74 24 30          	mov    0x30(%esp),%esi
   15597:	8b 7c 24 54          	mov    0x54(%esp),%edi
   1559b:	83 ec 0c             	sub    $0xc,%esp
   1559e:	50                   	push   %eax
   1559f:	57                   	push   %edi
   155a0:	56                   	push   %esi
   155a1:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   155a8:	99                   	cltd   
   155a9:	52                   	push   %edx
   155aa:	50                   	push   %eax
   155ab:	e8 90 5f ff ff       	call   b540 <alu_idiv>
   155b0:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   155b4:	83 c4 20             	add    $0x20,%esp
   155b7:	57                   	push   %edi
   155b8:	56                   	push   %esi
   155b9:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   155c0:	99                   	cltd   
   155c1:	52                   	push   %edx
   155c2:	50                   	push   %eax
   155c3:	e8 d8 5f ff ff       	call   b5a0 <alu_imod>
   155c8:	89 44 24 28          	mov    %eax,0x28(%esp)
   155cc:	5a                   	pop    %edx
   155cd:	59                   	pop    %ecx
   155ce:	55                   	push   %ebp
   155cf:	ff 74 24 1c          	pushl  0x1c(%esp)
   155d3:	ff 74 24 24          	pushl  0x24(%esp)
   155d7:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
   155dc:	52                   	push   %edx
   155dd:	8d 93 f9 00 ff ff    	lea    -0xff07(%ebx),%edx
   155e3:	52                   	push   %edx
   155e4:	8d 93 bd 10 ff ff    	lea    -0xef43(%ebx),%edx
   155ea:	52                   	push   %edx
   155eb:	e8 30 eb fe ff       	call   4120 <print_asm_3>
   155f0:	83 c4 20             	add    $0x20,%esp
   155f3:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   155f7:	8b 44 24 18          	mov    0x18(%esp),%eax
   155fb:	89 4c 24 30          	mov    %ecx,0x30(%esp)
   155ff:	89 44 24 54          	mov    %eax,0x54(%esp)
   15603:	83 ec 0c             	sub    $0xc,%esp
   15606:	55                   	push   %ebp
   15607:	e8 24 f2 fe ff       	call   4830 <operand_write>
   1560c:	58                   	pop    %eax
   1560d:	ff 74 24 1c          	pushl  0x1c(%esp)
   15611:	e8 1a f2 fe ff       	call   4830 <operand_write>
   15616:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1561a:	81 c4 ac 00 00 00    	add    $0xac,%esp
   15620:	5b                   	pop    %ebx
   15621:	5e                   	pop    %esi
   15622:	5f                   	pop    %edi
   15623:	5d                   	pop    %ebp
   15624:	c3                   	ret    
   15625:	8d 76 00             	lea    0x0(%esi),%esi
   15628:	83 ec 0c             	sub    $0xc,%esp
   1562b:	6a 10                	push   $0x10
   1562d:	8b 44 24 64          	mov    0x64(%esp),%eax
   15631:	c1 e0 10             	shl    $0x10,%eax
   15634:	0b 44 24 40          	or     0x40(%esp),%eax
   15638:	99                   	cltd   
   15639:	52                   	push   %edx
   1563a:	50                   	push   %eax
   1563b:	0f bf 84 24 90 00 00 	movswl 0x90(%esp),%eax
   15642:	00 
   15643:	99                   	cltd   
   15644:	52                   	push   %edx
   15645:	50                   	push   %eax
   15646:	e8 f5 5e ff ff       	call   b540 <alu_idiv>
   1564b:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   1564f:	83 c4 20             	add    $0x20,%esp
   15652:	8b 44 24 54          	mov    0x54(%esp),%eax
   15656:	c1 e0 10             	shl    $0x10,%eax
   15659:	0b 44 24 30          	or     0x30(%esp),%eax
   1565d:	99                   	cltd   
   1565e:	52                   	push   %edx
   1565f:	50                   	push   %eax
   15660:	0f bf 84 24 80 00 00 	movswl 0x80(%esp),%eax
   15667:	00 
   15668:	99                   	cltd   
   15669:	52                   	push   %edx
   1566a:	50                   	push   %eax
   1566b:	e8 30 5f ff ff       	call   b5a0 <alu_imod>
   15670:	89 44 24 28          	mov    %eax,0x28(%esp)
   15674:	5e                   	pop    %esi
   15675:	5f                   	pop    %edi
   15676:	55                   	push   %ebp
   15677:	ff 74 24 1c          	pushl  0x1c(%esp)
   1567b:	ff 74 24 24          	pushl  0x24(%esp)
   1567f:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
   15684:	52                   	push   %edx
   15685:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   1568b:	52                   	push   %edx
   1568c:	8d 93 bd 10 ff ff    	lea    -0xef43(%ebx),%edx
   15692:	52                   	push   %edx
   15693:	e8 88 ea fe ff       	call   4120 <print_asm_3>
   15698:	83 c4 20             	add    $0x20,%esp
   1569b:	8b 44 24 18          	mov    0x18(%esp),%eax
   1569f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   156a3:	e9 53 ff ff ff       	jmp    155fb <idiv_rm2a_v+0x10b>
   156a8:	66 90                	xchg   %ax,%ax
   156aa:	66 90                	xchg   %ax,%ax
   156ac:	66 90                	xchg   %ax,%ax
   156ae:	66 90                	xchg   %ax,%ax

000156b0 <instr_execute_2op>:
   156b0:	57                   	push   %edi
   156b1:	56                   	push   %esi
   156b2:	53                   	push   %ebx
   156b3:	e8 08 d6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   156b8:	81 c3 48 59 01 00    	add    $0x15948,%ebx
   156be:	83 ec 0c             	sub    $0xc,%esp
   156c1:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   156c7:	57                   	push   %edi
   156c8:	e8 d3 ef fe ff       	call   46a0 <operand_read>
   156cd:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   156d3:	89 34 24             	mov    %esi,(%esp)
   156d6:	e8 c5 ef fe ff       	call   46a0 <operand_read>
   156db:	83 c4 0c             	add    $0xc,%esp
   156de:	ff 76 10             	pushl  0x10(%esi)
   156e1:	ff 76 0c             	pushl  0xc(%esi)
   156e4:	ff 77 0c             	pushl  0xc(%edi)
   156e7:	e8 74 62 ff ff       	call   b960 <alu_shr>
   156ec:	89 34 24             	mov    %esi,(%esp)
   156ef:	89 46 0c             	mov    %eax,0xc(%esi)
   156f2:	e8 39 f1 fe ff       	call   4830 <operand_write>
   156f7:	83 c4 10             	add    $0x10,%esp
   156fa:	5b                   	pop    %ebx
   156fb:	5e                   	pop    %esi
   156fc:	5f                   	pop    %edi
   156fd:	c3                   	ret    
   156fe:	66 90                	xchg   %ax,%ax

00015700 <instr_execute_1op>:
   15700:	56                   	push   %esi
   15701:	53                   	push   %ebx
   15702:	e8 b9 d5 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15707:	81 c3 f9 58 01 00    	add    $0x158f9,%ebx
   1570d:	83 ec 10             	sub    $0x10,%esp
   15710:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   15716:	56                   	push   %esi
   15717:	e8 84 ef fe ff       	call   46a0 <operand_read>
   1571c:	83 c4 0c             	add    $0xc,%esp
   1571f:	ff 76 10             	pushl  0x10(%esi)
   15722:	ff 76 0c             	pushl  0xc(%esi)
   15725:	6a 01                	push   $0x1
   15727:	e8 34 62 ff ff       	call   b960 <alu_shr>
   1572c:	89 34 24             	mov    %esi,(%esp)
   1572f:	89 46 0c             	mov    %eax,0xc(%esi)
   15732:	e8 f9 f0 fe ff       	call   4830 <operand_write>
   15737:	83 c4 14             	add    $0x14,%esp
   1573a:	5b                   	pop    %ebx
   1573b:	5e                   	pop    %esi
   1573c:	c3                   	ret    
   1573d:	8d 76 00             	lea    0x0(%esi),%esi

00015740 <shr_i2rm_b>:
   15740:	55                   	push   %ebp
   15741:	57                   	push   %edi
   15742:	56                   	push   %esi
   15743:	53                   	push   %ebx
   15744:	e8 77 d5 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15749:	81 c3 b7 58 01 00    	add    $0x158b7,%ebx
   1574f:	83 ec 24             	sub    $0x24,%esp
   15752:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   15756:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   1575c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   15762:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   15769:	8d 45 01             	lea    0x1(%ebp),%eax
   1576c:	52                   	push   %edx
   1576d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   15774:	89 54 24 18          	mov    %edx,0x18(%esp)
   15778:	50                   	push   %eax
   15779:	e8 e2 ee fe ff       	call   4660 <modrm_rm>
   1577e:	8b 77 10             	mov    0x10(%edi),%esi
   15781:	83 c0 01             	add    $0x1,%eax
   15784:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   15788:	01 c5                	add    %eax,%ebp
   1578a:	83 c4 10             	add    $0x10,%esp
   1578d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   15793:	89 6f 04             	mov    %ebp,0x4(%edi)
   15796:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1579a:	c1 ee 03             	shr    $0x3,%esi
   1579d:	01 c6                	add    %eax,%esi
   1579f:	89 f0                	mov    %esi,%eax
   157a1:	0f b6 e8             	movzbl %al,%ebp
   157a4:	8b 42 10             	mov    0x10(%edx),%eax
   157a7:	83 f8 08             	cmp    $0x8,%eax
   157aa:	74 3c                	je     157e8 <shr_i2rm_b+0xa8>
   157ac:	83 f8 10             	cmp    $0x10,%eax
   157af:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   157b5:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   157bb:	0f 44 c1             	cmove  %ecx,%eax
   157be:	83 ec 0c             	sub    $0xc,%esp
   157c1:	52                   	push   %edx
   157c2:	57                   	push   %edi
   157c3:	55                   	push   %ebp
   157c4:	50                   	push   %eax
   157c5:	8d 83 c2 10 ff ff    	lea    -0xef3e(%ebx),%eax
   157cb:	50                   	push   %eax
   157cc:	e8 2f e8 fe ff       	call   4000 <print_asm_2>
   157d1:	83 c4 20             	add    $0x20,%esp
   157d4:	e8 d7 fe ff ff       	call   156b0 <instr_execute_2op>
   157d9:	83 c4 1c             	add    $0x1c,%esp
   157dc:	89 f0                	mov    %esi,%eax
   157de:	5b                   	pop    %ebx
   157df:	5e                   	pop    %esi
   157e0:	5f                   	pop    %edi
   157e1:	5d                   	pop    %ebp
   157e2:	c3                   	ret    
   157e3:	90                   	nop
   157e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   157e8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   157ee:	eb ce                	jmp    157be <shr_i2rm_b+0x7e>

000157f0 <shr_i2rm_bv>:
   157f0:	55                   	push   %ebp
   157f1:	57                   	push   %edi
   157f2:	56                   	push   %esi
   157f3:	53                   	push   %ebx
   157f4:	e8 c7 d4 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   157f9:	81 c3 07 58 01 00    	add    $0x15807,%ebx
   157ff:	83 ec 24             	sub    $0x24,%esp
   15802:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15808:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1580c:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   15812:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   15818:	0f b6 00             	movzbl (%eax),%eax
   1581b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   15822:	89 42 10             	mov    %eax,0x10(%edx)
   15825:	52                   	push   %edx
   15826:	8d 45 01             	lea    0x1(%ebp),%eax
   15829:	89 54 24 18          	mov    %edx,0x18(%esp)
   1582d:	50                   	push   %eax
   1582e:	e8 2d ee fe ff       	call   4660 <modrm_rm>
   15833:	8b 77 10             	mov    0x10(%edi),%esi
   15836:	83 c0 01             	add    $0x1,%eax
   15839:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1583d:	01 c5                	add    %eax,%ebp
   1583f:	83 c4 10             	add    $0x10,%esp
   15842:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   15848:	89 6f 04             	mov    %ebp,0x4(%edi)
   1584b:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1584f:	c1 ee 03             	shr    $0x3,%esi
   15852:	01 c6                	add    %eax,%esi
   15854:	89 f0                	mov    %esi,%eax
   15856:	0f b6 e8             	movzbl %al,%ebp
   15859:	8b 42 10             	mov    0x10(%edx),%eax
   1585c:	83 f8 08             	cmp    $0x8,%eax
   1585f:	74 3f                	je     158a0 <shr_i2rm_bv+0xb0>
   15861:	83 f8 10             	cmp    $0x10,%eax
   15864:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   1586a:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   15870:	0f 44 c1             	cmove  %ecx,%eax
   15873:	83 ec 0c             	sub    $0xc,%esp
   15876:	52                   	push   %edx
   15877:	57                   	push   %edi
   15878:	55                   	push   %ebp
   15879:	50                   	push   %eax
   1587a:	8d 83 c2 10 ff ff    	lea    -0xef3e(%ebx),%eax
   15880:	50                   	push   %eax
   15881:	e8 7a e7 fe ff       	call   4000 <print_asm_2>
   15886:	83 c4 20             	add    $0x20,%esp
   15889:	e8 22 fe ff ff       	call   156b0 <instr_execute_2op>
   1588e:	83 c4 1c             	add    $0x1c,%esp
   15891:	89 f0                	mov    %esi,%eax
   15893:	5b                   	pop    %ebx
   15894:	5e                   	pop    %esi
   15895:	5f                   	pop    %edi
   15896:	5d                   	pop    %ebp
   15897:	c3                   	ret    
   15898:	90                   	nop
   15899:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   158a0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   158a6:	eb cb                	jmp    15873 <shr_i2rm_bv+0x83>
   158a8:	90                   	nop
   158a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000158b0 <shr_c2rm_b>:
   158b0:	55                   	push   %ebp
   158b1:	57                   	push   %edi
   158b2:	56                   	push   %esi
   158b3:	53                   	push   %ebx
   158b4:	e8 07 d4 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   158b9:	81 c3 47 57 01 00    	add    $0x15747,%ebx
   158bf:	83 ec 14             	sub    $0x14,%esp
   158c2:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
   158c8:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   158ce:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   158d5:	55                   	push   %ebp
   158d6:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   158da:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   158e1:	83 c0 01             	add    $0x1,%eax
   158e4:	50                   	push   %eax
   158e5:	e8 76 ed fe ff       	call   4660 <modrm_rm>
   158ea:	8d 70 01             	lea    0x1(%eax),%esi
   158ed:	83 c4 10             	add    $0x10,%esp
   158f0:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   158f6:	c7 47 04 01 00 00 00 	movl   $0x1,0x4(%edi)
   158fd:	89 f0                	mov    %esi,%eax
   158ff:	0f b6 c8             	movzbl %al,%ecx
   15902:	8b 45 10             	mov    0x10(%ebp),%eax
   15905:	83 f8 08             	cmp    $0x8,%eax
   15908:	74 3e                	je     15948 <shr_c2rm_b+0x98>
   1590a:	83 f8 10             	cmp    $0x10,%eax
   1590d:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   15913:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   15919:	0f 44 c2             	cmove  %edx,%eax
   1591c:	83 ec 0c             	sub    $0xc,%esp
   1591f:	55                   	push   %ebp
   15920:	57                   	push   %edi
   15921:	51                   	push   %ecx
   15922:	50                   	push   %eax
   15923:	8d 83 c2 10 ff ff    	lea    -0xef3e(%ebx),%eax
   15929:	50                   	push   %eax
   1592a:	e8 d1 e6 fe ff       	call   4000 <print_asm_2>
   1592f:	83 c4 20             	add    $0x20,%esp
   15932:	e8 79 fd ff ff       	call   156b0 <instr_execute_2op>
   15937:	83 c4 0c             	add    $0xc,%esp
   1593a:	89 f0                	mov    %esi,%eax
   1593c:	5b                   	pop    %ebx
   1593d:	5e                   	pop    %esi
   1593e:	5f                   	pop    %edi
   1593f:	5d                   	pop    %ebp
   15940:	c3                   	ret    
   15941:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15948:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   1594e:	eb cc                	jmp    1591c <shr_c2rm_b+0x6c>

00015950 <shr_c2rm_bv>:
   15950:	55                   	push   %ebp
   15951:	57                   	push   %edi
   15952:	56                   	push   %esi
   15953:	53                   	push   %ebx
   15954:	e8 67 d3 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15959:	81 c3 a7 56 01 00    	add    $0x156a7,%ebx
   1595f:	83 ec 14             	sub    $0x14,%esp
   15962:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15968:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
   1596e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   15974:	0f b6 00             	movzbl (%eax),%eax
   15977:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1597e:	89 45 10             	mov    %eax,0x10(%ebp)
   15981:	55                   	push   %ebp
   15982:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15986:	83 c0 01             	add    $0x1,%eax
   15989:	50                   	push   %eax
   1598a:	e8 d1 ec fe ff       	call   4660 <modrm_rm>
   1598f:	8d 70 01             	lea    0x1(%eax),%esi
   15992:	83 c4 10             	add    $0x10,%esp
   15995:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   1599b:	c7 47 04 01 00 00 00 	movl   $0x1,0x4(%edi)
   159a2:	89 f0                	mov    %esi,%eax
   159a4:	0f b6 c8             	movzbl %al,%ecx
   159a7:	8b 45 10             	mov    0x10(%ebp),%eax
   159aa:	83 f8 08             	cmp    $0x8,%eax
   159ad:	74 41                	je     159f0 <shr_c2rm_bv+0xa0>
   159af:	83 f8 10             	cmp    $0x10,%eax
   159b2:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   159b8:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   159be:	0f 44 c2             	cmove  %edx,%eax
   159c1:	83 ec 0c             	sub    $0xc,%esp
   159c4:	55                   	push   %ebp
   159c5:	57                   	push   %edi
   159c6:	51                   	push   %ecx
   159c7:	50                   	push   %eax
   159c8:	8d 83 c2 10 ff ff    	lea    -0xef3e(%ebx),%eax
   159ce:	50                   	push   %eax
   159cf:	e8 2c e6 fe ff       	call   4000 <print_asm_2>
   159d4:	83 c4 20             	add    $0x20,%esp
   159d7:	e8 d4 fc ff ff       	call   156b0 <instr_execute_2op>
   159dc:	83 c4 0c             	add    $0xc,%esp
   159df:	89 f0                	mov    %esi,%eax
   159e1:	5b                   	pop    %ebx
   159e2:	5e                   	pop    %esi
   159e3:	5f                   	pop    %edi
   159e4:	5d                   	pop    %ebp
   159e5:	c3                   	ret    
   159e6:	8d 76 00             	lea    0x0(%esi),%esi
   159e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   159f0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   159f6:	eb c9                	jmp    159c1 <shr_c2rm_bv+0x71>
   159f8:	90                   	nop
   159f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00015a00 <shr_rm_b>:
   15a00:	55                   	push   %ebp
   15a01:	57                   	push   %edi
   15a02:	56                   	push   %esi
   15a03:	53                   	push   %ebx
   15a04:	e8 b7 d2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15a09:	81 c3 f7 55 01 00    	add    $0x155f7,%ebx
   15a0f:	83 ec 14             	sub    $0x14,%esp
   15a12:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   15a18:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   15a1e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   15a25:	55                   	push   %ebp
   15a26:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15a2a:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   15a31:	83 c0 01             	add    $0x1,%eax
   15a34:	50                   	push   %eax
   15a35:	e8 26 ec fe ff       	call   4660 <modrm_rm>
   15a3a:	8d 70 01             	lea    0x1(%eax),%esi
   15a3d:	83 c4 10             	add    $0x10,%esp
   15a40:	89 f0                	mov    %esi,%eax
   15a42:	0f b6 c8             	movzbl %al,%ecx
   15a45:	8b 47 10             	mov    0x10(%edi),%eax
   15a48:	83 f8 08             	cmp    $0x8,%eax
   15a4b:	74 33                	je     15a80 <shr_rm_b+0x80>
   15a4d:	83 f8 10             	cmp    $0x10,%eax
   15a50:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   15a56:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   15a5c:	0f 44 c2             	cmove  %edx,%eax
   15a5f:	55                   	push   %ebp
   15a60:	51                   	push   %ecx
   15a61:	50                   	push   %eax
   15a62:	8d 83 c2 10 ff ff    	lea    -0xef3e(%ebx),%eax
   15a68:	50                   	push   %eax
   15a69:	e8 a2 e4 fe ff       	call   3f10 <print_asm_1>
   15a6e:	e8 8d fc ff ff       	call   15700 <instr_execute_1op>
   15a73:	83 c4 1c             	add    $0x1c,%esp
   15a76:	89 f0                	mov    %esi,%eax
   15a78:	5b                   	pop    %ebx
   15a79:	5e                   	pop    %esi
   15a7a:	5f                   	pop    %edi
   15a7b:	5d                   	pop    %ebp
   15a7c:	c3                   	ret    
   15a7d:	8d 76 00             	lea    0x0(%esi),%esi
   15a80:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   15a86:	eb d7                	jmp    15a5f <shr_rm_b+0x5f>
   15a88:	90                   	nop
   15a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00015a90 <shr_rm_v>:
   15a90:	55                   	push   %ebp
   15a91:	57                   	push   %edi
   15a92:	56                   	push   %esi
   15a93:	53                   	push   %ebx
   15a94:	e8 27 d2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15a99:	81 c3 67 55 01 00    	add    $0x15567,%ebx
   15a9f:	83 ec 14             	sub    $0x14,%esp
   15aa2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15aa8:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   15aae:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   15ab4:	0f b6 00             	movzbl (%eax),%eax
   15ab7:	89 45 10             	mov    %eax,0x10(%ebp)
   15aba:	89 47 10             	mov    %eax,0x10(%edi)
   15abd:	55                   	push   %ebp
   15abe:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15ac2:	83 c0 01             	add    $0x1,%eax
   15ac5:	50                   	push   %eax
   15ac6:	e8 95 eb fe ff       	call   4660 <modrm_rm>
   15acb:	8d 70 01             	lea    0x1(%eax),%esi
   15ace:	83 c4 10             	add    $0x10,%esp
   15ad1:	89 f0                	mov    %esi,%eax
   15ad3:	0f b6 c8             	movzbl %al,%ecx
   15ad6:	8b 47 10             	mov    0x10(%edi),%eax
   15ad9:	83 f8 08             	cmp    $0x8,%eax
   15adc:	74 32                	je     15b10 <shr_rm_v+0x80>
   15ade:	83 f8 10             	cmp    $0x10,%eax
   15ae1:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   15ae7:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   15aed:	0f 44 c2             	cmove  %edx,%eax
   15af0:	55                   	push   %ebp
   15af1:	51                   	push   %ecx
   15af2:	50                   	push   %eax
   15af3:	8d 83 c2 10 ff ff    	lea    -0xef3e(%ebx),%eax
   15af9:	50                   	push   %eax
   15afa:	e8 11 e4 fe ff       	call   3f10 <print_asm_1>
   15aff:	e8 fc fb ff ff       	call   15700 <instr_execute_1op>
   15b04:	83 c4 1c             	add    $0x1c,%esp
   15b07:	89 f0                	mov    %esi,%eax
   15b09:	5b                   	pop    %ebx
   15b0a:	5e                   	pop    %esi
   15b0b:	5f                   	pop    %edi
   15b0c:	5d                   	pop    %ebp
   15b0d:	c3                   	ret    
   15b0e:	66 90                	xchg   %ax,%ax
   15b10:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   15b16:	eb d8                	jmp    15af0 <shr_rm_v+0x60>
   15b18:	66 90                	xchg   %ax,%ax
   15b1a:	66 90                	xchg   %ax,%ax
   15b1c:	66 90                	xchg   %ax,%ax
   15b1e:	66 90                	xchg   %ax,%ax

00015b20 <instr_execute_1op>:
   15b20:	56                   	push   %esi
   15b21:	53                   	push   %ebx
   15b22:	e8 99 d1 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15b27:	81 c3 d9 54 01 00    	add    $0x154d9,%ebx
   15b2d:	83 ec 10             	sub    $0x10,%esp
   15b30:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   15b36:	56                   	push   %esi
   15b37:	e8 64 eb fe ff       	call   46a0 <operand_read>
   15b3c:	58                   	pop    %eax
   15b3d:	5a                   	pop    %edx
   15b3e:	ff 76 0c             	pushl  0xc(%esi)
   15b41:	6a 01                	push   $0x1
   15b43:	e8 48 55 ff ff       	call   b090 <alu_add>
   15b48:	89 34 24             	mov    %esi,(%esp)
   15b4b:	89 46 0c             	mov    %eax,0xc(%esi)
   15b4e:	e8 dd ec fe ff       	call   4830 <operand_write>
   15b53:	83 c4 14             	add    $0x14,%esp
   15b56:	5b                   	pop    %ebx
   15b57:	5e                   	pop    %esi
   15b58:	c3                   	ret    
   15b59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00015b60 <inc_v>:
   15b60:	57                   	push   %edi
   15b61:	56                   	push   %esi
   15b62:	53                   	push   %ebx
   15b63:	e8 58 d1 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15b68:	81 c3 98 54 01 00    	add    $0x15498,%ebx
   15b6e:	83 ec 38             	sub    $0x38,%esp
   15b71:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15b77:	8d 7c 24 14          	lea    0x14(%esp),%edi
   15b7b:	0f b6 00             	movzbl (%eax),%eax
   15b7e:	89 44 24 24          	mov    %eax,0x24(%esp)
   15b82:	57                   	push   %edi
   15b83:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   15b87:	83 c0 01             	add    $0x1,%eax
   15b8a:	50                   	push   %eax
   15b8b:	e8 d0 ea fe ff       	call   4660 <modrm_rm>
   15b90:	89 3c 24             	mov    %edi,(%esp)
   15b93:	8d 70 01             	lea    0x1(%eax),%esi
   15b96:	e8 05 eb fe ff       	call   46a0 <operand_read>
   15b9b:	58                   	pop    %eax
   15b9c:	5a                   	pop    %edx
   15b9d:	ff 74 24 20          	pushl  0x20(%esp)
   15ba1:	6a 01                	push   $0x1
   15ba3:	e8 e8 54 ff ff       	call   b090 <alu_add>
   15ba8:	89 3c 24             	mov    %edi,(%esp)
   15bab:	89 44 24 28          	mov    %eax,0x28(%esp)
   15baf:	e8 7c ec fe ff       	call   4830 <operand_write>
   15bb4:	89 f0                	mov    %esi,%eax
   15bb6:	57                   	push   %edi
   15bb7:	0f b6 c0             	movzbl %al,%eax
   15bba:	50                   	push   %eax
   15bbb:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15bc1:	50                   	push   %eax
   15bc2:	8d 83 c6 10 ff ff    	lea    -0xef3a(%ebx),%eax
   15bc8:	50                   	push   %eax
   15bc9:	e8 42 e3 fe ff       	call   3f10 <print_asm_1>
   15bce:	83 c4 50             	add    $0x50,%esp
   15bd1:	89 f0                	mov    %esi,%eax
   15bd3:	5b                   	pop    %ebx
   15bd4:	5e                   	pop    %esi
   15bd5:	5f                   	pop    %edi
   15bd6:	c3                   	ret    
   15bd7:	89 f6                	mov    %esi,%esi
   15bd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00015be0 <inc_REG_EAX_v>:
   15be0:	53                   	push   %ebx
   15be1:	e8 da d0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15be6:	81 c3 1a 54 01 00    	add    $0x1541a,%ebx
   15bec:	83 ec 08             	sub    $0x8,%esp
   15bef:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15bf5:	0f b6 10             	movzbl (%eax),%edx
   15bf8:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   15bfe:	89 50 10             	mov    %edx,0x10(%eax)
   15c01:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   15c07:	89 50 10             	mov    %edx,0x10(%eax)
   15c0a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   15c10:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   15c17:	50                   	push   %eax
   15c18:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15c1e:	6a 01                	push   $0x1
   15c20:	50                   	push   %eax
   15c21:	8d 83 c6 10 ff ff    	lea    -0xef3a(%ebx),%eax
   15c27:	50                   	push   %eax
   15c28:	e8 e3 e2 fe ff       	call   3f10 <print_asm_1>
   15c2d:	e8 ee fe ff ff       	call   15b20 <instr_execute_1op>
   15c32:	83 c4 18             	add    $0x18,%esp
   15c35:	b8 01 00 00 00       	mov    $0x1,%eax
   15c3a:	5b                   	pop    %ebx
   15c3b:	c3                   	ret    
   15c3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00015c40 <inc_REG_ECX_v>:
   15c40:	53                   	push   %ebx
   15c41:	e8 7a d0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15c46:	81 c3 ba 53 01 00    	add    $0x153ba,%ebx
   15c4c:	83 ec 08             	sub    $0x8,%esp
   15c4f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15c55:	0f b6 10             	movzbl (%eax),%edx
   15c58:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   15c5e:	89 50 10             	mov    %edx,0x10(%eax)
   15c61:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   15c67:	89 50 10             	mov    %edx,0x10(%eax)
   15c6a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   15c70:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
   15c77:	50                   	push   %eax
   15c78:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15c7e:	6a 01                	push   $0x1
   15c80:	50                   	push   %eax
   15c81:	8d 83 c6 10 ff ff    	lea    -0xef3a(%ebx),%eax
   15c87:	50                   	push   %eax
   15c88:	e8 83 e2 fe ff       	call   3f10 <print_asm_1>
   15c8d:	e8 8e fe ff ff       	call   15b20 <instr_execute_1op>
   15c92:	83 c4 18             	add    $0x18,%esp
   15c95:	b8 01 00 00 00       	mov    $0x1,%eax
   15c9a:	5b                   	pop    %ebx
   15c9b:	c3                   	ret    
   15c9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00015ca0 <inc_REG_EDX_v>:
   15ca0:	53                   	push   %ebx
   15ca1:	e8 1a d0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15ca6:	81 c3 5a 53 01 00    	add    $0x1535a,%ebx
   15cac:	83 ec 08             	sub    $0x8,%esp
   15caf:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15cb5:	0f b6 10             	movzbl (%eax),%edx
   15cb8:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   15cbe:	89 50 10             	mov    %edx,0x10(%eax)
   15cc1:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   15cc7:	89 50 10             	mov    %edx,0x10(%eax)
   15cca:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   15cd0:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%eax)
   15cd7:	50                   	push   %eax
   15cd8:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15cde:	6a 01                	push   $0x1
   15ce0:	50                   	push   %eax
   15ce1:	8d 83 c6 10 ff ff    	lea    -0xef3a(%ebx),%eax
   15ce7:	50                   	push   %eax
   15ce8:	e8 23 e2 fe ff       	call   3f10 <print_asm_1>
   15ced:	e8 2e fe ff ff       	call   15b20 <instr_execute_1op>
   15cf2:	83 c4 18             	add    $0x18,%esp
   15cf5:	b8 01 00 00 00       	mov    $0x1,%eax
   15cfa:	5b                   	pop    %ebx
   15cfb:	c3                   	ret    
   15cfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00015d00 <inc_REG_EDI_v>:
   15d00:	53                   	push   %ebx
   15d01:	e8 ba cf fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15d06:	81 c3 fa 52 01 00    	add    $0x152fa,%ebx
   15d0c:	83 ec 08             	sub    $0x8,%esp
   15d0f:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15d15:	0f b6 10             	movzbl (%eax),%edx
   15d18:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   15d1e:	89 50 10             	mov    %edx,0x10(%eax)
   15d21:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   15d27:	89 50 10             	mov    %edx,0x10(%eax)
   15d2a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
   15d30:	c7 40 04 07 00 00 00 	movl   $0x7,0x4(%eax)
   15d37:	50                   	push   %eax
   15d38:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15d3e:	6a 01                	push   $0x1
   15d40:	50                   	push   %eax
   15d41:	8d 83 c6 10 ff ff    	lea    -0xef3a(%ebx),%eax
   15d47:	50                   	push   %eax
   15d48:	e8 c3 e1 fe ff       	call   3f10 <print_asm_1>
   15d4d:	e8 ce fd ff ff       	call   15b20 <instr_execute_1op>
   15d52:	83 c4 18             	add    $0x18,%esp
   15d55:	b8 01 00 00 00       	mov    $0x1,%eax
   15d5a:	5b                   	pop    %ebx
   15d5b:	c3                   	ret    
   15d5c:	66 90                	xchg   %ax,%ax
   15d5e:	66 90                	xchg   %ax,%ax

00015d60 <instr_execute_1op>:
   15d60:	56                   	push   %esi
   15d61:	53                   	push   %ebx
   15d62:	e8 59 cf fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15d67:	81 c3 99 52 01 00    	add    $0x15299,%ebx
   15d6d:	83 ec 10             	sub    $0x10,%esp
   15d70:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   15d76:	56                   	push   %esi
   15d77:	e8 24 e9 fe ff       	call   46a0 <operand_read>
   15d7c:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15d82:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   15d88:	0f b6 00             	movzbl (%eax),%eax
   15d8b:	c0 e8 03             	shr    $0x3,%al
   15d8e:	0f b6 c0             	movzbl %al,%eax
   15d91:	01 42 10             	add    %eax,0x10(%edx)
   15d94:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   15d9a:	8b 56 0c             	mov    0xc(%esi),%edx
   15d9d:	89 50 0c             	mov    %edx,0xc(%eax)
   15da0:	89 04 24             	mov    %eax,(%esp)
   15da3:	e8 88 ea fe ff       	call   4830 <operand_write>
   15da8:	83 c4 14             	add    $0x14,%esp
   15dab:	5b                   	pop    %ebx
   15dac:	5e                   	pop    %esi
   15dad:	c3                   	ret    
   15dae:	66 90                	xchg   %ax,%ax

00015db0 <pop_ebx_v>:
   15db0:	57                   	push   %edi
   15db1:	56                   	push   %esi
   15db2:	53                   	push   %ebx
   15db3:	e8 08 cf fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15db8:	81 c3 48 52 01 00    	add    $0x15248,%ebx
   15dbe:	83 ec 3c             	sub    $0x3c,%esp
   15dc1:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   15dc7:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   15dcd:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   15dd4:	00 
   15dd5:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   15dda:	0f b6 07             	movzbl (%edi),%eax
   15ddd:	89 44 24 28          	mov    %eax,0x28(%esp)
   15de1:	8b 46 10             	mov    0x10(%esi),%eax
   15de4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   15de8:	8d 44 24 18          	lea    0x18(%esp),%eax
   15dec:	50                   	push   %eax
   15ded:	e8 ae e8 fe ff       	call   46a0 <operand_read>
   15df2:	0f b6 17             	movzbl (%edi),%edx
   15df5:	83 c4 10             	add    $0x10,%esp
   15df8:	89 d0                	mov    %edx,%eax
   15dfa:	c0 e8 03             	shr    $0x3,%al
   15dfd:	0f b6 c0             	movzbl %al,%eax
   15e00:	01 46 10             	add    %eax,0x10(%esi)
   15e03:	8d 42 f0             	lea    -0x10(%edx),%eax
   15e06:	a8 ef                	test   $0xef,%al
   15e08:	75 41                	jne    15e4b <pop_ebx_v+0x9b>
   15e0a:	80 fa 10             	cmp    $0x10,%dl
   15e0d:	74 31                	je     15e40 <pop_ebx_v+0x90>
   15e0f:	8b 44 24 18          	mov    0x18(%esp),%eax
   15e13:	89 46 0c             	mov    %eax,0xc(%esi)
   15e16:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15e1c:	83 ec 04             	sub    $0x4,%esp
   15e1f:	6a 01                	push   $0x1
   15e21:	50                   	push   %eax
   15e22:	8d 83 de 10 ff ff    	lea    -0xef22(%ebx),%eax
   15e28:	50                   	push   %eax
   15e29:	e8 02 e0 fe ff       	call   3e30 <print_asm_0>
   15e2e:	83 c4 40             	add    $0x40,%esp
   15e31:	b8 01 00 00 00       	mov    $0x1,%eax
   15e36:	5b                   	pop    %ebx
   15e37:	5e                   	pop    %esi
   15e38:	5f                   	pop    %edi
   15e39:	c3                   	ret    
   15e3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15e40:	0f b7 44 24 18       	movzwl 0x18(%esp),%eax
   15e45:	66 89 46 0c          	mov    %ax,0xc(%esi)
   15e49:	eb cb                	jmp    15e16 <pop_ebx_v+0x66>
   15e4b:	8d 83 00 11 ff ff    	lea    -0xef00(%ebx),%eax
   15e51:	50                   	push   %eax
   15e52:	8d 83 ca 10 ff ff    	lea    -0xef36(%ebx),%eax
   15e58:	6a 17                	push   $0x17
   15e5a:	50                   	push   %eax
   15e5b:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   15e61:	50                   	push   %eax
   15e62:	e8 29 ca fe ff       	call   2890 <__assert_fail@plt>
   15e67:	89 f6                	mov    %esi,%esi
   15e69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00015e70 <pop_ebp_v>:
   15e70:	57                   	push   %edi
   15e71:	56                   	push   %esi
   15e72:	53                   	push   %ebx
   15e73:	e8 48 ce fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15e78:	81 c3 88 51 01 00    	add    $0x15188,%ebx
   15e7e:	83 ec 3c             	sub    $0x3c,%esp
   15e81:	8d bb 77 13 00 00    	lea    0x1377(%ebx),%edi
   15e87:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   15e8d:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   15e94:	00 
   15e95:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   15e9a:	0f b6 07             	movzbl (%edi),%eax
   15e9d:	89 44 24 28          	mov    %eax,0x28(%esp)
   15ea1:	8b 46 10             	mov    0x10(%esi),%eax
   15ea4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   15ea8:	8d 44 24 18          	lea    0x18(%esp),%eax
   15eac:	50                   	push   %eax
   15ead:	e8 ee e7 fe ff       	call   46a0 <operand_read>
   15eb2:	0f b6 17             	movzbl (%edi),%edx
   15eb5:	83 c4 10             	add    $0x10,%esp
   15eb8:	89 d0                	mov    %edx,%eax
   15eba:	c0 e8 03             	shr    $0x3,%al
   15ebd:	0f b6 c0             	movzbl %al,%eax
   15ec0:	01 46 10             	add    %eax,0x10(%esi)
   15ec3:	8d 42 f0             	lea    -0x10(%edx),%eax
   15ec6:	a8 ef                	test   $0xef,%al
   15ec8:	75 41                	jne    15f0b <pop_ebp_v+0x9b>
   15eca:	80 fa 10             	cmp    $0x10,%dl
   15ecd:	74 31                	je     15f00 <pop_ebp_v+0x90>
   15ecf:	8b 44 24 18          	mov    0x18(%esp),%eax
   15ed3:	89 46 14             	mov    %eax,0x14(%esi)
   15ed6:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15edc:	83 ec 04             	sub    $0x4,%esp
   15edf:	6a 01                	push   $0x1
   15ee1:	50                   	push   %eax
   15ee2:	8d 83 e6 10 ff ff    	lea    -0xef1a(%ebx),%eax
   15ee8:	50                   	push   %eax
   15ee9:	e8 42 df fe ff       	call   3e30 <print_asm_0>
   15eee:	83 c4 40             	add    $0x40,%esp
   15ef1:	b8 01 00 00 00       	mov    $0x1,%eax
   15ef6:	5b                   	pop    %ebx
   15ef7:	5e                   	pop    %esi
   15ef8:	5f                   	pop    %edi
   15ef9:	c3                   	ret    
   15efa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15f00:	0f b7 44 24 18       	movzwl 0x18(%esp),%eax
   15f05:	66 89 46 14          	mov    %ax,0x14(%esi)
   15f09:	eb cb                	jmp    15ed6 <pop_ebp_v+0x66>
   15f0b:	8d 83 f4 10 ff ff    	lea    -0xef0c(%ebx),%eax
   15f11:	50                   	push   %eax
   15f12:	8d 83 ca 10 ff ff    	lea    -0xef36(%ebx),%eax
   15f18:	6a 34                	push   $0x34
   15f1a:	50                   	push   %eax
   15f1b:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   15f21:	50                   	push   %eax
   15f22:	e8 69 c9 fe ff       	call   2890 <__assert_fail@plt>
   15f27:	89 f6                	mov    %esi,%esi
   15f29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00015f30 <pop_REG_ESI_v>:
   15f30:	56                   	push   %esi
   15f31:	53                   	push   %ebx
   15f32:	e8 89 cd fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15f37:	81 c3 c9 50 01 00    	add    $0x150c9,%ebx
   15f3d:	83 ec 04             	sub    $0x4,%esp
   15f40:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15f46:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   15f4c:	0f b6 10             	movzbl (%eax),%edx
   15f4f:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   15f55:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   15f5b:	c7 46 04 06 00 00 00 	movl   $0x6,0x4(%esi)
   15f62:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
   15f68:	c6 40 08 02          	movb   $0x2,0x8(%eax)
   15f6c:	89 56 10             	mov    %edx,0x10(%esi)
   15f6f:	89 50 10             	mov    %edx,0x10(%eax)
   15f72:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   15f78:	8b 52 10             	mov    0x10(%edx),%edx
   15f7b:	89 50 04             	mov    %edx,0x4(%eax)
   15f7e:	e8 dd fd ff ff       	call   15d60 <instr_execute_1op>
   15f83:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   15f89:	56                   	push   %esi
   15f8a:	6a 01                	push   $0x1
   15f8c:	50                   	push   %eax
   15f8d:	8d 83 ee 10 ff ff    	lea    -0xef12(%ebx),%eax
   15f93:	50                   	push   %eax
   15f94:	e8 77 df fe ff       	call   3f10 <print_asm_1>
   15f99:	83 c4 14             	add    $0x14,%esp
   15f9c:	b8 01 00 00 00       	mov    $0x1,%eax
   15fa1:	5b                   	pop    %ebx
   15fa2:	5e                   	pop    %esi
   15fa3:	c3                   	ret    
   15fa4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15faa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00015fb0 <pop_REG_EDI_v>:
   15fb0:	56                   	push   %esi
   15fb1:	53                   	push   %ebx
   15fb2:	e8 09 cd fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   15fb7:	81 c3 49 50 01 00    	add    $0x15049,%ebx
   15fbd:	83 ec 04             	sub    $0x4,%esp
   15fc0:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   15fc6:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   15fcc:	0f b6 10             	movzbl (%eax),%edx
   15fcf:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   15fd5:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   15fdb:	c7 46 04 07 00 00 00 	movl   $0x7,0x4(%esi)
   15fe2:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
   15fe8:	c6 40 08 02          	movb   $0x2,0x8(%eax)
   15fec:	89 56 10             	mov    %edx,0x10(%esi)
   15fef:	89 50 10             	mov    %edx,0x10(%eax)
   15ff2:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   15ff8:	8b 52 10             	mov    0x10(%edx),%edx
   15ffb:	89 50 04             	mov    %edx,0x4(%eax)
   15ffe:	e8 5d fd ff ff       	call   15d60 <instr_execute_1op>
   16003:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   16009:	56                   	push   %esi
   1600a:	6a 01                	push   $0x1
   1600c:	50                   	push   %eax
   1600d:	8d 83 ee 10 ff ff    	lea    -0xef12(%ebx),%eax
   16013:	50                   	push   %eax
   16014:	e8 f7 de fe ff       	call   3f10 <print_asm_1>
   16019:	83 c4 14             	add    $0x14,%esp
   1601c:	b8 01 00 00 00       	mov    $0x1,%eax
   16021:	5b                   	pop    %ebx
   16022:	5e                   	pop    %esi
   16023:	c3                   	ret    
   16024:	66 90                	xchg   %ax,%ax
   16026:	66 90                	xchg   %ax,%ax
   16028:	66 90                	xchg   %ax,%ax
   1602a:	66 90                	xchg   %ax,%ax
   1602c:	66 90                	xchg   %ax,%ax
   1602e:	66 90                	xchg   %ax,%ax

00016030 <sbb_rm2r_v>:
   16030:	55                   	push   %ebp
   16031:	57                   	push   %edi
   16032:	56                   	push   %esi
   16033:	53                   	push   %ebx
   16034:	e8 87 cc fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16039:	81 c3 c7 4f 01 00    	add    $0x14fc7,%ebx
   1603f:	83 ec 10             	sub    $0x10,%esp
   16042:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   16048:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   1604e:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   16054:	0f b6 00             	movzbl (%eax),%eax
   16057:	57                   	push   %edi
   16058:	56                   	push   %esi
   16059:	89 46 10             	mov    %eax,0x10(%esi)
   1605c:	89 47 10             	mov    %eax,0x10(%edi)
   1605f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16063:	83 c0 01             	add    $0x1,%eax
   16066:	50                   	push   %eax
   16067:	e8 24 e5 fe ff       	call   4590 <modrm_r_rm>
   1606c:	8d 68 01             	lea    0x1(%eax),%ebp
   1606f:	83 c4 10             	add    $0x10,%esp
   16072:	89 e8                	mov    %ebp,%eax
   16074:	0f b6 c8             	movzbl %al,%ecx
   16077:	8b 46 10             	mov    0x10(%esi),%eax
   1607a:	83 f8 08             	cmp    $0x8,%eax
   1607d:	74 61                	je     160e0 <sbb_rm2r_v+0xb0>
   1607f:	83 f8 10             	cmp    $0x10,%eax
   16082:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   16088:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1608e:	0f 44 c2             	cmove  %edx,%eax
   16091:	83 ec 0c             	sub    $0xc,%esp
   16094:	56                   	push   %esi
   16095:	57                   	push   %edi
   16096:	51                   	push   %ecx
   16097:	50                   	push   %eax
   16098:	8d 83 0a 11 ff ff    	lea    -0xeef6(%ebx),%eax
   1609e:	50                   	push   %eax
   1609f:	e8 5c df fe ff       	call   4000 <print_asm_2>
   160a4:	83 c4 14             	add    $0x14,%esp
   160a7:	57                   	push   %edi
   160a8:	e8 f3 e5 fe ff       	call   46a0 <operand_read>
   160ad:	89 34 24             	mov    %esi,(%esp)
   160b0:	e8 eb e5 fe ff       	call   46a0 <operand_read>
   160b5:	58                   	pop    %eax
   160b6:	5a                   	pop    %edx
   160b7:	ff 76 0c             	pushl  0xc(%esi)
   160ba:	ff 77 0c             	pushl  0xc(%edi)
   160bd:	e8 de 52 ff ff       	call   b3a0 <alu_sbb>
   160c2:	89 34 24             	mov    %esi,(%esp)
   160c5:	89 46 0c             	mov    %eax,0xc(%esi)
   160c8:	e8 63 e7 fe ff       	call   4830 <operand_write>
   160cd:	83 c4 1c             	add    $0x1c,%esp
   160d0:	89 e8                	mov    %ebp,%eax
   160d2:	5b                   	pop    %ebx
   160d3:	5e                   	pop    %esi
   160d4:	5f                   	pop    %edi
   160d5:	5d                   	pop    %ebp
   160d6:	c3                   	ret    
   160d7:	89 f6                	mov    %esi,%esi
   160d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   160e0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   160e6:	eb a9                	jmp    16091 <sbb_rm2r_v+0x61>
   160e8:	66 90                	xchg   %ax,%ax
   160ea:	66 90                	xchg   %ax,%ax
   160ec:	66 90                	xchg   %ax,%ax
   160ee:	66 90                	xchg   %ax,%ax

000160f0 <instr_execute_2op>:
   160f0:	57                   	push   %edi
   160f1:	56                   	push   %esi
   160f2:	53                   	push   %ebx
   160f3:	e8 c8 cb fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   160f8:	81 c3 08 4f 01 00    	add    $0x14f08,%ebx
   160fe:	83 ec 0c             	sub    $0xc,%esp
   16101:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   16107:	57                   	push   %edi
   16108:	e8 93 e5 fe ff       	call   46a0 <operand_read>
   1610d:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   16113:	89 34 24             	mov    %esi,(%esp)
   16116:	e8 85 e5 fe ff       	call   46a0 <operand_read>
   1611b:	58                   	pop    %eax
   1611c:	5a                   	pop    %edx
   1611d:	ff 76 0c             	pushl  0xc(%esi)
   16120:	ff 77 0c             	pushl  0xc(%edi)
   16123:	e8 a8 54 ff ff       	call   b5d0 <alu_and>
   16128:	89 34 24             	mov    %esi,(%esp)
   1612b:	89 46 0c             	mov    %eax,0xc(%esi)
   1612e:	e8 fd e6 fe ff       	call   4830 <operand_write>
   16133:	83 c4 10             	add    $0x10,%esp
   16136:	5b                   	pop    %ebx
   16137:	5e                   	pop    %esi
   16138:	5f                   	pop    %edi
   16139:	c3                   	ret    
   1613a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00016140 <and_i2rm_bv>:
   16140:	55                   	push   %ebp
   16141:	57                   	push   %edi
   16142:	56                   	push   %esi
   16143:	53                   	push   %ebx
   16144:	e8 77 cb fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16149:	81 c3 b7 4e 01 00    	add    $0x14eb7,%ebx
   1614f:	83 ec 70             	sub    $0x70,%esp
   16152:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
   16159:	8d 7c 24 40          	lea    0x40(%esp),%edi
   1615d:	8b ac 24 84 00 00 00 	mov    0x84(%esp),%ebp
   16164:	c7 44 24 2c 08 00 00 	movl   $0x8,0x2c(%esp)
   1616b:	00 
   1616c:	88 44 24 10          	mov    %al,0x10(%esp)
   16170:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   16176:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1617a:	0f b6 00             	movzbl (%eax),%eax
   1617d:	89 44 24 50          	mov    %eax,0x50(%esp)
   16181:	57                   	push   %edi
   16182:	8d 44 24 14          	lea    0x14(%esp),%eax
   16186:	50                   	push   %eax
   16187:	8d 45 01             	lea    0x1(%ebp),%eax
   1618a:	50                   	push   %eax
   1618b:	e8 50 e4 fe ff       	call   45e0 <modrm_opcode_rm>
   16190:	89 c6                	mov    %eax,%esi
   16192:	89 3c 24             	mov    %edi,(%esp)
   16195:	e8 06 e5 fe ff       	call   46a0 <operand_read>
   1619a:	8d 44 2e 01          	lea    0x1(%esi,%ebp,1),%eax
   1619e:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   161a5:	00 
   161a6:	83 c6 02             	add    $0x2,%esi
   161a9:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   161ad:	58                   	pop    %eax
   161ae:	8d 6c 24 24          	lea    0x24(%esp),%ebp
   161b2:	55                   	push   %ebp
   161b3:	e8 e8 e4 fe ff       	call   46a0 <operand_read>
   161b8:	8b 44 24 18          	mov    0x18(%esp),%eax
   161bc:	83 c4 10             	add    $0x10,%esp
   161bf:	0f b6 00             	movzbl (%eax),%eax
   161c2:	8d 50 f0             	lea    -0x10(%eax),%edx
   161c5:	81 e2 ef 00 00 00    	and    $0xef,%edx
   161cb:	75 65                	jne    16232 <and_i2rm_bv+0xf2>
   161cd:	3c 10                	cmp    $0x10,%al
   161cf:	74 4f                	je     16220 <and_i2rm_bv+0xe0>
   161d1:	0f be 44 24 24       	movsbl 0x24(%esp),%eax
   161d6:	89 44 24 24          	mov    %eax,0x24(%esp)
   161da:	83 ec 08             	sub    $0x8,%esp
   161dd:	ff 74 24 50          	pushl  0x50(%esp)
   161e1:	50                   	push   %eax
   161e2:	e8 e9 53 ff ff       	call   b5d0 <alu_and>
   161e7:	89 3c 24             	mov    %edi,(%esp)
   161ea:	89 44 24 58          	mov    %eax,0x58(%esp)
   161ee:	e8 3d e6 fe ff       	call   4830 <operand_write>
   161f3:	89 f0                	mov    %esi,%eax
   161f5:	89 3c 24             	mov    %edi,(%esp)
   161f8:	55                   	push   %ebp
   161f9:	0f b6 c0             	movzbl %al,%eax
   161fc:	50                   	push   %eax
   161fd:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   16203:	50                   	push   %eax
   16204:	8d 83 22 11 ff ff    	lea    -0xeede(%ebx),%eax
   1620a:	50                   	push   %eax
   1620b:	e8 f0 dd fe ff       	call   4000 <print_asm_2>
   16210:	81 c4 8c 00 00 00    	add    $0x8c,%esp
   16216:	89 f0                	mov    %esi,%eax
   16218:	5b                   	pop    %ebx
   16219:	5e                   	pop    %esi
   1621a:	5f                   	pop    %edi
   1621b:	5d                   	pop    %ebp
   1621c:	c3                   	ret    
   1621d:	8d 76 00             	lea    0x0(%esi),%esi
   16220:	8b 44 24 24          	mov    0x24(%esp),%eax
   16224:	c1 e0 08             	shl    $0x8,%eax
   16227:	66 c1 f8 08          	sar    $0x8,%ax
   1622b:	98                   	cwtl   
   1622c:	89 44 24 24          	mov    %eax,0x24(%esp)
   16230:	eb a8                	jmp    161da <and_i2rm_bv+0x9a>
   16232:	8d 83 28 11 ff ff    	lea    -0xeed8(%ebx),%eax
   16238:	50                   	push   %eax
   16239:	8d 83 0e 11 ff ff    	lea    -0xeef2(%ebx),%eax
   1623f:	6a 19                	push   $0x19
   16241:	50                   	push   %eax
   16242:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   16248:	50                   	push   %eax
   16249:	e8 42 c6 fe ff       	call   2890 <__assert_fail@plt>
   1624e:	66 90                	xchg   %ax,%ax

00016250 <and_i2eax_v>:
   16250:	55                   	push   %ebp
   16251:	57                   	push   %edi
   16252:	56                   	push   %esi
   16253:	53                   	push   %ebx
   16254:	e8 67 ca fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16259:	81 c3 a7 4d 01 00    	add    $0x14da7,%ebx
   1625f:	83 ec 68             	sub    $0x68,%esp
   16262:	8d b3 77 13 00 00    	lea    0x1377(%ebx),%esi
   16268:	8d 6c 24 14          	lea    0x14(%esp),%ebp
   1626c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   16273:	00 
   16274:	0f b6 06             	movzbl (%esi),%eax
   16277:	89 44 24 24          	mov    %eax,0x24(%esp)
   1627b:	89 44 24 48          	mov    %eax,0x48(%esp)
   1627f:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   16283:	83 c0 01             	add    $0x1,%eax
   16286:	89 44 24 18          	mov    %eax,0x18(%esp)
   1628a:	55                   	push   %ebp
   1628b:	e8 10 e4 fe ff       	call   46a0 <operand_read>
   16290:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   16297:	00 
   16298:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
   1629f:	00 
   162a0:	58                   	pop    %eax
   162a1:	8d 7c 24 38          	lea    0x38(%esp),%edi
   162a5:	57                   	push   %edi
   162a6:	e8 f5 e3 fe ff       	call   46a0 <operand_read>
   162ab:	5a                   	pop    %edx
   162ac:	59                   	pop    %ecx
   162ad:	ff 74 24 40          	pushl  0x40(%esp)
   162b1:	ff 74 24 20          	pushl  0x20(%esp)
   162b5:	e8 16 53 ff ff       	call   b5d0 <alu_and>
   162ba:	89 3c 24             	mov    %edi,(%esp)
   162bd:	89 44 24 48          	mov    %eax,0x48(%esp)
   162c1:	e8 6a e5 fe ff       	call   4830 <operand_write>
   162c6:	0f b6 06             	movzbl (%esi),%eax
   162c9:	89 3c 24             	mov    %edi,(%esp)
   162cc:	55                   	push   %ebp
   162cd:	c0 e8 03             	shr    $0x3,%al
   162d0:	83 c0 01             	add    $0x1,%eax
   162d3:	0f b6 c0             	movzbl %al,%eax
   162d6:	50                   	push   %eax
   162d7:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   162dd:	50                   	push   %eax
   162de:	8d 83 22 11 ff ff    	lea    -0xeede(%ebx),%eax
   162e4:	50                   	push   %eax
   162e5:	e8 16 dd fe ff       	call   4000 <print_asm_2>
   162ea:	0f b6 06             	movzbl (%esi),%eax
   162ed:	83 c4 7c             	add    $0x7c,%esp
   162f0:	5b                   	pop    %ebx
   162f1:	5e                   	pop    %esi
   162f2:	5f                   	pop    %edi
   162f3:	c0 e8 03             	shr    $0x3,%al
   162f6:	0f b6 c0             	movzbl %al,%eax
   162f9:	83 c0 01             	add    $0x1,%eax
   162fc:	5d                   	pop    %ebp
   162fd:	c3                   	ret    
   162fe:	66 90                	xchg   %ax,%ax

00016300 <and_rm2r_b>:
   16300:	55                   	push   %ebp
   16301:	57                   	push   %edi
   16302:	56                   	push   %esi
   16303:	53                   	push   %ebx
   16304:	e8 b7 c9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16309:	81 c3 f7 4c 01 00    	add    $0x14cf7,%ebx
   1630f:	83 ec 10             	sub    $0x10,%esp
   16312:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   16318:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   1631e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   16325:	55                   	push   %ebp
   16326:	57                   	push   %edi
   16327:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1632b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16332:	83 c0 01             	add    $0x1,%eax
   16335:	50                   	push   %eax
   16336:	e8 55 e2 fe ff       	call   4590 <modrm_r_rm>
   1633b:	8d 70 01             	lea    0x1(%eax),%esi
   1633e:	83 c4 10             	add    $0x10,%esp
   16341:	89 f0                	mov    %esi,%eax
   16343:	0f b6 c8             	movzbl %al,%ecx
   16346:	8b 47 10             	mov    0x10(%edi),%eax
   16349:	83 f8 08             	cmp    $0x8,%eax
   1634c:	74 3a                	je     16388 <and_rm2r_b+0x88>
   1634e:	83 f8 10             	cmp    $0x10,%eax
   16351:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   16357:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1635d:	0f 44 c2             	cmove  %edx,%eax
   16360:	83 ec 0c             	sub    $0xc,%esp
   16363:	57                   	push   %edi
   16364:	55                   	push   %ebp
   16365:	51                   	push   %ecx
   16366:	50                   	push   %eax
   16367:	8d 83 22 11 ff ff    	lea    -0xeede(%ebx),%eax
   1636d:	50                   	push   %eax
   1636e:	e8 8d dc fe ff       	call   4000 <print_asm_2>
   16373:	83 c4 20             	add    $0x20,%esp
   16376:	e8 75 fd ff ff       	call   160f0 <instr_execute_2op>
   1637b:	83 c4 0c             	add    $0xc,%esp
   1637e:	89 f0                	mov    %esi,%eax
   16380:	5b                   	pop    %ebx
   16381:	5e                   	pop    %esi
   16382:	5f                   	pop    %edi
   16383:	5d                   	pop    %ebp
   16384:	c3                   	ret    
   16385:	8d 76 00             	lea    0x0(%esi),%esi
   16388:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   1638e:	eb d0                	jmp    16360 <and_rm2r_b+0x60>

00016390 <and_r2rm_v>:
   16390:	55                   	push   %ebp
   16391:	57                   	push   %edi
   16392:	56                   	push   %esi
   16393:	53                   	push   %ebx
   16394:	e8 27 c9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16399:	81 c3 67 4c 01 00    	add    $0x14c67,%ebx
   1639f:	83 ec 10             	sub    $0x10,%esp
   163a2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   163a8:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   163ae:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   163b4:	0f b6 00             	movzbl (%eax),%eax
   163b7:	89 45 10             	mov    %eax,0x10(%ebp)
   163ba:	89 47 10             	mov    %eax,0x10(%edi)
   163bd:	57                   	push   %edi
   163be:	55                   	push   %ebp
   163bf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   163c3:	83 c0 01             	add    $0x1,%eax
   163c6:	50                   	push   %eax
   163c7:	e8 c4 e1 fe ff       	call   4590 <modrm_r_rm>
   163cc:	8d 70 01             	lea    0x1(%eax),%esi
   163cf:	83 c4 10             	add    $0x10,%esp
   163d2:	89 f0                	mov    %esi,%eax
   163d4:	0f b6 c8             	movzbl %al,%ecx
   163d7:	8b 47 10             	mov    0x10(%edi),%eax
   163da:	83 f8 08             	cmp    $0x8,%eax
   163dd:	74 41                	je     16420 <and_r2rm_v+0x90>
   163df:	83 f8 10             	cmp    $0x10,%eax
   163e2:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   163e8:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   163ee:	0f 44 c2             	cmove  %edx,%eax
   163f1:	83 ec 0c             	sub    $0xc,%esp
   163f4:	57                   	push   %edi
   163f5:	55                   	push   %ebp
   163f6:	51                   	push   %ecx
   163f7:	50                   	push   %eax
   163f8:	8d 83 22 11 ff ff    	lea    -0xeede(%ebx),%eax
   163fe:	50                   	push   %eax
   163ff:	e8 fc db fe ff       	call   4000 <print_asm_2>
   16404:	83 c4 20             	add    $0x20,%esp
   16407:	e8 e4 fc ff ff       	call   160f0 <instr_execute_2op>
   1640c:	83 c4 0c             	add    $0xc,%esp
   1640f:	89 f0                	mov    %esi,%eax
   16411:	5b                   	pop    %ebx
   16412:	5e                   	pop    %esi
   16413:	5f                   	pop    %edi
   16414:	5d                   	pop    %ebp
   16415:	c3                   	ret    
   16416:	8d 76 00             	lea    0x0(%esi),%esi
   16419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   16420:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16426:	eb c9                	jmp    163f1 <and_r2rm_v+0x61>
   16428:	90                   	nop
   16429:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016430 <and_i2rm_v>:
   16430:	55                   	push   %ebp
   16431:	57                   	push   %edi
   16432:	56                   	push   %esi
   16433:	53                   	push   %ebx
   16434:	e8 87 c8 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16439:	81 c3 c7 4b 01 00    	add    $0x14bc7,%ebx
   1643f:	83 ec 24             	sub    $0x24,%esp
   16442:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   16448:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1644c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   16452:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   16458:	0f b6 00             	movzbl (%eax),%eax
   1645b:	89 42 10             	mov    %eax,0x10(%edx)
   1645e:	89 47 10             	mov    %eax,0x10(%edi)
   16461:	8d 45 01             	lea    0x1(%ebp),%eax
   16464:	52                   	push   %edx
   16465:	89 54 24 18          	mov    %edx,0x18(%esp)
   16469:	50                   	push   %eax
   1646a:	e8 f1 e1 fe ff       	call   4660 <modrm_rm>
   1646f:	8b 77 10             	mov    0x10(%edi),%esi
   16472:	83 c0 01             	add    $0x1,%eax
   16475:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   16479:	01 c5                	add    %eax,%ebp
   1647b:	83 c4 10             	add    $0x10,%esp
   1647e:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   16484:	89 6f 04             	mov    %ebp,0x4(%edi)
   16487:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1648b:	c1 ee 03             	shr    $0x3,%esi
   1648e:	01 c6                	add    %eax,%esi
   16490:	89 f0                	mov    %esi,%eax
   16492:	0f b6 e8             	movzbl %al,%ebp
   16495:	8b 42 10             	mov    0x10(%edx),%eax
   16498:	83 f8 08             	cmp    $0x8,%eax
   1649b:	74 3b                	je     164d8 <and_i2rm_v+0xa8>
   1649d:	83 f8 10             	cmp    $0x10,%eax
   164a0:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   164a6:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   164ac:	0f 44 c1             	cmove  %ecx,%eax
   164af:	83 ec 0c             	sub    $0xc,%esp
   164b2:	52                   	push   %edx
   164b3:	57                   	push   %edi
   164b4:	55                   	push   %ebp
   164b5:	50                   	push   %eax
   164b6:	8d 83 22 11 ff ff    	lea    -0xeede(%ebx),%eax
   164bc:	50                   	push   %eax
   164bd:	e8 3e db fe ff       	call   4000 <print_asm_2>
   164c2:	83 c4 20             	add    $0x20,%esp
   164c5:	e8 26 fc ff ff       	call   160f0 <instr_execute_2op>
   164ca:	83 c4 1c             	add    $0x1c,%esp
   164cd:	89 f0                	mov    %esi,%eax
   164cf:	5b                   	pop    %ebx
   164d0:	5e                   	pop    %esi
   164d1:	5f                   	pop    %edi
   164d2:	5d                   	pop    %ebp
   164d3:	c3                   	ret    
   164d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   164d8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   164de:	eb cf                	jmp    164af <and_i2rm_v+0x7f>

000164e0 <and_i2rm_b>:
   164e0:	55                   	push   %ebp
   164e1:	57                   	push   %edi
   164e2:	56                   	push   %esi
   164e3:	53                   	push   %ebx
   164e4:	e8 d7 c7 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   164e9:	81 c3 17 4b 01 00    	add    $0x14b17,%ebx
   164ef:	83 ec 24             	sub    $0x24,%esp
   164f2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   164f6:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   164fc:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   16502:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   16509:	8d 45 01             	lea    0x1(%ebp),%eax
   1650c:	52                   	push   %edx
   1650d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16514:	89 54 24 18          	mov    %edx,0x18(%esp)
   16518:	50                   	push   %eax
   16519:	e8 42 e1 fe ff       	call   4660 <modrm_rm>
   1651e:	8b 77 10             	mov    0x10(%edi),%esi
   16521:	83 c0 01             	add    $0x1,%eax
   16524:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   16528:	01 c5                	add    %eax,%ebp
   1652a:	83 c4 10             	add    $0x10,%esp
   1652d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   16533:	89 6f 04             	mov    %ebp,0x4(%edi)
   16536:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1653a:	c1 ee 03             	shr    $0x3,%esi
   1653d:	01 c6                	add    %eax,%esi
   1653f:	89 f0                	mov    %esi,%eax
   16541:	0f b6 e8             	movzbl %al,%ebp
   16544:	8b 42 10             	mov    0x10(%edx),%eax
   16547:	83 f8 08             	cmp    $0x8,%eax
   1654a:	74 3c                	je     16588 <and_i2rm_b+0xa8>
   1654c:	83 f8 10             	cmp    $0x10,%eax
   1654f:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   16555:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1655b:	0f 44 c1             	cmove  %ecx,%eax
   1655e:	83 ec 0c             	sub    $0xc,%esp
   16561:	52                   	push   %edx
   16562:	57                   	push   %edi
   16563:	55                   	push   %ebp
   16564:	50                   	push   %eax
   16565:	8d 83 22 11 ff ff    	lea    -0xeede(%ebx),%eax
   1656b:	50                   	push   %eax
   1656c:	e8 8f da fe ff       	call   4000 <print_asm_2>
   16571:	83 c4 20             	add    $0x20,%esp
   16574:	e8 77 fb ff ff       	call   160f0 <instr_execute_2op>
   16579:	83 c4 1c             	add    $0x1c,%esp
   1657c:	89 f0                	mov    %esi,%eax
   1657e:	5b                   	pop    %ebx
   1657f:	5e                   	pop    %esi
   16580:	5f                   	pop    %edi
   16581:	5d                   	pop    %ebp
   16582:	c3                   	ret    
   16583:	90                   	nop
   16584:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16588:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   1658e:	eb ce                	jmp    1655e <and_i2rm_b+0x7e>

00016590 <and_rm2r_v>:
   16590:	55                   	push   %ebp
   16591:	57                   	push   %edi
   16592:	56                   	push   %esi
   16593:	53                   	push   %ebx
   16594:	e8 27 c7 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16599:	81 c3 67 4a 01 00    	add    $0x14a67,%ebx
   1659f:	83 ec 10             	sub    $0x10,%esp
   165a2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   165a8:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   165ae:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   165b4:	0f b6 00             	movzbl (%eax),%eax
   165b7:	89 45 10             	mov    %eax,0x10(%ebp)
   165ba:	89 47 10             	mov    %eax,0x10(%edi)
   165bd:	55                   	push   %ebp
   165be:	57                   	push   %edi
   165bf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   165c3:	83 c0 01             	add    $0x1,%eax
   165c6:	50                   	push   %eax
   165c7:	e8 c4 df fe ff       	call   4590 <modrm_r_rm>
   165cc:	8d 70 01             	lea    0x1(%eax),%esi
   165cf:	83 c4 10             	add    $0x10,%esp
   165d2:	89 f0                	mov    %esi,%eax
   165d4:	0f b6 c8             	movzbl %al,%ecx
   165d7:	8b 47 10             	mov    0x10(%edi),%eax
   165da:	83 f8 08             	cmp    $0x8,%eax
   165dd:	74 41                	je     16620 <and_rm2r_v+0x90>
   165df:	83 f8 10             	cmp    $0x10,%eax
   165e2:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   165e8:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   165ee:	0f 44 c2             	cmove  %edx,%eax
   165f1:	83 ec 0c             	sub    $0xc,%esp
   165f4:	57                   	push   %edi
   165f5:	55                   	push   %ebp
   165f6:	51                   	push   %ecx
   165f7:	50                   	push   %eax
   165f8:	8d 83 22 11 ff ff    	lea    -0xeede(%ebx),%eax
   165fe:	50                   	push   %eax
   165ff:	e8 fc d9 fe ff       	call   4000 <print_asm_2>
   16604:	83 c4 20             	add    $0x20,%esp
   16607:	e8 e4 fa ff ff       	call   160f0 <instr_execute_2op>
   1660c:	83 c4 0c             	add    $0xc,%esp
   1660f:	89 f0                	mov    %esi,%eax
   16611:	5b                   	pop    %ebx
   16612:	5e                   	pop    %esi
   16613:	5f                   	pop    %edi
   16614:	5d                   	pop    %ebp
   16615:	c3                   	ret    
   16616:	8d 76 00             	lea    0x0(%esi),%esi
   16619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   16620:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16626:	eb c9                	jmp    165f1 <and_rm2r_v+0x61>
   16628:	66 90                	xchg   %ax,%ax
   1662a:	66 90                	xchg   %ax,%ax
   1662c:	66 90                	xchg   %ax,%ax
   1662e:	66 90                	xchg   %ax,%ax

00016630 <adc_r2rm_v>:
   16630:	55                   	push   %ebp
   16631:	57                   	push   %edi
   16632:	56                   	push   %esi
   16633:	53                   	push   %ebx
   16634:	e8 87 c6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16639:	81 c3 c7 49 01 00    	add    $0x149c7,%ebx
   1663f:	83 ec 60             	sub    $0x60,%esp
   16642:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   16648:	8d 7c 24 30          	lea    0x30(%esp),%edi
   1664c:	0f b6 00             	movzbl (%eax),%eax
   1664f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   16653:	89 44 24 40          	mov    %eax,0x40(%esp)
   16657:	57                   	push   %edi
   16658:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   1665c:	55                   	push   %ebp
   1665d:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   16661:	83 c0 01             	add    $0x1,%eax
   16664:	50                   	push   %eax
   16665:	e8 26 df fe ff       	call   4590 <modrm_r_rm>
   1666a:	89 2c 24             	mov    %ebp,(%esp)
   1666d:	89 c6                	mov    %eax,%esi
   1666f:	e8 2c e0 fe ff       	call   46a0 <operand_read>
   16674:	89 3c 24             	mov    %edi,(%esp)
   16677:	e8 24 e0 fe ff       	call   46a0 <operand_read>
   1667c:	58                   	pop    %eax
   1667d:	5a                   	pop    %edx
   1667e:	ff 74 24 40          	pushl  0x40(%esp)
   16682:	ff 74 24 20          	pushl  0x20(%esp)
   16686:	e8 b5 4a ff ff       	call   b140 <alu_adc>
   1668b:	89 3c 24             	mov    %edi,(%esp)
   1668e:	89 44 24 48          	mov    %eax,0x48(%esp)
   16692:	e8 99 e1 fe ff       	call   4830 <operand_write>
   16697:	83 c4 6c             	add    $0x6c,%esp
   1669a:	8d 46 01             	lea    0x1(%esi),%eax
   1669d:	5b                   	pop    %ebx
   1669e:	5e                   	pop    %esi
   1669f:	5f                   	pop    %edi
   166a0:	5d                   	pop    %ebp
   166a1:	c3                   	ret    
   166a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   166a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000166b0 <adc_i2rm_bv>:
   166b0:	55                   	push   %ebp
   166b1:	57                   	push   %edi
   166b2:	56                   	push   %esi
   166b3:	53                   	push   %ebx
   166b4:	e8 07 c6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   166b9:	81 c3 47 49 01 00    	add    $0x14947,%ebx
   166bf:	83 ec 74             	sub    $0x74,%esp
   166c2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   166c8:	8b ac 24 88 00 00 00 	mov    0x88(%esp),%ebp
   166cf:	8d 7c 24 44          	lea    0x44(%esp),%edi
   166d3:	c7 44 24 30 08 00 00 	movl   $0x8,0x30(%esp)
   166da:	00 
   166db:	89 44 24 14          	mov    %eax,0x14(%esp)
   166df:	0f b6 00             	movzbl (%eax),%eax
   166e2:	89 44 24 54          	mov    %eax,0x54(%esp)
   166e6:	8d 45 01             	lea    0x1(%ebp),%eax
   166e9:	57                   	push   %edi
   166ea:	50                   	push   %eax
   166eb:	e8 70 df fe ff       	call   4660 <modrm_rm>
   166f0:	89 c6                	mov    %eax,%esi
   166f2:	89 3c 24             	mov    %edi,(%esp)
   166f5:	e8 a6 df fe ff       	call   46a0 <operand_read>
   166fa:	8d 44 2e 01          	lea    0x1(%esi,%ebp,1),%eax
   166fe:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   16705:	00 
   16706:	83 c6 02             	add    $0x2,%esi
   16709:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   1670d:	58                   	pop    %eax
   1670e:	8d 44 24 24          	lea    0x24(%esp),%eax
   16712:	50                   	push   %eax
   16713:	e8 88 df fe ff       	call   46a0 <operand_read>
   16718:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1671c:	83 c4 10             	add    $0x10,%esp
   1671f:	0f b6 00             	movzbl (%eax),%eax
   16722:	8d 50 f0             	lea    -0x10(%eax),%edx
   16725:	81 e2 ef 00 00 00    	and    $0xef,%edx
   1672b:	75 45                	jne    16772 <adc_i2rm_bv+0xc2>
   1672d:	3c 10                	cmp    $0x10,%al
   1672f:	74 2f                	je     16760 <adc_i2rm_bv+0xb0>
   16731:	0f be 44 24 24       	movsbl 0x24(%esp),%eax
   16736:	89 44 24 24          	mov    %eax,0x24(%esp)
   1673a:	83 ec 08             	sub    $0x8,%esp
   1673d:	ff 74 24 50          	pushl  0x50(%esp)
   16741:	50                   	push   %eax
   16742:	e8 f9 49 ff ff       	call   b140 <alu_adc>
   16747:	89 3c 24             	mov    %edi,(%esp)
   1674a:	89 44 24 58          	mov    %eax,0x58(%esp)
   1674e:	e8 dd e0 fe ff       	call   4830 <operand_write>
   16753:	83 c4 7c             	add    $0x7c,%esp
   16756:	89 f0                	mov    %esi,%eax
   16758:	5b                   	pop    %ebx
   16759:	5e                   	pop    %esi
   1675a:	5f                   	pop    %edi
   1675b:	5d                   	pop    %ebp
   1675c:	c3                   	ret    
   1675d:	8d 76 00             	lea    0x0(%esi),%esi
   16760:	8b 44 24 24          	mov    0x24(%esp),%eax
   16764:	c1 e0 08             	shl    $0x8,%eax
   16767:	66 c1 f8 08          	sar    $0x8,%ax
   1676b:	98                   	cwtl   
   1676c:	89 44 24 24          	mov    %eax,0x24(%esp)
   16770:	eb c8                	jmp    1673a <adc_i2rm_bv+0x8a>
   16772:	8d 83 48 11 ff ff    	lea    -0xeeb8(%ebx),%eax
   16778:	50                   	push   %eax
   16779:	8d 83 34 11 ff ff    	lea    -0xeecc(%ebx),%eax
   1677f:	6a 2c                	push   $0x2c
   16781:	50                   	push   %eax
   16782:	8d 83 ac 09 ff ff    	lea    -0xf654(%ebx),%eax
   16788:	50                   	push   %eax
   16789:	e8 02 c1 fe ff       	call   2890 <__assert_fail@plt>
   1678e:	66 90                	xchg   %ax,%ax

00016790 <not_rm_v>:
   16790:	55                   	push   %ebp
   16791:	57                   	push   %edi
   16792:	56                   	push   %esi
   16793:	53                   	push   %ebx
   16794:	e8 27 c5 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16799:	81 c3 67 48 01 00    	add    $0x14867,%ebx
   1679f:	83 ec 14             	sub    $0x14,%esp
   167a2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   167a8:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   167ae:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   167b4:	0f b6 00             	movzbl (%eax),%eax
   167b7:	56                   	push   %esi
   167b8:	89 47 10             	mov    %eax,0x10(%edi)
   167bb:	89 46 10             	mov    %eax,0x10(%esi)
   167be:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   167c2:	83 c0 01             	add    $0x1,%eax
   167c5:	50                   	push   %eax
   167c6:	e8 95 de fe ff       	call   4660 <modrm_rm>
   167cb:	8d 68 01             	lea    0x1(%eax),%ebp
   167ce:	83 c4 10             	add    $0x10,%esp
   167d1:	89 e8                	mov    %ebp,%eax
   167d3:	0f b6 c8             	movzbl %al,%ecx
   167d6:	8b 47 10             	mov    0x10(%edi),%eax
   167d9:	83 f8 08             	cmp    $0x8,%eax
   167dc:	74 42                	je     16820 <not_rm_v+0x90>
   167de:	83 f8 10             	cmp    $0x10,%eax
   167e1:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   167e7:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   167ed:	0f 44 c2             	cmove  %edx,%eax
   167f0:	56                   	push   %esi
   167f1:	51                   	push   %ecx
   167f2:	50                   	push   %eax
   167f3:	8d 83 54 11 ff ff    	lea    -0xeeac(%ebx),%eax
   167f9:	50                   	push   %eax
   167fa:	e8 11 d7 fe ff       	call   3f10 <print_asm_1>
   167ff:	89 34 24             	mov    %esi,(%esp)
   16802:	e8 99 de fe ff       	call   46a0 <operand_read>
   16807:	89 34 24             	mov    %esi,(%esp)
   1680a:	f7 56 0c             	notl   0xc(%esi)
   1680d:	e8 1e e0 fe ff       	call   4830 <operand_write>
   16812:	83 c4 1c             	add    $0x1c,%esp
   16815:	89 e8                	mov    %ebp,%eax
   16817:	5b                   	pop    %ebx
   16818:	5e                   	pop    %esi
   16819:	5f                   	pop    %edi
   1681a:	5d                   	pop    %ebp
   1681b:	c3                   	ret    
   1681c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16820:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16826:	eb c8                	jmp    167f0 <not_rm_v+0x60>
   16828:	66 90                	xchg   %ax,%ax
   1682a:	66 90                	xchg   %ax,%ax
   1682c:	66 90                	xchg   %ax,%ax
   1682e:	66 90                	xchg   %ax,%ax

00016830 <iret>:
   16830:	56                   	push   %esi
   16831:	53                   	push   %ebx
   16832:	e8 89 c4 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16837:	81 c3 c9 47 01 00    	add    $0x147c9,%ebx
   1683d:	83 c4 80             	add    $0xffffff80,%esp
   16840:	8d b3 60 1d 05 00    	lea    0x51d60(%ebx),%esi
   16846:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)
   1684d:	00 
   1684e:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%esp)
   16855:	00 
   16856:	c6 44 24 18 02       	movb   $0x2,0x18(%esp)
   1685b:	8b 46 10             	mov    0x10(%esi),%eax
   1685e:	89 44 24 14          	mov    %eax,0x14(%esp)
   16862:	8d 44 24 10          	lea    0x10(%esp),%eax
   16866:	50                   	push   %eax
   16867:	e8 34 de fe ff       	call   46a0 <operand_read>
   1686c:	8b 46 10             	mov    0x10(%esi),%eax
   1686f:	8b 54 24 20          	mov    0x20(%esp),%edx
   16873:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   1687a:	00 
   1687b:	c7 44 24 48 20 00 00 	movl   $0x20,0x48(%esp)
   16882:	00 
   16883:	c6 44 24 40 02       	movb   $0x2,0x40(%esp)
   16888:	83 c0 04             	add    $0x4,%eax
   1688b:	89 56 20             	mov    %edx,0x20(%esi)
   1688e:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   16892:	89 46 10             	mov    %eax,0x10(%esi)
   16895:	58                   	pop    %eax
   16896:	8d 44 24 34          	lea    0x34(%esp),%eax
   1689a:	50                   	push   %eax
   1689b:	e8 00 de fe ff       	call   46a0 <operand_read>
   168a0:	8b 46 10             	mov    0x10(%esi),%eax
   168a3:	8b 54 24 44          	mov    0x44(%esp),%edx
   168a7:	c7 44 24 5c 02 00 00 	movl   $0x2,0x5c(%esp)
   168ae:	00 
   168af:	c7 44 24 6c 20 00 00 	movl   $0x20,0x6c(%esp)
   168b6:	00 
   168b7:	c6 44 24 64 02       	movb   $0x2,0x64(%esp)
   168bc:	83 c0 04             	add    $0x4,%eax
   168bf:	66 89 56 48          	mov    %dx,0x48(%esi)
   168c3:	89 44 24 60          	mov    %eax,0x60(%esp)
   168c7:	89 46 10             	mov    %eax,0x10(%esi)
   168ca:	5a                   	pop    %edx
   168cb:	8d 44 24 58          	lea    0x58(%esp),%eax
   168cf:	50                   	push   %eax
   168d0:	e8 cb dd fe ff       	call   46a0 <operand_read>
   168d5:	8b 44 24 68          	mov    0x68(%esp),%eax
   168d9:	83 46 10 04          	addl   $0x4,0x10(%esi)
   168dd:	89 46 24             	mov    %eax,0x24(%esi)
   168e0:	81 c4 84 00 00 00    	add    $0x84,%esp
   168e6:	31 c0                	xor    %eax,%eax
   168e8:	5b                   	pop    %ebx
   168e9:	5e                   	pop    %esi
   168ea:	c3                   	ret    
   168eb:	66 90                	xchg   %ax,%ax
   168ed:	66 90                	xchg   %ax,%ax
   168ef:	90                   	nop

000168f0 <instr_execute_2op>:
   168f0:	56                   	push   %esi
   168f1:	53                   	push   %ebx
   168f2:	e8 c9 c3 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   168f7:	81 c3 09 47 01 00    	add    $0x14709,%ebx
   168fd:	83 ec 10             	sub    $0x10,%esp
   16900:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   16906:	56                   	push   %esi
   16907:	e8 94 dd fe ff       	call   46a0 <operand_read>
   1690c:	8d 83 20 1d 05 00    	lea    0x51d20(%ebx),%eax
   16912:	8b 56 0c             	mov    0xc(%esi),%edx
   16915:	89 50 0c             	mov    %edx,0xc(%eax)
   16918:	89 04 24             	mov    %eax,(%esp)
   1691b:	e8 10 df fe ff       	call   4830 <operand_write>
   16920:	83 c4 14             	add    $0x14,%esp
   16923:	5b                   	pop    %ebx
   16924:	5e                   	pop    %esi
   16925:	c3                   	ret    
   16926:	8d 76 00             	lea    0x0(%esi),%esi
   16929:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00016930 <mov_r2rm_b>:
   16930:	55                   	push   %ebp
   16931:	57                   	push   %edi
   16932:	56                   	push   %esi
   16933:	53                   	push   %ebx
   16934:	e8 87 c3 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16939:	81 c3 c7 46 01 00    	add    $0x146c7,%ebx
   1693f:	83 ec 10             	sub    $0x10,%esp
   16942:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   16948:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   1694e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   16955:	57                   	push   %edi
   16956:	55                   	push   %ebp
   16957:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1695b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16962:	83 c0 01             	add    $0x1,%eax
   16965:	50                   	push   %eax
   16966:	e8 25 dc fe ff       	call   4590 <modrm_r_rm>
   1696b:	8d 70 01             	lea    0x1(%eax),%esi
   1696e:	83 c4 10             	add    $0x10,%esp
   16971:	89 f0                	mov    %esi,%eax
   16973:	0f b6 c8             	movzbl %al,%ecx
   16976:	8b 47 10             	mov    0x10(%edi),%eax
   16979:	83 f8 08             	cmp    $0x8,%eax
   1697c:	74 3a                	je     169b8 <mov_r2rm_b+0x88>
   1697e:	83 f8 10             	cmp    $0x10,%eax
   16981:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   16987:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   1698d:	0f 44 c2             	cmove  %edx,%eax
   16990:	83 ec 0c             	sub    $0xc,%esp
   16993:	57                   	push   %edi
   16994:	55                   	push   %ebp
   16995:	51                   	push   %ecx
   16996:	50                   	push   %eax
   16997:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   1699d:	50                   	push   %eax
   1699e:	e8 5d d6 fe ff       	call   4000 <print_asm_2>
   169a3:	83 c4 20             	add    $0x20,%esp
   169a6:	e8 45 ff ff ff       	call   168f0 <instr_execute_2op>
   169ab:	83 c4 0c             	add    $0xc,%esp
   169ae:	89 f0                	mov    %esi,%eax
   169b0:	5b                   	pop    %ebx
   169b1:	5e                   	pop    %esi
   169b2:	5f                   	pop    %edi
   169b3:	5d                   	pop    %ebp
   169b4:	c3                   	ret    
   169b5:	8d 76 00             	lea    0x0(%esi),%esi
   169b8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   169be:	eb d0                	jmp    16990 <mov_r2rm_b+0x60>

000169c0 <mov_r2rm_v>:
   169c0:	55                   	push   %ebp
   169c1:	57                   	push   %edi
   169c2:	56                   	push   %esi
   169c3:	53                   	push   %ebx
   169c4:	e8 f7 c2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   169c9:	81 c3 37 46 01 00    	add    $0x14637,%ebx
   169cf:	83 ec 10             	sub    $0x10,%esp
   169d2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   169d8:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   169de:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   169e4:	0f b6 00             	movzbl (%eax),%eax
   169e7:	89 45 10             	mov    %eax,0x10(%ebp)
   169ea:	89 47 10             	mov    %eax,0x10(%edi)
   169ed:	57                   	push   %edi
   169ee:	55                   	push   %ebp
   169ef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   169f3:	83 c0 01             	add    $0x1,%eax
   169f6:	50                   	push   %eax
   169f7:	e8 94 db fe ff       	call   4590 <modrm_r_rm>
   169fc:	8d 70 01             	lea    0x1(%eax),%esi
   169ff:	83 c4 10             	add    $0x10,%esp
   16a02:	89 f0                	mov    %esi,%eax
   16a04:	0f b6 c8             	movzbl %al,%ecx
   16a07:	8b 47 10             	mov    0x10(%edi),%eax
   16a0a:	83 f8 08             	cmp    $0x8,%eax
   16a0d:	74 41                	je     16a50 <mov_r2rm_v+0x90>
   16a0f:	83 f8 10             	cmp    $0x10,%eax
   16a12:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   16a18:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   16a1e:	0f 44 c2             	cmove  %edx,%eax
   16a21:	83 ec 0c             	sub    $0xc,%esp
   16a24:	57                   	push   %edi
   16a25:	55                   	push   %ebp
   16a26:	51                   	push   %ecx
   16a27:	50                   	push   %eax
   16a28:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16a2e:	50                   	push   %eax
   16a2f:	e8 cc d5 fe ff       	call   4000 <print_asm_2>
   16a34:	83 c4 20             	add    $0x20,%esp
   16a37:	e8 b4 fe ff ff       	call   168f0 <instr_execute_2op>
   16a3c:	83 c4 0c             	add    $0xc,%esp
   16a3f:	89 f0                	mov    %esi,%eax
   16a41:	5b                   	pop    %ebx
   16a42:	5e                   	pop    %esi
   16a43:	5f                   	pop    %edi
   16a44:	5d                   	pop    %ebp
   16a45:	c3                   	ret    
   16a46:	8d 76 00             	lea    0x0(%esi),%esi
   16a49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   16a50:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16a56:	eb c9                	jmp    16a21 <mov_r2rm_v+0x61>
   16a58:	90                   	nop
   16a59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016a60 <mov_rm2r_b>:
   16a60:	55                   	push   %ebp
   16a61:	57                   	push   %edi
   16a62:	56                   	push   %esi
   16a63:	53                   	push   %ebx
   16a64:	e8 57 c2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16a69:	81 c3 97 45 01 00    	add    $0x14597,%ebx
   16a6f:	83 ec 10             	sub    $0x10,%esp
   16a72:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   16a78:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   16a7e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   16a85:	55                   	push   %ebp
   16a86:	57                   	push   %edi
   16a87:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16a8b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16a92:	83 c0 01             	add    $0x1,%eax
   16a95:	50                   	push   %eax
   16a96:	e8 f5 da fe ff       	call   4590 <modrm_r_rm>
   16a9b:	8d 70 01             	lea    0x1(%eax),%esi
   16a9e:	83 c4 10             	add    $0x10,%esp
   16aa1:	89 f0                	mov    %esi,%eax
   16aa3:	0f b6 c8             	movzbl %al,%ecx
   16aa6:	8b 47 10             	mov    0x10(%edi),%eax
   16aa9:	83 f8 08             	cmp    $0x8,%eax
   16aac:	74 3a                	je     16ae8 <mov_rm2r_b+0x88>
   16aae:	83 f8 10             	cmp    $0x10,%eax
   16ab1:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   16ab7:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   16abd:	0f 44 c2             	cmove  %edx,%eax
   16ac0:	83 ec 0c             	sub    $0xc,%esp
   16ac3:	57                   	push   %edi
   16ac4:	55                   	push   %ebp
   16ac5:	51                   	push   %ecx
   16ac6:	50                   	push   %eax
   16ac7:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16acd:	50                   	push   %eax
   16ace:	e8 2d d5 fe ff       	call   4000 <print_asm_2>
   16ad3:	83 c4 20             	add    $0x20,%esp
   16ad6:	e8 15 fe ff ff       	call   168f0 <instr_execute_2op>
   16adb:	83 c4 0c             	add    $0xc,%esp
   16ade:	89 f0                	mov    %esi,%eax
   16ae0:	5b                   	pop    %ebx
   16ae1:	5e                   	pop    %esi
   16ae2:	5f                   	pop    %edi
   16ae3:	5d                   	pop    %ebp
   16ae4:	c3                   	ret    
   16ae5:	8d 76 00             	lea    0x0(%esi),%esi
   16ae8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16aee:	eb d0                	jmp    16ac0 <mov_rm2r_b+0x60>

00016af0 <mov_rm2r_v>:
   16af0:	55                   	push   %ebp
   16af1:	57                   	push   %edi
   16af2:	56                   	push   %esi
   16af3:	53                   	push   %ebx
   16af4:	e8 c7 c1 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16af9:	81 c3 07 45 01 00    	add    $0x14507,%ebx
   16aff:	83 ec 10             	sub    $0x10,%esp
   16b02:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   16b08:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   16b0e:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   16b14:	0f b6 00             	movzbl (%eax),%eax
   16b17:	89 45 10             	mov    %eax,0x10(%ebp)
   16b1a:	89 47 10             	mov    %eax,0x10(%edi)
   16b1d:	55                   	push   %ebp
   16b1e:	57                   	push   %edi
   16b1f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16b23:	83 c0 01             	add    $0x1,%eax
   16b26:	50                   	push   %eax
   16b27:	e8 64 da fe ff       	call   4590 <modrm_r_rm>
   16b2c:	8d 70 01             	lea    0x1(%eax),%esi
   16b2f:	83 c4 10             	add    $0x10,%esp
   16b32:	89 f0                	mov    %esi,%eax
   16b34:	0f b6 c8             	movzbl %al,%ecx
   16b37:	8b 47 10             	mov    0x10(%edi),%eax
   16b3a:	83 f8 08             	cmp    $0x8,%eax
   16b3d:	74 41                	je     16b80 <mov_rm2r_v+0x90>
   16b3f:	83 f8 10             	cmp    $0x10,%eax
   16b42:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   16b48:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   16b4e:	0f 44 c2             	cmove  %edx,%eax
   16b51:	83 ec 0c             	sub    $0xc,%esp
   16b54:	57                   	push   %edi
   16b55:	55                   	push   %ebp
   16b56:	51                   	push   %ecx
   16b57:	50                   	push   %eax
   16b58:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16b5e:	50                   	push   %eax
   16b5f:	e8 9c d4 fe ff       	call   4000 <print_asm_2>
   16b64:	83 c4 20             	add    $0x20,%esp
   16b67:	e8 84 fd ff ff       	call   168f0 <instr_execute_2op>
   16b6c:	83 c4 0c             	add    $0xc,%esp
   16b6f:	89 f0                	mov    %esi,%eax
   16b71:	5b                   	pop    %ebx
   16b72:	5e                   	pop    %esi
   16b73:	5f                   	pop    %edi
   16b74:	5d                   	pop    %ebp
   16b75:	c3                   	ret    
   16b76:	8d 76 00             	lea    0x0(%esi),%esi
   16b79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   16b80:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16b86:	eb c9                	jmp    16b51 <mov_rm2r_v+0x61>
   16b88:	90                   	nop
   16b89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016b90 <mov_i2rm_b>:
   16b90:	55                   	push   %ebp
   16b91:	57                   	push   %edi
   16b92:	56                   	push   %esi
   16b93:	53                   	push   %ebx
   16b94:	e8 27 c1 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16b99:	81 c3 67 44 01 00    	add    $0x14467,%ebx
   16b9f:	83 ec 24             	sub    $0x24,%esp
   16ba2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   16ba6:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   16bac:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   16bb2:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   16bb9:	8d 45 01             	lea    0x1(%ebp),%eax
   16bbc:	52                   	push   %edx
   16bbd:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16bc4:	89 54 24 18          	mov    %edx,0x18(%esp)
   16bc8:	50                   	push   %eax
   16bc9:	e8 92 da fe ff       	call   4660 <modrm_rm>
   16bce:	8b 77 10             	mov    0x10(%edi),%esi
   16bd1:	83 c0 01             	add    $0x1,%eax
   16bd4:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   16bd8:	01 c5                	add    %eax,%ebp
   16bda:	83 c4 10             	add    $0x10,%esp
   16bdd:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   16be3:	89 6f 04             	mov    %ebp,0x4(%edi)
   16be6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   16bea:	c1 ee 03             	shr    $0x3,%esi
   16bed:	01 c6                	add    %eax,%esi
   16bef:	89 f0                	mov    %esi,%eax
   16bf1:	0f b6 e8             	movzbl %al,%ebp
   16bf4:	8b 42 10             	mov    0x10(%edx),%eax
   16bf7:	83 f8 08             	cmp    $0x8,%eax
   16bfa:	74 3c                	je     16c38 <mov_i2rm_b+0xa8>
   16bfc:	83 f8 10             	cmp    $0x10,%eax
   16bff:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   16c05:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   16c0b:	0f 44 c1             	cmove  %ecx,%eax
   16c0e:	83 ec 0c             	sub    $0xc,%esp
   16c11:	52                   	push   %edx
   16c12:	57                   	push   %edi
   16c13:	55                   	push   %ebp
   16c14:	50                   	push   %eax
   16c15:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16c1b:	50                   	push   %eax
   16c1c:	e8 df d3 fe ff       	call   4000 <print_asm_2>
   16c21:	83 c4 20             	add    $0x20,%esp
   16c24:	e8 c7 fc ff ff       	call   168f0 <instr_execute_2op>
   16c29:	83 c4 1c             	add    $0x1c,%esp
   16c2c:	89 f0                	mov    %esi,%eax
   16c2e:	5b                   	pop    %ebx
   16c2f:	5e                   	pop    %esi
   16c30:	5f                   	pop    %edi
   16c31:	5d                   	pop    %ebp
   16c32:	c3                   	ret    
   16c33:	90                   	nop
   16c34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16c38:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16c3e:	eb ce                	jmp    16c0e <mov_i2rm_b+0x7e>

00016c40 <mov_i2rm_v>:
   16c40:	55                   	push   %ebp
   16c41:	57                   	push   %edi
   16c42:	56                   	push   %esi
   16c43:	53                   	push   %ebx
   16c44:	e8 77 c0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16c49:	81 c3 b7 43 01 00    	add    $0x143b7,%ebx
   16c4f:	83 ec 24             	sub    $0x24,%esp
   16c52:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   16c58:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   16c5c:	8d bb e0 1c 05 00    	lea    0x51ce0(%ebx),%edi
   16c62:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   16c68:	0f b6 00             	movzbl (%eax),%eax
   16c6b:	89 42 10             	mov    %eax,0x10(%edx)
   16c6e:	89 47 10             	mov    %eax,0x10(%edi)
   16c71:	8d 45 01             	lea    0x1(%ebp),%eax
   16c74:	52                   	push   %edx
   16c75:	89 54 24 18          	mov    %edx,0x18(%esp)
   16c79:	50                   	push   %eax
   16c7a:	e8 e1 d9 fe ff       	call   4660 <modrm_rm>
   16c7f:	8b 77 10             	mov    0x10(%edi),%esi
   16c82:	83 c0 01             	add    $0x1,%eax
   16c85:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   16c89:	01 c5                	add    %eax,%ebp
   16c8b:	83 c4 10             	add    $0x10,%esp
   16c8e:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   16c94:	89 6f 04             	mov    %ebp,0x4(%edi)
   16c97:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   16c9b:	c1 ee 03             	shr    $0x3,%esi
   16c9e:	01 c6                	add    %eax,%esi
   16ca0:	89 f0                	mov    %esi,%eax
   16ca2:	0f b6 e8             	movzbl %al,%ebp
   16ca5:	8b 42 10             	mov    0x10(%edx),%eax
   16ca8:	83 f8 08             	cmp    $0x8,%eax
   16cab:	74 3b                	je     16ce8 <mov_i2rm_v+0xa8>
   16cad:	83 f8 10             	cmp    $0x10,%eax
   16cb0:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   16cb6:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   16cbc:	0f 44 c1             	cmove  %ecx,%eax
   16cbf:	83 ec 0c             	sub    $0xc,%esp
   16cc2:	52                   	push   %edx
   16cc3:	57                   	push   %edi
   16cc4:	55                   	push   %ebp
   16cc5:	50                   	push   %eax
   16cc6:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16ccc:	50                   	push   %eax
   16ccd:	e8 2e d3 fe ff       	call   4000 <print_asm_2>
   16cd2:	83 c4 20             	add    $0x20,%esp
   16cd5:	e8 16 fc ff ff       	call   168f0 <instr_execute_2op>
   16cda:	83 c4 1c             	add    $0x1c,%esp
   16cdd:	89 f0                	mov    %esi,%eax
   16cdf:	5b                   	pop    %ebx
   16ce0:	5e                   	pop    %esi
   16ce1:	5f                   	pop    %edi
   16ce2:	5d                   	pop    %ebp
   16ce3:	c3                   	ret    
   16ce4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16ce8:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16cee:	eb cf                	jmp    16cbf <mov_i2rm_v+0x7f>

00016cf0 <mov_i2r_b>:
   16cf0:	53                   	push   %ebx
   16cf1:	e8 ca bf fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16cf6:	81 c3 0a 43 01 00    	add    $0x1430a,%ebx
   16cfc:	83 ec 14             	sub    $0x14,%esp
   16cff:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   16d03:	8d 83 e0 1c 05 00    	lea    0x51ce0(%ebx),%eax
   16d09:	8d 93 20 1d 05 00    	lea    0x51d20(%ebx),%edx
   16d0f:	83 c1 01             	add    $0x1,%ecx
   16d12:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   16d19:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   16d1f:	89 48 04             	mov    %ecx,0x4(%eax)
   16d22:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   16d26:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   16d2d:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   16d31:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   16d37:	83 e1 07             	and    $0x7,%ecx
   16d3a:	89 4a 04             	mov    %ecx,0x4(%edx)
   16d3d:	52                   	push   %edx
   16d3e:	50                   	push   %eax
   16d3f:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16d45:	6a 02                	push   $0x2
   16d47:	50                   	push   %eax
   16d48:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16d4e:	50                   	push   %eax
   16d4f:	e8 ac d2 fe ff       	call   4000 <print_asm_2>
   16d54:	83 c4 20             	add    $0x20,%esp
   16d57:	e8 94 fb ff ff       	call   168f0 <instr_execute_2op>
   16d5c:	83 c4 08             	add    $0x8,%esp
   16d5f:	b8 02 00 00 00       	mov    $0x2,%eax
   16d64:	5b                   	pop    %ebx
   16d65:	c3                   	ret    
   16d66:	8d 76 00             	lea    0x0(%esi),%esi
   16d69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00016d70 <mov_i2r_v>:
   16d70:	57                   	push   %edi
   16d71:	56                   	push   %esi
   16d72:	53                   	push   %ebx
   16d73:	e8 48 bf fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16d78:	81 c3 88 42 01 00    	add    $0x14288,%ebx
   16d7e:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   16d84:	8d 93 e0 1c 05 00    	lea    0x51ce0(%ebx),%edx
   16d8a:	8d bb 20 1d 05 00    	lea    0x51d20(%ebx),%edi
   16d90:	0f b6 08             	movzbl (%eax),%ecx
   16d93:	8b 44 24 10          	mov    0x10(%esp),%eax
   16d97:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   16d9d:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   16da1:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   16da7:	83 c0 01             	add    $0x1,%eax
   16daa:	89 42 04             	mov    %eax,0x4(%edx)
   16dad:	8b 44 24 14          	mov    0x14(%esp),%eax
   16db1:	89 ce                	mov    %ecx,%esi
   16db3:	c1 ee 03             	shr    $0x3,%esi
   16db6:	89 4f 10             	mov    %ecx,0x10(%edi)
   16db9:	89 4a 10             	mov    %ecx,0x10(%edx)
   16dbc:	83 c6 01             	add    $0x1,%esi
   16dbf:	83 e0 07             	and    $0x7,%eax
   16dc2:	83 f9 08             	cmp    $0x8,%ecx
   16dc5:	89 47 04             	mov    %eax,0x4(%edi)
   16dc8:	74 36                	je     16e00 <mov_i2r_v+0x90>
   16dca:	83 f9 10             	cmp    $0x10,%ecx
   16dcd:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   16dd3:	8d 8b 36 10 ff ff    	lea    -0xefca(%ebx),%ecx
   16dd9:	0f 44 c1             	cmove  %ecx,%eax
   16ddc:	83 ec 0c             	sub    $0xc,%esp
   16ddf:	57                   	push   %edi
   16de0:	52                   	push   %edx
   16de1:	56                   	push   %esi
   16de2:	50                   	push   %eax
   16de3:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16de9:	50                   	push   %eax
   16dea:	e8 11 d2 fe ff       	call   4000 <print_asm_2>
   16def:	83 c4 20             	add    $0x20,%esp
   16df2:	e8 f9 fa ff ff       	call   168f0 <instr_execute_2op>
   16df7:	89 f0                	mov    %esi,%eax
   16df9:	5b                   	pop    %ebx
   16dfa:	5e                   	pop    %esi
   16dfb:	5f                   	pop    %edi
   16dfc:	c3                   	ret    
   16dfd:	8d 76 00             	lea    0x0(%esi),%esi
   16e00:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16e06:	eb d4                	jmp    16ddc <mov_i2r_v+0x6c>
   16e08:	90                   	nop
   16e09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016e10 <mov_a2o_b>:
   16e10:	55                   	push   %ebp
   16e11:	57                   	push   %edi
   16e12:	56                   	push   %esi
   16e13:	53                   	push   %ebx
   16e14:	e8 a7 be fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16e19:	81 c3 e7 41 01 00    	add    $0x141e7,%ebx
   16e1f:	83 ec 0c             	sub    $0xc,%esp
   16e22:	8d bb 8d 14 05 00    	lea    0x5148d(%ebx),%edi
   16e28:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   16e2e:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   16e34:	80 3f 00             	cmpb   $0x0,(%edi)
   16e37:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   16e3e:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   16e45:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   16e4b:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   16e4f:	75 77                	jne    16ec8 <mov_a2o_b+0xb8>
   16e51:	83 ec 08             	sub    $0x8,%esp
   16e54:	6a 04                	push   $0x4
   16e56:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16e5a:	83 c0 01             	add    $0x1,%eax
   16e5d:	50                   	push   %eax
   16e5e:	e8 7d 34 00 00       	call   1a2e0 <instr_fetch>
   16e63:	83 c4 10             	add    $0x10,%esp
   16e66:	80 3f 00             	cmpb   $0x0,(%edi)
   16e69:	89 46 04             	mov    %eax,0x4(%esi)
   16e6c:	74 03                	je     16e71 <mov_a2o_b+0x61>
   16e6e:	89 46 14             	mov    %eax,0x14(%esi)
   16e71:	8b 46 10             	mov    0x10(%esi),%eax
   16e74:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   16e7b:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   16e82:	83 f8 08             	cmp    $0x8,%eax
   16e85:	74 59                	je     16ee0 <mov_a2o_b+0xd0>
   16e87:	83 f8 10             	cmp    $0x10,%eax
   16e8a:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   16e90:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   16e96:	0f 44 c2             	cmove  %edx,%eax
   16e99:	83 ec 0c             	sub    $0xc,%esp
   16e9c:	56                   	push   %esi
   16e9d:	55                   	push   %ebp
   16e9e:	6a 05                	push   $0x5
   16ea0:	50                   	push   %eax
   16ea1:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16ea7:	50                   	push   %eax
   16ea8:	e8 53 d1 fe ff       	call   4000 <print_asm_2>
   16ead:	83 c4 20             	add    $0x20,%esp
   16eb0:	e8 3b fa ff ff       	call   168f0 <instr_execute_2op>
   16eb5:	83 c4 0c             	add    $0xc,%esp
   16eb8:	b8 05 00 00 00       	mov    $0x5,%eax
   16ebd:	5b                   	pop    %ebx
   16ebe:	5e                   	pop    %esi
   16ebf:	5f                   	pop    %edi
   16ec0:	5d                   	pop    %ebp
   16ec1:	c3                   	ret    
   16ec2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16ec8:	83 ec 0c             	sub    $0xc,%esp
   16ecb:	56                   	push   %esi
   16ecc:	e8 9f dd fe ff       	call   4c70 <clear_operand_mem_addr>
   16ed1:	83 c4 10             	add    $0x10,%esp
   16ed4:	e9 78 ff ff ff       	jmp    16e51 <mov_a2o_b+0x41>
   16ed9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16ee0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16ee6:	eb b1                	jmp    16e99 <mov_a2o_b+0x89>
   16ee8:	90                   	nop
   16ee9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016ef0 <mov_a2o_v>:
   16ef0:	55                   	push   %ebp
   16ef1:	57                   	push   %edi
   16ef2:	56                   	push   %esi
   16ef3:	53                   	push   %ebx
   16ef4:	e8 c7 bd fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16ef9:	81 c3 07 41 01 00    	add    $0x14107,%ebx
   16eff:	83 ec 0c             	sub    $0xc,%esp
   16f02:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   16f08:	8d bb 8d 14 05 00    	lea    0x5148d(%ebx),%edi
   16f0e:	8d b3 20 1d 05 00    	lea    0x51d20(%ebx),%esi
   16f14:	8d ab e0 1c 05 00    	lea    0x51ce0(%ebx),%ebp
   16f1a:	0f b6 00             	movzbl (%eax),%eax
   16f1d:	80 3f 00             	cmpb   $0x0,(%edi)
   16f20:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   16f26:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   16f2a:	89 46 10             	mov    %eax,0x10(%esi)
   16f2d:	89 45 10             	mov    %eax,0x10(%ebp)
   16f30:	75 76                	jne    16fa8 <mov_a2o_v+0xb8>
   16f32:	83 ec 08             	sub    $0x8,%esp
   16f35:	6a 04                	push   $0x4
   16f37:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16f3b:	83 c0 01             	add    $0x1,%eax
   16f3e:	50                   	push   %eax
   16f3f:	e8 9c 33 00 00       	call   1a2e0 <instr_fetch>
   16f44:	83 c4 10             	add    $0x10,%esp
   16f47:	80 3f 00             	cmpb   $0x0,(%edi)
   16f4a:	89 46 04             	mov    %eax,0x4(%esi)
   16f4d:	74 03                	je     16f52 <mov_a2o_v+0x62>
   16f4f:	89 46 14             	mov    %eax,0x14(%esi)
   16f52:	8b 46 10             	mov    0x10(%esi),%eax
   16f55:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   16f5c:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   16f63:	83 f8 08             	cmp    $0x8,%eax
   16f66:	74 58                	je     16fc0 <mov_a2o_v+0xd0>
   16f68:	83 f8 10             	cmp    $0x10,%eax
   16f6b:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   16f71:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   16f77:	0f 44 c2             	cmove  %edx,%eax
   16f7a:	83 ec 0c             	sub    $0xc,%esp
   16f7d:	56                   	push   %esi
   16f7e:	55                   	push   %ebp
   16f7f:	6a 05                	push   $0x5
   16f81:	50                   	push   %eax
   16f82:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   16f88:	50                   	push   %eax
   16f89:	e8 72 d0 fe ff       	call   4000 <print_asm_2>
   16f8e:	83 c4 20             	add    $0x20,%esp
   16f91:	e8 5a f9 ff ff       	call   168f0 <instr_execute_2op>
   16f96:	83 c4 0c             	add    $0xc,%esp
   16f99:	b8 05 00 00 00       	mov    $0x5,%eax
   16f9e:	5b                   	pop    %ebx
   16f9f:	5e                   	pop    %esi
   16fa0:	5f                   	pop    %edi
   16fa1:	5d                   	pop    %ebp
   16fa2:	c3                   	ret    
   16fa3:	90                   	nop
   16fa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16fa8:	83 ec 0c             	sub    $0xc,%esp
   16fab:	56                   	push   %esi
   16fac:	e8 bf dc fe ff       	call   4c70 <clear_operand_mem_addr>
   16fb1:	83 c4 10             	add    $0x10,%esp
   16fb4:	e9 79 ff ff ff       	jmp    16f32 <mov_a2o_v+0x42>
   16fb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16fc0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   16fc6:	eb b2                	jmp    16f7a <mov_a2o_v+0x8a>
   16fc8:	90                   	nop
   16fc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016fd0 <mov_o2a_b>:
   16fd0:	55                   	push   %ebp
   16fd1:	57                   	push   %edi
   16fd2:	56                   	push   %esi
   16fd3:	53                   	push   %ebx
   16fd4:	e8 e7 bc fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   16fd9:	81 c3 27 40 01 00    	add    $0x14027,%ebx
   16fdf:	83 ec 0c             	sub    $0xc,%esp
   16fe2:	8d bb 8d 14 05 00    	lea    0x5148d(%ebx),%edi
   16fe8:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   16fee:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
   16ff4:	80 3f 00             	cmpb   $0x0,(%edi)
   16ff7:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   16ffe:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   17005:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   1700b:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   1700f:	75 77                	jne    17088 <mov_o2a_b+0xb8>
   17011:	83 ec 08             	sub    $0x8,%esp
   17014:	6a 04                	push   $0x4
   17016:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1701a:	83 c0 01             	add    $0x1,%eax
   1701d:	50                   	push   %eax
   1701e:	e8 bd 32 00 00       	call   1a2e0 <instr_fetch>
   17023:	83 c4 10             	add    $0x10,%esp
   17026:	80 3f 00             	cmpb   $0x0,(%edi)
   17029:	89 46 04             	mov    %eax,0x4(%esi)
   1702c:	74 03                	je     17031 <mov_o2a_b+0x61>
   1702e:	89 46 14             	mov    %eax,0x14(%esi)
   17031:	8b 45 10             	mov    0x10(%ebp),%eax
   17034:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   1703b:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   17042:	83 f8 08             	cmp    $0x8,%eax
   17045:	74 59                	je     170a0 <mov_o2a_b+0xd0>
   17047:	83 f8 10             	cmp    $0x10,%eax
   1704a:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   17050:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   17056:	0f 44 c2             	cmove  %edx,%eax
   17059:	83 ec 0c             	sub    $0xc,%esp
   1705c:	55                   	push   %ebp
   1705d:	56                   	push   %esi
   1705e:	6a 05                	push   $0x5
   17060:	50                   	push   %eax
   17061:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   17067:	50                   	push   %eax
   17068:	e8 93 cf fe ff       	call   4000 <print_asm_2>
   1706d:	83 c4 20             	add    $0x20,%esp
   17070:	e8 7b f8 ff ff       	call   168f0 <instr_execute_2op>
   17075:	83 c4 0c             	add    $0xc,%esp
   17078:	b8 05 00 00 00       	mov    $0x5,%eax
   1707d:	5b                   	pop    %ebx
   1707e:	5e                   	pop    %esi
   1707f:	5f                   	pop    %edi
   17080:	5d                   	pop    %ebp
   17081:	c3                   	ret    
   17082:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   17088:	83 ec 0c             	sub    $0xc,%esp
   1708b:	56                   	push   %esi
   1708c:	e8 df db fe ff       	call   4c70 <clear_operand_mem_addr>
   17091:	83 c4 10             	add    $0x10,%esp
   17094:	e9 78 ff ff ff       	jmp    17011 <mov_o2a_b+0x41>
   17099:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   170a0:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   170a6:	eb b1                	jmp    17059 <mov_o2a_b+0x89>
   170a8:	90                   	nop
   170a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000170b0 <mov_o2a_v>:
   170b0:	55                   	push   %ebp
   170b1:	57                   	push   %edi
   170b2:	56                   	push   %esi
   170b3:	53                   	push   %ebx
   170b4:	e8 07 bc fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   170b9:	81 c3 47 3f 01 00    	add    $0x13f47,%ebx
   170bf:	83 ec 0c             	sub    $0xc,%esp
   170c2:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   170c8:	8d bb 8d 14 05 00    	lea    0x5148d(%ebx),%edi
   170ce:	8d b3 e0 1c 05 00    	lea    0x51ce0(%ebx),%esi
   170d4:	8d ab 20 1d 05 00    	lea    0x51d20(%ebx),%ebp
   170da:	0f b6 00             	movzbl (%eax),%eax
   170dd:	80 3f 00             	cmpb   $0x0,(%edi)
   170e0:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   170e6:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   170ea:	89 45 10             	mov    %eax,0x10(%ebp)
   170ed:	89 46 10             	mov    %eax,0x10(%esi)
   170f0:	75 76                	jne    17168 <mov_o2a_v+0xb8>
   170f2:	83 ec 08             	sub    $0x8,%esp
   170f5:	6a 04                	push   $0x4
   170f7:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   170fb:	83 c0 01             	add    $0x1,%eax
   170fe:	50                   	push   %eax
   170ff:	e8 dc 31 00 00       	call   1a2e0 <instr_fetch>
   17104:	83 c4 10             	add    $0x10,%esp
   17107:	80 3f 00             	cmpb   $0x0,(%edi)
   1710a:	89 46 04             	mov    %eax,0x4(%esi)
   1710d:	74 03                	je     17112 <mov_o2a_v+0x62>
   1710f:	89 46 14             	mov    %eax,0x14(%esi)
   17112:	8b 45 10             	mov    0x10(%ebp),%eax
   17115:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   1711c:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   17123:	83 f8 08             	cmp    $0x8,%eax
   17126:	74 58                	je     17180 <mov_o2a_v+0xd0>
   17128:	83 f8 10             	cmp    $0x10,%eax
   1712b:	8d 93 36 10 ff ff    	lea    -0xefca(%ebx),%edx
   17131:	8d 83 f9 00 ff ff    	lea    -0xff07(%ebx),%eax
   17137:	0f 44 c2             	cmove  %edx,%eax
   1713a:	83 ec 0c             	sub    $0xc,%esp
   1713d:	55                   	push   %ebp
   1713e:	56                   	push   %esi
   1713f:	6a 05                	push   $0x5
   17141:	50                   	push   %eax
   17142:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   17148:	50                   	push   %eax
   17149:	e8 b2 ce fe ff       	call   4000 <print_asm_2>
   1714e:	83 c4 20             	add    $0x20,%esp
   17151:	e8 9a f7 ff ff       	call   168f0 <instr_execute_2op>
   17156:	83 c4 0c             	add    $0xc,%esp
   17159:	b8 05 00 00 00       	mov    $0x5,%eax
   1715e:	5b                   	pop    %ebx
   1715f:	5e                   	pop    %esi
   17160:	5f                   	pop    %edi
   17161:	5d                   	pop    %ebp
   17162:	c3                   	ret    
   17163:	90                   	nop
   17164:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17168:	83 ec 0c             	sub    $0xc,%esp
   1716b:	56                   	push   %esi
   1716c:	e8 ff da fe ff       	call   4c70 <clear_operand_mem_addr>
   17171:	83 c4 10             	add    $0x10,%esp
   17174:	e9 79 ff ff ff       	jmp    170f2 <mov_o2a_v+0x42>
   17179:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17180:	8d 83 df 13 ff ff    	lea    -0xec21(%ebx),%eax
   17186:	eb b2                	jmp    1713a <mov_o2a_v+0x8a>
   17188:	90                   	nop
   17189:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017190 <mov_cr2r_l>:
   17190:	55                   	push   %ebp
   17191:	57                   	push   %edi
   17192:	56                   	push   %esi
   17193:	53                   	push   %ebx
   17194:	e8 27 bb fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17199:	81 c3 67 3e 01 00    	add    $0x13e67,%ebx
   1719f:	83 ec 60             	sub    $0x60,%esp
   171a2:	8d 7c 24 30          	lea    0x30(%esp),%edi
   171a6:	c7 44 24 40 20 00 00 	movl   $0x20,0x40(%esp)
   171ad:	00 
   171ae:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   171b5:	00 
   171b6:	57                   	push   %edi
   171b7:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   171bb:	55                   	push   %ebp
   171bc:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   171c0:	83 c0 01             	add    $0x1,%eax
   171c3:	50                   	push   %eax
   171c4:	e8 c7 d3 fe ff       	call   4590 <modrm_r_rm>
   171c9:	89 2c 24             	mov    %ebp,(%esp)
   171cc:	89 c6                	mov    %eax,%esi
   171ce:	c7 44 24 18 03 00 00 	movl   $0x3,0x18(%esp)
   171d5:	00 
   171d6:	e8 c5 d4 fe ff       	call   46a0 <operand_read>
   171db:	8b 44 24 24          	mov    0x24(%esp),%eax
   171df:	89 3c 24             	mov    %edi,(%esp)
   171e2:	89 44 24 48          	mov    %eax,0x48(%esp)
   171e6:	e8 45 d6 fe ff       	call   4830 <operand_write>
   171eb:	83 c4 6c             	add    $0x6c,%esp
   171ee:	8d 46 01             	lea    0x1(%esi),%eax
   171f1:	5b                   	pop    %ebx
   171f2:	5e                   	pop    %esi
   171f3:	5f                   	pop    %edi
   171f4:	5d                   	pop    %ebp
   171f5:	c3                   	ret    
   171f6:	8d 76 00             	lea    0x0(%esi),%esi
   171f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017200 <mov_r2cr_l>:
   17200:	55                   	push   %ebp
   17201:	57                   	push   %edi
   17202:	56                   	push   %esi
   17203:	53                   	push   %ebx
   17204:	e8 b7 ba fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17209:	81 c3 f7 3d 01 00    	add    $0x13df7,%ebx
   1720f:	83 ec 60             	sub    $0x60,%esp
   17212:	8d 6c 24 0c          	lea    0xc(%esp),%ebp
   17216:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   1721d:	00 
   1721e:	c7 44 24 40 20 00 00 	movl   $0x20,0x40(%esp)
   17225:	00 
   17226:	55                   	push   %ebp
   17227:	8d 7c 24 34          	lea    0x34(%esp),%edi
   1722b:	57                   	push   %edi
   1722c:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   17230:	83 c0 01             	add    $0x1,%eax
   17233:	50                   	push   %eax
   17234:	e8 57 d3 fe ff       	call   4590 <modrm_r_rm>
   17239:	89 2c 24             	mov    %ebp,(%esp)
   1723c:	89 c6                	mov    %eax,%esi
   1723e:	c7 44 24 3c 03 00 00 	movl   $0x3,0x3c(%esp)
   17245:	00 
   17246:	e8 55 d4 fe ff       	call   46a0 <operand_read>
   1724b:	8b 44 24 24          	mov    0x24(%esp),%eax
   1724f:	89 3c 24             	mov    %edi,(%esp)
   17252:	89 44 24 48          	mov    %eax,0x48(%esp)
   17256:	e8 d5 d5 fe ff       	call   4830 <operand_write>
   1725b:	83 c4 6c             	add    $0x6c,%esp
   1725e:	8d 46 01             	lea    0x1(%esi),%eax
   17261:	5b                   	pop    %ebx
   17262:	5e                   	pop    %esi
   17263:	5f                   	pop    %edi
   17264:	5d                   	pop    %ebp
   17265:	c3                   	ret    
   17266:	8d 76 00             	lea    0x0(%esi),%esi
   17269:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017270 <mov_rm2seg_w>:
   17270:	55                   	push   %ebp
   17271:	57                   	push   %edi
   17272:	56                   	push   %esi
   17273:	53                   	push   %ebx
   17274:	e8 47 ba fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17279:	81 c3 87 3d 01 00    	add    $0x13d87,%ebx
   1727f:	83 ec 44             	sub    $0x44,%esp
   17282:	8b 44 24 58          	mov    0x58(%esp),%eax
   17286:	8d 6c 24 14          	lea    0x14(%esp),%ebp
   1728a:	c7 44 24 24 10 00 00 	movl   $0x10,0x24(%esp)
   17291:	00 
   17292:	55                   	push   %ebp
   17293:	8d 78 01             	lea    0x1(%eax),%edi
   17296:	57                   	push   %edi
   17297:	e8 c4 d3 fe ff       	call   4660 <modrm_rm>
   1729c:	89 2c 24             	mov    %ebp,(%esp)
   1729f:	8d 70 01             	lea    0x1(%eax),%esi
   172a2:	e8 f9 d3 fe ff       	call   46a0 <operand_read>
   172a7:	58                   	pop    %eax
   172a8:	5a                   	pop    %edx
   172a9:	6a 01                	push   $0x1
   172ab:	57                   	push   %edi
   172ac:	e8 2f 30 00 00       	call   1a2e0 <instr_fetch>
   172b1:	c1 e8 03             	shr    $0x3,%eax
   172b4:	83 c4 10             	add    $0x10,%esp
   172b7:	83 e0 07             	and    $0x7,%eax
   172ba:	83 f8 05             	cmp    $0x5,%eax
   172bd:	7f 27                	jg     172e6 <mov_rm2seg_w+0x76>
   172bf:	8d 50 03             	lea    0x3(%eax),%edx
   172c2:	8b 4c 24 18          	mov    0x18(%esp),%ecx
   172c6:	83 ec 0c             	sub    $0xc,%esp
   172c9:	c1 e2 04             	shl    $0x4,%edx
   172cc:	03 93 dc ff ff ff    	add    -0x24(%ebx),%edx
   172d2:	66 89 4a 08          	mov    %cx,0x8(%edx)
   172d6:	50                   	push   %eax
   172d7:	e8 24 2a 00 00       	call   19d00 <load_sreg>
   172dc:	83 c4 4c             	add    $0x4c,%esp
   172df:	89 f0                	mov    %esi,%eax
   172e1:	5b                   	pop    %ebx
   172e2:	5e                   	pop    %esi
   172e3:	5f                   	pop    %edi
   172e4:	5d                   	pop    %ebp
   172e5:	c3                   	ret    
   172e6:	8d 83 9c 11 ff ff    	lea    -0xee64(%ebx),%eax
   172ec:	50                   	push   %eax
   172ed:	8d 83 58 11 ff ff    	lea    -0xeea8(%ebx),%eax
   172f3:	6a 55                	push   $0x55
   172f5:	50                   	push   %eax
   172f6:	8d 83 6c 11 ff ff    	lea    -0xee94(%ebx),%eax
   172fc:	50                   	push   %eax
   172fd:	e8 8e b5 fe ff       	call   2890 <__assert_fail@plt>
   17302:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17309:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017310 <mov_zrm82r_v>:
   17310:	55                   	push   %ebp
   17311:	57                   	push   %edi
   17312:	56                   	push   %esi
   17313:	53                   	push   %ebx
   17314:	e8 a7 b9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17319:	81 c3 e7 3c 01 00    	add    $0x13ce7,%ebx
   1731f:	83 ec 60             	sub    $0x60,%esp
   17322:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   17328:	8d 7c 24 30          	lea    0x30(%esp),%edi
   1732c:	c7 44 24 40 08 00 00 	movl   $0x8,0x40(%esp)
   17333:	00 
   17334:	0f b6 00             	movzbl (%eax),%eax
   17337:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1733b:	57                   	push   %edi
   1733c:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   17340:	55                   	push   %ebp
   17341:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   17345:	83 c0 01             	add    $0x1,%eax
   17348:	50                   	push   %eax
   17349:	e8 42 d2 fe ff       	call   4590 <modrm_r_rm>
   1734e:	89 3c 24             	mov    %edi,(%esp)
   17351:	8d 70 01             	lea    0x1(%eax),%esi
   17354:	e8 47 d3 fe ff       	call   46a0 <operand_read>
   17359:	8b 44 24 48          	mov    0x48(%esp),%eax
   1735d:	89 2c 24             	mov    %ebp,(%esp)
   17360:	89 44 24 24          	mov    %eax,0x24(%esp)
   17364:	e8 c7 d4 fe ff       	call   4830 <operand_write>
   17369:	89 f0                	mov    %esi,%eax
   1736b:	89 2c 24             	mov    %ebp,(%esp)
   1736e:	57                   	push   %edi
   1736f:	0f b6 c0             	movzbl %al,%eax
   17372:	50                   	push   %eax
   17373:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   17379:	50                   	push   %eax
   1737a:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   17380:	50                   	push   %eax
   17381:	e8 7a cc fe ff       	call   4000 <print_asm_2>
   17386:	83 c4 7c             	add    $0x7c,%esp
   17389:	89 f0                	mov    %esi,%eax
   1738b:	5b                   	pop    %ebx
   1738c:	5e                   	pop    %esi
   1738d:	5f                   	pop    %edi
   1738e:	5d                   	pop    %ebp
   1738f:	c3                   	ret    

00017390 <mov_zrm162r_l>:
   17390:	55                   	push   %ebp
   17391:	57                   	push   %edi
   17392:	56                   	push   %esi
   17393:	53                   	push   %ebx
   17394:	e8 27 b9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17399:	81 c3 67 3c 01 00    	add    $0x13c67,%ebx
   1739f:	83 ec 60             	sub    $0x60,%esp
   173a2:	8d 7c 24 30          	lea    0x30(%esp),%edi
   173a6:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   173ad:	00 
   173ae:	c7 44 24 40 10 00 00 	movl   $0x10,0x40(%esp)
   173b5:	00 
   173b6:	57                   	push   %edi
   173b7:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   173bb:	55                   	push   %ebp
   173bc:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   173c0:	83 c0 01             	add    $0x1,%eax
   173c3:	50                   	push   %eax
   173c4:	e8 c7 d1 fe ff       	call   4590 <modrm_r_rm>
   173c9:	89 3c 24             	mov    %edi,(%esp)
   173cc:	8d 70 01             	lea    0x1(%eax),%esi
   173cf:	e8 cc d2 fe ff       	call   46a0 <operand_read>
   173d4:	8b 44 24 48          	mov    0x48(%esp),%eax
   173d8:	89 2c 24             	mov    %ebp,(%esp)
   173db:	89 44 24 24          	mov    %eax,0x24(%esp)
   173df:	e8 4c d4 fe ff       	call   4830 <operand_write>
   173e4:	89 f0                	mov    %esi,%eax
   173e6:	89 2c 24             	mov    %ebp,(%esp)
   173e9:	57                   	push   %edi
   173ea:	0f b6 c0             	movzbl %al,%eax
   173ed:	50                   	push   %eax
   173ee:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   173f4:	50                   	push   %eax
   173f5:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   173fb:	50                   	push   %eax
   173fc:	e8 ff cb fe ff       	call   4000 <print_asm_2>
   17401:	83 c4 7c             	add    $0x7c,%esp
   17404:	89 f0                	mov    %esi,%eax
   17406:	5b                   	pop    %ebx
   17407:	5e                   	pop    %esi
   17408:	5f                   	pop    %edi
   17409:	5d                   	pop    %ebp
   1740a:	c3                   	ret    
   1740b:	90                   	nop
   1740c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00017410 <mov_srm82r_v>:
   17410:	55                   	push   %ebp
   17411:	57                   	push   %edi
   17412:	56                   	push   %esi
   17413:	53                   	push   %ebx
   17414:	e8 a7 b8 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17419:	81 c3 e7 3b 01 00    	add    $0x13be7,%ebx
   1741f:	83 ec 60             	sub    $0x60,%esp
   17422:	8d 83 77 13 00 00    	lea    0x1377(%ebx),%eax
   17428:	8d 7c 24 30          	lea    0x30(%esp),%edi
   1742c:	c7 44 24 40 08 00 00 	movl   $0x8,0x40(%esp)
   17433:	00 
   17434:	0f b6 00             	movzbl (%eax),%eax
   17437:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1743b:	57                   	push   %edi
   1743c:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   17440:	55                   	push   %ebp
   17441:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   17445:	83 c0 01             	add    $0x1,%eax
   17448:	50                   	push   %eax
   17449:	e8 42 d1 fe ff       	call   4590 <modrm_r_rm>
   1744e:	89 3c 24             	mov    %edi,(%esp)
   17451:	8d 70 01             	lea    0x1(%eax),%esi
   17454:	e8 47 d2 fe ff       	call   46a0 <operand_read>
   17459:	0f be 44 24 48       	movsbl 0x48(%esp),%eax
   1745e:	89 2c 24             	mov    %ebp,(%esp)
   17461:	89 44 24 24          	mov    %eax,0x24(%esp)
   17465:	e8 c6 d3 fe ff       	call   4830 <operand_write>
   1746a:	89 f0                	mov    %esi,%eax
   1746c:	89 2c 24             	mov    %ebp,(%esp)
   1746f:	57                   	push   %edi
   17470:	0f b6 c0             	movzbl %al,%eax
   17473:	50                   	push   %eax
   17474:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   1747a:	50                   	push   %eax
   1747b:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   17481:	50                   	push   %eax
   17482:	e8 79 cb fe ff       	call   4000 <print_asm_2>
   17487:	83 c4 7c             	add    $0x7c,%esp
   1748a:	89 f0                	mov    %esi,%eax
   1748c:	5b                   	pop    %ebx
   1748d:	5e                   	pop    %esi
   1748e:	5f                   	pop    %edi
   1748f:	5d                   	pop    %ebp
   17490:	c3                   	ret    
   17491:	eb 0d                	jmp    174a0 <mov_srm162r_l>
   17493:	90                   	nop
   17494:	90                   	nop
   17495:	90                   	nop
   17496:	90                   	nop
   17497:	90                   	nop
   17498:	90                   	nop
   17499:	90                   	nop
   1749a:	90                   	nop
   1749b:	90                   	nop
   1749c:	90                   	nop
   1749d:	90                   	nop
   1749e:	90                   	nop
   1749f:	90                   	nop

000174a0 <mov_srm162r_l>:
   174a0:	55                   	push   %ebp
   174a1:	57                   	push   %edi
   174a2:	56                   	push   %esi
   174a3:	53                   	push   %ebx
   174a4:	e8 17 b8 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   174a9:	81 c3 57 3b 01 00    	add    $0x13b57,%ebx
   174af:	83 ec 60             	sub    $0x60,%esp
   174b2:	8d 7c 24 30          	lea    0x30(%esp),%edi
   174b6:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   174bd:	00 
   174be:	c7 44 24 40 10 00 00 	movl   $0x10,0x40(%esp)
   174c5:	00 
   174c6:	57                   	push   %edi
   174c7:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   174cb:	55                   	push   %ebp
   174cc:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   174d0:	83 c0 01             	add    $0x1,%eax
   174d3:	50                   	push   %eax
   174d4:	e8 b7 d0 fe ff       	call   4590 <modrm_r_rm>
   174d9:	89 3c 24             	mov    %edi,(%esp)
   174dc:	8d 70 01             	lea    0x1(%eax),%esi
   174df:	e8 bc d1 fe ff       	call   46a0 <operand_read>
   174e4:	0f bf 44 24 48       	movswl 0x48(%esp),%eax
   174e9:	89 2c 24             	mov    %ebp,(%esp)
   174ec:	89 44 24 24          	mov    %eax,0x24(%esp)
   174f0:	e8 3b d3 fe ff       	call   4830 <operand_write>
   174f5:	89 f0                	mov    %esi,%eax
   174f7:	89 2c 24             	mov    %ebp,(%esp)
   174fa:	57                   	push   %edi
   174fb:	0f b6 c0             	movzbl %al,%eax
   174fe:	50                   	push   %eax
   174ff:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   17505:	50                   	push   %eax
   17506:	8d 83 ca 0a ff ff    	lea    -0xf536(%ebx),%eax
   1750c:	50                   	push   %eax
   1750d:	e8 ee ca fe ff       	call   4000 <print_asm_2>
   17512:	83 c4 7c             	add    $0x7c,%esp
   17515:	89 f0                	mov    %esi,%eax
   17517:	5b                   	pop    %ebx
   17518:	5e                   	pop    %esi
   17519:	5f                   	pop    %edi
   1751a:	5d                   	pop    %ebp
   1751b:	c3                   	ret    
   1751c:	66 90                	xchg   %ax,%ax
   1751e:	66 90                	xchg   %ax,%ax

00017520 <rep_repe>:
   17520:	55                   	push   %ebp
   17521:	57                   	push   %edi
   17522:	56                   	push   %esi
   17523:	53                   	push   %ebx
   17524:	e8 91 1c ff ff       	call   91ba <__x86.get_pc_thunk.bp>
   17529:	81 c5 d7 3a 01 00    	add    $0x13ad7,%ebp
   1752f:	83 ec 24             	sub    $0x24,%esp
   17532:	8b 44 24 38          	mov    0x38(%esp),%eax
   17536:	6a 01                	push   $0x1
   17538:	89 eb                	mov    %ebp,%ebx
   1753a:	8d 78 01             	lea    0x1(%eax),%edi
   1753d:	57                   	push   %edi
   1753e:	e8 9d 2d 00 00       	call   1a2e0 <instr_fetch>
   17543:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   17547:	89 c6                	mov    %eax,%esi
   17549:	8d 85 24 17 ff ff    	lea    -0xe8dc(%ebp),%eax
   1754f:	83 c4 0c             	add    $0xc,%esp
   17552:	6a 02                	push   $0x2
   17554:	50                   	push   %eax
   17555:	8d 85 a9 11 ff ff    	lea    -0xee57(%ebp),%eax
   1755b:	50                   	push   %eax
   1755c:	e8 cf c8 fe ff       	call   3e30 <print_asm_0>
   17561:	83 c4 10             	add    $0x10,%esp
   17564:	80 7c 24 0c c3       	cmpb   $0xc3,0xc(%esp)
   17569:	74 52                	je     175bd <rep_repe+0x9d>
   1756b:	8d 9d 60 1d 05 00    	lea    0x51d60(%ebp),%ebx
   17571:	83 e6 f7             	and    $0xfffffff7,%esi
   17574:	83 c6 5a             	add    $0x5a,%esi
   17577:	8b 43 04             	mov    0x4(%ebx),%eax
   1757a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   17580:	85 c0                	test   %eax,%eax
   17582:	74 2c                	je     175b0 <rep_repe+0x90>
   17584:	0f b6 44 24 0c       	movzbl 0xc(%esp),%eax
   17589:	8d 8d a0 0b 00 00    	lea    0xba0(%ebp),%ecx
   1758f:	83 ec 08             	sub    $0x8,%esp
   17592:	50                   	push   %eax
   17593:	57                   	push   %edi
   17594:	ff 14 81             	call   *(%ecx,%eax,4)
   17597:	8b 43 04             	mov    0x4(%ebx),%eax
   1759a:	89 f2                	mov    %esi,%edx
   1759c:	83 c4 10             	add    $0x10,%esp
   1759f:	83 e8 01             	sub    $0x1,%eax
   175a2:	80 fa 01             	cmp    $0x1,%dl
   175a5:	89 43 04             	mov    %eax,0x4(%ebx)
   175a8:	77 d6                	ja     17580 <rep_repe+0x60>
   175aa:	f6 43 24 40          	testb  $0x40,0x24(%ebx)
   175ae:	74 d0                	je     17580 <rep_repe+0x60>
   175b0:	b8 02 00 00 00       	mov    $0x2,%eax
   175b5:	83 c4 1c             	add    $0x1c,%esp
   175b8:	5b                   	pop    %ebx
   175b9:	5e                   	pop    %esi
   175ba:	5f                   	pop    %edi
   175bb:	5d                   	pop    %ebp
   175bc:	c3                   	ret    
   175bd:	83 ec 08             	sub    $0x8,%esp
   175c0:	8d 85 a0 0b 00 00    	lea    0xba0(%ebp),%eax
   175c6:	68 c3 00 00 00       	push   $0xc3
   175cb:	57                   	push   %edi
   175cc:	ff 90 0c 03 00 00    	call   *0x30c(%eax)
   175d2:	83 c4 10             	add    $0x10,%esp
   175d5:	31 c0                	xor    %eax,%eax
   175d7:	eb dc                	jmp    175b5 <rep_repe+0x95>
   175d9:	66 90                	xchg   %ax,%ax
   175db:	66 90                	xchg   %ax,%ax
   175dd:	66 90                	xchg   %ax,%ax
   175df:	90                   	nop

000175e0 <single_run>:
   175e0:	55                   	push   %ebp
   175e1:	57                   	push   %edi
   175e2:	56                   	push   %esi
   175e3:	53                   	push   %ebx
   175e4:	e8 d7 b6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   175e9:	81 c3 17 3a 01 00    	add    $0x13a17,%ebx
   175ef:	83 ec 10             	sub    $0x10,%esp
   175f2:	8d b3 40 15 05 00    	lea    0x51540(%ebx),%esi
   175f8:	8d 83 ad 11 ff ff    	lea    -0xee53(%ebx),%eax
   175fe:	8d bb c0 14 05 00    	lea    0x514c0(%ebx),%edi
   17604:	57                   	push   %edi
   17605:	56                   	push   %esi
   17606:	50                   	push   %eax
   17607:	e8 b4 b1 fe ff       	call   27c0 <printf@plt>
   1760c:	c7 04 24 00 00 03 00 	movl   $0x30000,(%esp)
   17613:	e8 78 de fe ff       	call   5490 <init_cpu>
   17618:	e8 93 2c 00 00       	call   1a2b0 <init_mem>
   1761d:	e8 7e 07 00 00       	call   17da0 <init_bp_list>
   17622:	e8 d9 1e 00 00       	call   19500 <init_regex>
   17627:	e8 94 c7 fe ff       	call   3dc0 <init_sdl>
   1762c:	e8 9f c0 fe ff       	call   36d0 <init_serial>
   17631:	58                   	pop    %eax
   17632:	8d 83 c1 fa fe ff    	lea    -0x1053f(%ebx),%eax
   17638:	5a                   	pop    %edx
   17639:	50                   	push   %eax
   1763a:	56                   	push   %esi
   1763b:	e8 60 b2 fe ff       	call   28a0 <fopen@plt>
   17640:	83 c4 10             	add    $0x10,%esp
   17643:	85 c0                	test   %eax,%eax
   17645:	74 7e                	je     176c5 <single_run+0xe5>
   17647:	83 ec 04             	sub    $0x4,%esp
   1764a:	89 c6                	mov    %eax,%esi
   1764c:	6a 02                	push   $0x2
   1764e:	6a 00                	push   $0x0
   17650:	50                   	push   %eax
   17651:	e8 6a b0 fe ff       	call   26c0 <fseek@plt>
   17656:	89 34 24             	mov    %esi,(%esp)
   17659:	e8 52 b2 fe ff       	call   28b0 <ftell@plt>
   1765e:	83 c4 0c             	add    $0xc,%esp
   17661:	89 c5                	mov    %eax,%ebp
   17663:	6a 00                	push   $0x0
   17665:	6a 00                	push   $0x0
   17667:	56                   	push   %esi
   17668:	e8 53 b0 fe ff       	call   26c0 <fseek@plt>
   1766d:	e8 be 2c 00 00       	call   1a330 <get_mem_addr>
   17672:	05 00 00 03 00       	add    $0x30000,%eax
   17677:	56                   	push   %esi
   17678:	6a 01                	push   $0x1
   1767a:	55                   	push   %ebp
   1767b:	50                   	push   %eax
   1767c:	e8 1f af fe ff       	call   25a0 <fread@plt>
   17681:	83 c4 20             	add    $0x20,%esp
   17684:	83 f8 01             	cmp    $0x1,%eax
   17687:	75 58                	jne    176e1 <single_run+0x101>
   17689:	83 ec 0c             	sub    $0xc,%esp
   1768c:	56                   	push   %esi
   1768d:	e8 ce b1 fe ff       	call   2860 <fclose@plt>
   17692:	89 3c 24             	mov    %edi,(%esp)
   17695:	e8 c6 bc fe ff       	call   3360 <init_ide>
   1769a:	89 3c 24             	mov    %edi,(%esp)
   1769d:	e8 5e 00 00 00       	call   17700 <load_elf_tables>
   176a2:	8d 83 48 1e 05 00    	lea    0x51e48(%ebx),%eax
   176a8:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
   176ae:	0f b6 83 a2 14 05 00 	movzbl 0x514a2(%ebx),%eax
   176b5:	89 04 24             	mov    %eax,(%esp)
   176b8:	e8 b3 13 00 00       	call   18a70 <ui_mainloop>
   176bd:	83 c4 1c             	add    $0x1c,%esp
   176c0:	5b                   	pop    %ebx
   176c1:	5e                   	pop    %esi
   176c2:	5f                   	pop    %edi
   176c3:	5d                   	pop    %ebp
   176c4:	c3                   	ret    
   176c5:	8d 83 6c 13 ff ff    	lea    -0xec94(%ebx),%eax
   176cb:	50                   	push   %eax
   176cc:	8d 83 bd 11 ff ff    	lea    -0xee43(%ebx),%eax
   176d2:	6a 11                	push   $0x11
   176d4:	50                   	push   %eax
   176d5:	8d 83 de fa fe ff    	lea    -0x10522(%ebx),%eax
   176db:	50                   	push   %eax
   176dc:	e8 af b1 fe ff       	call   2890 <__assert_fail@plt>
   176e1:	8d 83 6c 13 ff ff    	lea    -0xec94(%ebx),%eax
   176e7:	50                   	push   %eax
   176e8:	8d 83 bd 11 ff ff    	lea    -0xee43(%ebx),%eax
   176ee:	6a 18                	push   $0x18
   176f0:	50                   	push   %eax
   176f1:	8d 83 c8 11 ff ff    	lea    -0xee38(%ebx),%eax
   176f7:	50                   	push   %eax
   176f8:	e8 93 b1 fe ff       	call   2890 <__assert_fail@plt>
   176fd:	66 90                	xchg   %ax,%ax
   176ff:	90                   	nop

00017700 <load_elf_tables>:
   17700:	55                   	push   %ebp
   17701:	57                   	push   %edi
   17702:	56                   	push   %esi
   17703:	53                   	push   %ebx
   17704:	e8 b7 b5 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17709:	81 c3 f7 38 01 00    	add    $0x138f7,%ebx
   1770f:	81 ec 44 10 00 00    	sub    $0x1044,%esp
   17715:	8d 83 c1 fa fe ff    	lea    -0x1053f(%ebx),%eax
   1771b:	50                   	push   %eax
   1771c:	ff b4 24 5c 10 00 00 	pushl  0x105c(%esp)
   17723:	e8 78 b1 fe ff       	call   28a0 <fopen@plt>
   17728:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1772c:	83 c4 10             	add    $0x10,%esp
   1772f:	85 c0                	test   %eax,%eax
   17731:	0f 84 b1 02 00 00    	je     179e8 <load_elf_tables+0x2e8>
   17737:	ff 74 24 0c          	pushl  0xc(%esp)
   1773b:	6a 01                	push   $0x1
   1773d:	68 00 10 00 00       	push   $0x1000
   17742:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   17746:	56                   	push   %esi
   17747:	e8 54 ae fe ff       	call   25a0 <fread@plt>
   1774c:	c6 44 24 3c 7f       	movb   $0x7f,0x3c(%esp)
   17751:	c6 44 24 3d 45       	movb   $0x45,0x3d(%esp)
   17756:	c6 44 24 3e 4c       	movb   $0x4c,0x3e(%esp)
   1775b:	c6 44 24 3f 46       	movb   $0x46,0x3f(%esp)
   17760:	83 c4 0c             	add    $0xc,%esp
   17763:	6a 04                	push   $0x4
   17765:	8d 44 24 34          	lea    0x34(%esp),%eax
   17769:	50                   	push   %eax
   1776a:	56                   	push   %esi
   1776b:	e8 30 af fe ff       	call   26a0 <memcmp@plt>
   17770:	83 c4 10             	add    $0x10,%esp
   17773:	85 c0                	test   %eax,%eax
   17775:	89 c2                	mov    %eax,%edx
   17777:	0f 85 db 02 00 00    	jne    17a58 <load_elf_tables+0x358>
   1777d:	80 7c 24 34 01       	cmpb   $0x1,0x34(%esp)
   17782:	0f 85 b4 02 00 00    	jne    17a3c <load_elf_tables+0x33c>
   17788:	80 7c 24 35 01       	cmpb   $0x1,0x35(%esp)
   1778d:	0f 85 8d 02 00 00    	jne    17a20 <load_elf_tables+0x320>
   17793:	80 7c 24 36 01       	cmpb   $0x1,0x36(%esp)
   17798:	0f 85 66 02 00 00    	jne    17a04 <load_elf_tables+0x304>
   1779e:	0f b6 44 24 37       	movzbl 0x37(%esp),%eax
   177a3:	84 c0                	test   %al,%al
   177a5:	74 08                	je     177af <load_elf_tables+0xaf>
   177a7:	3c 03                	cmp    $0x3,%al
   177a9:	0f 85 35 03 00 00    	jne    17ae4 <load_elf_tables+0x3e4>
   177af:	80 7c 24 38 00       	cmpb   $0x0,0x38(%esp)
   177b4:	0f 85 0e 03 00 00    	jne    17ac8 <load_elf_tables+0x3c8>
   177ba:	66 83 7c 24 40 02    	cmpw   $0x2,0x40(%esp)
   177c0:	0f 85 e6 02 00 00    	jne    17aac <load_elf_tables+0x3ac>
   177c6:	66 83 7c 24 42 03    	cmpw   $0x3,0x42(%esp)
   177cc:	0f 85 be 02 00 00    	jne    17a90 <load_elf_tables+0x390>
   177d2:	83 7c 24 44 01       	cmpl   $0x1,0x44(%esp)
   177d7:	0f 85 97 02 00 00    	jne    17a74 <load_elf_tables+0x374>
   177dd:	0f b7 74 24 5e       	movzwl 0x5e(%esp),%esi
   177e2:	0f b7 44 24 60       	movzwl 0x60(%esp),%eax
   177e7:	83 ec 0c             	sub    $0xc,%esp
   177ea:	89 54 24 28          	mov    %edx,0x28(%esp)
   177ee:	0f af f0             	imul   %eax,%esi
   177f1:	56                   	push   %esi
   177f2:	e8 f9 ad fe ff       	call   25f0 <malloc@plt>
   177f7:	89 44 24 28          	mov    %eax,0x28(%esp)
   177fb:	83 c4 0c             	add    $0xc,%esp
   177fe:	89 c7                	mov    %eax,%edi
   17800:	6a 00                	push   $0x0
   17802:	ff 74 24 58          	pushl  0x58(%esp)
   17806:	8b 6c 24 18          	mov    0x18(%esp),%ebp
   1780a:	55                   	push   %ebp
   1780b:	e8 b0 ae fe ff       	call   26c0 <fseek@plt>
   17810:	55                   	push   %ebp
   17811:	6a 01                	push   $0x1
   17813:	56                   	push   %esi
   17814:	57                   	push   %edi
   17815:	e8 86 ad fe ff       	call   25a0 <fread@plt>
   1781a:	0f b7 84 24 82 00 00 	movzwl 0x82(%esp),%eax
   17821:	00 
   17822:	83 c4 14             	add    $0x14,%esp
   17825:	8d 04 80             	lea    (%eax,%eax,4),%eax
   17828:	8d 34 c7             	lea    (%edi,%eax,8),%esi
   1782b:	ff 76 14             	pushl  0x14(%esi)
   1782e:	e8 bd ad fe ff       	call   25f0 <malloc@plt>
   17833:	89 44 24 18          	mov    %eax,0x18(%esp)
   17837:	83 c4 0c             	add    $0xc,%esp
   1783a:	6a 00                	push   $0x0
   1783c:	ff 76 10             	pushl  0x10(%esi)
   1783f:	55                   	push   %ebp
   17840:	e8 7b ae fe ff       	call   26c0 <fseek@plt>
   17845:	55                   	push   %ebp
   17846:	6a 01                	push   $0x1
   17848:	89 fd                	mov    %edi,%ebp
   1784a:	0f b7 44 24 7a       	movzwl 0x7a(%esp),%eax
   1784f:	8d 04 80             	lea    (%eax,%eax,4),%eax
   17852:	ff 74 c7 14          	pushl  0x14(%edi,%eax,8)
   17856:	ff 74 24 24          	pushl  0x24(%esp)
   1785a:	e8 41 ad fe ff       	call   25a0 <fread@plt>
   1785f:	83 c4 20             	add    $0x20,%esp
   17862:	8d 83 d9 13 ff ff    	lea    -0xec27(%ebx),%eax
   17868:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1786c:	66 83 7c 24 60 00    	cmpw   $0x0,0x60(%esp)
   17872:	89 44 24 10          	mov    %eax,0x10(%esp)
   17876:	8d 83 e1 13 ff ff    	lea    -0xec1f(%ebx),%eax
   1787c:	89 44 24 14          	mov    %eax,0x14(%esp)
   17880:	75 26                	jne    178a8 <load_elf_tables+0x1a8>
   17882:	e9 99 00 00 00       	jmp    17920 <load_elf_tables+0x220>
   17887:	89 f6                	mov    %esi,%esi
   17889:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   17890:	83 f8 03             	cmp    $0x3,%eax
   17893:	0f 84 d7 00 00 00    	je     17970 <load_elf_tables+0x270>
   17899:	0f b7 44 24 60       	movzwl 0x60(%esp),%eax
   1789e:	83 c2 01             	add    $0x1,%edx
   178a1:	83 c5 28             	add    $0x28,%ebp
   178a4:	39 d0                	cmp    %edx,%eax
   178a6:	7e 78                	jle    17920 <load_elf_tables+0x220>
   178a8:	8b 45 04             	mov    0x4(%ebp),%eax
   178ab:	83 f8 02             	cmp    $0x2,%eax
   178ae:	75 e0                	jne    17890 <load_elf_tables+0x190>
   178b0:	8b 74 24 08          	mov    0x8(%esp),%esi
   178b4:	03 75 00             	add    0x0(%ebp),%esi
   178b7:	b9 08 00 00 00       	mov    $0x8,%ecx
   178bc:	8b 7c 24 10          	mov    0x10(%esp),%edi
   178c0:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   178c2:	75 d5                	jne    17899 <load_elf_tables+0x199>
   178c4:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   178c8:	83 ec 0c             	sub    $0xc,%esp
   178cb:	ff 75 14             	pushl  0x14(%ebp)
   178ce:	83 c5 28             	add    $0x28,%ebp
   178d1:	e8 1a ad fe ff       	call   25f0 <malloc@plt>
   178d6:	83 c4 0c             	add    $0xc,%esp
   178d9:	89 83 a8 15 05 00    	mov    %eax,0x515a8(%ebx)
   178df:	6a 00                	push   $0x0
   178e1:	ff 75 e8             	pushl  -0x18(%ebp)
   178e4:	8b 7c 24 18          	mov    0x18(%esp),%edi
   178e8:	57                   	push   %edi
   178e9:	e8 d2 ad fe ff       	call   26c0 <fseek@plt>
   178ee:	57                   	push   %edi
   178ef:	6a 01                	push   $0x1
   178f1:	ff 75 ec             	pushl  -0x14(%ebp)
   178f4:	ff b3 a8 15 05 00    	pushl  0x515a8(%ebx)
   178fa:	e8 a1 ac fe ff       	call   25a0 <fread@plt>
   178ff:	8b 45 ec             	mov    -0x14(%ebp),%eax
   17902:	83 c4 20             	add    $0x20,%esp
   17905:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   17909:	c1 e8 04             	shr    $0x4,%eax
   1790c:	83 c2 01             	add    $0x1,%edx
   1790f:	89 83 a4 15 05 00    	mov    %eax,0x515a4(%ebx)
   17915:	0f b7 44 24 60       	movzwl 0x60(%esp),%eax
   1791a:	39 d0                	cmp    %edx,%eax
   1791c:	7f 8a                	jg     178a8 <load_elf_tables+0x1a8>
   1791e:	66 90                	xchg   %ax,%ax
   17920:	83 ec 0c             	sub    $0xc,%esp
   17923:	ff 74 24 24          	pushl  0x24(%esp)
   17927:	e8 54 ae fe ff       	call   2780 <free@plt>
   1792c:	5a                   	pop    %edx
   1792d:	ff 74 24 14          	pushl  0x14(%esp)
   17931:	e8 4a ae fe ff       	call   2780 <free@plt>
   17936:	8b 8b ac 15 05 00    	mov    0x515ac(%ebx),%ecx
   1793c:	83 c4 10             	add    $0x10,%esp
   1793f:	85 c9                	test   %ecx,%ecx
   17941:	0f 84 85 00 00 00    	je     179cc <load_elf_tables+0x2cc>
   17947:	8b 83 a8 15 05 00    	mov    0x515a8(%ebx),%eax
   1794d:	85 c0                	test   %eax,%eax
   1794f:	74 7b                	je     179cc <load_elf_tables+0x2cc>
   17951:	83 ec 0c             	sub    $0xc,%esp
   17954:	ff 74 24 18          	pushl  0x18(%esp)
   17958:	e8 03 af fe ff       	call   2860 <fclose@plt>
   1795d:	81 c4 4c 10 00 00    	add    $0x104c,%esp
   17963:	5b                   	pop    %ebx
   17964:	5e                   	pop    %esi
   17965:	5f                   	pop    %edi
   17966:	5d                   	pop    %ebp
   17967:	c3                   	ret    
   17968:	90                   	nop
   17969:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17970:	8b 74 24 08          	mov    0x8(%esp),%esi
   17974:	03 75 00             	add    0x0(%ebp),%esi
   17977:	b9 08 00 00 00       	mov    $0x8,%ecx
   1797c:	8b 7c 24 14          	mov    0x14(%esp),%edi
   17980:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   17982:	0f 85 11 ff ff ff    	jne    17899 <load_elf_tables+0x199>
   17988:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   1798c:	83 ec 0c             	sub    $0xc,%esp
   1798f:	ff 75 14             	pushl  0x14(%ebp)
   17992:	e8 59 ac fe ff       	call   25f0 <malloc@plt>
   17997:	83 c4 0c             	add    $0xc,%esp
   1799a:	89 83 ac 15 05 00    	mov    %eax,0x515ac(%ebx)
   179a0:	6a 00                	push   $0x0
   179a2:	ff 75 10             	pushl  0x10(%ebp)
   179a5:	8b 7c 24 18          	mov    0x18(%esp),%edi
   179a9:	57                   	push   %edi
   179aa:	e8 11 ad fe ff       	call   26c0 <fseek@plt>
   179af:	57                   	push   %edi
   179b0:	6a 01                	push   $0x1
   179b2:	ff 75 14             	pushl  0x14(%ebp)
   179b5:	ff b3 ac 15 05 00    	pushl  0x515ac(%ebx)
   179bb:	e8 e0 ab fe ff       	call   25a0 <fread@plt>
   179c0:	83 c4 20             	add    $0x20,%esp
   179c3:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   179c7:	e9 cd fe ff ff       	jmp    17899 <load_elf_tables+0x199>
   179cc:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   179d2:	50                   	push   %eax
   179d3:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   179d9:	6a 49                	push   $0x49
   179db:	50                   	push   %eax
   179dc:	8d 83 00 15 ff ff    	lea    -0xeb00(%ebx),%eax
   179e2:	50                   	push   %eax
   179e3:	e8 a8 ae fe ff       	call   2890 <__assert_fail@plt>
   179e8:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   179ee:	50                   	push   %eax
   179ef:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   179f5:	6a 0e                	push   $0xe
   179f7:	50                   	push   %eax
   179f8:	8d 83 89 13 ff ff    	lea    -0xec77(%ebx),%eax
   179fe:	50                   	push   %eax
   179ff:	e8 8c ae fe ff       	call   2890 <__assert_fail@plt>
   17a04:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17a0a:	50                   	push   %eax
   17a0b:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17a11:	6a 1d                	push   $0x1d
   17a13:	50                   	push   %eax
   17a14:	8d 83 60 14 ff ff    	lea    -0xeba0(%ebx),%eax
   17a1a:	50                   	push   %eax
   17a1b:	e8 70 ae fe ff       	call   2890 <__assert_fail@plt>
   17a20:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17a26:	50                   	push   %eax
   17a27:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17a2d:	6a 1c                	push   $0x1c
   17a2f:	50                   	push   %eax
   17a30:	8d 83 38 14 ff ff    	lea    -0xebc8(%ebx),%eax
   17a36:	50                   	push   %eax
   17a37:	e8 54 ae fe ff       	call   2890 <__assert_fail@plt>
   17a3c:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17a42:	50                   	push   %eax
   17a43:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17a49:	6a 1b                	push   $0x1b
   17a4b:	50                   	push   %eax
   17a4c:	8d 83 10 14 ff ff    	lea    -0xebf0(%ebx),%eax
   17a52:	50                   	push   %eax
   17a53:	e8 38 ae fe ff       	call   2890 <__assert_fail@plt>
   17a58:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17a5e:	50                   	push   %eax
   17a5f:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17a65:	6a 1a                	push   $0x1a
   17a67:	50                   	push   %eax
   17a68:	8d 83 ec 13 ff ff    	lea    -0xec14(%ebx),%eax
   17a6e:	50                   	push   %eax
   17a6f:	e8 1c ae fe ff       	call   2890 <__assert_fail@plt>
   17a74:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17a7a:	50                   	push   %eax
   17a7b:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17a81:	6a 23                	push   $0x23
   17a83:	50                   	push   %eax
   17a84:	8d 83 bc 13 ff ff    	lea    -0xec44(%ebx),%eax
   17a8a:	50                   	push   %eax
   17a8b:	e8 00 ae fe ff       	call   2890 <__assert_fail@plt>
   17a90:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17a96:	50                   	push   %eax
   17a97:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17a9d:	6a 22                	push   $0x22
   17a9f:	50                   	push   %eax
   17aa0:	8d 83 a3 13 ff ff    	lea    -0xec5d(%ebx),%eax
   17aa6:	50                   	push   %eax
   17aa7:	e8 e4 ad fe ff       	call   2890 <__assert_fail@plt>
   17aac:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17ab2:	50                   	push   %eax
   17ab3:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17ab9:	6a 21                	push   $0x21
   17abb:	50                   	push   %eax
   17abc:	8d 83 8c 13 ff ff    	lea    -0xec74(%ebx),%eax
   17ac2:	50                   	push   %eax
   17ac3:	e8 c8 ad fe ff       	call   2890 <__assert_fail@plt>
   17ac8:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17ace:	50                   	push   %eax
   17acf:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17ad5:	6a 20                	push   $0x20
   17ad7:	50                   	push   %eax
   17ad8:	8d 83 dc 14 ff ff    	lea    -0xeb24(%ebx),%eax
   17ade:	50                   	push   %eax
   17adf:	e8 ac ad fe ff       	call   2890 <__assert_fail@plt>
   17ae4:	8d 83 28 15 ff ff    	lea    -0xead8(%ebx),%eax
   17aea:	50                   	push   %eax
   17aeb:	8d 83 77 13 ff ff    	lea    -0xec89(%ebx),%eax
   17af1:	6a 1f                	push   $0x1f
   17af3:	50                   	push   %eax
   17af4:	8d 83 88 14 ff ff    	lea    -0xeb78(%ebx),%eax
   17afa:	50                   	push   %eax
   17afb:	e8 90 ad fe ff       	call   2890 <__assert_fail@plt>

00017b00 <look_up_fun_symtab>:
   17b00:	55                   	push   %ebp
   17b01:	57                   	push   %edi
   17b02:	56                   	push   %esi
   17b03:	53                   	push   %ebx
   17b04:	e8 b7 b1 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17b09:	81 c3 f7 34 01 00    	add    $0x134f7,%ebx
   17b0f:	83 ec 1c             	sub    $0x1c,%esp
   17b12:	8b ab a4 15 05 00    	mov    0x515a4(%ebx),%ebp
   17b18:	85 ed                	test   %ebp,%ebp
   17b1a:	7e 5c                	jle    17b78 <look_up_fun_symtab+0x78>
   17b1c:	8b 83 ac 15 05 00    	mov    0x515ac(%ebx),%eax
   17b22:	8b b3 a8 15 05 00    	mov    0x515a8(%ebx),%esi
   17b28:	31 ff                	xor    %edi,%edi
   17b2a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   17b2e:	eb 0a                	jmp    17b3a <look_up_fun_symtab+0x3a>
   17b30:	83 c7 01             	add    $0x1,%edi
   17b33:	83 c6 10             	add    $0x10,%esi
   17b36:	39 ef                	cmp    %ebp,%edi
   17b38:	74 3e                	je     17b78 <look_up_fun_symtab+0x78>
   17b3a:	0f b6 46 0c          	movzbl 0xc(%esi),%eax
   17b3e:	83 e0 0f             	and    $0xf,%eax
   17b41:	3c 02                	cmp    $0x2,%al
   17b43:	75 eb                	jne    17b30 <look_up_fun_symtab+0x30>
   17b45:	83 ec 08             	sub    $0x8,%esp
   17b48:	ff 74 24 38          	pushl  0x38(%esp)
   17b4c:	8b 44 24 18          	mov    0x18(%esp),%eax
   17b50:	03 06                	add    (%esi),%eax
   17b52:	50                   	push   %eax
   17b53:	e8 f8 aa fe ff       	call   2650 <strcmp@plt>
   17b58:	83 c4 10             	add    $0x10,%esp
   17b5b:	85 c0                	test   %eax,%eax
   17b5d:	75 d1                	jne    17b30 <look_up_fun_symtab+0x30>
   17b5f:	8b 44 24 34          	mov    0x34(%esp),%eax
   17b63:	c6 00 01             	movb   $0x1,(%eax)
   17b66:	8b 46 04             	mov    0x4(%esi),%eax
   17b69:	83 c4 1c             	add    $0x1c,%esp
   17b6c:	5b                   	pop    %ebx
   17b6d:	5e                   	pop    %esi
   17b6e:	5f                   	pop    %edi
   17b6f:	5d                   	pop    %ebp
   17b70:	c3                   	ret    
   17b71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17b78:	8b 44 24 34          	mov    0x34(%esp),%eax
   17b7c:	c6 00 00             	movb   $0x0,(%eax)
   17b7f:	83 c4 1c             	add    $0x1c,%esp
   17b82:	31 c0                	xor    %eax,%eax
   17b84:	5b                   	pop    %ebx
   17b85:	5e                   	pop    %esi
   17b86:	5f                   	pop    %edi
   17b87:	5d                   	pop    %ebp
   17b88:	c3                   	ret    
   17b89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017b90 <look_up_symtab>:
   17b90:	55                   	push   %ebp
   17b91:	57                   	push   %edi
   17b92:	56                   	push   %esi
   17b93:	53                   	push   %ebx
   17b94:	e8 27 b1 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17b99:	81 c3 67 34 01 00    	add    $0x13467,%ebx
   17b9f:	83 ec 1c             	sub    $0x1c,%esp
   17ba2:	8b ab a4 15 05 00    	mov    0x515a4(%ebx),%ebp
   17ba8:	85 ed                	test   %ebp,%ebp
   17baa:	7e 5c                	jle    17c08 <look_up_symtab+0x78>
   17bac:	8b 83 ac 15 05 00    	mov    0x515ac(%ebx),%eax
   17bb2:	8b b3 a8 15 05 00    	mov    0x515a8(%ebx),%esi
   17bb8:	31 ff                	xor    %edi,%edi
   17bba:	89 44 24 0c          	mov    %eax,0xc(%esp)
   17bbe:	eb 0a                	jmp    17bca <look_up_symtab+0x3a>
   17bc0:	83 c7 01             	add    $0x1,%edi
   17bc3:	83 c6 10             	add    $0x10,%esi
   17bc6:	39 ef                	cmp    %ebp,%edi
   17bc8:	74 3e                	je     17c08 <look_up_symtab+0x78>
   17bca:	0f b6 46 0c          	movzbl 0xc(%esi),%eax
   17bce:	83 e0 0f             	and    $0xf,%eax
   17bd1:	83 e8 01             	sub    $0x1,%eax
   17bd4:	3c 01                	cmp    $0x1,%al
   17bd6:	77 e8                	ja     17bc0 <look_up_symtab+0x30>
   17bd8:	83 ec 08             	sub    $0x8,%esp
   17bdb:	ff 74 24 38          	pushl  0x38(%esp)
   17bdf:	8b 44 24 18          	mov    0x18(%esp),%eax
   17be3:	03 06                	add    (%esi),%eax
   17be5:	50                   	push   %eax
   17be6:	e8 65 aa fe ff       	call   2650 <strcmp@plt>
   17beb:	83 c4 10             	add    $0x10,%esp
   17bee:	85 c0                	test   %eax,%eax
   17bf0:	75 ce                	jne    17bc0 <look_up_symtab+0x30>
   17bf2:	8b 44 24 34          	mov    0x34(%esp),%eax
   17bf6:	c6 00 01             	movb   $0x1,(%eax)
   17bf9:	8b 46 04             	mov    0x4(%esi),%eax
   17bfc:	83 c4 1c             	add    $0x1c,%esp
   17bff:	5b                   	pop    %ebx
   17c00:	5e                   	pop    %esi
   17c01:	5f                   	pop    %edi
   17c02:	5d                   	pop    %ebp
   17c03:	c3                   	ret    
   17c04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17c08:	8b 44 24 34          	mov    0x34(%esp),%eax
   17c0c:	c6 00 00             	movb   $0x0,(%eax)
   17c0f:	83 c4 1c             	add    $0x1c,%esp
   17c12:	31 c0                	xor    %eax,%eax
   17c14:	5b                   	pop    %ebx
   17c15:	5e                   	pop    %esi
   17c16:	5f                   	pop    %edi
   17c17:	5d                   	pop    %ebp
   17c18:	c3                   	ret    
   17c19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017c20 <find_fun_name>:
   17c20:	57                   	push   %edi
   17c21:	56                   	push   %esi
   17c22:	e8 63 00 00 00       	call   17c8a <__x86.get_pc_thunk.di>
   17c27:	81 c7 d9 33 01 00    	add    $0x133d9,%edi
   17c2d:	53                   	push   %ebx
   17c2e:	8b 74 24 10          	mov    0x10(%esp),%esi
   17c32:	8b 9f a4 15 05 00    	mov    0x515a4(%edi),%ebx
   17c38:	85 db                	test   %ebx,%ebx
   17c3a:	7e 44                	jle    17c80 <find_fun_name+0x60>
   17c3c:	8b 97 a8 15 05 00    	mov    0x515a8(%edi),%edx
   17c42:	31 c9                	xor    %ecx,%ecx
   17c44:	eb 14                	jmp    17c5a <find_fun_name+0x3a>
   17c46:	8d 76 00             	lea    0x0(%esi),%esi
   17c49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   17c50:	83 c1 01             	add    $0x1,%ecx
   17c53:	83 c2 10             	add    $0x10,%edx
   17c56:	39 d9                	cmp    %ebx,%ecx
   17c58:	74 26                	je     17c80 <find_fun_name+0x60>
   17c5a:	0f b6 42 0c          	movzbl 0xc(%edx),%eax
   17c5e:	83 e0 0f             	and    $0xf,%eax
   17c61:	3c 02                	cmp    $0x2,%al
   17c63:	75 eb                	jne    17c50 <find_fun_name+0x30>
   17c65:	8b 42 04             	mov    0x4(%edx),%eax
   17c68:	39 f0                	cmp    %esi,%eax
   17c6a:	77 e4                	ja     17c50 <find_fun_name+0x30>
   17c6c:	03 42 08             	add    0x8(%edx),%eax
   17c6f:	39 c6                	cmp    %eax,%esi
   17c71:	73 dd                	jae    17c50 <find_fun_name+0x30>
   17c73:	5b                   	pop    %ebx
   17c74:	8b 02                	mov    (%edx),%eax
   17c76:	03 87 ac 15 05 00    	add    0x515ac(%edi),%eax
   17c7c:	5e                   	pop    %esi
   17c7d:	5f                   	pop    %edi
   17c7e:	c3                   	ret    
   17c7f:	90                   	nop
   17c80:	8d 87 24 15 ff ff    	lea    -0xeadc(%edi),%eax
   17c86:	5b                   	pop    %ebx
   17c87:	5e                   	pop    %esi
   17c88:	5f                   	pop    %edi
   17c89:	c3                   	ret    

00017c8a <__x86.get_pc_thunk.di>:
   17c8a:	8b 3c 24             	mov    (%esp),%edi
   17c8d:	c3                   	ret    
   17c8e:	66 90                	xchg   %ax,%ax

00017c90 <new_BP>:
   17c90:	53                   	push   %ebx
   17c91:	e8 2a b0 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17c96:	81 c3 6a 33 01 00    	add    $0x1336a,%ebx
   17c9c:	83 ec 08             	sub    $0x8,%esp
   17c9f:	8b 83 c0 15 05 00    	mov    0x515c0(%ebx),%eax
   17ca5:	85 c0                	test   %eax,%eax
   17ca7:	74 1d                	je     17cc6 <new_BP+0x36>
   17ca9:	8b 50 14             	mov    0x14(%eax),%edx
   17cac:	89 93 c0 15 05 00    	mov    %edx,0x515c0(%ebx)
   17cb2:	0f b6 50 01          	movzbl 0x1(%eax),%edx
   17cb6:	f6 c2 02             	test   $0x2,%dl
   17cb9:	75 27                	jne    17ce2 <new_BP+0x52>
   17cbb:	83 ca 02             	or     $0x2,%edx
   17cbe:	88 50 01             	mov    %dl,0x1(%eax)
   17cc1:	83 c4 08             	add    $0x8,%esp
   17cc4:	5b                   	pop    %ebx
   17cc5:	c3                   	ret    
   17cc6:	8d 83 60 16 ff ff    	lea    -0xe9a0(%ebx),%eax
   17ccc:	50                   	push   %eax
   17ccd:	8d 83 38 15 ff ff    	lea    -0xeac8(%ebx),%eax
   17cd3:	6a 1e                	push   $0x1e
   17cd5:	50                   	push   %eax
   17cd6:	8d 83 51 15 ff ff    	lea    -0xeaaf(%ebx),%eax
   17cdc:	50                   	push   %eax
   17cdd:	e8 ae ab fe ff       	call   2890 <__assert_fail@plt>
   17ce2:	8d 83 60 16 ff ff    	lea    -0xe9a0(%ebx),%eax
   17ce8:	50                   	push   %eax
   17ce9:	8d 83 38 15 ff ff    	lea    -0xeac8(%ebx),%eax
   17cef:	6a 21                	push   $0x21
   17cf1:	50                   	push   %eax
   17cf2:	8d 83 5f 15 ff ff    	lea    -0xeaa1(%ebx),%eax
   17cf8:	50                   	push   %eax
   17cf9:	e8 92 ab fe ff       	call   2890 <__assert_fail@plt>
   17cfe:	66 90                	xchg   %ax,%ax

00017d00 <free_BP>:
   17d00:	53                   	push   %ebx
   17d01:	e8 ba af fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17d06:	81 c3 fa 32 01 00    	add    $0x132fa,%ebx
   17d0c:	83 ec 18             	sub    $0x18,%esp
   17d0f:	8d 93 e0 15 05 00    	lea    0x515e0(%ebx),%edx
   17d15:	39 d0                	cmp    %edx,%eax
   17d17:	72 4f                	jb     17d68 <free_BP+0x68>
   17d19:	8d 93 e0 18 05 00    	lea    0x518e0(%ebx),%edx
   17d1f:	39 d0                	cmp    %edx,%eax
   17d21:	73 45                	jae    17d68 <free_BP+0x68>
   17d23:	f6 40 01 02          	testb  $0x2,0x1(%eax)
   17d27:	74 5b                	je     17d84 <free_BP+0x84>
   17d29:	83 78 10 01          	cmpl   $0x1,0x10(%eax)
   17d2d:	74 21                	je     17d50 <free_BP+0x50>
   17d2f:	8b 93 c0 15 05 00    	mov    0x515c0(%ebx),%edx
   17d35:	80 60 01 fd          	andb   $0xfd,0x1(%eax)
   17d39:	89 83 c0 15 05 00    	mov    %eax,0x515c0(%ebx)
   17d3f:	89 50 14             	mov    %edx,0x14(%eax)
   17d42:	83 c4 18             	add    $0x18,%esp
   17d45:	5b                   	pop    %ebx
   17d46:	c3                   	ret    
   17d47:	89 f6                	mov    %esi,%esi
   17d49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   17d50:	83 ec 0c             	sub    $0xc,%esp
   17d53:	ff 70 04             	pushl  0x4(%eax)
   17d56:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   17d5a:	e8 21 aa fe ff       	call   2780 <free@plt>
   17d5f:	83 c4 10             	add    $0x10,%esp
   17d62:	8b 44 24 0c          	mov    0xc(%esp),%eax
   17d66:	eb c7                	jmp    17d2f <free_BP+0x2f>
   17d68:	8d 83 58 16 ff ff    	lea    -0xe9a8(%ebx),%eax
   17d6e:	50                   	push   %eax
   17d6f:	8d 83 38 15 ff ff    	lea    -0xeac8(%ebx),%eax
   17d75:	6a 27                	push   $0x27
   17d77:	50                   	push   %eax
   17d78:	8d 83 ec 15 ff ff    	lea    -0xea14(%ebx),%eax
   17d7e:	50                   	push   %eax
   17d7f:	e8 0c ab fe ff       	call   2890 <__assert_fail@plt>
   17d84:	8d 83 58 16 ff ff    	lea    -0xe9a8(%ebx),%eax
   17d8a:	50                   	push   %eax
   17d8b:	8d 83 38 15 ff ff    	lea    -0xeac8(%ebx),%eax
   17d91:	6a 28                	push   $0x28
   17d93:	50                   	push   %eax
   17d94:	8d 83 72 15 ff ff    	lea    -0xea8e(%ebx),%eax
   17d9a:	50                   	push   %eax
   17d9b:	e8 f0 aa fe ff       	call   2890 <__assert_fail@plt>

00017da0 <init_bp_list>:
   17da0:	55                   	push   %ebp
   17da1:	57                   	push   %edi
   17da2:	31 c9                	xor    %ecx,%ecx
   17da4:	e8 41 b5 fe ff       	call   32ea <__x86.get_pc_thunk.ax>
   17da9:	05 57 32 01 00       	add    $0x13257,%eax
   17dae:	56                   	push   %esi
   17daf:	53                   	push   %ebx
   17db0:	31 db                	xor    %ebx,%ebx
   17db2:	8d b8 f8 15 05 00    	lea    0x515f8(%eax),%edi
   17db8:	8d a8 e0 15 05 00    	lea    0x515e0(%eax),%ebp
   17dbe:	83 ec 04             	sub    $0x4,%esp
   17dc1:	89 04 24             	mov    %eax,(%esp)
   17dc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17dc8:	8d 04 49             	lea    (%ecx,%ecx,2),%eax
   17dcb:	89 de                	mov    %ebx,%esi
   17dcd:	83 c1 01             	add    $0x1,%ecx
   17dd0:	c1 e6 0a             	shl    $0xa,%esi
   17dd3:	83 c3 01             	add    $0x1,%ebx
   17dd6:	8d 54 c5 00          	lea    0x0(%ebp,%eax,8),%edx
   17dda:	81 e3 ff ff 3f 00    	and    $0x3fffff,%ebx
   17de0:	8b 02                	mov    (%edx),%eax
   17de2:	25 ff 03 00 00       	and    $0x3ff,%eax
   17de7:	09 f0                	or     %esi,%eax
   17de9:	89 02                	mov    %eax,(%edx)
   17deb:	80 62 01 fd          	andb   $0xfd,0x1(%edx)
   17def:	89 7f fc             	mov    %edi,-0x4(%edi)
   17df2:	83 c7 18             	add    $0x18,%edi
   17df5:	83 f9 20             	cmp    $0x20,%ecx
   17df8:	75 ce                	jne    17dc8 <init_bp_list+0x28>
   17dfa:	8b 04 24             	mov    (%esp),%eax
   17dfd:	89 a8 c0 15 05 00    	mov    %ebp,0x515c0(%eax)
   17e03:	c7 80 dc 18 05 00 00 	movl   $0x0,0x518dc(%eax)
   17e0a:	00 00 00 
   17e0d:	c7 80 c4 15 05 00 00 	movl   $0x0,0x515c4(%eax)
   17e14:	00 00 00 
   17e17:	83 c4 04             	add    $0x4,%esp
   17e1a:	5b                   	pop    %ebx
   17e1b:	5e                   	pop    %esi
   17e1c:	5f                   	pop    %edi
   17e1d:	5d                   	pop    %ebp
   17e1e:	c3                   	ret    
   17e1f:	90                   	nop

00017e20 <set_breakpoint>:
   17e20:	57                   	push   %edi
   17e21:	56                   	push   %esi
   17e22:	53                   	push   %ebx
   17e23:	8b 7c 24 10          	mov    0x10(%esp),%edi
   17e27:	e8 94 ae fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17e2c:	81 c3 d4 31 01 00    	add    $0x131d4,%ebx
   17e32:	e8 59 fe ff ff       	call   17c90 <new_BP>
   17e37:	83 ec 08             	sub    $0x8,%esp
   17e3a:	89 78 04             	mov    %edi,0x4(%eax)
   17e3d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   17e44:	6a 01                	push   $0x1
   17e46:	57                   	push   %edi
   17e47:	89 c6                	mov    %eax,%esi
   17e49:	e8 92 24 00 00       	call   1a2e0 <instr_fetch>
   17e4e:	88 06                	mov    %al,(%esi)
   17e50:	68 f1 00 00 00       	push   $0xf1
   17e55:	6a 01                	push   $0x1
   17e57:	6a 01                	push   $0x1
   17e59:	ff 76 04             	pushl  0x4(%esi)
   17e5c:	e8 cf 23 00 00       	call   1a230 <vaddr_write>
   17e61:	8b 83 c4 15 05 00    	mov    0x515c4(%ebx),%eax
   17e67:	80 4e 01 01          	orb    $0x1,0x1(%esi)
   17e6b:	83 c4 20             	add    $0x20,%esp
   17e6e:	89 b3 c4 15 05 00    	mov    %esi,0x515c4(%ebx)
   17e74:	89 46 14             	mov    %eax,0x14(%esi)
   17e77:	8b 06                	mov    (%esi),%eax
   17e79:	5b                   	pop    %ebx
   17e7a:	5e                   	pop    %esi
   17e7b:	c1 f8 0a             	sar    $0xa,%eax
   17e7e:	5f                   	pop    %edi
   17e7f:	c3                   	ret    

00017e80 <set_watchpoint>:
   17e80:	55                   	push   %ebp
   17e81:	57                   	push   %edi
   17e82:	56                   	push   %esi
   17e83:	53                   	push   %ebx
   17e84:	e8 37 ae fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17e89:	81 c3 77 31 01 00    	add    $0x13177,%ebx
   17e8f:	83 ec 24             	sub    $0x24,%esp
   17e92:	8b 7c 24 38          	mov    0x38(%esp),%edi
   17e96:	8d 44 24 17          	lea    0x17(%esp),%eax
   17e9a:	50                   	push   %eax
   17e9b:	57                   	push   %edi
   17e9c:	e8 ef 16 00 00       	call   19590 <expr>
   17ea1:	83 c4 10             	add    $0x10,%esp
   17ea4:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
   17ea9:	74 45                	je     17ef0 <set_watchpoint+0x70>
   17eab:	89 c5                	mov    %eax,%ebp
   17ead:	e8 de fd ff ff       	call   17c90 <new_BP>
   17eb2:	83 ec 0c             	sub    $0xc,%esp
   17eb5:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
   17ebc:	89 c6                	mov    %eax,%esi
   17ebe:	57                   	push   %edi
   17ebf:	e8 8c a9 fe ff       	call   2850 <__strdup@plt>
   17ec4:	89 46 04             	mov    %eax,0x4(%esi)
   17ec7:	8b 83 c4 15 05 00    	mov    0x515c4(%ebx),%eax
   17ecd:	83 c4 10             	add    $0x10,%esp
   17ed0:	80 4e 01 01          	orb    $0x1,0x1(%esi)
   17ed4:	89 6e 08             	mov    %ebp,0x8(%esi)
   17ed7:	89 b3 c4 15 05 00    	mov    %esi,0x515c4(%ebx)
   17edd:	89 46 14             	mov    %eax,0x14(%esi)
   17ee0:	8b 06                	mov    (%esi),%eax
   17ee2:	c1 f8 0a             	sar    $0xa,%eax
   17ee5:	83 c4 1c             	add    $0x1c,%esp
   17ee8:	5b                   	pop    %ebx
   17ee9:	5e                   	pop    %esi
   17eea:	5f                   	pop    %edi
   17eeb:	5d                   	pop    %ebp
   17eec:	c3                   	ret    
   17eed:	8d 76 00             	lea    0x0(%esi),%esi
   17ef0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   17ef5:	eb ee                	jmp    17ee5 <set_watchpoint+0x65>
   17ef7:	89 f6                	mov    %esi,%esi
   17ef9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017f00 <delete_breakpoint>:
   17f00:	53                   	push   %ebx
   17f01:	e8 e6 ae fe ff       	call   2dec <__x86.get_pc_thunk.dx>
   17f06:	81 c2 fa 30 01 00    	add    $0x130fa,%edx
   17f0c:	83 ec 08             	sub    $0x8,%esp
   17f0f:	8b 8a c4 15 05 00    	mov    0x515c4(%edx),%ecx
   17f15:	8b 5c 24 10          	mov    0x10(%esp),%ebx
   17f19:	85 c9                	test   %ecx,%ecx
   17f1b:	74 55                	je     17f72 <delete_breakpoint+0x72>
   17f1d:	8b 01                	mov    (%ecx),%eax
   17f1f:	c1 f8 0a             	sar    $0xa,%eax
   17f22:	39 c3                	cmp    %eax,%ebx
   17f24:	75 15                	jne    17f3b <delete_breakpoint+0x3b>
   17f26:	eb 3d                	jmp    17f65 <delete_breakpoint+0x65>
   17f28:	90                   	nop
   17f29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17f30:	8b 10                	mov    (%eax),%edx
   17f32:	c1 fa 0a             	sar    $0xa,%edx
   17f35:	39 da                	cmp    %ebx,%edx
   17f37:	74 17                	je     17f50 <delete_breakpoint+0x50>
   17f39:	89 c1                	mov    %eax,%ecx
   17f3b:	8b 41 14             	mov    0x14(%ecx),%eax
   17f3e:	85 c0                	test   %eax,%eax
   17f40:	75 ee                	jne    17f30 <delete_breakpoint+0x30>
   17f42:	83 c4 08             	add    $0x8,%esp
   17f45:	5b                   	pop    %ebx
   17f46:	c3                   	ret    
   17f47:	89 f6                	mov    %esi,%esi
   17f49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   17f50:	8b 50 14             	mov    0x14(%eax),%edx
   17f53:	89 51 14             	mov    %edx,0x14(%ecx)
   17f56:	e8 a5 fd ff ff       	call   17d00 <free_BP>
   17f5b:	83 c4 08             	add    $0x8,%esp
   17f5e:	b8 01 00 00 00       	mov    $0x1,%eax
   17f63:	5b                   	pop    %ebx
   17f64:	c3                   	ret    
   17f65:	8b 41 14             	mov    0x14(%ecx),%eax
   17f68:	89 82 c4 15 05 00    	mov    %eax,0x515c4(%edx)
   17f6e:	89 c8                	mov    %ecx,%eax
   17f70:	eb e4                	jmp    17f56 <delete_breakpoint+0x56>
   17f72:	31 c0                	xor    %eax,%eax
   17f74:	eb cc                	jmp    17f42 <delete_breakpoint+0x42>
   17f76:	8d 76 00             	lea    0x0(%esi),%esi
   17f79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017f80 <delete_all_breakpoint_recursively>:
   17f80:	53                   	push   %ebx
   17f81:	83 ec 08             	sub    $0x8,%esp
   17f84:	8b 5c 24 10          	mov    0x10(%esp),%ebx
   17f88:	85 db                	test   %ebx,%ebx
   17f8a:	74 24                	je     17fb0 <delete_all_breakpoint_recursively+0x30>
   17f8c:	8b 43 14             	mov    0x14(%ebx),%eax
   17f8f:	85 c0                	test   %eax,%eax
   17f91:	74 0c                	je     17f9f <delete_all_breakpoint_recursively+0x1f>
   17f93:	83 ec 0c             	sub    $0xc,%esp
   17f96:	50                   	push   %eax
   17f97:	e8 e4 ff ff ff       	call   17f80 <delete_all_breakpoint_recursively>
   17f9c:	83 c4 10             	add    $0x10,%esp
   17f9f:	83 c4 08             	add    $0x8,%esp
   17fa2:	89 d8                	mov    %ebx,%eax
   17fa4:	5b                   	pop    %ebx
   17fa5:	e9 56 fd ff ff       	jmp    17d00 <free_BP>
   17faa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   17fb0:	83 c4 08             	add    $0x8,%esp
   17fb3:	5b                   	pop    %ebx
   17fb4:	c3                   	ret    
   17fb5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17fb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017fc0 <delete_all_breakpoint>:
   17fc0:	53                   	push   %ebx
   17fc1:	e8 fa ac fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17fc6:	81 c3 3a 30 01 00    	add    $0x1303a,%ebx
   17fcc:	83 ec 14             	sub    $0x14,%esp
   17fcf:	ff b3 c4 15 05 00    	pushl  0x515c4(%ebx)
   17fd5:	e8 a6 ff ff ff       	call   17f80 <delete_all_breakpoint_recursively>
   17fda:	c7 83 c4 15 05 00 00 	movl   $0x0,0x515c4(%ebx)
   17fe1:	00 00 00 
   17fe4:	83 c4 18             	add    $0x18,%esp
   17fe7:	5b                   	pop    %ebx
   17fe8:	c3                   	ret    
   17fe9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017ff0 <list_breakpoint>:
   17ff0:	55                   	push   %ebp
   17ff1:	57                   	push   %edi
   17ff2:	56                   	push   %esi
   17ff3:	53                   	push   %ebx
   17ff4:	e8 c7 ac fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   17ff9:	81 c3 07 30 01 00    	add    $0x13007,%ebx
   17fff:	83 ec 0c             	sub    $0xc,%esp
   18002:	8b 93 c4 15 05 00    	mov    0x515c4(%ebx),%edx
   18008:	85 d2                	test   %edx,%edx
   1800a:	0f 84 c0 00 00 00    	je     180d0 <list_breakpoint+0xe0>
   18010:	8d 83 9a 15 ff ff    	lea    -0xea66(%ebx),%eax
   18016:	83 ec 0c             	sub    $0xc,%esp
   18019:	8d ab 88 15 ff ff    	lea    -0xea78(%ebx),%ebp
   1801f:	8d bb 84 15 ff ff    	lea    -0xea7c(%ebx),%edi
   18025:	50                   	push   %eax
   18026:	8d 83 a1 15 ff ff    	lea    -0xea5f(%ebx),%eax
   1802c:	50                   	push   %eax
   1802d:	8d 83 a9 15 ff ff    	lea    -0xea57(%ebx),%eax
   18033:	50                   	push   %eax
   18034:	8d 83 ae 15 ff ff    	lea    -0xea52(%ebx),%eax
   1803a:	50                   	push   %eax
   1803b:	8d 83 b1 15 ff ff    	lea    -0xea4f(%ebx),%eax
   18041:	50                   	push   %eax
   18042:	e8 79 a7 fe ff       	call   27c0 <printf@plt>
   18047:	8b b3 c4 15 05 00    	mov    0x515c4(%ebx),%esi
   1804d:	83 c4 20             	add    $0x20,%esp
   18050:	85 f6                	test   %esi,%esi
   18052:	75 3f                	jne    18093 <list_breakpoint+0xa3>
   18054:	eb 70                	jmp    180c6 <list_breakpoint+0xd6>
   18056:	8d 76 00             	lea    0x0(%esi),%esi
   18059:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   18060:	f6 46 01 01          	testb  $0x1,0x1(%esi)
   18064:	89 e8                	mov    %ebp,%eax
   18066:	0f 45 c7             	cmovne %edi,%eax
   18069:	83 ec 0c             	sub    $0xc,%esp
   1806c:	50                   	push   %eax
   1806d:	8d 83 15 ff fe ff    	lea    -0x100eb(%ebx),%eax
   18073:	ff 76 04             	pushl  0x4(%esi)
   18076:	50                   	push   %eax
   18077:	8b 06                	mov    (%esi),%eax
   18079:	c1 f8 0a             	sar    $0xa,%eax
   1807c:	50                   	push   %eax
   1807d:	8d 83 c2 15 ff ff    	lea    -0xea3e(%ebx),%eax
   18083:	50                   	push   %eax
   18084:	e8 37 a7 fe ff       	call   27c0 <printf@plt>
   18089:	8b 76 14             	mov    0x14(%esi),%esi
   1808c:	83 c4 20             	add    $0x20,%esp
   1808f:	85 f6                	test   %esi,%esi
   18091:	74 33                	je     180c6 <list_breakpoint+0xd6>
   18093:	8b 46 10             	mov    0x10(%esi),%eax
   18096:	85 c0                	test   %eax,%eax
   18098:	74 c6                	je     18060 <list_breakpoint+0x70>
   1809a:	8d 83 d5 15 ff ff    	lea    -0xea2b(%ebx),%eax
   180a0:	83 ec 0c             	sub    $0xc,%esp
   180a3:	ff 76 08             	pushl  0x8(%esi)
   180a6:	ff 76 04             	pushl  0x4(%esi)
   180a9:	50                   	push   %eax
   180aa:	8b 06                	mov    (%esi),%eax
   180ac:	c1 f8 0a             	sar    $0xa,%eax
   180af:	50                   	push   %eax
   180b0:	8d 83 d7 15 ff ff    	lea    -0xea29(%ebx),%eax
   180b6:	50                   	push   %eax
   180b7:	e8 04 a7 fe ff       	call   27c0 <printf@plt>
   180bc:	8b 76 14             	mov    0x14(%esi),%esi
   180bf:	83 c4 20             	add    $0x20,%esp
   180c2:	85 f6                	test   %esi,%esi
   180c4:	75 cd                	jne    18093 <list_breakpoint+0xa3>
   180c6:	83 c4 0c             	add    $0xc,%esp
   180c9:	5b                   	pop    %ebx
   180ca:	5e                   	pop    %esi
   180cb:	5f                   	pop    %edi
   180cc:	5d                   	pop    %ebp
   180cd:	c3                   	ret    
   180ce:	66 90                	xchg   %ax,%ax
   180d0:	8d 83 8b 15 ff ff    	lea    -0xea75(%ebx),%eax
   180d6:	83 ec 0c             	sub    $0xc,%esp
   180d9:	50                   	push   %eax
   180da:	e8 21 a7 fe ff       	call   2800 <puts@plt>
   180df:	83 c4 10             	add    $0x10,%esp
   180e2:	83 c4 0c             	add    $0xc,%esp
   180e5:	5b                   	pop    %ebx
   180e6:	5e                   	pop    %esi
   180e7:	5f                   	pop    %edi
   180e8:	5d                   	pop    %ebp
   180e9:	c3                   	ret    
   180ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000180f0 <find_breakpoint>:
   180f0:	53                   	push   %ebx
   180f1:	e8 ca ab fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   180f6:	81 c3 0a 2f 01 00    	add    $0x12f0a,%ebx
   180fc:	83 ec 08             	sub    $0x8,%esp
   180ff:	8b 83 c4 15 05 00    	mov    0x515c4(%ebx),%eax
   18105:	8b 54 24 10          	mov    0x10(%esp),%edx
   18109:	85 c0                	test   %eax,%eax
   1810b:	74 1c                	je     18129 <find_breakpoint+0x39>
   1810d:	8d 76 00             	lea    0x0(%esi),%esi
   18110:	f6 40 01 02          	testb  $0x2,0x1(%eax)
   18114:	74 18                	je     1812e <find_breakpoint+0x3e>
   18116:	8b 48 10             	mov    0x10(%eax),%ecx
   18119:	85 c9                	test   %ecx,%ecx
   1811b:	75 05                	jne    18122 <find_breakpoint+0x32>
   1811d:	39 50 04             	cmp    %edx,0x4(%eax)
   18120:	74 07                	je     18129 <find_breakpoint+0x39>
   18122:	8b 40 14             	mov    0x14(%eax),%eax
   18125:	85 c0                	test   %eax,%eax
   18127:	75 e7                	jne    18110 <find_breakpoint+0x20>
   18129:	83 c4 08             	add    $0x8,%esp
   1812c:	5b                   	pop    %ebx
   1812d:	c3                   	ret    
   1812e:	8d 83 48 16 ff ff    	lea    -0xe9b8(%ebx),%eax
   18134:	50                   	push   %eax
   18135:	8d 83 38 15 ff ff    	lea    -0xeac8(%ebx),%eax
   1813b:	68 8d 00 00 00       	push   $0x8d
   18140:	50                   	push   %eax
   18141:	8d 83 72 15 ff ff    	lea    -0xea8e(%ebx),%eax
   18147:	50                   	push   %eax
   18148:	e8 43 a7 fe ff       	call   2890 <__assert_fail@plt>
   1814d:	8d 76 00             	lea    0x0(%esi),%esi

00018150 <resume_breakpoints>:
   18150:	56                   	push   %esi
   18151:	53                   	push   %ebx
   18152:	e8 69 ab fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18157:	81 c3 a9 2e 01 00    	add    $0x12ea9,%ebx
   1815d:	83 ec 04             	sub    $0x4,%esp
   18160:	8b b3 c4 15 05 00    	mov    0x515c4(%ebx),%esi
   18166:	85 f6                	test   %esi,%esi
   18168:	75 0d                	jne    18177 <resume_breakpoints+0x27>
   1816a:	eb 46                	jmp    181b2 <resume_breakpoints+0x62>
   1816c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18170:	8b 76 14             	mov    0x14(%esi),%esi
   18173:	85 f6                	test   %esi,%esi
   18175:	74 3b                	je     181b2 <resume_breakpoints+0x62>
   18177:	f6 46 01 02          	testb  $0x2,0x1(%esi)
   1817b:	74 3b                	je     181b8 <resume_breakpoints+0x68>
   1817d:	8b 46 10             	mov    0x10(%esi),%eax
   18180:	85 c0                	test   %eax,%eax
   18182:	75 ec                	jne    18170 <resume_breakpoints+0x20>
   18184:	83 ec 08             	sub    $0x8,%esp
   18187:	6a 01                	push   $0x1
   18189:	ff 76 04             	pushl  0x4(%esi)
   1818c:	e8 4f 21 00 00       	call   1a2e0 <instr_fetch>
   18191:	88 06                	mov    %al,(%esi)
   18193:	68 f1 00 00 00       	push   $0xf1
   18198:	6a 01                	push   $0x1
   1819a:	6a 01                	push   $0x1
   1819c:	ff 76 04             	pushl  0x4(%esi)
   1819f:	e8 8c 20 00 00       	call   1a230 <vaddr_write>
   181a4:	80 4e 01 01          	orb    $0x1,0x1(%esi)
   181a8:	8b 76 14             	mov    0x14(%esi),%esi
   181ab:	83 c4 20             	add    $0x20,%esp
   181ae:	85 f6                	test   %esi,%esi
   181b0:	75 c5                	jne    18177 <resume_breakpoints+0x27>
   181b2:	83 c4 04             	add    $0x4,%esp
   181b5:	5b                   	pop    %ebx
   181b6:	5e                   	pop    %esi
   181b7:	c3                   	ret    
   181b8:	8d 83 34 16 ff ff    	lea    -0xe9cc(%ebx),%eax
   181be:	50                   	push   %eax
   181bf:	8d 83 38 15 ff ff    	lea    -0xeac8(%ebx),%eax
   181c5:	68 9a 00 00 00       	push   $0x9a
   181ca:	50                   	push   %eax
   181cb:	8d 83 72 15 ff ff    	lea    -0xea8e(%ebx),%eax
   181d1:	50                   	push   %eax
   181d2:	e8 b9 a6 fe ff       	call   2890 <__assert_fail@plt>
   181d7:	89 f6                	mov    %esi,%esi
   181d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000181e0 <mask_breakpoints>:
   181e0:	56                   	push   %esi
   181e1:	53                   	push   %ebx
   181e2:	e8 d9 aa fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   181e7:	81 c3 19 2e 01 00    	add    $0x12e19,%ebx
   181ed:	83 ec 04             	sub    $0x4,%esp
   181f0:	8b b3 c4 15 05 00    	mov    0x515c4(%ebx),%esi
   181f6:	85 f6                	test   %esi,%esi
   181f8:	75 0d                	jne    18207 <mask_breakpoints+0x27>
   181fa:	eb 32                	jmp    1822e <mask_breakpoints+0x4e>
   181fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18200:	8b 76 14             	mov    0x14(%esi),%esi
   18203:	85 f6                	test   %esi,%esi
   18205:	74 27                	je     1822e <mask_breakpoints+0x4e>
   18207:	f6 46 01 02          	testb  $0x2,0x1(%esi)
   1820b:	74 27                	je     18234 <mask_breakpoints+0x54>
   1820d:	8b 46 10             	mov    0x10(%esi),%eax
   18210:	85 c0                	test   %eax,%eax
   18212:	75 ec                	jne    18200 <mask_breakpoints+0x20>
   18214:	0f b6 06             	movzbl (%esi),%eax
   18217:	50                   	push   %eax
   18218:	6a 01                	push   $0x1
   1821a:	6a 01                	push   $0x1
   1821c:	ff 76 04             	pushl  0x4(%esi)
   1821f:	e8 0c 20 00 00       	call   1a230 <vaddr_write>
   18224:	8b 76 14             	mov    0x14(%esi),%esi
   18227:	83 c4 10             	add    $0x10,%esp
   1822a:	85 f6                	test   %esi,%esi
   1822c:	75 d9                	jne    18207 <mask_breakpoints+0x27>
   1822e:	83 c4 04             	add    $0x4,%esp
   18231:	5b                   	pop    %ebx
   18232:	5e                   	pop    %esi
   18233:	c3                   	ret    
   18234:	8d 83 20 16 ff ff    	lea    -0xe9e0(%ebx),%eax
   1823a:	50                   	push   %eax
   1823b:	8d 83 38 15 ff ff    	lea    -0xeac8(%ebx),%eax
   18241:	68 b3 00 00 00       	push   $0xb3
   18246:	50                   	push   %eax
   18247:	8d 83 72 15 ff ff    	lea    -0xea8e(%ebx),%eax
   1824d:	50                   	push   %eax
   1824e:	e8 3d a6 fe ff       	call   2890 <__assert_fail@plt>
   18253:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18259:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018260 <scan_watchpoint>:
   18260:	57                   	push   %edi
   18261:	56                   	push   %esi
   18262:	53                   	push   %ebx
   18263:	e8 58 aa fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18268:	81 c3 98 2d 01 00    	add    $0x12d98,%ebx
   1826e:	83 ec 10             	sub    $0x10,%esp
   18271:	8b b3 c4 15 05 00    	mov    0x515c4(%ebx),%esi
   18277:	85 f6                	test   %esi,%esi
   18279:	74 4d                	je     182c8 <scan_watchpoint+0x68>
   1827b:	f6 46 01 02          	testb  $0x2,0x1(%esi)
   1827f:	74 52                	je     182d3 <scan_watchpoint+0x73>
   18281:	8d 7c 24 0f          	lea    0xf(%esp),%edi
   18285:	eb 16                	jmp    1829d <scan_watchpoint+0x3d>
   18287:	89 f6                	mov    %esi,%esi
   18289:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   18290:	8b 76 14             	mov    0x14(%esi),%esi
   18293:	85 f6                	test   %esi,%esi
   18295:	74 31                	je     182c8 <scan_watchpoint+0x68>
   18297:	f6 46 01 02          	testb  $0x2,0x1(%esi)
   1829b:	74 36                	je     182d3 <scan_watchpoint+0x73>
   1829d:	83 7e 10 01          	cmpl   $0x1,0x10(%esi)
   182a1:	75 ed                	jne    18290 <scan_watchpoint+0x30>
   182a3:	83 ec 08             	sub    $0x8,%esp
   182a6:	57                   	push   %edi
   182a7:	ff 76 04             	pushl  0x4(%esi)
   182aa:	e8 e1 12 00 00       	call   19590 <expr>
   182af:	83 c4 10             	add    $0x10,%esp
   182b2:	3b 46 08             	cmp    0x8(%esi),%eax
   182b5:	89 46 0c             	mov    %eax,0xc(%esi)
   182b8:	74 d6                	je     18290 <scan_watchpoint+0x30>
   182ba:	83 c4 10             	add    $0x10,%esp
   182bd:	89 f0                	mov    %esi,%eax
   182bf:	5b                   	pop    %ebx
   182c0:	5e                   	pop    %esi
   182c1:	5f                   	pop    %edi
   182c2:	c3                   	ret    
   182c3:	90                   	nop
   182c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   182c8:	83 c4 10             	add    $0x10,%esp
   182cb:	31 f6                	xor    %esi,%esi
   182cd:	89 f0                	mov    %esi,%eax
   182cf:	5b                   	pop    %ebx
   182d0:	5e                   	pop    %esi
   182d1:	5f                   	pop    %edi
   182d2:	c3                   	ret    
   182d3:	8d 83 10 16 ff ff    	lea    -0xe9f0(%ebx),%eax
   182d9:	50                   	push   %eax
   182da:	8d 83 38 15 ff ff    	lea    -0xeac8(%ebx),%eax
   182e0:	68 c1 00 00 00       	push   $0xc1
   182e5:	50                   	push   %eax
   182e6:	8d 83 72 15 ff ff    	lea    -0xea8e(%ebx),%eax
   182ec:	50                   	push   %eax
   182ed:	e8 9e a5 fe ff       	call   2890 <__assert_fail@plt>
   182f2:	66 90                	xchg   %ax,%ax
   182f4:	66 90                	xchg   %ax,%ax
   182f6:	66 90                	xchg   %ax,%ax
   182f8:	66 90                	xchg   %ax,%ax
   182fa:	66 90                	xchg   %ax,%ax
   182fc:	66 90                	xchg   %ax,%ax
   182fe:	66 90                	xchg   %ax,%ax

00018300 <cmd_q>:
   18300:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   18305:	c3                   	ret    
   18306:	8d 76 00             	lea    0x0(%esi),%esi
   18309:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018310 <cmd_info>:
   18310:	53                   	push   %ebx
   18311:	e8 aa a9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18316:	81 c3 ea 2c 01 00    	add    $0x12cea,%ebx
   1831c:	83 ec 10             	sub    $0x10,%esp
   1831f:	8d 83 20 fd fe ff    	lea    -0x102e0(%ebx),%eax
   18325:	50                   	push   %eax
   18326:	6a 00                	push   $0x0
   18328:	e8 c3 a4 fe ff       	call   27f0 <strtok@plt>
   1832d:	0f b6 10             	movzbl (%eax),%edx
   18330:	83 c4 10             	add    $0x10,%esp
   18333:	83 fa 72             	cmp    $0x72,%edx
   18336:	75 28                	jne    18360 <cmd_info+0x50>
   18338:	80 78 01 00          	cmpb   $0x0,0x1(%eax)
   1833c:	74 42                	je     18380 <cmd_info+0x70>
   1833e:	8d 83 67 16 ff ff    	lea    -0xe999(%ebx),%eax
   18344:	83 ec 0c             	sub    $0xc,%esp
   18347:	50                   	push   %eax
   18348:	e8 b3 a4 fe ff       	call   2800 <puts@plt>
   1834d:	83 c4 10             	add    $0x10,%esp
   18350:	31 c0                	xor    %eax,%eax
   18352:	83 c4 08             	add    $0x8,%esp
   18355:	5b                   	pop    %ebx
   18356:	c3                   	ret    
   18357:	89 f6                	mov    %esi,%esi
   18359:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   18360:	83 fa 77             	cmp    $0x77,%edx
   18363:	75 d9                	jne    1833e <cmd_info+0x2e>
   18365:	80 78 01 00          	cmpb   $0x0,0x1(%eax)
   18369:	75 d3                	jne    1833e <cmd_info+0x2e>
   1836b:	e8 80 fc ff ff       	call   17ff0 <list_breakpoint>
   18370:	83 c4 08             	add    $0x8,%esp
   18373:	31 c0                	xor    %eax,%eax
   18375:	5b                   	pop    %ebx
   18376:	c3                   	ret    
   18377:	89 f6                	mov    %esi,%esi
   18379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   18380:	e8 6b ca fe ff       	call   4df0 <print_reg>
   18385:	83 c4 08             	add    $0x8,%esp
   18388:	31 c0                	xor    %eax,%eax
   1838a:	5b                   	pop    %ebx
   1838b:	c3                   	ret    
   1838c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00018390 <cmd_c>:
   18390:	53                   	push   %ebx
   18391:	e8 2a a9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18396:	81 c3 6a 2c 01 00    	add    $0x12c6a,%ebx
   1839c:	83 ec 14             	sub    $0x14,%esp
   1839f:	6a ff                	push   $0xffffffff
   183a1:	e8 ca d1 fe ff       	call   5570 <exec>
   183a6:	83 c4 18             	add    $0x18,%esp
   183a9:	31 c0                	xor    %eax,%eax
   183ab:	5b                   	pop    %ebx
   183ac:	c3                   	ret    
   183ad:	8d 76 00             	lea    0x0(%esi),%esi

000183b0 <cmd_si>:
   183b0:	56                   	push   %esi
   183b1:	53                   	push   %ebx
   183b2:	e8 09 a9 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   183b7:	81 c3 49 2c 01 00    	add    $0x12c49,%ebx
   183bd:	83 ec 14             	sub    $0x14,%esp
   183c0:	8b 44 24 20          	mov    0x20(%esp),%eax
   183c4:	85 c0                	test   %eax,%eax
   183c6:	0f 84 84 00 00 00    	je     18450 <cmd_si+0xa0>
   183cc:	8d 83 20 fd fe ff    	lea    -0x102e0(%ebx),%eax
   183d2:	83 ec 08             	sub    $0x8,%esp
   183d5:	50                   	push   %eax
   183d6:	6a 00                	push   $0x0
   183d8:	e8 13 a4 fe ff       	call   27f0 <strtok@plt>
   183dd:	83 c4 10             	add    $0x10,%esp
   183e0:	85 c0                	test   %eax,%eax
   183e2:	89 c6                	mov    %eax,%esi
   183e4:	74 6a                	je     18450 <cmd_si+0xa0>
   183e6:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   183ed:	00 
   183ee:	83 ec 04             	sub    $0x4,%esp
   183f1:	8d 44 24 10          	lea    0x10(%esp),%eax
   183f5:	50                   	push   %eax
   183f6:	8d 83 7b 16 ff ff    	lea    -0xe985(%ebx),%eax
   183fc:	50                   	push   %eax
   183fd:	56                   	push   %esi
   183fe:	e8 3d a3 fe ff       	call   2740 <__isoc99_sscanf@plt>
   18403:	83 c4 10             	add    $0x10,%esp
   18406:	83 f8 01             	cmp    $0x1,%eax
   18409:	74 25                	je     18430 <cmd_si+0x80>
   1840b:	8d 83 7e 16 ff ff    	lea    -0xe982(%ebx),%eax
   18411:	83 ec 08             	sub    $0x8,%esp
   18414:	56                   	push   %esi
   18415:	50                   	push   %eax
   18416:	e8 a5 a3 fe ff       	call   27c0 <printf@plt>
   1841b:	83 c4 10             	add    $0x10,%esp
   1841e:	31 c0                	xor    %eax,%eax
   18420:	83 c4 14             	add    $0x14,%esp
   18423:	5b                   	pop    %ebx
   18424:	5e                   	pop    %esi
   18425:	c3                   	ret    
   18426:	8d 76 00             	lea    0x0(%esi),%esi
   18429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   18430:	8b 44 24 0c          	mov    0xc(%esp),%eax
   18434:	85 c0                	test   %eax,%eax
   18436:	7e d3                	jle    1840b <cmd_si+0x5b>
   18438:	83 ec 0c             	sub    $0xc,%esp
   1843b:	50                   	push   %eax
   1843c:	e8 2f d1 fe ff       	call   5570 <exec>
   18441:	83 c4 10             	add    $0x10,%esp
   18444:	31 c0                	xor    %eax,%eax
   18446:	83 c4 14             	add    $0x14,%esp
   18449:	5b                   	pop    %ebx
   1844a:	5e                   	pop    %esi
   1844b:	c3                   	ret    
   1844c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18450:	83 ec 0c             	sub    $0xc,%esp
   18453:	6a 01                	push   $0x1
   18455:	e8 16 d1 fe ff       	call   5570 <exec>
   1845a:	83 c4 10             	add    $0x10,%esp
   1845d:	31 c0                	xor    %eax,%eax
   1845f:	83 c4 14             	add    $0x14,%esp
   18462:	5b                   	pop    %ebx
   18463:	5e                   	pop    %esi
   18464:	c3                   	ret    
   18465:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018470 <cmd_p>:
   18470:	56                   	push   %esi
   18471:	53                   	push   %ebx
   18472:	e8 49 a8 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18477:	81 c3 89 2b 01 00    	add    $0x12b89,%ebx
   1847d:	83 ec 14             	sub    $0x14,%esp
   18480:	8b 74 24 20          	mov    0x20(%esp),%esi
   18484:	85 f6                	test   %esi,%esi
   18486:	74 58                	je     184e0 <cmd_p+0x70>
   18488:	83 ec 08             	sub    $0x8,%esp
   1848b:	8d 44 24 17          	lea    0x17(%esp),%eax
   1848f:	50                   	push   %eax
   18490:	56                   	push   %esi
   18491:	e8 fa 10 00 00       	call   19590 <expr>
   18496:	83 c4 10             	add    $0x10,%esp
   18499:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
   1849e:	74 20                	je     184c0 <cmd_p+0x50>
   184a0:	83 ec 04             	sub    $0x4,%esp
   184a3:	50                   	push   %eax
   184a4:	50                   	push   %eax
   184a5:	8d 83 cc 16 ff ff    	lea    -0xe934(%ebx),%eax
   184ab:	50                   	push   %eax
   184ac:	e8 0f a3 fe ff       	call   27c0 <printf@plt>
   184b1:	83 c4 10             	add    $0x10,%esp
   184b4:	31 c0                	xor    %eax,%eax
   184b6:	83 c4 14             	add    $0x14,%esp
   184b9:	5b                   	pop    %ebx
   184ba:	5e                   	pop    %esi
   184bb:	c3                   	ret    
   184bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   184c0:	8d 83 b2 16 ff ff    	lea    -0xe94e(%ebx),%eax
   184c6:	83 ec 08             	sub    $0x8,%esp
   184c9:	56                   	push   %esi
   184ca:	50                   	push   %eax
   184cb:	e8 f0 a2 fe ff       	call   27c0 <printf@plt>
   184d0:	83 c4 10             	add    $0x10,%esp
   184d3:	31 c0                	xor    %eax,%eax
   184d5:	83 c4 14             	add    $0x14,%esp
   184d8:	5b                   	pop    %ebx
   184d9:	5e                   	pop    %esi
   184da:	c3                   	ret    
   184db:	90                   	nop
   184dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   184e0:	8d 83 99 16 ff ff    	lea    -0xe967(%ebx),%eax
   184e6:	83 ec 0c             	sub    $0xc,%esp
   184e9:	50                   	push   %eax
   184ea:	e8 11 a3 fe ff       	call   2800 <puts@plt>
   184ef:	83 c4 10             	add    $0x10,%esp
   184f2:	31 c0                	xor    %eax,%eax
   184f4:	83 c4 14             	add    $0x14,%esp
   184f7:	5b                   	pop    %ebx
   184f8:	5e                   	pop    %esi
   184f9:	c3                   	ret    
   184fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00018500 <cmd_x>:
   18500:	55                   	push   %ebp
   18501:	57                   	push   %edi
   18502:	56                   	push   %esi
   18503:	53                   	push   %ebx
   18504:	e8 b7 a7 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18509:	81 c3 f7 2a 01 00    	add    $0x12af7,%ebx
   1850f:	83 ec 2c             	sub    $0x2c,%esp
   18512:	8b 74 24 40          	mov    0x40(%esp),%esi
   18516:	85 f6                	test   %esi,%esi
   18518:	74 1d                	je     18537 <cmd_x+0x37>
   1851a:	83 ec 04             	sub    $0x4,%esp
   1851d:	8d 44 24 20          	lea    0x20(%esp),%eax
   18521:	50                   	push   %eax
   18522:	8d 83 7b 16 ff ff    	lea    -0xe985(%ebx),%eax
   18528:	50                   	push   %eax
   18529:	56                   	push   %esi
   1852a:	e8 11 a2 fe ff       	call   2740 <__isoc99_sscanf@plt>
   1852f:	83 c4 10             	add    $0x10,%esp
   18532:	83 f8 01             	cmp    $0x1,%eax
   18535:	74 21                	je     18558 <cmd_x+0x58>
   18537:	8d 83 d5 16 ff ff    	lea    -0xe92b(%ebx),%eax
   1853d:	83 ec 0c             	sub    $0xc,%esp
   18540:	50                   	push   %eax
   18541:	e8 ba a2 fe ff       	call   2800 <puts@plt>
   18546:	83 c4 10             	add    $0x10,%esp
   18549:	83 c4 2c             	add    $0x2c,%esp
   1854c:	31 c0                	xor    %eax,%eax
   1854e:	5b                   	pop    %ebx
   1854f:	5e                   	pop    %esi
   18550:	5f                   	pop    %edi
   18551:	5d                   	pop    %ebp
   18552:	c3                   	ret    
   18553:	90                   	nop
   18554:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18558:	8d bb 20 fd fe ff    	lea    -0x102e0(%ebx),%edi
   1855e:	83 ec 08             	sub    $0x8,%esp
   18561:	57                   	push   %edi
   18562:	6a 00                	push   $0x0
   18564:	e8 87 a2 fe ff       	call   27f0 <strtok@plt>
   18569:	58                   	pop    %eax
   1856a:	5a                   	pop    %edx
   1856b:	57                   	push   %edi
   1856c:	6a 00                	push   $0x0
   1856e:	e8 7d a2 fe ff       	call   27f0 <strtok@plt>
   18573:	83 c4 0c             	add    $0xc,%esp
   18576:	89 c7                	mov    %eax,%edi
   18578:	50                   	push   %eax
   18579:	8d 83 f1 16 ff ff    	lea    -0xe90f(%ebx),%eax
   1857f:	ff 74 24 24          	pushl  0x24(%esp)
   18583:	50                   	push   %eax
   18584:	e8 37 a2 fe ff       	call   27c0 <printf@plt>
   18589:	83 c4 10             	add    $0x10,%esp
   1858c:	85 ff                	test   %edi,%edi
   1858e:	74 a7                	je     18537 <cmd_x+0x37>
   18590:	83 ec 08             	sub    $0x8,%esp
   18593:	8d 44 24 23          	lea    0x23(%esp),%eax
   18597:	50                   	push   %eax
   18598:	57                   	push   %edi
   18599:	e8 f2 0f 00 00       	call   19590 <expr>
   1859e:	83 c4 10             	add    $0x10,%esp
   185a1:	89 c5                	mov    %eax,%ebp
   185a3:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
   185a8:	0f 84 92 00 00 00    	je     18640 <cmd_x+0x140>
   185ae:	8d 83 1c 17 ff ff    	lea    -0xe8e4(%ebx),%eax
   185b4:	8d bb 25 17 ff ff    	lea    -0xe8db(%ebx),%edi
   185ba:	89 44 24 0c          	mov    %eax,0xc(%esp)
   185be:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   185c2:	85 c0                	test   %eax,%eax
   185c4:	7e 83                	jle    18549 <cmd_x+0x49>
   185c6:	8d 76 00             	lea    0x0(%esi),%esi
   185c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   185d0:	83 ec 08             	sub    $0x8,%esp
   185d3:	8d 75 10             	lea    0x10(%ebp),%esi
   185d6:	55                   	push   %ebp
   185d7:	ff 74 24 18          	pushl  0x18(%esp)
   185db:	e8 e0 a1 fe ff       	call   27c0 <printf@plt>
   185e0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   185e4:	83 c4 10             	add    $0x10,%esp
   185e7:	85 c0                	test   %eax,%eax
   185e9:	74 2b                	je     18616 <cmd_x+0x116>
   185eb:	83 ec 04             	sub    $0x4,%esp
   185ee:	6a 04                	push   $0x4
   185f0:	6a 03                	push   $0x3
   185f2:	55                   	push   %ebp
   185f3:	83 c5 04             	add    $0x4,%ebp
   185f6:	e8 b5 1b 00 00       	call   1a1b0 <vaddr_read>
   185fb:	5a                   	pop    %edx
   185fc:	59                   	pop    %ecx
   185fd:	50                   	push   %eax
   185fe:	57                   	push   %edi
   185ff:	e8 bc a1 fe ff       	call   27c0 <printf@plt>
   18604:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   18608:	83 e8 01             	sub    $0x1,%eax
   1860b:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   1860f:	83 c4 10             	add    $0x10,%esp
   18612:	39 f5                	cmp    %esi,%ebp
   18614:	75 d1                	jne    185e7 <cmd_x+0xe7>
   18616:	83 ec 0c             	sub    $0xc,%esp
   18619:	89 f5                	mov    %esi,%ebp
   1861b:	6a 0a                	push   $0xa
   1861d:	e8 0e a2 fe ff       	call   2830 <putchar@plt>
   18622:	83 c4 10             	add    $0x10,%esp
   18625:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   18629:	85 f6                	test   %esi,%esi
   1862b:	7f a3                	jg     185d0 <cmd_x+0xd0>
   1862d:	83 c4 2c             	add    $0x2c,%esp
   18630:	31 c0                	xor    %eax,%eax
   18632:	5b                   	pop    %ebx
   18633:	5e                   	pop    %esi
   18634:	5f                   	pop    %edi
   18635:	5d                   	pop    %ebp
   18636:	c3                   	ret    
   18637:	89 f6                	mov    %esi,%esi
   18639:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   18640:	8d 83 04 17 ff ff    	lea    -0xe8fc(%ebx),%eax
   18646:	83 ec 08             	sub    $0x8,%esp
   18649:	56                   	push   %esi
   1864a:	50                   	push   %eax
   1864b:	e8 70 a1 fe ff       	call   27c0 <printf@plt>
   18650:	83 c4 10             	add    $0x10,%esp
   18653:	e9 f1 fe ff ff       	jmp    18549 <cmd_x+0x49>
   18658:	90                   	nop
   18659:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00018660 <cmd_w>:
   18660:	56                   	push   %esi
   18661:	53                   	push   %ebx
   18662:	e8 59 a6 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18667:	81 c3 99 29 01 00    	add    $0x12999,%ebx
   1866d:	83 ec 04             	sub    $0x4,%esp
   18670:	8b 74 24 10          	mov    0x10(%esp),%esi
   18674:	85 f6                	test   %esi,%esi
   18676:	74 60                	je     186d8 <cmd_w+0x78>
   18678:	8d 83 20 fd fe ff    	lea    -0x102e0(%ebx),%eax
   1867e:	83 ec 08             	sub    $0x8,%esp
   18681:	50                   	push   %eax
   18682:	56                   	push   %esi
   18683:	e8 b8 a1 fe ff       	call   2840 <strspn@plt>
   18688:	01 c6                	add    %eax,%esi
   1868a:	89 34 24             	mov    %esi,(%esp)
   1868d:	e8 ee f7 ff ff       	call   17e80 <set_watchpoint>
   18692:	83 c4 10             	add    $0x10,%esp
   18695:	83 f8 ff             	cmp    $0xffffffff,%eax
   18698:	74 1e                	je     186b8 <cmd_w+0x58>
   1869a:	83 ec 08             	sub    $0x8,%esp
   1869d:	50                   	push   %eax
   1869e:	8d 83 46 17 ff ff    	lea    -0xe8ba(%ebx),%eax
   186a4:	50                   	push   %eax
   186a5:	e8 16 a1 fe ff       	call   27c0 <printf@plt>
   186aa:	83 c4 10             	add    $0x10,%esp
   186ad:	31 c0                	xor    %eax,%eax
   186af:	83 c4 04             	add    $0x4,%esp
   186b2:	5b                   	pop    %ebx
   186b3:	5e                   	pop    %esi
   186b4:	c3                   	ret    
   186b5:	8d 76 00             	lea    0x0(%esi),%esi
   186b8:	8d 83 b2 16 ff ff    	lea    -0xe94e(%ebx),%eax
   186be:	83 ec 08             	sub    $0x8,%esp
   186c1:	56                   	push   %esi
   186c2:	50                   	push   %eax
   186c3:	e8 f8 a0 fe ff       	call   27c0 <printf@plt>
   186c8:	83 c4 10             	add    $0x10,%esp
   186cb:	31 c0                	xor    %eax,%eax
   186cd:	83 c4 04             	add    $0x4,%esp
   186d0:	5b                   	pop    %ebx
   186d1:	5e                   	pop    %esi
   186d2:	c3                   	ret    
   186d3:	90                   	nop
   186d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   186d8:	8d 83 2d 17 ff ff    	lea    -0xe8d3(%ebx),%eax
   186de:	83 ec 0c             	sub    $0xc,%esp
   186e1:	50                   	push   %eax
   186e2:	e8 19 a1 fe ff       	call   2800 <puts@plt>
   186e7:	83 c4 10             	add    $0x10,%esp
   186ea:	31 c0                	xor    %eax,%eax
   186ec:	83 c4 04             	add    $0x4,%esp
   186ef:	5b                   	pop    %ebx
   186f0:	5e                   	pop    %esi
   186f1:	c3                   	ret    
   186f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   186f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018700 <cmd_b>:
   18700:	55                   	push   %ebp
   18701:	57                   	push   %edi
   18702:	56                   	push   %esi
   18703:	53                   	push   %ebx
   18704:	e8 b7 a5 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18709:	81 c3 f7 28 01 00    	add    $0x128f7,%ebx
   1870f:	83 ec 6c             	sub    $0x6c,%esp
   18712:	8b b4 24 80 00 00 00 	mov    0x80(%esp),%esi
   18719:	85 f6                	test   %esi,%esi
   1871b:	74 3b                	je     18758 <cmd_b+0x58>
   1871d:	8d 83 20 fd fe ff    	lea    -0x102e0(%ebx),%eax
   18723:	83 ec 08             	sub    $0x8,%esp
   18726:	50                   	push   %eax
   18727:	56                   	push   %esi
   18728:	e8 13 a1 fe ff       	call   2840 <strspn@plt>
   1872d:	01 c6                	add    %eax,%esi
   1872f:	83 c4 10             	add    $0x10,%esp
   18732:	80 3e 2a             	cmpb   $0x2a,(%esi)
   18735:	0f 84 85 00 00 00    	je     187c0 <cmd_b+0xc0>
   1873b:	83 ec 04             	sub    $0x4,%esp
   1873e:	8d 83 59 17 ff ff    	lea    -0xe8a7(%ebx),%eax
   18744:	8d 7c 24 13          	lea    0x13(%esp),%edi
   18748:	57                   	push   %edi
   18749:	50                   	push   %eax
   1874a:	56                   	push   %esi
   1874b:	e8 f0 9f fe ff       	call   2740 <__isoc99_sscanf@plt>
   18750:	83 c4 10             	add    $0x10,%esp
   18753:	83 f8 01             	cmp    $0x1,%eax
   18756:	74 20                	je     18778 <cmd_b+0x78>
   18758:	8d 83 54 18 ff ff    	lea    -0xe7ac(%ebx),%eax
   1875e:	83 ec 0c             	sub    $0xc,%esp
   18761:	50                   	push   %eax
   18762:	e8 99 a0 fe ff       	call   2800 <puts@plt>
   18767:	83 c4 10             	add    $0x10,%esp
   1876a:	83 c4 6c             	add    $0x6c,%esp
   1876d:	31 c0                	xor    %eax,%eax
   1876f:	5b                   	pop    %ebx
   18770:	5e                   	pop    %esi
   18771:	5f                   	pop    %edi
   18772:	5d                   	pop    %ebp
   18773:	c3                   	ret    
   18774:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18778:	83 ec 08             	sub    $0x8,%esp
   1877b:	8d 44 24 16          	lea    0x16(%esp),%eax
   1877f:	50                   	push   %eax
   18780:	57                   	push   %edi
   18781:	e8 7a f3 ff ff       	call   17b00 <look_up_fun_symtab>
   18786:	83 c4 10             	add    $0x10,%esp
   18789:	89 c5                	mov    %eax,%ebp
   1878b:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%esp)
   18790:	74 66                	je     187f8 <cmd_b+0xf8>
   18792:	83 ec 0c             	sub    $0xc,%esp
   18795:	55                   	push   %ebp
   18796:	e8 85 f6 ff ff       	call   17e20 <set_breakpoint>
   1879b:	83 c4 0c             	add    $0xc,%esp
   1879e:	55                   	push   %ebp
   1879f:	50                   	push   %eax
   187a0:	8d 83 7c 18 ff ff    	lea    -0xe784(%ebx),%eax
   187a6:	50                   	push   %eax
   187a7:	e8 14 a0 fe ff       	call   27c0 <printf@plt>
   187ac:	83 c4 10             	add    $0x10,%esp
   187af:	31 c0                	xor    %eax,%eax
   187b1:	83 c4 6c             	add    $0x6c,%esp
   187b4:	5b                   	pop    %ebx
   187b5:	5e                   	pop    %esi
   187b6:	5f                   	pop    %edi
   187b7:	5d                   	pop    %ebp
   187b8:	c3                   	ret    
   187b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   187c0:	83 ec 08             	sub    $0x8,%esp
   187c3:	83 c6 01             	add    $0x1,%esi
   187c6:	8d 44 24 16          	lea    0x16(%esp),%eax
   187ca:	50                   	push   %eax
   187cb:	56                   	push   %esi
   187cc:	e8 bf 0d 00 00       	call   19590 <expr>
   187d1:	83 c4 10             	add    $0x10,%esp
   187d4:	89 c5                	mov    %eax,%ebp
   187d6:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%esp)
   187db:	75 b5                	jne    18792 <cmd_b+0x92>
   187dd:	8d 83 b2 16 ff ff    	lea    -0xe94e(%ebx),%eax
   187e3:	83 ec 08             	sub    $0x8,%esp
   187e6:	56                   	push   %esi
   187e7:	50                   	push   %eax
   187e8:	e8 d3 9f fe ff       	call   27c0 <printf@plt>
   187ed:	83 c4 10             	add    $0x10,%esp
   187f0:	e9 75 ff ff ff       	jmp    1876a <cmd_b+0x6a>
   187f5:	8d 76 00             	lea    0x0(%esi),%esi
   187f8:	8d 83 69 17 ff ff    	lea    -0xe897(%ebx),%eax
   187fe:	83 ec 08             	sub    $0x8,%esp
   18801:	57                   	push   %edi
   18802:	50                   	push   %eax
   18803:	e8 b8 9f fe ff       	call   27c0 <printf@plt>
   18808:	83 c4 10             	add    $0x10,%esp
   1880b:	e9 5a ff ff ff       	jmp    1876a <cmd_b+0x6a>

00018810 <cmd_help>:
   18810:	55                   	push   %ebp
   18811:	57                   	push   %edi
   18812:	56                   	push   %esi
   18813:	53                   	push   %ebx
   18814:	e8 a7 a4 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18819:	81 c3 e7 27 01 00    	add    $0x127e7,%ebx
   1881f:	83 ec 24             	sub    $0x24,%esp
   18822:	8d 83 20 fd fe ff    	lea    -0x102e0(%ebx),%eax
   18828:	50                   	push   %eax
   18829:	6a 00                	push   $0x0
   1882b:	e8 c0 9f fe ff       	call   27f0 <strtok@plt>
   18830:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   18834:	83 c4 10             	add    $0x10,%esp
   18837:	85 c0                	test   %eax,%eax
   18839:	0f 84 81 00 00 00    	je     188c0 <cmd_help+0xb0>
   1883f:	8d bb cc fc ff ff    	lea    -0x334(%ebx),%edi
   18845:	8d ab 82 17 ff ff    	lea    -0xe87e(%ebx),%ebp
   1884b:	31 f6                	xor    %esi,%esi
   1884d:	eb 06                	jmp    18855 <cmd_help+0x45>
   1884f:	90                   	nop
   18850:	8b 2f                	mov    (%edi),%ebp
   18852:	83 c7 0c             	add    $0xc,%edi
   18855:	83 ec 08             	sub    $0x8,%esp
   18858:	55                   	push   %ebp
   18859:	ff 74 24 18          	pushl  0x18(%esp)
   1885d:	e8 ee 9d fe ff       	call   2650 <strcmp@plt>
   18862:	83 c4 10             	add    $0x10,%esp
   18865:	85 c0                	test   %eax,%eax
   18867:	74 2f                	je     18898 <cmd_help+0x88>
   18869:	83 c6 01             	add    $0x1,%esi
   1886c:	83 fe 0b             	cmp    $0xb,%esi
   1886f:	75 df                	jne    18850 <cmd_help+0x40>
   18871:	8d 83 d8 18 ff ff    	lea    -0xe728(%ebx),%eax
   18877:	83 ec 08             	sub    $0x8,%esp
   1887a:	ff 74 24 14          	pushl  0x14(%esp)
   1887e:	50                   	push   %eax
   1887f:	e8 3c 9f fe ff       	call   27c0 <printf@plt>
   18884:	83 c4 10             	add    $0x10,%esp
   18887:	31 c0                	xor    %eax,%eax
   18889:	83 c4 1c             	add    $0x1c,%esp
   1888c:	5b                   	pop    %ebx
   1888d:	5e                   	pop    %esi
   1888e:	5f                   	pop    %edi
   1888f:	5d                   	pop    %ebp
   18890:	c3                   	ret    
   18891:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   18898:	8d 04 76             	lea    (%esi,%esi,2),%eax
   1889b:	83 ec 04             	sub    $0x4,%esp
   1889e:	ff b4 83 c4 fc ff ff 	pushl  -0x33c(%ebx,%eax,4)
   188a5:	8d 83 87 17 ff ff    	lea    -0xe879(%ebx),%eax
   188ab:	55                   	push   %ebp
   188ac:	50                   	push   %eax
   188ad:	e8 0e 9f fe ff       	call   27c0 <printf@plt>
   188b2:	83 c4 10             	add    $0x10,%esp
   188b5:	31 c0                	xor    %eax,%eax
   188b7:	83 c4 1c             	add    $0x1c,%esp
   188ba:	5b                   	pop    %ebx
   188bb:	5e                   	pop    %esi
   188bc:	5f                   	pop    %edi
   188bd:	5d                   	pop    %ebp
   188be:	c3                   	ret    
   188bf:	90                   	nop
   188c0:	8d ab cc fc ff ff    	lea    -0x334(%ebx),%ebp
   188c6:	8d bb 44 fd ff ff    	lea    -0x2bc(%ebx),%edi
   188cc:	8d 93 82 17 ff ff    	lea    -0xe87e(%ebx),%edx
   188d2:	8d 83 a4 18 ff ff    	lea    -0xe75c(%ebx),%eax
   188d8:	8d b3 87 17 ff ff    	lea    -0xe879(%ebx),%esi
   188de:	eb 09                	jmp    188e9 <cmd_help+0xd9>
   188e0:	8b 45 04             	mov    0x4(%ebp),%eax
   188e3:	8b 55 00             	mov    0x0(%ebp),%edx
   188e6:	83 c5 0c             	add    $0xc,%ebp
   188e9:	83 ec 04             	sub    $0x4,%esp
   188ec:	50                   	push   %eax
   188ed:	52                   	push   %edx
   188ee:	56                   	push   %esi
   188ef:	e8 cc 9e fe ff       	call   27c0 <printf@plt>
   188f4:	83 c4 10             	add    $0x10,%esp
   188f7:	39 fd                	cmp    %edi,%ebp
   188f9:	75 e5                	jne    188e0 <cmd_help+0xd0>
   188fb:	83 c4 1c             	add    $0x1c,%esp
   188fe:	31 c0                	xor    %eax,%eax
   18900:	5b                   	pop    %ebx
   18901:	5e                   	pop    %esi
   18902:	5f                   	pop    %edi
   18903:	5d                   	pop    %ebp
   18904:	c3                   	ret    
   18905:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18909:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018910 <cmd_d>:
   18910:	55                   	push   %ebp
   18911:	57                   	push   %edi
   18912:	56                   	push   %esi
   18913:	53                   	push   %ebx
   18914:	e8 a7 a3 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18919:	81 c3 e7 26 01 00    	add    $0x126e7,%ebx
   1891f:	83 ec 34             	sub    $0x34,%esp
   18922:	8d b3 20 fd fe ff    	lea    -0x102e0(%ebx),%esi
   18928:	8d bb 7b 16 ff ff    	lea    -0xe985(%ebx),%edi
   1892e:	56                   	push   %esi
   1892f:	6a 00                	push   $0x0
   18931:	e8 ba 9e fe ff       	call   27f0 <strtok@plt>
   18936:	83 c4 10             	add    $0x10,%esp
   18939:	89 c5                	mov    %eax,%ebp
   1893b:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   1893f:	85 ed                	test   %ebp,%ebp
   18941:	89 44 24 0c          	mov    %eax,0xc(%esp)
   18945:	74 69                	je     189b0 <cmd_d+0xa0>
   18947:	89 f6                	mov    %esi,%esi
   18949:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   18950:	83 ec 04             	sub    $0x4,%esp
   18953:	ff 74 24 10          	pushl  0x10(%esp)
   18957:	57                   	push   %edi
   18958:	55                   	push   %ebp
   18959:	e8 e2 9d fe ff       	call   2740 <__isoc99_sscanf@plt>
   1895e:	83 c4 10             	add    $0x10,%esp
   18961:	83 f8 01             	cmp    $0x1,%eax
   18964:	75 2a                	jne    18990 <cmd_d+0x80>
   18966:	83 ec 0c             	sub    $0xc,%esp
   18969:	ff 74 24 28          	pushl  0x28(%esp)
   1896d:	e8 8e f5 ff ff       	call   17f00 <delete_breakpoint>
   18972:	58                   	pop    %eax
   18973:	5a                   	pop    %edx
   18974:	56                   	push   %esi
   18975:	6a 00                	push   $0x0
   18977:	e8 74 9e fe ff       	call   27f0 <strtok@plt>
   1897c:	83 c4 10             	add    $0x10,%esp
   1897f:	85 c0                	test   %eax,%eax
   18981:	89 c5                	mov    %eax,%ebp
   18983:	75 cb                	jne    18950 <cmd_d+0x40>
   18985:	83 c4 2c             	add    $0x2c,%esp
   18988:	31 c0                	xor    %eax,%eax
   1898a:	5b                   	pop    %ebx
   1898b:	5e                   	pop    %esi
   1898c:	5f                   	pop    %edi
   1898d:	5d                   	pop    %ebp
   1898e:	c3                   	ret    
   1898f:	90                   	nop
   18990:	8d 83 a9 17 ff ff    	lea    -0xe857(%ebx),%eax
   18996:	83 ec 08             	sub    $0x8,%esp
   18999:	55                   	push   %ebp
   1899a:	50                   	push   %eax
   1899b:	e8 20 9e fe ff       	call   27c0 <printf@plt>
   189a0:	83 c4 10             	add    $0x10,%esp
   189a3:	31 c0                	xor    %eax,%eax
   189a5:	83 c4 2c             	add    $0x2c,%esp
   189a8:	5b                   	pop    %ebx
   189a9:	5e                   	pop    %esi
   189aa:	5f                   	pop    %edi
   189ab:	5d                   	pop    %ebp
   189ac:	c3                   	ret    
   189ad:	8d 76 00             	lea    0x0(%esi),%esi
   189b0:	8d bb f8 18 ff ff    	lea    -0xe708(%ebx),%edi
   189b6:	8d b3 90 17 ff ff    	lea    -0xe870(%ebx),%esi
   189bc:	8d ab 93 17 ff ff    	lea    -0xe86d(%ebx),%ebp
   189c2:	83 ec 0c             	sub    $0xc,%esp
   189c5:	57                   	push   %edi
   189c6:	e8 f5 9d fe ff       	call   27c0 <printf@plt>
   189cb:	59                   	pop    %ecx
   189cc:	58                   	pop    %eax
   189cd:	ff 74 24 14          	pushl  0x14(%esp)
   189d1:	56                   	push   %esi
   189d2:	e8 89 9d fe ff       	call   2760 <__isoc99_scanf@plt>
   189d7:	83 c4 10             	add    $0x10,%esp
   189da:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
   189df:	3c 6e                	cmp    $0x6e,%al
   189e1:	74 a2                	je     18985 <cmd_d+0x75>
   189e3:	3c 79                	cmp    $0x79,%al
   189e5:	75 07                	jne    189ee <cmd_d+0xde>
   189e7:	e8 d4 f5 ff ff       	call   17fc0 <delete_all_breakpoint>
   189ec:	eb 97                	jmp    18985 <cmd_d+0x75>
   189ee:	83 ec 0c             	sub    $0xc,%esp
   189f1:	55                   	push   %ebp
   189f2:	e8 09 9e fe ff       	call   2800 <puts@plt>
   189f7:	83 c4 10             	add    $0x10,%esp
   189fa:	eb c6                	jmp    189c2 <cmd_d+0xb2>
   189fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00018a00 <rl_gets>:
   18a00:	56                   	push   %esi
   18a01:	53                   	push   %ebx
   18a02:	e8 b9 a2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18a07:	81 c3 f9 25 01 00    	add    $0x125f9,%ebx
   18a0d:	83 ec 04             	sub    $0x4,%esp
   18a10:	8b 83 e0 18 05 00    	mov    0x518e0(%ebx),%eax
   18a16:	85 c0                	test   %eax,%eax
   18a18:	74 16                	je     18a30 <rl_gets+0x30>
   18a1a:	83 ec 0c             	sub    $0xc,%esp
   18a1d:	50                   	push   %eax
   18a1e:	e8 5d 9d fe ff       	call   2780 <free@plt>
   18a23:	c7 83 e0 18 05 00 00 	movl   $0x0,0x518e0(%ebx)
   18a2a:	00 00 00 
   18a2d:	83 c4 10             	add    $0x10,%esp
   18a30:	8d b3 c6 17 ff ff    	lea    -0xe83a(%ebx),%esi
   18a36:	8d 76 00             	lea    0x0(%esi),%esi
   18a39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   18a40:	83 ec 0c             	sub    $0xc,%esp
   18a43:	56                   	push   %esi
   18a44:	e8 97 9c fe ff       	call   26e0 <readline@plt>
   18a49:	83 c4 10             	add    $0x10,%esp
   18a4c:	85 c0                	test   %eax,%eax
   18a4e:	89 83 e0 18 05 00    	mov    %eax,0x518e0(%ebx)
   18a54:	74 ea                	je     18a40 <rl_gets+0x40>
   18a56:	80 38 00             	cmpb   $0x0,(%eax)
   18a59:	74 e5                	je     18a40 <rl_gets+0x40>
   18a5b:	83 ec 0c             	sub    $0xc,%esp
   18a5e:	50                   	push   %eax
   18a5f:	e8 2c 9d fe ff       	call   2790 <add_history@plt>
   18a64:	8b 83 e0 18 05 00    	mov    0x518e0(%ebx),%eax
   18a6a:	83 c4 14             	add    $0x14,%esp
   18a6d:	5b                   	pop    %ebx
   18a6e:	5e                   	pop    %esi
   18a6f:	c3                   	ret    

00018a70 <ui_mainloop>:
   18a70:	55                   	push   %ebp
   18a71:	57                   	push   %edi
   18a72:	56                   	push   %esi
   18a73:	53                   	push   %ebx
   18a74:	e8 47 a2 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   18a79:	81 c3 87 25 01 00    	add    $0x12587,%ebx
   18a7f:	83 ec 2c             	sub    $0x2c,%esp
   18a82:	80 7c 24 40 00       	cmpb   $0x0,0x40(%esp)
   18a87:	0f 85 13 01 00 00    	jne    18ba0 <ui_mainloop+0x130>
   18a8d:	8d 83 20 fd fe ff    	lea    -0x102e0(%ebx),%eax
   18a93:	89 44 24 08          	mov    %eax,0x8(%esp)
   18a97:	8d 83 cc fc ff ff    	lea    -0x334(%ebx),%eax
   18a9d:	89 44 24 14          	mov    %eax,0x14(%esp)
   18aa1:	8d 83 82 17 ff ff    	lea    -0xe87e(%ebx),%eax
   18aa7:	89 44 24 10          	mov    %eax,0x10(%esp)
   18aab:	8d 83 1c 19 ff ff    	lea    -0xe6e4(%ebx),%eax
   18ab1:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   18ab5:	8d 83 48 1e 05 00    	lea    0x51e48(%ebx),%eax
   18abb:	89 44 24 18          	mov    %eax,0x18(%esp)
   18abf:	90                   	nop
   18ac0:	e8 3b ff ff ff       	call   18a00 <rl_gets>
   18ac5:	83 ec 0c             	sub    $0xc,%esp
   18ac8:	89 44 24 10          	mov    %eax,0x10(%esp)
   18acc:	89 c7                	mov    %eax,%edi
   18ace:	50                   	push   %eax
   18acf:	e8 3c 9b fe ff       	call   2610 <strlen@plt>
   18ad4:	5e                   	pop    %esi
   18ad5:	5d                   	pop    %ebp
   18ad6:	ff 74 24 10          	pushl  0x10(%esp)
   18ada:	57                   	push   %edi
   18adb:	89 c5                	mov    %eax,%ebp
   18add:	e8 0e 9d fe ff       	call   27f0 <strtok@plt>
   18ae2:	83 c4 10             	add    $0x10,%esp
   18ae5:	85 c0                	test   %eax,%eax
   18ae7:	89 c6                	mov    %eax,%esi
   18ae9:	74 d5                	je     18ac0 <ui_mainloop+0x50>
   18aeb:	83 ec 0c             	sub    $0xc,%esp
   18aee:	50                   	push   %eax
   18aef:	e8 1c 9b fe ff       	call   2610 <strlen@plt>
   18af4:	5a                   	pop    %edx
   18af5:	59                   	pop    %ecx
   18af6:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   18afa:	8d 7c 07 01          	lea    0x1(%edi,%eax,1),%edi
   18afe:	ff 74 24 10          	pushl  0x10(%esp)
   18b02:	57                   	push   %edi
   18b03:	e8 38 9d fe ff       	call   2840 <strspn@plt>
   18b08:	83 c4 10             	add    $0x10,%esp
   18b0b:	8b 54 24 04          	mov    0x4(%esp),%edx
   18b0f:	01 f8                	add    %edi,%eax
   18b11:	89 c1                	mov    %eax,%ecx
   18b13:	8d 04 2a             	lea    (%edx,%ebp,1),%eax
   18b16:	8b 6c 24 14          	mov    0x14(%esp),%ebp
   18b1a:	39 c1                	cmp    %eax,%ecx
   18b1c:	b8 00 00 00 00       	mov    $0x0,%eax
   18b21:	0f 42 c1             	cmovb  %ecx,%eax
   18b24:	31 ff                	xor    %edi,%edi
   18b26:	89 44 24 0c          	mov    %eax,0xc(%esp)
   18b2a:	8b 44 24 10          	mov    0x10(%esp),%eax
   18b2e:	eb 06                	jmp    18b36 <ui_mainloop+0xc6>
   18b30:	8b 45 00             	mov    0x0(%ebp),%eax
   18b33:	83 c5 0c             	add    $0xc,%ebp
   18b36:	83 ec 08             	sub    $0x8,%esp
   18b39:	50                   	push   %eax
   18b3a:	56                   	push   %esi
   18b3b:	e8 10 9b fe ff       	call   2650 <strcmp@plt>
   18b40:	83 c4 10             	add    $0x10,%esp
   18b43:	85 c0                	test   %eax,%eax
   18b45:	74 39                	je     18b80 <ui_mainloop+0x110>
   18b47:	83 c7 01             	add    $0x1,%edi
   18b4a:	83 ff 0b             	cmp    $0xb,%edi
   18b4d:	75 e1                	jne    18b30 <ui_mainloop+0xc0>
   18b4f:	83 ec 08             	sub    $0x8,%esp
   18b52:	ff 74 24 0c          	pushl  0xc(%esp)
   18b56:	ff 74 24 28          	pushl  0x28(%esp)
   18b5a:	e8 61 9c fe ff       	call   27c0 <printf@plt>
   18b5f:	83 c4 10             	add    $0x10,%esp
   18b62:	8b 44 24 18          	mov    0x18(%esp),%eax
   18b66:	8b 00                	mov    (%eax),%eax
   18b68:	85 c0                	test   %eax,%eax
   18b6a:	0f 85 50 ff ff ff    	jne    18ac0 <ui_mainloop+0x50>
   18b70:	83 c4 2c             	add    $0x2c,%esp
   18b73:	5b                   	pop    %ebx
   18b74:	5e                   	pop    %esi
   18b75:	5f                   	pop    %edi
   18b76:	5d                   	pop    %ebp
   18b77:	c3                   	ret    
   18b78:	90                   	nop
   18b79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   18b80:	83 ec 0c             	sub    $0xc,%esp
   18b83:	8d 04 7f             	lea    (%edi,%edi,2),%eax
   18b86:	ff 74 24 18          	pushl  0x18(%esp)
   18b8a:	ff 94 83 c8 fc ff ff 	call   *-0x338(%ebx,%eax,4)
   18b91:	83 c4 10             	add    $0x10,%esp
   18b94:	85 c0                	test   %eax,%eax
   18b96:	79 ca                	jns    18b62 <ui_mainloop+0xf2>
   18b98:	83 c4 2c             	add    $0x2c,%esp
   18b9b:	5b                   	pop    %ebx
   18b9c:	5e                   	pop    %esi
   18b9d:	5f                   	pop    %edi
   18b9e:	5d                   	pop    %ebp
   18b9f:	c3                   	ret    
   18ba0:	83 ec 0c             	sub    $0xc,%esp
   18ba3:	6a ff                	push   $0xffffffff
   18ba5:	e8 c6 c9 fe ff       	call   5570 <exec>
   18baa:	8d 83 48 1e 05 00    	lea    0x51e48(%ebx),%eax
   18bb0:	83 c4 10             	add    $0x10,%esp
   18bb3:	8b 00                	mov    (%eax),%eax
   18bb5:	85 c0                	test   %eax,%eax
   18bb7:	0f 85 d0 fe ff ff    	jne    18a8d <ui_mainloop+0x1d>
   18bbd:	83 c4 2c             	add    $0x2c,%esp
   18bc0:	5b                   	pop    %ebx
   18bc1:	5e                   	pop    %esi
   18bc2:	5f                   	pop    %edi
   18bc3:	5d                   	pop    %ebp
   18bc4:	c3                   	ret    
   18bc5:	66 90                	xchg   %ax,%ax
   18bc7:	66 90                	xchg   %ax,%ax
   18bc9:	66 90                	xchg   %ax,%ax
   18bcb:	66 90                	xchg   %ax,%ax
   18bcd:	66 90                	xchg   %ax,%ax
   18bcf:	90                   	nop

00018bd0 <eval>:
   18bd0:	55                   	push   %ebp
   18bd1:	57                   	push   %edi
   18bd2:	56                   	push   %esi
   18bd3:	53                   	push   %ebx
   18bd4:	e8 b1 f0 ff ff       	call   17c8a <__x86.get_pc_thunk.di>
   18bd9:	81 c7 27 24 01 00    	add    $0x12427,%edi
   18bdf:	83 ec 4c             	sub    $0x4c,%esp
   18be2:	85 c0                	test   %eax,%eax
   18be4:	89 fb                	mov    %edi,%ebx
   18be6:	89 7c 24 04          	mov    %edi,0x4(%esp)
   18bea:	89 44 24 14          	mov    %eax,0x14(%esp)
   18bee:	89 c7                	mov    %eax,%edi
   18bf0:	89 54 24 10          	mov    %edx,0x10(%esp)
   18bf4:	0f 88 bc 08 00 00    	js     194b6 <.L19+0x1d1>
   18bfa:	8d 83 00 23 05 00    	lea    0x52300(%ebx),%eax
   18c00:	8b 00                	mov    (%eax),%eax
   18c02:	39 c7                	cmp    %eax,%edi
   18c04:	0f 8d ac 08 00 00    	jge    194b6 <.L19+0x1d1>
   18c0a:	8b 7c 24 10          	mov    0x10(%esp),%edi
   18c0e:	89 fa                	mov    %edi,%edx
   18c10:	c1 ea 1f             	shr    $0x1f,%edx
   18c13:	39 f8                	cmp    %edi,%eax
   18c15:	0f 9e c0             	setle  %al
   18c18:	08 d0                	or     %dl,%al
   18c1a:	0f 85 73 08 00 00    	jne    19493 <.L19+0x1ae>
   18c20:	8b 54 24 10          	mov    0x10(%esp),%edx
   18c24:	39 54 24 14          	cmp    %edx,0x14(%esp)
   18c28:	0f 8f ab 08 00 00    	jg     194d9 <.L19+0x1f4>
   18c2e:	8b 7c 24 04          	mov    0x4(%esp),%edi
   18c32:	8b 54 24 14          	mov    0x14(%esp),%edx
   18c36:	8d bf 80 1e 05 00    	lea    0x51e80(%edi),%edi
   18c3c:	8d 14 d2             	lea    (%edx,%edx,8),%edx
   18c3f:	8b 1c 97             	mov    (%edi,%edx,4),%ebx
   18c42:	89 7c 24 18          	mov    %edi,0x18(%esp)
   18c46:	83 fb 13             	cmp    $0x13,%ebx
   18c49:	0f 84 77 03 00 00    	je     18fc6 <.L115+0x36>
   18c4f:	8b 6c 24 14          	mov    0x14(%esp),%ebp
   18c53:	89 c6                	mov    %eax,%esi
   18c55:	89 d9                	mov    %ebx,%ecx
   18c57:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
   18c5b:	8d 7d 01             	lea    0x1(%ebp),%edi
   18c5e:	8d 04 ff             	lea    (%edi,%edi,8),%eax
   18c61:	89 7c 24 28          	mov    %edi,0x28(%esp)
   18c65:	8b 7c 24 18          	mov    0x18(%esp),%edi
   18c69:	8d 3c 87             	lea    (%edi,%eax,4),%edi
   18c6c:	8b 44 24 10          	mov    0x10(%esp),%eax
   18c70:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   18c74:	8d 50 01             	lea    0x1(%eax),%edx
   18c77:	89 e8                	mov    %ebp,%eax
   18c79:	31 ed                	xor    %ebp,%ebp
   18c7b:	89 54 24 08          	mov    %edx,0x8(%esp)
   18c7f:	89 fa                	mov    %edi,%edx
   18c81:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   18c85:	8b 7c 24 10          	mov    0x10(%esp),%edi
   18c89:	eb 2a                	jmp    18cb5 <eval+0xe5>
   18c8b:	90                   	nop
   18c8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18c90:	83 f9 14             	cmp    $0x14,%ecx
   18c93:	0f 94 c1             	sete   %cl
   18c96:	0f b6 c9             	movzbl %cl,%ecx
   18c99:	29 cd                	sub    %ecx,%ebp
   18c9b:	85 ed                	test   %ebp,%ebp
   18c9d:	75 0a                	jne    18ca9 <eval+0xd9>
   18c9f:	39 c7                	cmp    %eax,%edi
   18ca1:	b9 00 00 00 00       	mov    $0x0,%ecx
   18ca6:	0f 45 f1             	cmovne %ecx,%esi
   18ca9:	83 c0 01             	add    $0x1,%eax
   18cac:	39 d8                	cmp    %ebx,%eax
   18cae:	74 10                	je     18cc0 <eval+0xf0>
   18cb0:	8b 0a                	mov    (%edx),%ecx
   18cb2:	83 c2 24             	add    $0x24,%edx
   18cb5:	83 f9 13             	cmp    $0x13,%ecx
   18cb8:	75 d6                	jne    18c90 <eval+0xc0>
   18cba:	83 c5 01             	add    $0x1,%ebp
   18cbd:	eb dc                	jmp    18c9b <eval+0xcb>
   18cbf:	90                   	nop
   18cc0:	85 ed                	test   %ebp,%ebp
   18cc2:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   18cc6:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   18cca:	74 24                	je     18cf0 <eval+0x120>
   18ccc:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   18cd0:	8d 83 44 1c ff ff    	lea    -0xe3bc(%ebx),%eax
   18cd6:	50                   	push   %eax
   18cd7:	8d 83 8c 19 ff ff    	lea    -0xe674(%ebx),%eax
   18cdd:	68 bd 00 00 00       	push   $0xbd
   18ce2:	50                   	push   %eax
   18ce3:	8d 83 24 1b ff ff    	lea    -0xe4dc(%ebx),%eax
   18ce9:	50                   	push   %eax
   18cea:	e8 a1 9b fe ff       	call   2890 <__assert_fail@plt>
   18cef:	90                   	nop
   18cf0:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   18cf4:	39 4c 24 14          	cmp    %ecx,0x14(%esp)
   18cf8:	0f 84 af 02 00 00    	je     18fad <.L115+0x1d>
   18cfe:	89 f2                	mov    %esi,%edx
   18d00:	80 fa 01             	cmp    $0x1,%dl
   18d03:	0f 84 d0 02 00 00    	je     18fd9 <.L115+0x49>
   18d09:	8b 74 24 14          	mov    0x14(%esp),%esi
   18d0d:	31 c9                	xor    %ecx,%ecx
   18d0f:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
   18d13:	89 f2                	mov    %esi,%edx
   18d15:	89 74 24 0c          	mov    %esi,0xc(%esp)
   18d19:	be ff ff 00 00       	mov    $0xffff,%esi
   18d1e:	89 74 24 08          	mov    %esi,0x8(%esp)
   18d22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18d28:	83 fb 14             	cmp    $0x14,%ebx
   18d2b:	77 1b                	ja     18d48 <.L43>
   18d2d:	8b 74 24 04          	mov    0x4(%esp),%esi
   18d31:	03 b4 9e a4 1b ff ff 	add    -0xe45c(%esi,%ebx,4),%esi
   18d38:	ff e6                	jmp    *%esi
   18d3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00018d40 <.L52>:
   18d40:	83 e9 01             	sub    $0x1,%ecx
   18d43:	90                   	nop
   18d44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00018d48 <.L43>:
   18d48:	83 c2 01             	add    $0x1,%edx
   18d4b:	39 c2                	cmp    %eax,%edx
   18d4d:	74 21                	je     18d70 <.L51+0x10>
   18d4f:	8b 1f                	mov    (%edi),%ebx
   18d51:	83 c7 24             	add    $0x24,%edi
   18d54:	eb d2                	jmp    18d28 <eval+0x158>
   18d56:	8d 76 00             	lea    0x0(%esi),%esi
   18d59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018d60 <.L51>:
   18d60:	83 c2 01             	add    $0x1,%edx
   18d63:	83 c1 01             	add    $0x1,%ecx
   18d66:	39 c2                	cmp    %eax,%edx
   18d68:	75 e5                	jne    18d4f <.L43+0x7>
   18d6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18d70:	8b 44 24 0c          	mov    0xc(%esp),%eax
   18d74:	8b 7c 24 14          	mov    0x14(%esp),%edi
   18d78:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
   18d7c:	39 f8                	cmp    %edi,%eax
   18d7e:	0f 82 ec 06 00 00    	jb     19470 <.L19+0x18b>
   18d84:	8b 7c 24 10          	mov    0x10(%esp),%edi
   18d88:	39 f8                	cmp    %edi,%eax
   18d8a:	0f 87 e0 06 00 00    	ja     19470 <.L19+0x18b>
   18d90:	8b 44 24 0c          	mov    0xc(%esp),%eax
   18d94:	8b 7c 24 18          	mov    0x18(%esp),%edi
   18d98:	8d 04 c0             	lea    (%eax,%eax,8),%eax
   18d9b:	8d 04 87             	lea    (%edi,%eax,4),%eax
   18d9e:	83 38 0d             	cmpl   $0xd,(%eax)
   18da1:	0f 87 e9 01 00 00    	ja     18f90 <.L115>
   18da7:	8b 7c 24 04          	mov    0x4(%esp),%edi
   18dab:	8b 00                	mov    (%eax),%eax
   18dad:	8b 94 87 f8 1b ff ff 	mov    -0xe408(%edi,%eax,4),%edx
   18db4:	01 fa                	add    %edi,%edx
   18db6:	ff e2                	jmp    *%edx
   18db8:	90                   	nop
   18db9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00018dc0 <.L47>:
   18dc0:	85 c9                	test   %ecx,%ecx
   18dc2:	75 84                	jne    18d48 <.L43>
   18dc4:	8b 74 24 08          	mov    0x8(%esp),%esi
   18dc8:	bb 02 00 00 00       	mov    $0x2,%ebx
   18dcd:	83 fe 02             	cmp    $0x2,%esi
   18dd0:	0f 46 de             	cmovbe %esi,%ebx
   18dd3:	83 fb 02             	cmp    $0x2,%ebx
   18dd6:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   18dda:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   18dde:	0f 44 da             	cmove  %edx,%ebx
   18de1:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   18de5:	e9 5e ff ff ff       	jmp    18d48 <.L43>
   18dea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00018df0 <.L44>:
   18df0:	85 c9                	test   %ecx,%ecx
   18df2:	0f 85 50 ff ff ff    	jne    18d48 <.L43>
   18df8:	8b 74 24 08          	mov    0x8(%esp),%esi
   18dfc:	bb 03 00 00 00       	mov    $0x3,%ebx
   18e01:	83 fe 03             	cmp    $0x3,%esi
   18e04:	0f 46 de             	cmovbe %esi,%ebx
   18e07:	8b 74 24 0c          	mov    0xc(%esp),%esi
   18e0b:	83 fb 03             	cmp    $0x3,%ebx
   18e0e:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   18e12:	0f 44 f2             	cmove  %edx,%esi
   18e15:	89 74 24 0c          	mov    %esi,0xc(%esp)
   18e19:	e9 2a ff ff ff       	jmp    18d48 <.L43>
   18e1e:	66 90                	xchg   %ax,%ax

00018e20 <.L46>:
   18e20:	85 c9                	test   %ecx,%ecx
   18e22:	0f 85 20 ff ff ff    	jne    18d48 <.L43>
   18e28:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   18e2c:	be 04 00 00 00       	mov    $0x4,%esi
   18e31:	83 fb 04             	cmp    $0x4,%ebx
   18e34:	0f 46 f3             	cmovbe %ebx,%esi
   18e37:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   18e3b:	83 fe 04             	cmp    $0x4,%esi
   18e3e:	89 74 24 08          	mov    %esi,0x8(%esp)
   18e42:	0f 44 da             	cmove  %edx,%ebx
   18e45:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   18e49:	e9 fa fe ff ff       	jmp    18d48 <.L43>
   18e4e:	66 90                	xchg   %ax,%ax

00018e50 <.L49>:
   18e50:	85 c9                	test   %ecx,%ecx
   18e52:	0f 85 f0 fe ff ff    	jne    18d48 <.L43>
   18e58:	89 54 24 0c          	mov    %edx,0xc(%esp)
   18e5c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   18e63:	00 
   18e64:	e9 df fe ff ff       	jmp    18d48 <.L43>
   18e69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00018e70 <.L48>:
   18e70:	85 c9                	test   %ecx,%ecx
   18e72:	0f 85 d0 fe ff ff    	jne    18d48 <.L43>
   18e78:	8b 74 24 08          	mov    0x8(%esp),%esi
   18e7c:	31 db                	xor    %ebx,%ebx
   18e7e:	85 f6                	test   %esi,%esi
   18e80:	0f 95 c3             	setne  %bl
   18e83:	0f 84 17 01 00 00    	je     18fa0 <.L115+0x10>
   18e89:	89 54 24 0c          	mov    %edx,0xc(%esp)
   18e8d:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   18e91:	e9 b2 fe ff ff       	jmp    18d48 <.L43>
   18e96:	8d 76 00             	lea    0x0(%esi),%esi
   18e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018ea0 <.L50>:
   18ea0:	85 c9                	test   %ecx,%ecx
   18ea2:	0f 85 a0 fe ff ff    	jne    18d48 <.L43>
   18ea8:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   18eac:	be 05 00 00 00       	mov    $0x5,%esi
   18eb1:	83 fb 05             	cmp    $0x5,%ebx
   18eb4:	0f 46 f3             	cmovbe %ebx,%esi
   18eb7:	89 74 24 08          	mov    %esi,0x8(%esp)
   18ebb:	e9 88 fe ff ff       	jmp    18d48 <.L43>

00018ec0 <.L16>:
   18ec0:	8b 44 24 14          	mov    0x14(%esp),%eax
   18ec4:	8b 7c 24 18          	mov    0x18(%esp),%edi
   18ec8:	b9 05 00 00 00       	mov    $0x5,%ecx
   18ecd:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   18ed1:	8d 04 c0             	lea    (%eax,%eax,8),%eax
   18ed4:	8d 44 87 04          	lea    0x4(%edi,%eax,4),%eax
   18ed8:	8d bb cb 19 ff ff    	lea    -0xe635(%ebx),%edi
   18ede:	89 c6                	mov    %eax,%esi
   18ee0:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   18ee2:	0f 84 34 04 00 00    	je     1931c <.L19+0x37>
   18ee8:	8d bb d0 19 ff ff    	lea    -0xe630(%ebx),%edi
   18eee:	b9 05 00 00 00       	mov    $0x5,%ecx
   18ef3:	89 c6                	mov    %eax,%esi
   18ef5:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   18ef7:	0f 84 1f 04 00 00    	je     1931c <.L19+0x37>
   18efd:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   18f01:	b9 05 00 00 00       	mov    $0x5,%ecx
   18f06:	89 c6                	mov    %eax,%esi
   18f08:	8d bb d5 19 ff ff    	lea    -0xe62b(%ebx),%edi
   18f0e:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   18f10:	0f 84 17 04 00 00    	je     1932d <.L19+0x48>
   18f16:	8d bb da 19 ff ff    	lea    -0xe626(%ebx),%edi
   18f1c:	b9 05 00 00 00       	mov    $0x5,%ecx
   18f21:	89 c6                	mov    %eax,%esi
   18f23:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   18f25:	0f 84 02 04 00 00    	je     1932d <.L19+0x48>
   18f2b:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   18f2f:	b9 05 00 00 00       	mov    $0x5,%ecx
   18f34:	89 c6                	mov    %eax,%esi
   18f36:	8d bb df 19 ff ff    	lea    -0xe621(%ebx),%edi
   18f3c:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   18f3e:	0f 84 fb 03 00 00    	je     1933f <.L19+0x5a>
   18f44:	8d bb e4 19 ff ff    	lea    -0xe61c(%ebx),%edi
   18f4a:	b9 05 00 00 00       	mov    $0x5,%ecx
   18f4f:	89 c6                	mov    %eax,%esi
   18f51:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   18f53:	0f 84 e6 03 00 00    	je     1933f <.L19+0x5a>
   18f59:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   18f5d:	b9 05 00 00 00       	mov    $0x5,%ecx
   18f62:	89 c6                	mov    %eax,%esi
   18f64:	8d bb e9 19 ff ff    	lea    -0xe617(%ebx),%edi
   18f6a:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   18f6c:	74 15                	je     18f83 <.L16+0xc3>
   18f6e:	8d bb ee 19 ff ff    	lea    -0xe612(%ebx),%edi
   18f74:	b9 05 00 00 00       	mov    $0x5,%ecx
   18f79:	89 c6                	mov    %eax,%esi
   18f7b:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   18f7d:	0f 85 ce 03 00 00    	jne    19351 <.L19+0x6c>
   18f83:	8b 44 24 04          	mov    0x4(%esp),%eax
   18f87:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   18f8d:	8b 68 0c             	mov    0xc(%eax),%ebp

00018f90 <.L115>:
   18f90:	83 c4 4c             	add    $0x4c,%esp
   18f93:	89 e8                	mov    %ebp,%eax
   18f95:	5b                   	pop    %ebx
   18f96:	5e                   	pop    %esi
   18f97:	5f                   	pop    %edi
   18f98:	5d                   	pop    %ebp
   18f99:	c3                   	ret    
   18f9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18fa0:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   18fa4:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   18fa8:	e9 9b fd ff ff       	jmp    18d48 <.L43>
   18fad:	83 eb 0e             	sub    $0xe,%ebx
   18fb0:	83 fb 04             	cmp    $0x4,%ebx
   18fb3:	0f 87 40 03 00 00    	ja     192f9 <.L19+0x14>
   18fb9:	8b 44 24 04          	mov    0x4(%esp),%eax
   18fbd:	03 84 98 30 1c ff ff 	add    -0xe3d0(%eax,%ebx,4),%eax
   18fc4:	ff e0                	jmp    *%eax
   18fc6:	8b 44 24 10          	mov    0x10(%esp),%eax
   18fca:	8d 04 c0             	lea    (%eax,%eax,8),%eax
   18fcd:	83 3c 87 14          	cmpl   $0x14,(%edi,%eax,4)
   18fd1:	0f 94 c0             	sete   %al
   18fd4:	e9 76 fc ff ff       	jmp    18c4f <eval+0x7f>
   18fd9:	8b 54 24 10          	mov    0x10(%esp),%edx
   18fdd:	8b 44 24 28          	mov    0x28(%esp),%eax
   18fe1:	83 ea 01             	sub    $0x1,%edx
   18fe4:	e8 e7 fb ff ff       	call   18bd0 <eval>
   18fe9:	89 c5                	mov    %eax,%ebp
   18feb:	eb a3                	jmp    18f90 <.L115>

00018fed <.L20>:
   18fed:	83 ec 04             	sub    $0x4,%esp
   18ff0:	8d 44 24 3c          	lea    0x3c(%esp),%eax
   18ff4:	50                   	push   %eax
   18ff5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   18ff9:	8d 83 c7 19 ff ff    	lea    -0xe639(%ebx),%eax
   18fff:	50                   	push   %eax
   19000:	8b 44 24 20          	mov    0x20(%esp),%eax
   19004:	8b 7c 24 24          	mov    0x24(%esp),%edi
   19008:	8d 04 c0             	lea    (%eax,%eax,8),%eax
   1900b:	8d 44 87 04          	lea    0x4(%edi,%eax,4),%eax
   1900f:	50                   	push   %eax
   19010:	e8 2b 97 fe ff       	call   2740 <__isoc99_sscanf@plt>
   19015:	d9 7c 24 3e          	fnstcw 0x3e(%esp)
   19019:	0f b7 44 24 3e       	movzwl 0x3e(%esp),%eax
   1901e:	dd 44 24 48          	fldl   0x48(%esp)
   19022:	b4 0c                	mov    $0xc,%ah
   19024:	66 89 44 24 3c       	mov    %ax,0x3c(%esp)
   19029:	d9 6c 24 3c          	fldcw  0x3c(%esp)
   1902d:	df 7c 24 30          	fistpll 0x30(%esp)
   19031:	d9 6c 24 3e          	fldcw  0x3e(%esp)
   19035:	8b 44 24 30          	mov    0x30(%esp),%eax
   19039:	83 c4 10             	add    $0x10,%esp
   1903c:	89 c5                	mov    %eax,%ebp
   1903e:	e9 4d ff ff ff       	jmp    18f90 <.L115>

00019043 <.L69>:
   19043:	8b 44 24 0c          	mov    0xc(%esp),%eax
   19047:	8b 54 24 10          	mov    0x10(%esp),%edx
   1904b:	83 c0 01             	add    $0x1,%eax
   1904e:	e8 7d fb ff ff       	call   18bd0 <eval>
   19053:	83 ec 04             	sub    $0x4,%esp
   19056:	6a 04                	push   $0x4
   19058:	6a 03                	push   $0x3
   1905a:	50                   	push   %eax
   1905b:	8b 5c 24 14          	mov    0x14(%esp),%ebx
   1905f:	e8 4c 11 00 00       	call   1a1b0 <vaddr_read>
   19064:	83 c4 10             	add    $0x10,%esp
   19067:	89 c5                	mov    %eax,%ebp
   19069:	e9 22 ff ff ff       	jmp    18f90 <.L115>

0001906e <.L68>:
   1906e:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   19072:	8b 44 24 14          	mov    0x14(%esp),%eax
   19076:	8d 57 ff             	lea    -0x1(%edi),%edx
   19079:	e8 52 fb ff ff       	call   18bd0 <eval>
   1907e:	8b 54 24 10          	mov    0x10(%esp),%edx
   19082:	89 c5                	mov    %eax,%ebp
   19084:	89 f8                	mov    %edi,%eax
   19086:	83 c0 01             	add    $0x1,%eax
   19089:	e8 42 fb ff ff       	call   18bd0 <eval>
   1908e:	31 d2                	xor    %edx,%edx
   19090:	89 c7                	mov    %eax,%edi
   19092:	89 e8                	mov    %ebp,%eax
   19094:	f7 f7                	div    %edi
   19096:	89 d5                	mov    %edx,%ebp
   19098:	e9 f3 fe ff ff       	jmp    18f90 <.L115>

0001909d <.L67>:
   1909d:	8b 44 24 0c          	mov    0xc(%esp),%eax
   190a1:	8b 54 24 10          	mov    0x10(%esp),%edx
   190a5:	83 c0 01             	add    $0x1,%eax
   190a8:	e8 23 fb ff ff       	call   18bd0 <eval>
   190ad:	f7 d8                	neg    %eax
   190af:	89 c5                	mov    %eax,%ebp
   190b1:	e9 da fe ff ff       	jmp    18f90 <.L115>

000190b6 <.L66>:
   190b6:	8b 44 24 0c          	mov    0xc(%esp),%eax
   190ba:	8b 54 24 10          	mov    0x10(%esp),%edx
   190be:	83 c0 01             	add    $0x1,%eax
   190c1:	e8 0a fb ff ff       	call   18bd0 <eval>
   190c6:	89 c5                	mov    %eax,%ebp
   190c8:	e9 c3 fe ff ff       	jmp    18f90 <.L115>

000190cd <.L65>:
   190cd:	8b 44 24 0c          	mov    0xc(%esp),%eax
   190d1:	8b 54 24 10          	mov    0x10(%esp),%edx
   190d5:	83 c0 01             	add    $0x1,%eax
   190d8:	e8 f3 fa ff ff       	call   18bd0 <eval>
   190dd:	85 c0                	test   %eax,%eax
   190df:	0f 94 c0             	sete   %al
   190e2:	0f b6 c0             	movzbl %al,%eax
   190e5:	89 c5                	mov    %eax,%ebp
   190e7:	e9 a4 fe ff ff       	jmp    18f90 <.L115>

000190ec <.L64>:
   190ec:	8b 44 24 0c          	mov    0xc(%esp),%eax
   190f0:	bd 01 00 00 00       	mov    $0x1,%ebp
   190f5:	8d 50 ff             	lea    -0x1(%eax),%edx
   190f8:	8b 44 24 14          	mov    0x14(%esp),%eax
   190fc:	e8 cf fa ff ff       	call   18bd0 <eval>
   19101:	85 c0                	test   %eax,%eax
   19103:	0f 85 87 fe ff ff    	jne    18f90 <.L115>
   19109:	8b 44 24 0c          	mov    0xc(%esp),%eax
   1910d:	8b 54 24 10          	mov    0x10(%esp),%edx
   19111:	83 c0 01             	add    $0x1,%eax
   19114:	e8 b7 fa ff ff       	call   18bd0 <eval>
   19119:	85 c0                	test   %eax,%eax
   1911b:	0f 95 c0             	setne  %al
   1911e:	0f b6 c0             	movzbl %al,%eax
   19121:	89 c5                	mov    %eax,%ebp
   19123:	e9 68 fe ff ff       	jmp    18f90 <.L115>

00019128 <.L63>:
   19128:	8b 44 24 0c          	mov    0xc(%esp),%eax
   1912c:	8d 50 ff             	lea    -0x1(%eax),%edx
   1912f:	8b 44 24 14          	mov    0x14(%esp),%eax
   19133:	e8 98 fa ff ff       	call   18bd0 <eval>
   19138:	85 c0                	test   %eax,%eax
   1913a:	89 c5                	mov    %eax,%ebp
   1913c:	0f 84 4e fe ff ff    	je     18f90 <.L115>
   19142:	eb c5                	jmp    19109 <.L64+0x1d>

00019144 <.L62>:
   19144:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   19148:	8b 44 24 14          	mov    0x14(%esp),%eax
   1914c:	8d 57 ff             	lea    -0x1(%edi),%edx
   1914f:	e8 7c fa ff ff       	call   18bd0 <eval>
   19154:	8b 54 24 10          	mov    0x10(%esp),%edx
   19158:	89 c3                	mov    %eax,%ebx
   1915a:	89 f8                	mov    %edi,%eax
   1915c:	83 c0 01             	add    $0x1,%eax
   1915f:	e8 6c fa ff ff       	call   18bd0 <eval>
   19164:	39 c3                	cmp    %eax,%ebx
   19166:	0f 95 c0             	setne  %al
   19169:	0f b6 c0             	movzbl %al,%eax
   1916c:	89 c5                	mov    %eax,%ebp
   1916e:	e9 1d fe ff ff       	jmp    18f90 <.L115>

00019173 <.L61>:
   19173:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   19177:	8b 44 24 14          	mov    0x14(%esp),%eax
   1917b:	8d 57 ff             	lea    -0x1(%edi),%edx
   1917e:	e8 4d fa ff ff       	call   18bd0 <eval>
   19183:	8b 54 24 10          	mov    0x10(%esp),%edx
   19187:	89 c3                	mov    %eax,%ebx
   19189:	89 f8                	mov    %edi,%eax
   1918b:	83 c0 01             	add    $0x1,%eax
   1918e:	e8 3d fa ff ff       	call   18bd0 <eval>
   19193:	39 c3                	cmp    %eax,%ebx
   19195:	0f 94 c0             	sete   %al
   19198:	0f b6 c0             	movzbl %al,%eax
   1919b:	89 c5                	mov    %eax,%ebp
   1919d:	e9 ee fd ff ff       	jmp    18f90 <.L115>

000191a2 <.L60>:
   191a2:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   191a6:	8b 44 24 14          	mov    0x14(%esp),%eax
   191aa:	8d 57 ff             	lea    -0x1(%edi),%edx
   191ad:	e8 1e fa ff ff       	call   18bd0 <eval>
   191b2:	8b 54 24 10          	mov    0x10(%esp),%edx
   191b6:	89 c5                	mov    %eax,%ebp
   191b8:	89 f8                	mov    %edi,%eax
   191ba:	83 c0 01             	add    $0x1,%eax
   191bd:	e8 0e fa ff ff       	call   18bd0 <eval>
   191c2:	31 d2                	xor    %edx,%edx
   191c4:	89 c1                	mov    %eax,%ecx
   191c6:	89 e8                	mov    %ebp,%eax
   191c8:	f7 f1                	div    %ecx
   191ca:	89 c5                	mov    %eax,%ebp
   191cc:	e9 bf fd ff ff       	jmp    18f90 <.L115>

000191d1 <.L59>:
   191d1:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   191d5:	8b 44 24 14          	mov    0x14(%esp),%eax
   191d9:	8d 57 ff             	lea    -0x1(%edi),%edx
   191dc:	e8 ef f9 ff ff       	call   18bd0 <eval>
   191e1:	8b 54 24 10          	mov    0x10(%esp),%edx
   191e5:	89 c5                	mov    %eax,%ebp
   191e7:	89 f8                	mov    %edi,%eax
   191e9:	83 c0 01             	add    $0x1,%eax
   191ec:	e8 df f9 ff ff       	call   18bd0 <eval>
   191f1:	0f af e8             	imul   %eax,%ebp
   191f4:	e9 97 fd ff ff       	jmp    18f90 <.L115>

000191f9 <.L58>:
   191f9:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   191fd:	8b 44 24 14          	mov    0x14(%esp),%eax
   19201:	8d 57 ff             	lea    -0x1(%edi),%edx
   19204:	e8 c7 f9 ff ff       	call   18bd0 <eval>
   19209:	8b 54 24 10          	mov    0x10(%esp),%edx
   1920d:	89 c5                	mov    %eax,%ebp
   1920f:	89 f8                	mov    %edi,%eax
   19211:	83 c0 01             	add    $0x1,%eax
   19214:	e8 b7 f9 ff ff       	call   18bd0 <eval>
   19219:	29 c5                	sub    %eax,%ebp
   1921b:	e9 70 fd ff ff       	jmp    18f90 <.L115>

00019220 <.L56>:
   19220:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   19224:	8b 44 24 14          	mov    0x14(%esp),%eax
   19228:	8d 57 ff             	lea    -0x1(%edi),%edx
   1922b:	e8 a0 f9 ff ff       	call   18bd0 <eval>
   19230:	8b 54 24 10          	mov    0x10(%esp),%edx
   19234:	89 c5                	mov    %eax,%ebp
   19236:	89 f8                	mov    %edi,%eax
   19238:	83 c0 01             	add    $0x1,%eax
   1923b:	e8 90 f9 ff ff       	call   18bd0 <eval>
   19240:	01 c5                	add    %eax,%ebp
   19242:	e9 49 fd ff ff       	jmp    18f90 <.L115>

00019247 <.L21>:
   19247:	8b 44 24 14          	mov    0x14(%esp),%eax
   1924b:	8b 7c 24 18          	mov    0x18(%esp),%edi
   1924f:	8d 04 c0             	lea    (%eax,%eax,8),%eax
   19252:	8d 74 87 04          	lea    0x4(%edi,%eax,4),%esi
   19256:	83 ec 08             	sub    $0x8,%esp
   19259:	8d 44 24 3f          	lea    0x3f(%esp),%eax
   1925d:	50                   	push   %eax
   1925e:	56                   	push   %esi
   1925f:	8b 5c 24 14          	mov    0x14(%esp),%ebx
   19263:	e8 28 e9 ff ff       	call   17b90 <look_up_symtab>
   19268:	89 44 24 48          	mov    %eax,0x48(%esp)
   1926c:	83 c4 10             	add    $0x10,%esp
   1926f:	89 c5                	mov    %eax,%ebp
   19271:	80 7c 24 37 00       	cmpb   $0x0,0x37(%esp)
   19276:	0f 85 14 fd ff ff    	jne    18f90 <.L115>
   1927c:	83 ec 08             	sub    $0x8,%esp
   1927f:	56                   	push   %esi
   19280:	8b 7c 24 10          	mov    0x10(%esp),%edi
   19284:	8d 87 25 1a ff ff    	lea    -0xe5db(%edi),%eax
   1928a:	89 fb                	mov    %edi,%ebx
   1928c:	50                   	push   %eax
   1928d:	e8 2e 95 fe ff       	call   27c0 <printf@plt>
   19292:	8d 87 44 1c ff ff    	lea    -0xe3bc(%edi),%eax
   19298:	50                   	push   %eax
   19299:	68 e5 00 00 00       	push   $0xe5
   1929e:	8d 83 8c 19 ff ff    	lea    -0xe674(%ebx),%eax
   192a4:	50                   	push   %eax
   192a5:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
   192ab:	50                   	push   %eax
   192ac:	e8 df 95 fe ff       	call   2890 <__assert_fail@plt>

000192b1 <.L18>:
   192b1:	83 ec 04             	sub    $0x4,%esp
   192b4:	8d 44 24 3c          	lea    0x3c(%esp),%eax
   192b8:	50                   	push   %eax
   192b9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   192bd:	8d 83 7b 16 ff ff    	lea    -0xe985(%ebx),%eax
   192c3:	50                   	push   %eax
   192c4:	8b 44 24 20          	mov    0x20(%esp),%eax
   192c8:	8b 7c 24 24          	mov    0x24(%esp),%edi
   192cc:	8d 04 c0             	lea    (%eax,%eax,8),%eax
   192cf:	8d 44 87 04          	lea    0x4(%edi,%eax,4),%eax
   192d3:	50                   	push   %eax
   192d4:	e8 67 94 fe ff       	call   2740 <__isoc99_sscanf@plt>
   192d9:	8b 6c 24 48          	mov    0x48(%esp),%ebp
   192dd:	83 c4 10             	add    $0x10,%esp
   192e0:	e9 ab fc ff ff       	jmp    18f90 <.L115>

000192e5 <.L19>:
   192e5:	83 ec 04             	sub    $0x4,%esp
   192e8:	8d 44 24 3c          	lea    0x3c(%esp),%eax
   192ec:	50                   	push   %eax
   192ed:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   192f1:	8d 83 4e fe fe ff    	lea    -0x101b2(%ebx),%eax
   192f7:	eb ca                	jmp    192c3 <.L18+0x12>
   192f9:	83 ec 0c             	sub    $0xc,%esp
   192fc:	8b 7c 24 10          	mov    0x10(%esp),%edi
   19300:	8d 87 33 1a ff ff    	lea    -0xe5cd(%edi),%eax
   19306:	89 fb                	mov    %edi,%ebx
   19308:	50                   	push   %eax
   19309:	e8 f2 94 fe ff       	call   2800 <puts@plt>
   1930e:	8d 87 44 1c ff ff    	lea    -0xe3bc(%edi),%eax
   19314:	50                   	push   %eax
   19315:	68 e9 00 00 00       	push   $0xe9
   1931a:	eb 82                	jmp    1929e <.L21+0x57>
   1931c:	8b 44 24 04          	mov    0x4(%esp),%eax
   19320:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   19326:	8b 28                	mov    (%eax),%ebp
   19328:	e9 63 fc ff ff       	jmp    18f90 <.L115>
   1932d:	8b 44 24 04          	mov    0x4(%esp),%eax
   19331:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   19337:	8b 68 04             	mov    0x4(%eax),%ebp
   1933a:	e9 51 fc ff ff       	jmp    18f90 <.L115>
   1933f:	8b 44 24 04          	mov    0x4(%esp),%eax
   19343:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   19349:	8b 68 08             	mov    0x8(%eax),%ebp
   1934c:	e9 3f fc ff ff       	jmp    18f90 <.L115>
   19351:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   19355:	b9 05 00 00 00       	mov    $0x5,%ecx
   1935a:	89 c6                	mov    %eax,%esi
   1935c:	8d bb f3 19 ff ff    	lea    -0xe60d(%ebx),%edi
   19362:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   19364:	74 11                	je     19377 <.L19+0x92>
   19366:	8d bb f8 19 ff ff    	lea    -0xe608(%ebx),%edi
   1936c:	b9 05 00 00 00       	mov    $0x5,%ecx
   19371:	89 c6                	mov    %eax,%esi
   19373:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   19375:	75 12                	jne    19389 <.L19+0xa4>
   19377:	8b 44 24 04          	mov    0x4(%esp),%eax
   1937b:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   19381:	8b 68 18             	mov    0x18(%eax),%ebp
   19384:	e9 07 fc ff ff       	jmp    18f90 <.L115>
   19389:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   1938d:	b9 05 00 00 00       	mov    $0x5,%ecx
   19392:	89 c6                	mov    %eax,%esi
   19394:	8d bb fd 19 ff ff    	lea    -0xe603(%ebx),%edi
   1939a:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   1939c:	74 11                	je     193af <.L19+0xca>
   1939e:	8d bb 02 1a ff ff    	lea    -0xe5fe(%ebx),%edi
   193a4:	b9 05 00 00 00       	mov    $0x5,%ecx
   193a9:	89 c6                	mov    %eax,%esi
   193ab:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   193ad:	75 12                	jne    193c1 <.L19+0xdc>
   193af:	8b 44 24 04          	mov    0x4(%esp),%eax
   193b3:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   193b9:	8b 68 1c             	mov    0x1c(%eax),%ebp
   193bc:	e9 cf fb ff ff       	jmp    18f90 <.L115>
   193c1:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   193c5:	b9 05 00 00 00       	mov    $0x5,%ecx
   193ca:	89 c6                	mov    %eax,%esi
   193cc:	8d bb 07 1a ff ff    	lea    -0xe5f9(%ebx),%edi
   193d2:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   193d4:	74 11                	je     193e7 <.L19+0x102>
   193d6:	8d bb 0c 1a ff ff    	lea    -0xe5f4(%ebx),%edi
   193dc:	b9 05 00 00 00       	mov    $0x5,%ecx
   193e1:	89 c6                	mov    %eax,%esi
   193e3:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   193e5:	75 12                	jne    193f9 <.L19+0x114>
   193e7:	8b 44 24 04          	mov    0x4(%esp),%eax
   193eb:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   193f1:	8b 68 14             	mov    0x14(%eax),%ebp
   193f4:	e9 97 fb ff ff       	jmp    18f90 <.L115>
   193f9:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   193fd:	b9 05 00 00 00       	mov    $0x5,%ecx
   19402:	89 c6                	mov    %eax,%esi
   19404:	8d bb 11 1a ff ff    	lea    -0xe5ef(%ebx),%edi
   1940a:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   1940c:	74 11                	je     1941f <.L19+0x13a>
   1940e:	8d bb 16 1a ff ff    	lea    -0xe5ea(%ebx),%edi
   19414:	b9 05 00 00 00       	mov    $0x5,%ecx
   19419:	89 c6                	mov    %eax,%esi
   1941b:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   1941d:	75 12                	jne    19431 <.L19+0x14c>
   1941f:	8b 44 24 04          	mov    0x4(%esp),%eax
   19423:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   19429:	8b 68 10             	mov    0x10(%eax),%ebp
   1942c:	e9 5f fb ff ff       	jmp    18f90 <.L115>
   19431:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   19435:	b9 05 00 00 00       	mov    $0x5,%ecx
   1943a:	89 c6                	mov    %eax,%esi
   1943c:	8d bb 1b 1a ff ff    	lea    -0xe5e5(%ebx),%edi
   19442:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   19444:	74 11                	je     19457 <.L19+0x172>
   19446:	8d bb 20 1a ff ff    	lea    -0xe5e0(%ebx),%edi
   1944c:	b9 05 00 00 00       	mov    $0x5,%ecx
   19451:	89 c6                	mov    %eax,%esi
   19453:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   19455:	75 12                	jne    19469 <.L19+0x184>
   19457:	8b 44 24 04          	mov    0x4(%esp),%eax
   1945b:	8d 80 60 1d 05 00    	lea    0x51d60(%eax),%eax
   19461:	8b 68 20             	mov    0x20(%eax),%ebp
   19464:	e9 27 fb ff ff       	jmp    18f90 <.L115>
   19469:	89 c6                	mov    %eax,%esi
   1946b:	e9 e6 fd ff ff       	jmp    19256 <.L21+0xf>
   19470:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   19474:	8d 83 44 1c ff ff    	lea    -0xe3bc(%ebx),%eax
   1947a:	50                   	push   %eax
   1947b:	8d 83 8c 19 ff ff    	lea    -0xe674(%ebx),%eax
   19481:	68 05 01 00 00       	push   $0x105
   19486:	50                   	push   %eax
   19487:	8d 83 46 1a ff ff    	lea    -0xe5ba(%ebx),%eax
   1948d:	50                   	push   %eax
   1948e:	e8 fd 93 fe ff       	call   2890 <__assert_fail@plt>
   19493:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   19497:	8d 83 44 1c ff ff    	lea    -0xe3bc(%ebx),%eax
   1949d:	50                   	push   %eax
   1949e:	8d 83 8c 19 ff ff    	lea    -0xe674(%ebx),%eax
   194a4:	68 b9 00 00 00       	push   $0xb9
   194a9:	50                   	push   %eax
   194aa:	8d 83 9f 19 ff ff    	lea    -0xe661(%ebx),%eax
   194b0:	50                   	push   %eax
   194b1:	e8 da 93 fe ff       	call   2890 <__assert_fail@plt>
   194b6:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   194ba:	8d 83 44 1c ff ff    	lea    -0xe3bc(%ebx),%eax
   194c0:	50                   	push   %eax
   194c1:	8d 83 8c 19 ff ff    	lea    -0xe674(%ebx),%eax
   194c7:	68 b8 00 00 00       	push   $0xb8
   194cc:	50                   	push   %eax
   194cd:	8d 83 04 1b ff ff    	lea    -0xe4fc(%ebx),%eax
   194d3:	50                   	push   %eax
   194d4:	e8 b7 93 fe ff       	call   2890 <__assert_fail@plt>
   194d9:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   194dd:	8d 83 44 1c ff ff    	lea    -0xe3bc(%ebx),%eax
   194e3:	50                   	push   %eax
   194e4:	8d 83 8c 19 ff ff    	lea    -0xe674(%ebx),%eax
   194ea:	68 ba 00 00 00       	push   $0xba
   194ef:	50                   	push   %eax
   194f0:	8d 83 ba 19 ff ff    	lea    -0xe646(%ebx),%eax
   194f6:	50                   	push   %eax
   194f7:	e8 94 93 fe ff       	call   2890 <__assert_fail@plt>
   194fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00019500 <init_regex>:
   19500:	55                   	push   %ebp
   19501:	57                   	push   %edi
   19502:	56                   	push   %esi
   19503:	53                   	push   %ebx
   19504:	e8 b7 97 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19509:	81 c3 f7 1a 01 00    	add    $0x11af7,%ebx
   1950f:	81 ec 9c 00 00 00    	sub    $0x9c,%esp
   19515:	8d 54 24 10          	lea    0x10(%esp),%edx
   19519:	8d ab 00 19 05 00    	lea    0x51900(%ebx),%ebp
   1951f:	8d b3 68 fd ff ff    	lea    -0x298(%ebx),%esi
   19525:	8d bb 40 1b 05 00    	lea    0x51b40(%ebx),%edi
   1952b:	8d 83 63 1a ff ff    	lea    -0xe59d(%ebx),%eax
   19531:	89 54 24 0c          	mov    %edx,0xc(%esp)
   19535:	eb 15                	jmp    1954c <init_regex+0x4c>
   19537:	89 f6                	mov    %esi,%esi
   19539:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   19540:	83 c5 20             	add    $0x20,%ebp
   19543:	39 fd                	cmp    %edi,%ebp
   19545:	74 32                	je     19579 <init_regex+0x79>
   19547:	8b 06                	mov    (%esi),%eax
   19549:	83 c6 08             	add    $0x8,%esi
   1954c:	83 ec 04             	sub    $0x4,%esp
   1954f:	6a 01                	push   $0x1
   19551:	50                   	push   %eax
   19552:	55                   	push   %ebp
   19553:	e8 48 92 fe ff       	call   27a0 <regcomp@plt>
   19558:	83 c4 10             	add    $0x10,%esp
   1955b:	85 c0                	test   %eax,%eax
   1955d:	74 e1                	je     19540 <init_regex+0x40>
   1955f:	68 80 00 00 00       	push   $0x80
   19564:	ff 74 24 10          	pushl  0x10(%esp)
   19568:	55                   	push   %ebp
   19569:	50                   	push   %eax
   1956a:	83 c5 20             	add    $0x20,%ebp
   1956d:	e8 5e 92 fe ff       	call   27d0 <regerror@plt>
   19572:	83 c4 10             	add    $0x10,%esp
   19575:	39 fd                	cmp    %edi,%ebp
   19577:	75 ce                	jne    19547 <init_regex+0x47>
   19579:	81 c4 9c 00 00 00    	add    $0x9c,%esp
   1957f:	5b                   	pop    %ebx
   19580:	5e                   	pop    %esi
   19581:	5f                   	pop    %edi
   19582:	5d                   	pop    %ebp
   19583:	c3                   	ret    
   19584:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1958a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00019590 <expr>:
   19590:	55                   	push   %ebp
   19591:	57                   	push   %edi
   19592:	56                   	push   %esi
   19593:	53                   	push   %ebx
   19594:	e8 27 97 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19599:	81 c3 67 1a 01 00    	add    $0x11a67,%ebx
   1959f:	83 ec 3c             	sub    $0x3c,%esp
   195a2:	8d 83 00 23 05 00    	lea    0x52300(%ebx),%eax
   195a8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   195ae:	89 44 24 08          	mov    %eax,0x8(%esp)
   195b2:	8b 44 24 50          	mov    0x50(%esp),%eax
   195b6:	80 38 00             	cmpb   $0x0,(%eax)
   195b9:	0f 84 72 01 00 00    	je     19731 <expr+0x1a1>
   195bf:	8d 54 24 28          	lea    0x28(%esp),%edx
   195c3:	8b 44 24 50          	mov    0x50(%esp),%eax
   195c7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   195ce:	00 
   195cf:	89 14 24             	mov    %edx,(%esp)
   195d2:	8d 93 00 19 05 00    	lea    0x51900(%ebx),%edx
   195d8:	89 c5                	mov    %eax,%ebp
   195da:	89 54 24 0c          	mov    %edx,0xc(%esp)
   195de:	8d 93 4c 1b ff ff    	lea    -0xe4b4(%ebx),%edx
   195e4:	89 54 24 18          	mov    %edx,0x18(%esp)
   195e8:	8d 93 80 1e 05 00    	lea    0x51e80(%ebx),%edx
   195ee:	89 54 24 10          	mov    %edx,0x10(%esp)
   195f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   195f8:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   195fc:	31 f6                	xor    %esi,%esi
   195fe:	66 90                	xchg   %ax,%ax
   19600:	83 ec 0c             	sub    $0xc,%esp
   19603:	6a 00                	push   $0x0
   19605:	ff 74 24 10          	pushl  0x10(%esp)
   19609:	6a 01                	push   $0x1
   1960b:	55                   	push   %ebp
   1960c:	57                   	push   %edi
   1960d:	e8 5e 91 fe ff       	call   2770 <regexec@plt>
   19612:	83 c4 20             	add    $0x20,%esp
   19615:	85 c0                	test   %eax,%eax
   19617:	75 08                	jne    19621 <expr+0x91>
   19619:	8b 54 24 28          	mov    0x28(%esp),%edx
   1961d:	85 d2                	test   %edx,%edx
   1961f:	74 3f                	je     19660 <expr+0xd0>
   19621:	83 c6 01             	add    $0x1,%esi
   19624:	83 c7 20             	add    $0x20,%edi
   19627:	83 fe 12             	cmp    $0x12,%esi
   1962a:	75 d4                	jne    19600 <expr+0x70>
   1962c:	8d 83 24 17 ff ff    	lea    -0xe8dc(%ebx),%eax
   19632:	83 ec 0c             	sub    $0xc,%esp
   19635:	50                   	push   %eax
   19636:	8b 44 24 14          	mov    0x14(%esp),%eax
   1963a:	50                   	push   %eax
   1963b:	ff 74 24 64          	pushl  0x64(%esp)
   1963f:	50                   	push   %eax
   19640:	8d 83 80 1b ff ff    	lea    -0xe480(%ebx),%eax
   19646:	50                   	push   %eax
   19647:	e8 74 91 fe ff       	call   27c0 <printf@plt>
   1964c:	8b 44 24 74          	mov    0x74(%esp),%eax
   19650:	83 c4 20             	add    $0x20,%esp
   19653:	c6 00 00             	movb   $0x0,(%eax)
   19656:	83 c4 3c             	add    $0x3c,%esp
   19659:	31 c0                	xor    %eax,%eax
   1965b:	5b                   	pop    %ebx
   1965c:	5e                   	pop    %esi
   1965d:	5f                   	pop    %edi
   1965e:	5d                   	pop    %ebp
   1965f:	c3                   	ret    
   19660:	8b 54 24 2c          	mov    0x2c(%esp),%edx
   19664:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   19668:	83 ec 08             	sub    $0x8,%esp
   1966b:	55                   	push   %ebp
   1966c:	52                   	push   %edx
   1966d:	52                   	push   %edx
   1966e:	8b 7c 24 18          	mov    0x18(%esp),%edi
   19672:	89 54 24 28          	mov    %edx,0x28(%esp)
   19676:	57                   	push   %edi
   19677:	56                   	push   %esi
   19678:	ff 74 24 34          	pushl  0x34(%esp)
   1967c:	e8 3f 91 fe ff       	call   27c0 <printf@plt>
   19681:	8b 54 24 34          	mov    0x34(%esp),%edx
   19685:	89 f8                	mov    %edi,%eax
   19687:	01 d0                	add    %edx,%eax
   19689:	89 44 24 24          	mov    %eax,0x24(%esp)
   1968d:	83 c4 20             	add    $0x20,%esp
   19690:	85 d2                	test   %edx,%edx
   19692:	0f 84 c9 00 00 00    	je     19761 <expr+0x1d1>
   19698:	8b 44 24 08          	mov    0x8(%esp),%eax
   1969c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   196a0:	83 ec 04             	sub    $0x4,%esp
   196a3:	8b b4 f3 64 fd ff ff 	mov    -0x29c(%ebx,%esi,8),%esi
   196aa:	8b 38                	mov    (%eax),%edi
   196ac:	8d 04 ff             	lea    (%edi,%edi,8),%eax
   196af:	c1 e0 02             	shl    $0x2,%eax
   196b2:	89 34 01             	mov    %esi,(%ecx,%eax,1)
   196b5:	8d 44 01 04          	lea    0x4(%ecx,%eax,1),%eax
   196b9:	52                   	push   %edx
   196ba:	55                   	push   %ebp
   196bb:	50                   	push   %eax
   196bc:	e8 1f 8f fe ff       	call   25e0 <memcpy@plt>
   196c1:	8b 6c 24 14          	mov    0x14(%esp),%ebp
   196c5:	03 6c 24 60          	add    0x60(%esp),%ebp
   196c9:	8d 57 01             	lea    0x1(%edi),%edx
   196cc:	8b 44 24 18          	mov    0x18(%esp),%eax
   196d0:	83 c4 10             	add    $0x10,%esp
   196d3:	89 10                	mov    %edx,(%eax)
   196d5:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   196d9:	0f 85 19 ff ff ff    	jne    195f8 <expr+0x68>
   196df:	85 d2                	test   %edx,%edx
   196e1:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   196e5:	7e 4a                	jle    19731 <expr+0x1a1>
   196e7:	8b 44 24 10          	mov    0x10(%esp),%eax
   196eb:	be ef 03 08 00       	mov    $0x803ef,%esi
   196f0:	eb 20                	jmp    19712 <expr+0x182>
   196f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   196f8:	8b 58 dc             	mov    -0x24(%eax),%ebx
   196fb:	83 fb 13             	cmp    $0x13,%ebx
   196fe:	77 08                	ja     19708 <expr+0x178>
   19700:	0f a3 de             	bt     %ebx,%esi
   19703:	72 18                	jb     1971d <expr+0x18d>
   19705:	8d 76 00             	lea    0x0(%esi),%esi
   19708:	83 c7 01             	add    $0x1,%edi
   1970b:	83 c0 24             	add    $0x24,%eax
   1970e:	39 fa                	cmp    %edi,%edx
   19710:	74 1f                	je     19731 <expr+0x1a1>
   19712:	8b 08                	mov    (%eax),%ecx
   19714:	83 f9 02             	cmp    $0x2,%ecx
   19717:	77 ef                	ja     19708 <expr+0x178>
   19719:	85 ff                	test   %edi,%edi
   1971b:	75 db                	jne    196f8 <expr+0x168>
   1971d:	85 c9                	test   %ecx,%ecx
   1971f:	75 2f                	jne    19750 <expr+0x1c0>
   19721:	83 c7 01             	add    $0x1,%edi
   19724:	c7 00 0a 00 00 00    	movl   $0xa,(%eax)
   1972a:	83 c0 24             	add    $0x24,%eax
   1972d:	39 fa                	cmp    %edi,%edx
   1972f:	75 e1                	jne    19712 <expr+0x182>
   19731:	8b 44 24 54          	mov    0x54(%esp),%eax
   19735:	c6 00 01             	movb   $0x1,(%eax)
   19738:	8b 44 24 08          	mov    0x8(%esp),%eax
   1973c:	8b 10                	mov    (%eax),%edx
   1973e:	31 c0                	xor    %eax,%eax
   19740:	83 ea 01             	sub    $0x1,%edx
   19743:	e8 88 f4 ff ff       	call   18bd0 <eval>
   19748:	83 c4 3c             	add    $0x3c,%esp
   1974b:	5b                   	pop    %ebx
   1974c:	5e                   	pop    %esi
   1974d:	5f                   	pop    %edi
   1974e:	5d                   	pop    %ebp
   1974f:	c3                   	ret    
   19750:	83 f9 01             	cmp    $0x1,%ecx
   19753:	0f 95 c1             	setne  %cl
   19756:	0f b6 c9             	movzbl %cl,%ecx
   19759:	8d 4c 09 0b          	lea    0xb(%ecx,%ecx,1),%ecx
   1975d:	89 08                	mov    %ecx,(%eax)
   1975f:	eb a7                	jmp    19708 <expr+0x178>
   19761:	8d 83 4c 1c ff ff    	lea    -0xe3b4(%ebx),%eax
   19767:	50                   	push   %eax
   19768:	8d 83 8c 19 ff ff    	lea    -0xe674(%ebx),%eax
   1976e:	6a 73                	push   $0x73
   19770:	50                   	push   %eax
   19771:	8d 83 66 1a ff ff    	lea    -0xe59a(%ebx),%eax
   19777:	50                   	push   %eax
   19778:	e8 13 91 fe ff       	call   2890 <__assert_fail@plt>
   1977d:	66 90                	xchg   %ax,%ax
   1977f:	90                   	nop

00019780 <initCache>:
   19780:	e8 65 9b fe ff       	call   32ea <__x86.get_pc_thunk.ax>
   19785:	05 7b 18 01 00       	add    $0x1187b,%eax
   1978a:	56                   	push   %esi
   1978b:	53                   	push   %ebx
   1978c:	8d 98 20 23 05 00    	lea    0x52320(%eax),%ebx
   19792:	8d b3 00 20 01 00    	lea    0x12000(%ebx),%esi
   19798:	8d 93 c8 04 00 00    	lea    0x4c8(%ebx),%edx
   1979e:	89 d9                	mov    %ebx,%ecx
   197a0:	8d 43 08             	lea    0x8(%ebx),%eax
   197a3:	c6 01 00             	movb   $0x0,(%ecx)
   197a6:	c7 41 04 ff ff ff ff 	movl   $0xffffffff,0x4(%ecx)
   197ad:	8d 76 00             	lea    0x0(%esi),%esi
   197b0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   197b6:	83 c0 4c             	add    $0x4c,%eax
   197b9:	39 d0                	cmp    %edx,%eax
   197bb:	75 f3                	jne    197b0 <initCache+0x30>
   197bd:	83 c1 48             	add    $0x48,%ecx
   197c0:	39 f1                	cmp    %esi,%ecx
   197c2:	75 dc                	jne    197a0 <initCache+0x20>
   197c4:	5b                   	pop    %ebx
   197c5:	5e                   	pop    %esi
   197c6:	c3                   	ret    
   197c7:	89 f6                	mov    %esi,%esi
   197c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000197d0 <addCache>:
   197d0:	55                   	push   %ebp
   197d1:	57                   	push   %edi
   197d2:	56                   	push   %esi
   197d3:	53                   	push   %ebx
   197d4:	e8 e7 94 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   197d9:	81 c3 27 18 01 00    	add    $0x11827,%ebx
   197df:	83 ec 1c             	sub    $0x1c,%esp
   197e2:	8b 44 24 30          	mov    0x30(%esp),%eax
   197e6:	8b 74 24 34          	mov    0x34(%esp),%esi
   197ea:	c1 e8 06             	shr    $0x6,%eax
   197ed:	83 e0 7f             	and    $0x7f,%eax
   197f0:	8d 2c c5 00 00 00 00 	lea    0x0(,%eax,8),%ebp
   197f7:	c1 e0 06             	shl    $0x6,%eax
   197fa:	01 e8                	add    %ebp,%eax
   197fc:	8d 34 c6             	lea    (%esi,%eax,8),%esi
   197ff:	80 3e 00             	cmpb   $0x0,(%esi)
   19802:	0f 84 a7 00 00 00    	je     198af <addCache+0xdf>
   19808:	8d 45 01             	lea    0x1(%ebp),%eax
   1980b:	8b 74 24 34          	mov    0x34(%esp),%esi
   1980f:	8d 4d 08             	lea    0x8(%ebp),%ecx
   19812:	8d 14 c0             	lea    (%eax,%eax,8),%edx
   19815:	8d 14 d6             	lea    (%esi,%edx,8),%edx
   19818:	eb 1a                	jmp    19834 <addCache+0x64>
   1981a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19820:	89 d6                	mov    %edx,%esi
   19822:	83 c2 48             	add    $0x48,%edx
   19825:	89 c7                	mov    %eax,%edi
   19827:	80 7a b8 00          	cmpb   $0x0,-0x48(%edx)
   1982b:	0f 84 87 00 00 00    	je     198b8 <addCache+0xe8>
   19831:	83 c0 01             	add    $0x1,%eax
   19834:	39 c1                	cmp    %eax,%ecx
   19836:	75 e8                	jne    19820 <addCache+0x50>
   19838:	83 ec 0c             	sub    $0xc,%esp
   1983b:	6a 00                	push   $0x0
   1983d:	e8 2e 8e fe ff       	call   2670 <time@plt>
   19842:	89 04 24             	mov    %eax,(%esp)
   19845:	e8 a6 8e fe ff       	call   26f0 <srand@plt>
   1984a:	e8 01 8f fe ff       	call   2750 <rand@plt>
   1984f:	99                   	cltd   
   19850:	8b 4c 24 44          	mov    0x44(%esp),%ecx
   19854:	c1 ea 1d             	shr    $0x1d,%edx
   19857:	8d 3c 10             	lea    (%eax,%edx,1),%edi
   1985a:	83 e7 07             	and    $0x7,%edi
   1985d:	29 d7                	sub    %edx,%edi
   1985f:	8b 54 24 40          	mov    0x40(%esp),%edx
   19863:	83 c4 10             	add    $0x10,%esp
   19866:	01 ef                	add    %ebp,%edi
   19868:	8d 04 ff             	lea    (%edi,%edi,8),%eax
   1986b:	83 e2 c0             	and    $0xffffffc0,%edx
   1986e:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   19872:	8d 34 c1             	lea    (%ecx,%eax,8),%esi
   19875:	8d 42 40             	lea    0x40(%edx),%eax
   19878:	89 d7                	mov    %edx,%edi
   1987a:	89 56 04             	mov    %edx,0x4(%esi)
   1987d:	29 d6                	sub    %edx,%esi
   1987f:	89 f5                	mov    %esi,%ebp
   19881:	89 c6                	mov    %eax,%esi
   19883:	90                   	nop
   19884:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19888:	83 ec 08             	sub    $0x8,%esp
   1988b:	6a 04                	push   $0x4
   1988d:	57                   	push   %edi
   1988e:	e8 8d 06 00 00       	call   19f20 <hw_mem_read>
   19893:	89 44 3d 08          	mov    %eax,0x8(%ebp,%edi,1)
   19897:	83 c7 04             	add    $0x4,%edi
   1989a:	83 c4 10             	add    $0x10,%esp
   1989d:	39 f7                	cmp    %esi,%edi
   1989f:	75 e7                	jne    19888 <addCache+0xb8>
   198a1:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   198a5:	83 c4 1c             	add    $0x1c,%esp
   198a8:	5b                   	pop    %ebx
   198a9:	5e                   	pop    %esi
   198aa:	89 f8                	mov    %edi,%eax
   198ac:	5f                   	pop    %edi
   198ad:	5d                   	pop    %ebp
   198ae:	c3                   	ret    
   198af:	89 ef                	mov    %ebp,%edi
   198b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   198b8:	8b 54 24 30          	mov    0x30(%esp),%edx
   198bc:	c6 06 01             	movb   $0x1,(%esi)
   198bf:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   198c3:	83 e2 c0             	and    $0xffffffc0,%edx
   198c6:	8d 42 40             	lea    0x40(%edx),%eax
   198c9:	89 56 04             	mov    %edx,0x4(%esi)
   198cc:	29 d6                	sub    %edx,%esi
   198ce:	89 f5                	mov    %esi,%ebp
   198d0:	89 d7                	mov    %edx,%edi
   198d2:	89 c6                	mov    %eax,%esi
   198d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   198d8:	83 ec 08             	sub    $0x8,%esp
   198db:	6a 04                	push   $0x4
   198dd:	57                   	push   %edi
   198de:	e8 3d 06 00 00       	call   19f20 <hw_mem_read>
   198e3:	89 44 3d 08          	mov    %eax,0x8(%ebp,%edi,1)
   198e7:	83 c7 04             	add    $0x4,%edi
   198ea:	83 c4 10             	add    $0x10,%esp
   198ed:	39 f7                	cmp    %esi,%edi
   198ef:	75 e7                	jne    198d8 <addCache+0x108>
   198f1:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   198f5:	83 c4 1c             	add    $0x1c,%esp
   198f8:	5b                   	pop    %ebx
   198f9:	5e                   	pop    %esi
   198fa:	89 f8                	mov    %edi,%eax
   198fc:	5f                   	pop    %edi
   198fd:	5d                   	pop    %ebp
   198fe:	c3                   	ret    
   198ff:	90                   	nop

00019900 <cacheRead>:
   19900:	55                   	push   %ebp
   19901:	57                   	push   %edi
   19902:	56                   	push   %esi
   19903:	53                   	push   %ebx
   19904:	e8 e1 99 fe ff       	call   32ea <__x86.get_pc_thunk.ax>
   19909:	05 f7 16 01 00       	add    $0x116f7,%eax
   1990e:	83 ec 1c             	sub    $0x1c,%esp
   19911:	89 44 24 0c          	mov    %eax,0xc(%esp)
   19915:	8b 44 24 30          	mov    0x30(%esp),%eax
   19919:	8b 7c 24 34          	mov    0x34(%esp),%edi
   1991d:	83 e0 3f             	and    $0x3f,%eax
   19920:	01 c7                	add    %eax,%edi
   19922:	89 44 24 08          	mov    %eax,0x8(%esp)
   19926:	83 ff 40             	cmp    $0x40,%edi
   19929:	0f 87 01 01 00 00    	ja     19a30 <cacheRead+0x130>
   1992f:	8b 44 24 30          	mov    0x30(%esp),%eax
   19933:	8b 5c 24 38          	mov    0x38(%esp),%ebx
   19937:	8b 6c 24 30          	mov    0x30(%esp),%ebp
   1993b:	c1 e8 06             	shr    $0x6,%eax
   1993e:	83 e0 7f             	and    $0x7f,%eax
   19941:	c1 ed 0d             	shr    $0xd,%ebp
   19944:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
   1994b:	c1 e0 06             	shl    $0x6,%eax
   1994e:	01 d0                	add    %edx,%eax
   19950:	8d 72 08             	lea    0x8(%edx),%esi
   19953:	8d 0c c3             	lea    (%ebx,%eax,8),%ecx
   19956:	8d 76 00             	lea    0x0(%esi),%esi
   19959:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   19960:	80 39 00             	cmpb   $0x0,(%ecx)
   19963:	89 d0                	mov    %edx,%eax
   19965:	74 0a                	je     19971 <cacheRead+0x71>
   19967:	8b 59 04             	mov    0x4(%ecx),%ebx
   1996a:	c1 eb 0d             	shr    $0xd,%ebx
   1996d:	39 dd                	cmp    %ebx,%ebp
   1996f:	74 1d                	je     1998e <cacheRead+0x8e>
   19971:	83 c2 01             	add    $0x1,%edx
   19974:	83 c1 48             	add    $0x48,%ecx
   19977:	39 f2                	cmp    %esi,%edx
   19979:	75 e5                	jne    19960 <cacheRead+0x60>
   1997b:	83 ec 08             	sub    $0x8,%esp
   1997e:	ff 74 24 40          	pushl  0x40(%esp)
   19982:	ff 74 24 3c          	pushl  0x3c(%esp)
   19986:	e8 45 fe ff ff       	call   197d0 <addCache>
   1998b:	83 c4 10             	add    $0x10,%esp
   1998e:	83 7c 24 34 04       	cmpl   $0x4,0x34(%esp)
   19993:	0f 87 e5 00 00 00    	ja     19a7e <cacheRead+0x17e>
   19999:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   1999d:	39 f9                	cmp    %edi,%ecx
   1999f:	0f 83 d5 00 00 00    	jae    19a7a <cacheRead+0x17a>
   199a5:	8b 5c 24 38          	mov    0x38(%esp),%ebx
   199a9:	8d 04 c0             	lea    (%eax,%eax,8),%eax
   199ac:	8d 1c c3             	lea    (%ebx,%eax,8),%ebx
   199af:	31 c0                	xor    %eax,%eax
   199b1:	eb 23                	jmp    199d6 <cacheRead+0xd6>
   199b3:	90                   	nop
   199b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   199b8:	83 fa 03             	cmp    $0x3,%edx
   199bb:	74 63                	je     19a20 <cacheRead+0x120>
   199bd:	83 fa 01             	cmp    $0x1,%edx
   199c0:	74 4e                	je     19a10 <cacheRead+0x110>
   199c2:	0f b6 54 b3 08       	movzbl 0x8(%ebx,%esi,4),%edx
   199c7:	c1 e8 08             	shr    $0x8,%eax
   199ca:	c1 e2 18             	shl    $0x18,%edx
   199cd:	83 c1 01             	add    $0x1,%ecx
   199d0:	09 d0                	or     %edx,%eax
   199d2:	39 cf                	cmp    %ecx,%edi
   199d4:	76 23                	jbe    199f9 <cacheRead+0xf9>
   199d6:	89 ca                	mov    %ecx,%edx
   199d8:	89 ce                	mov    %ecx,%esi
   199da:	83 e2 03             	and    $0x3,%edx
   199dd:	c1 fe 02             	sar    $0x2,%esi
   199e0:	83 fa 02             	cmp    $0x2,%edx
   199e3:	75 d3                	jne    199b8 <cacheRead+0xb8>
   199e5:	0f b6 54 b3 0a       	movzbl 0xa(%ebx,%esi,4),%edx
   199ea:	c1 e8 08             	shr    $0x8,%eax
   199ed:	83 c1 01             	add    $0x1,%ecx
   199f0:	c1 e2 18             	shl    $0x18,%edx
   199f3:	09 d0                	or     %edx,%eax
   199f5:	39 cf                	cmp    %ecx,%edi
   199f7:	77 dd                	ja     199d6 <cacheRead+0xd6>
   199f9:	8b 54 24 34          	mov    0x34(%esp),%edx
   199fd:	f7 da                	neg    %edx
   199ff:	8d 0c d5 20 00 00 00 	lea    0x20(,%edx,8),%ecx
   19a06:	d3 e8                	shr    %cl,%eax
   19a08:	83 c4 1c             	add    $0x1c,%esp
   19a0b:	5b                   	pop    %ebx
   19a0c:	5e                   	pop    %esi
   19a0d:	5f                   	pop    %edi
   19a0e:	5d                   	pop    %ebp
   19a0f:	c3                   	ret    
   19a10:	8b 54 b3 08          	mov    0x8(%ebx,%esi,4),%edx
   19a14:	c1 ea 08             	shr    $0x8,%edx
   19a17:	eb ae                	jmp    199c7 <cacheRead+0xc7>
   19a19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19a20:	0f b6 54 b3 0b       	movzbl 0xb(%ebx,%esi,4),%edx
   19a25:	eb a0                	jmp    199c7 <cacheRead+0xc7>
   19a27:	89 f6                	mov    %esi,%esi
   19a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   19a30:	be 40 00 00 00       	mov    $0x40,%esi
   19a35:	83 ec 04             	sub    $0x4,%esp
   19a38:	29 c6                	sub    %eax,%esi
   19a3a:	ff 74 24 3c          	pushl  0x3c(%esp)
   19a3e:	56                   	push   %esi
   19a3f:	ff 74 24 3c          	pushl  0x3c(%esp)
   19a43:	e8 b8 fe ff ff       	call   19900 <cacheRead>
   19a48:	83 c4 0c             	add    $0xc,%esp
   19a4b:	89 c3                	mov    %eax,%ebx
   19a4d:	ff 74 24 3c          	pushl  0x3c(%esp)
   19a51:	8b 44 24 3c          	mov    0x3c(%esp),%eax
   19a55:	29 f0                	sub    %esi,%eax
   19a57:	50                   	push   %eax
   19a58:	8b 44 24 3c          	mov    0x3c(%esp),%eax
   19a5c:	01 f0                	add    %esi,%eax
   19a5e:	50                   	push   %eax
   19a5f:	e8 9c fe ff ff       	call   19900 <cacheRead>
   19a64:	8d 0c f5 00 00 00 00 	lea    0x0(,%esi,8),%ecx
   19a6b:	83 c4 10             	add    $0x10,%esp
   19a6e:	83 c4 1c             	add    $0x1c,%esp
   19a71:	d3 e0                	shl    %cl,%eax
   19a73:	09 d8                	or     %ebx,%eax
   19a75:	5b                   	pop    %ebx
   19a76:	5e                   	pop    %esi
   19a77:	5f                   	pop    %edi
   19a78:	5d                   	pop    %ebp
   19a79:	c3                   	ret    
   19a7a:	31 c0                	xor    %eax,%eax
   19a7c:	eb 8a                	jmp    19a08 <cacheRead+0x108>
   19a7e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   19a82:	8d 83 9c 1c ff ff    	lea    -0xe364(%ebx),%eax
   19a88:	50                   	push   %eax
   19a89:	8d 83 57 1c ff ff    	lea    -0xe3a9(%ebx),%eax
   19a8f:	6a 59                	push   $0x59
   19a91:	50                   	push   %eax
   19a92:	8d 83 6a 1c ff ff    	lea    -0xe396(%ebx),%eax
   19a98:	50                   	push   %eax
   19a99:	e8 f2 8d fe ff       	call   2890 <__assert_fail@plt>
   19a9e:	66 90                	xchg   %ax,%ax

00019aa0 <cacheWrite>:
   19aa0:	55                   	push   %ebp
   19aa1:	57                   	push   %edi
   19aa2:	56                   	push   %esi
   19aa3:	53                   	push   %ebx
   19aa4:	e8 17 92 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19aa9:	81 c3 57 15 01 00    	add    $0x11557,%ebx
   19aaf:	83 ec 1c             	sub    $0x1c,%esp
   19ab2:	8b 74 24 30          	mov    0x30(%esp),%esi
   19ab6:	8b 54 24 34          	mov    0x34(%esp),%edx
   19aba:	89 f0                	mov    %esi,%eax
   19abc:	83 e0 3f             	and    $0x3f,%eax
   19abf:	01 c2                	add    %eax,%edx
   19ac1:	83 fa 40             	cmp    $0x40,%edx
   19ac4:	0f 86 93 00 00 00    	jbe    19b5d <cacheWrite+0xbd>
   19aca:	8b 54 24 38          	mov    0x38(%esp),%edx
   19ace:	bf 40 00 00 00       	mov    $0x40,%edi
   19ad3:	89 fd                	mov    %edi,%ebp
   19ad5:	29 c5                	sub    %eax,%ebp
   19ad7:	83 fd 02             	cmp    $0x2,%ebp
   19ada:	74 44                	je     19b20 <cacheWrite+0x80>
   19adc:	83 fd 03             	cmp    $0x3,%ebp
   19adf:	0f 84 03 01 00 00    	je     19be8 <cacheWrite+0x148>
   19ae5:	83 fd 01             	cmp    $0x1,%ebp
   19ae8:	0f 84 ea 00 00 00    	je     19bd8 <cacheWrite+0x138>
   19aee:	8d 83 73 1c ff ff    	lea    -0xe38d(%ebx),%eax
   19af4:	83 ec 0c             	sub    $0xc,%esp
   19af7:	50                   	push   %eax
   19af8:	e8 03 8d fe ff       	call   2800 <puts@plt>
   19afd:	8d 83 90 1c ff ff    	lea    -0xe370(%ebx),%eax
   19b03:	50                   	push   %eax
   19b04:	8d 83 57 1c ff ff    	lea    -0xe3a9(%ebx),%eax
   19b0a:	68 84 00 00 00       	push   $0x84
   19b0f:	50                   	push   %eax
   19b10:	8d 83 74 1a ff ff    	lea    -0xe58c(%ebx),%eax
   19b16:	50                   	push   %eax
   19b17:	e8 74 8d fe ff       	call   2890 <__assert_fail@plt>
   19b1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19b20:	0f b7 c2             	movzwl %dx,%eax
   19b23:	66 31 d2             	xor    %dx,%dx
   19b26:	89 54 24 08          	mov    %edx,0x8(%esp)
   19b2a:	ff 74 24 3c          	pushl  0x3c(%esp)
   19b2e:	50                   	push   %eax
   19b2f:	55                   	push   %ebp
   19b30:	56                   	push   %esi
   19b31:	01 ee                	add    %ebp,%esi
   19b33:	e8 68 ff ff ff       	call   19aa0 <cacheWrite>
   19b38:	29 6c 24 44          	sub    %ebp,0x44(%esp)
   19b3c:	89 f0                	mov    %esi,%eax
   19b3e:	8b 6c 24 44          	mov    0x44(%esp),%ebp
   19b42:	83 e0 3f             	and    $0x3f,%eax
   19b45:	83 c4 10             	add    $0x10,%esp
   19b48:	8b 54 24 08          	mov    0x8(%esp),%edx
   19b4c:	01 c5                	add    %eax,%ebp
   19b4e:	83 fd 40             	cmp    $0x40,%ebp
   19b51:	0f 87 7c ff ff ff    	ja     19ad3 <cacheWrite+0x33>
   19b57:	89 54 24 38          	mov    %edx,0x38(%esp)
   19b5b:	89 ea                	mov    %ebp,%edx
   19b5d:	89 f1                	mov    %esi,%ecx
   19b5f:	89 f7                	mov    %esi,%edi
   19b61:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp
   19b65:	c1 e9 0d             	shr    $0xd,%ecx
   19b68:	c1 ef 06             	shr    $0x6,%edi
   19b6b:	89 54 24 0c          	mov    %edx,0xc(%esp)
   19b6f:	89 4c 24 08          	mov    %ecx,0x8(%esp)
   19b73:	89 f9                	mov    %edi,%ecx
   19b75:	83 e1 7f             	and    $0x7f,%ecx
   19b78:	89 cf                	mov    %ecx,%edi
   19b7a:	c1 e7 06             	shl    $0x6,%edi
   19b7d:	8d 0c cf             	lea    (%edi,%ecx,8),%ecx
   19b80:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
   19b84:	c1 e1 03             	shl    $0x3,%ecx
   19b87:	01 cf                	add    %ecx,%edi
   19b89:	8d ac 0d 40 02 00 00 	lea    0x240(%ebp,%ecx,1),%ebp
   19b90:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   19b94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19b98:	80 3f 00             	cmpb   $0x0,(%edi)
   19b9b:	74 0a                	je     19ba7 <cacheWrite+0x107>
   19b9d:	8b 57 04             	mov    0x4(%edi),%edx
   19ba0:	c1 ea 0d             	shr    $0xd,%edx
   19ba3:	39 d1                	cmp    %edx,%ecx
   19ba5:	74 53                	je     19bfa <cacheWrite+0x15a>
   19ba7:	83 c7 48             	add    $0x48,%edi
   19baa:	39 fd                	cmp    %edi,%ebp
   19bac:	75 ea                	jne    19b98 <cacheWrite+0xf8>
   19bae:	83 7c 24 34 04       	cmpl   $0x4,0x34(%esp)
   19bb3:	0f 87 d0 00 00 00    	ja     19c89 <cacheWrite+0x1e9>
   19bb9:	83 ec 04             	sub    $0x4,%esp
   19bbc:	ff 74 24 3c          	pushl  0x3c(%esp)
   19bc0:	ff 74 24 3c          	pushl  0x3c(%esp)
   19bc4:	56                   	push   %esi
   19bc5:	e8 b6 03 00 00       	call   19f80 <hw_mem_write>
   19bca:	83 c4 10             	add    $0x10,%esp
   19bcd:	83 c4 1c             	add    $0x1c,%esp
   19bd0:	5b                   	pop    %ebx
   19bd1:	5e                   	pop    %esi
   19bd2:	5f                   	pop    %edi
   19bd3:	5d                   	pop    %ebp
   19bd4:	c3                   	ret    
   19bd5:	8d 76 00             	lea    0x0(%esi),%esi
   19bd8:	0f b6 c2             	movzbl %dl,%eax
   19bdb:	30 d2                	xor    %dl,%dl
   19bdd:	e9 44 ff ff ff       	jmp    19b26 <cacheWrite+0x86>
   19be2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19be8:	89 d0                	mov    %edx,%eax
   19bea:	81 e2 00 00 00 ff    	and    $0xff000000,%edx
   19bf0:	25 ff ff ff 00       	and    $0xffffff,%eax
   19bf5:	e9 2c ff ff ff       	jmp    19b26 <cacheWrite+0x86>
   19bfa:	83 7c 24 34 04       	cmpl   $0x4,0x34(%esp)
   19bff:	8b 54 24 0c          	mov    0xc(%esp),%edx
   19c03:	0f 87 80 00 00 00    	ja     19c89 <cacheWrite+0x1e9>
   19c09:	31 c9                	xor    %ecx,%ecx
   19c0b:	39 d0                	cmp    %edx,%eax
   19c0d:	89 c5                	mov    %eax,%ebp
   19c0f:	73 a8                	jae    19bb9 <cacheWrite+0x119>
   19c11:	89 54 24 08          	mov    %edx,0x8(%esp)
   19c15:	89 74 24 30          	mov    %esi,0x30(%esp)
   19c19:	eb 21                	jmp    19c3c <cacheWrite+0x19c>
   19c1b:	90                   	nop
   19c1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19c20:	83 f8 03             	cmp    $0x3,%eax
   19c23:	74 4b                	je     19c70 <cacheWrite+0x1d0>
   19c25:	83 f8 01             	cmp    $0x1,%eax
   19c28:	89 f0                	mov    %esi,%eax
   19c2a:	74 34                	je     19c60 <cacheWrite+0x1c0>
   19c2c:	88 44 97 08          	mov    %al,0x8(%edi,%edx,4)
   19c30:	83 c5 01             	add    $0x1,%ebp
   19c33:	83 c1 08             	add    $0x8,%ecx
   19c36:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
   19c3a:	73 44                	jae    19c80 <cacheWrite+0x1e0>
   19c3c:	8b 74 24 38          	mov    0x38(%esp),%esi
   19c40:	89 e8                	mov    %ebp,%eax
   19c42:	89 ea                	mov    %ebp,%edx
   19c44:	83 e0 03             	and    $0x3,%eax
   19c47:	c1 fa 02             	sar    $0x2,%edx
   19c4a:	d3 ee                	shr    %cl,%esi
   19c4c:	83 f8 02             	cmp    $0x2,%eax
   19c4f:	75 cf                	jne    19c20 <cacheWrite+0x180>
   19c51:	89 f0                	mov    %esi,%eax
   19c53:	88 44 97 0a          	mov    %al,0xa(%edi,%edx,4)
   19c57:	eb d7                	jmp    19c30 <cacheWrite+0x190>
   19c59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19c60:	88 44 97 09          	mov    %al,0x9(%edi,%edx,4)
   19c64:	eb ca                	jmp    19c30 <cacheWrite+0x190>
   19c66:	8d 76 00             	lea    0x0(%esi),%esi
   19c69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
   19c70:	89 f0                	mov    %esi,%eax
   19c72:	88 44 97 0b          	mov    %al,0xb(%edi,%edx,4)
   19c76:	eb b8                	jmp    19c30 <cacheWrite+0x190>
   19c78:	90                   	nop
   19c79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19c80:	8b 74 24 30          	mov    0x30(%esp),%esi
   19c84:	e9 30 ff ff ff       	jmp    19bb9 <cacheWrite+0x119>
   19c89:	8d 83 90 1c ff ff    	lea    -0xe370(%ebx),%eax
   19c8f:	50                   	push   %eax
   19c90:	8d 83 57 1c ff ff    	lea    -0xe3a9(%ebx),%eax
   19c96:	68 99 00 00 00       	push   $0x99
   19c9b:	50                   	push   %eax
   19c9c:	8d 83 6a 1c ff ff    	lea    -0xe396(%ebx),%eax
   19ca2:	50                   	push   %eax
   19ca3:	e8 e8 8b fe ff       	call   2890 <__assert_fail@plt>
   19ca8:	66 90                	xchg   %ax,%ax
   19caa:	66 90                	xchg   %ax,%ax
   19cac:	66 90                	xchg   %ax,%ax
   19cae:	66 90                	xchg   %ax,%ax

00019cb0 <segment_translate>:
   19cb0:	53                   	push   %ebx
   19cb1:	e8 0a 90 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19cb6:	81 c3 4a 13 01 00    	add    $0x1134a,%ebx
   19cbc:	83 ec 08             	sub    $0x8,%esp
   19cbf:	8b 54 24 14          	mov    0x14(%esp),%edx
   19cc3:	80 fa 05             	cmp    $0x5,%dl
   19cc6:	77 1b                	ja     19ce3 <segment_translate+0x33>
   19cc8:	0f b6 d2             	movzbl %dl,%edx
   19ccb:	8b 44 24 10          	mov    0x10(%esp),%eax
   19ccf:	83 c2 03             	add    $0x3,%edx
   19cd2:	c1 e2 04             	shl    $0x4,%edx
   19cd5:	03 93 dc ff ff ff    	add    -0x24(%ebx),%edx
   19cdb:	03 42 0c             	add    0xc(%edx),%eax
   19cde:	83 c4 08             	add    $0x8,%esp
   19ce1:	5b                   	pop    %ebx
   19ce2:	c3                   	ret    
   19ce3:	8d 83 b4 1d ff ff    	lea    -0xe24c(%ebx),%eax
   19ce9:	50                   	push   %eax
   19cea:	8d 83 a6 1c ff ff    	lea    -0xe35a(%ebx),%eax
   19cf0:	6a 09                	push   $0x9
   19cf2:	50                   	push   %eax
   19cf3:	8d 83 bf 1c ff ff    	lea    -0xe341(%ebx),%eax
   19cf9:	50                   	push   %eax
   19cfa:	e8 91 8b fe ff       	call   2890 <__assert_fail@plt>
   19cff:	90                   	nop

00019d00 <load_sreg>:
   19d00:	55                   	push   %ebp
   19d01:	57                   	push   %edi
   19d02:	56                   	push   %esi
   19d03:	53                   	push   %ebx
   19d04:	e8 b7 8f fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19d09:	81 c3 f7 12 01 00    	add    $0x112f7,%ebx
   19d0f:	83 ec 0c             	sub    $0xc,%esp
   19d12:	0f b6 74 24 20       	movzbl 0x20(%esp),%esi
   19d17:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   19d1d:	83 c6 03             	add    $0x3,%esi
   19d20:	c1 e6 04             	shl    $0x4,%esi
   19d23:	01 c6                	add    %eax,%esi
   19d25:	f6 46 08 04          	testb  $0x4,0x8(%esi)
   19d29:	0f 85 ff 00 00 00    	jne    19e2e <load_sreg+0x12e>
   19d2f:	0f b7 7e 08          	movzwl 0x8(%esi),%edi
   19d33:	83 ec 08             	sub    $0x8,%esp
   19d36:	81 e7 f8 ff 00 00    	and    $0xfff8,%edi
   19d3c:	03 78 2c             	add    0x2c(%eax),%edi
   19d3f:	6a 04                	push   $0x4
   19d41:	57                   	push   %edi
   19d42:	83 c7 04             	add    $0x4,%edi
   19d45:	e8 46 03 00 00       	call   1a090 <laddr_read>
   19d4a:	89 c5                	mov    %eax,%ebp
   19d4c:	58                   	pop    %eax
   19d4d:	5a                   	pop    %edx
   19d4e:	6a 04                	push   $0x4
   19d50:	57                   	push   %edi
   19d51:	e8 3a 03 00 00       	call   1a090 <laddr_read>
   19d56:	89 ea                	mov    %ebp,%edx
   19d58:	83 c4 10             	add    $0x10,%esp
   19d5b:	c1 ea 10             	shr    $0x10,%edx
   19d5e:	66 85 d2             	test   %dx,%dx
   19d61:	75 77                	jne    19dda <load_sreg+0xda>
   19d63:	a9 ff 00 00 ff       	test   $0xff0000ff,%eax
   19d68:	75 70                	jne    19dda <load_sreg+0xda>
   19d6a:	66 83 fd ff          	cmp    $0xffff,%bp
   19d6e:	0f 85 82 00 00 00    	jne    19df6 <load_sreg+0xf6>
   19d74:	89 c2                	mov    %eax,%edx
   19d76:	c1 ea 10             	shr    $0x10,%edx
   19d79:	89 d1                	mov    %edx,%ecx
   19d7b:	83 e1 0f             	and    $0xf,%ecx
   19d7e:	80 f9 0f             	cmp    $0xf,%cl
   19d81:	75 73                	jne    19df6 <load_sreg+0xf6>
   19d83:	84 d2                	test   %dl,%dl
   19d85:	0f 89 87 00 00 00    	jns    19e12 <load_sreg+0x112>
   19d8b:	0f b6 d4             	movzbl %ah,%edx
   19d8e:	84 d2                	test   %dl,%dl
   19d90:	0f 89 b4 00 00 00    	jns    19e4a <load_sreg+0x14a>
   19d96:	0f b6 d0             	movzbl %al,%edx
   19d99:	89 c1                	mov    %eax,%ecx
   19d9b:	c7 46 10 ff ff 0f 00 	movl   $0xfffff,0x10(%esi)
   19da2:	81 e1 00 00 00 ff    	and    $0xff000000,%ecx
   19da8:	c1 e2 10             	shl    $0x10,%edx
   19dab:	09 ca                	or     %ecx,%edx
   19dad:	89 56 0c             	mov    %edx,0xc(%esi)
   19db0:	89 c2                	mov    %eax,%edx
   19db2:	c1 ea 08             	shr    $0x8,%edx
   19db5:	89 d1                	mov    %edx,%ecx
   19db7:	89 c2                	mov    %eax,%edx
   19db9:	c1 e8 14             	shr    $0x14,%eax
   19dbc:	c1 ea 0d             	shr    $0xd,%edx
   19dbf:	83 e1 0f             	and    $0xf,%ecx
   19dc2:	c1 e0 07             	shl    $0x7,%eax
   19dc5:	83 e2 03             	and    $0x3,%edx
   19dc8:	c1 e2 05             	shl    $0x5,%edx
   19dcb:	09 ca                	or     %ecx,%edx
   19dcd:	09 d0                	or     %edx,%eax
   19dcf:	88 46 14             	mov    %al,0x14(%esi)
   19dd2:	83 c4 0c             	add    $0xc,%esp
   19dd5:	5b                   	pop    %ebx
   19dd6:	5e                   	pop    %esi
   19dd7:	5f                   	pop    %edi
   19dd8:	5d                   	pop    %ebp
   19dd9:	c3                   	ret    
   19dda:	8d 83 a8 1d ff ff    	lea    -0xe258(%ebx),%eax
   19de0:	50                   	push   %eax
   19de1:	8d 83 a6 1c ff ff    	lea    -0xe35a(%ebx),%eax
   19de7:	6a 1c                	push   $0x1c
   19de9:	50                   	push   %eax
   19dea:	8d 83 1c 1d ff ff    	lea    -0xe2e4(%ebx),%eax
   19df0:	50                   	push   %eax
   19df1:	e8 9a 8a fe ff       	call   2890 <__assert_fail@plt>
   19df6:	8d 83 a8 1d ff ff    	lea    -0xe258(%ebx),%eax
   19dfc:	50                   	push   %eax
   19dfd:	8d 83 a6 1c ff ff    	lea    -0xe35a(%ebx),%eax
   19e03:	6a 1e                	push   $0x1e
   19e05:	50                   	push   %eax
   19e06:	8d 83 6c 1d ff ff    	lea    -0xe294(%ebx),%eax
   19e0c:	50                   	push   %eax
   19e0d:	e8 7e 8a fe ff       	call   2890 <__assert_fail@plt>
   19e12:	8d 83 a8 1d ff ff    	lea    -0xe258(%ebx),%eax
   19e18:	50                   	push   %eax
   19e19:	8d 83 a6 1c ff ff    	lea    -0xe35a(%ebx),%eax
   19e1f:	6a 1f                	push   $0x1f
   19e21:	50                   	push   %eax
   19e22:	8d 83 ee 1c ff ff    	lea    -0xe312(%ebx),%eax
   19e28:	50                   	push   %eax
   19e29:	e8 62 8a fe ff       	call   2890 <__assert_fail@plt>
   19e2e:	8d 83 a8 1d ff ff    	lea    -0xe258(%ebx),%eax
   19e34:	50                   	push   %eax
   19e35:	8d 83 a6 1c ff ff    	lea    -0xe35a(%ebx),%eax
   19e3b:	6a 14                	push   $0x14
   19e3d:	50                   	push   %eax
   19e3e:	8d 83 d5 1c ff ff    	lea    -0xe32b(%ebx),%eax
   19e44:	50                   	push   %eax
   19e45:	e8 46 8a fe ff       	call   2890 <__assert_fail@plt>
   19e4a:	8d 83 a8 1d ff ff    	lea    -0xe258(%ebx),%eax
   19e50:	50                   	push   %eax
   19e51:	8d 83 a6 1c ff ff    	lea    -0xe35a(%ebx),%eax
   19e57:	6a 20                	push   $0x20
   19e59:	50                   	push   %eax
   19e5a:	8d 83 07 1d ff ff    	lea    -0xe2f9(%ebx),%eax
   19e60:	50                   	push   %eax
   19e61:	e8 2a 8a fe ff       	call   2890 <__assert_fail@plt>
   19e66:	66 90                	xchg   %ax,%ax
   19e68:	66 90                	xchg   %ax,%ax
   19e6a:	66 90                	xchg   %ax,%ax
   19e6c:	66 90                	xchg   %ax,%ax
   19e6e:	66 90                	xchg   %ax,%ax

00019e70 <page_translate>:
   19e70:	57                   	push   %edi
   19e71:	56                   	push   %esi
   19e72:	53                   	push   %ebx
   19e73:	8b 44 24 10          	mov    0x10(%esp),%eax
   19e77:	e8 44 8e fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19e7c:	81 c3 84 11 01 00    	add    $0x11184,%ebx
   19e82:	83 ec 08             	sub    $0x8,%esp
   19e85:	8d 93 60 1d 05 00    	lea    0x51d60(%ebx),%edx
   19e8b:	6a 04                	push   $0x4
   19e8d:	89 c7                	mov    %eax,%edi
   19e8f:	89 c6                	mov    %eax,%esi
   19e91:	c1 e8 16             	shr    $0x16,%eax
   19e94:	c1 ef 0c             	shr    $0xc,%edi
   19e97:	81 e7 ff 03 00 00    	and    $0x3ff,%edi
   19e9d:	81 e6 ff 0f 00 00    	and    $0xfff,%esi
   19ea3:	8b 52 34             	mov    0x34(%edx),%edx
   19ea6:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
   19eac:	8d 04 82             	lea    (%edx,%eax,4),%eax
   19eaf:	50                   	push   %eax
   19eb0:	e8 0b 01 00 00       	call   19fc0 <paddr_read>
   19eb5:	83 c4 10             	add    $0x10,%esp
   19eb8:	a8 01                	test   $0x1,%al
   19eba:	74 25                	je     19ee1 <page_translate+0x71>
   19ebc:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   19ec1:	83 ec 08             	sub    $0x8,%esp
   19ec4:	8d 04 b8             	lea    (%eax,%edi,4),%eax
   19ec7:	6a 04                	push   $0x4
   19ec9:	50                   	push   %eax
   19eca:	e8 f1 00 00 00       	call   19fc0 <paddr_read>
   19ecf:	83 c4 10             	add    $0x10,%esp
   19ed2:	a8 01                	test   $0x1,%al
   19ed4:	74 27                	je     19efd <page_translate+0x8d>
   19ed6:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   19edb:	09 f0                	or     %esi,%eax
   19edd:	5b                   	pop    %ebx
   19ede:	5e                   	pop    %esi
   19edf:	5f                   	pop    %edi
   19ee0:	c3                   	ret    
   19ee1:	8d 83 08 1e ff ff    	lea    -0xe1f8(%ebx),%eax
   19ee7:	50                   	push   %eax
   19ee8:	8d 83 c6 1d ff ff    	lea    -0xe23a(%ebx),%eax
   19eee:	6a 10                	push   $0x10
   19ef0:	50                   	push   %eax
   19ef1:	8d 83 dc 1d ff ff    	lea    -0xe224(%ebx),%eax
   19ef7:	50                   	push   %eax
   19ef8:	e8 93 89 fe ff       	call   2890 <__assert_fail@plt>
   19efd:	8d 83 08 1e ff ff    	lea    -0xe1f8(%ebx),%eax
   19f03:	50                   	push   %eax
   19f04:	8d 83 c6 1d ff ff    	lea    -0xe23a(%ebx),%eax
   19f0a:	6a 16                	push   $0x16
   19f0c:	50                   	push   %eax
   19f0d:	8d 83 f1 1d ff ff    	lea    -0xe20f(%ebx),%eax
   19f13:	50                   	push   %eax
   19f14:	e8 77 89 fe ff       	call   2890 <__assert_fail@plt>
   19f19:	66 90                	xchg   %ax,%ax
   19f1b:	66 90                	xchg   %ax,%ax
   19f1d:	66 90                	xchg   %ax,%ax
   19f1f:	90                   	nop

00019f20 <hw_mem_read>:
   19f20:	53                   	push   %ebx
   19f21:	e8 9a 8d fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19f26:	81 c3 da 10 01 00    	add    $0x110da,%ebx
   19f2c:	83 ec 18             	sub    $0x18,%esp
   19f2f:	8b 44 24 20          	mov    0x20(%esp),%eax
   19f33:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   19f3a:	00 
   19f3b:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax
   19f40:	77 21                	ja     19f63 <hw_mem_read+0x43>
   19f42:	03 83 e0 ff ff ff    	add    -0x20(%ebx),%eax
   19f48:	8d 54 24 0c          	lea    0xc(%esp),%edx
   19f4c:	83 ec 04             	sub    $0x4,%esp
   19f4f:	ff 74 24 28          	pushl  0x28(%esp)
   19f53:	50                   	push   %eax
   19f54:	52                   	push   %edx
   19f55:	e8 86 86 fe ff       	call   25e0 <memcpy@plt>
   19f5a:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   19f5e:	83 c4 28             	add    $0x28,%esp
   19f61:	5b                   	pop    %ebx
   19f62:	c3                   	ret    
   19f63:	8d 83 b0 1e ff ff    	lea    -0xe150(%ebx),%eax
   19f69:	50                   	push   %eax
   19f6a:	8d 83 17 1e ff ff    	lea    -0xe1e9(%ebx),%eax
   19f70:	6a 10                	push   $0x10
   19f72:	50                   	push   %eax
   19f73:	8d 83 40 1e ff ff    	lea    -0xe1c0(%ebx),%eax
   19f79:	50                   	push   %eax
   19f7a:	e8 11 89 fe ff       	call   2890 <__assert_fail@plt>
   19f7f:	90                   	nop

00019f80 <hw_mem_write>:
   19f80:	53                   	push   %ebx
   19f81:	e8 3a 8d fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19f86:	81 c3 7a 10 01 00    	add    $0x1107a,%ebx
   19f8c:	83 ec 08             	sub    $0x8,%esp
   19f8f:	8b 44 24 10          	mov    0x10(%esp),%eax
   19f93:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax
   19f98:	77 1d                	ja     19fb7 <hw_mem_write+0x37>
   19f9a:	03 83 e0 ff ff ff    	add    -0x20(%ebx),%eax
   19fa0:	8d 54 24 18          	lea    0x18(%esp),%edx
   19fa4:	83 ec 04             	sub    $0x4,%esp
   19fa7:	ff 74 24 18          	pushl  0x18(%esp)
   19fab:	52                   	push   %edx
   19fac:	50                   	push   %eax
   19fad:	e8 2e 86 fe ff       	call   25e0 <memcpy@plt>
   19fb2:	83 c4 18             	add    $0x18,%esp
   19fb5:	5b                   	pop    %ebx
   19fb6:	c3                   	ret    
   19fb7:	e8 3f 89 fe ff       	call   28fb <hw_mem_write.part.1>
   19fbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00019fc0 <paddr_read>:
   19fc0:	57                   	push   %edi
   19fc1:	56                   	push   %esi
   19fc2:	53                   	push   %ebx
   19fc3:	8b 74 24 10          	mov    0x10(%esp),%esi
   19fc7:	8b 7c 24 14          	mov    0x14(%esp),%edi
   19fcb:	83 ec 0c             	sub    $0xc,%esp
   19fce:	e8 ed 8c fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   19fd3:	81 c3 2d 10 01 00    	add    $0x1102d,%ebx
   19fd9:	56                   	push   %esi
   19fda:	e8 71 91 fe ff       	call   3150 <is_mmio>
   19fdf:	83 c4 10             	add    $0x10,%esp
   19fe2:	83 f8 ff             	cmp    $0xffffffff,%eax
   19fe5:	74 19                	je     1a000 <paddr_read+0x40>
   19fe7:	83 ec 04             	sub    $0x4,%esp
   19fea:	50                   	push   %eax
   19feb:	57                   	push   %edi
   19fec:	56                   	push   %esi
   19fed:	e8 ae 91 fe ff       	call   31a0 <mmio_read>
   19ff2:	83 c4 10             	add    $0x10,%esp
   19ff5:	5b                   	pop    %ebx
   19ff6:	5e                   	pop    %esi
   19ff7:	5f                   	pop    %edi
   19ff8:	c3                   	ret    
   19ff9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a000:	89 7c 24 14          	mov    %edi,0x14(%esp)
   1a004:	89 74 24 10          	mov    %esi,0x10(%esp)
   1a008:	5b                   	pop    %ebx
   1a009:	5e                   	pop    %esi
   1a00a:	5f                   	pop    %edi
   1a00b:	e9 10 ff ff ff       	jmp    19f20 <hw_mem_read>

0001a010 <paddr_write>:
   1a010:	56                   	push   %esi
   1a011:	53                   	push   %ebx
   1a012:	e8 a9 8c fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a017:	81 c3 e9 0f 01 00    	add    $0x10fe9,%ebx
   1a01d:	83 ec 20             	sub    $0x20,%esp
   1a020:	8b 74 24 2c          	mov    0x2c(%esp),%esi
   1a024:	56                   	push   %esi
   1a025:	e8 26 91 fe ff       	call   3150 <is_mmio>
   1a02a:	83 c4 10             	add    $0x10,%esp
   1a02d:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a030:	74 1e                	je     1a050 <paddr_write+0x40>
   1a032:	50                   	push   %eax
   1a033:	ff 74 24 2c          	pushl  0x2c(%esp)
   1a037:	ff 74 24 2c          	pushl  0x2c(%esp)
   1a03b:	56                   	push   %esi
   1a03c:	e8 ef 91 fe ff       	call   3230 <mmio_write>
   1a041:	83 c4 10             	add    $0x10,%esp
   1a044:	83 c4 14             	add    $0x14,%esp
   1a047:	5b                   	pop    %ebx
   1a048:	5e                   	pop    %esi
   1a049:	c3                   	ret    
   1a04a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a050:	8b 44 24 28          	mov    0x28(%esp),%eax
   1a054:	81 fe ff ff ff 07    	cmp    $0x7ffffff,%esi
   1a05a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1a05e:	77 21                	ja     1a081 <paddr_write+0x71>
   1a060:	03 b3 e0 ff ff ff    	add    -0x20(%ebx),%esi
   1a066:	8d 44 24 0c          	lea    0xc(%esp),%eax
   1a06a:	83 ec 04             	sub    $0x4,%esp
   1a06d:	ff 74 24 28          	pushl  0x28(%esp)
   1a071:	50                   	push   %eax
   1a072:	56                   	push   %esi
   1a073:	e8 68 85 fe ff       	call   25e0 <memcpy@plt>
   1a078:	83 c4 10             	add    $0x10,%esp
   1a07b:	83 c4 14             	add    $0x14,%esp
   1a07e:	5b                   	pop    %ebx
   1a07f:	5e                   	pop    %esi
   1a080:	c3                   	ret    
   1a081:	e8 75 88 fe ff       	call   28fb <hw_mem_write.part.1>
   1a086:	8d 76 00             	lea    0x0(%esi),%esi
   1a089:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001a090 <laddr_read>:
   1a090:	56                   	push   %esi
   1a091:	53                   	push   %ebx
   1a092:	e8 29 8c fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a097:	81 c3 69 0f 01 00    	add    $0x10f69,%ebx
   1a09d:	83 ec 04             	sub    $0x4,%esp
   1a0a0:	8b 74 24 14          	mov    0x14(%esp),%esi
   1a0a4:	8b 54 24 10          	mov    0x10(%esp),%edx
   1a0a8:	8d 46 ff             	lea    -0x1(%esi),%eax
   1a0ab:	83 f8 01             	cmp    $0x1,%eax
   1a0ae:	76 05                	jbe    1a0b5 <laddr_read+0x25>
   1a0b0:	83 fe 04             	cmp    $0x4,%esi
   1a0b3:	75 46                	jne    1a0fb <laddr_read+0x6b>
   1a0b5:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   1a0bb:	8b 40 30             	mov    0x30(%eax),%eax
   1a0be:	25 01 00 00 80       	and    $0x80000001,%eax
   1a0c3:	3d 01 00 00 80       	cmp    $0x80000001,%eax
   1a0c8:	74 16                	je     1a0e0 <laddr_read+0x50>
   1a0ca:	89 74 24 14          	mov    %esi,0x14(%esp)
   1a0ce:	89 54 24 10          	mov    %edx,0x10(%esp)
   1a0d2:	83 c4 04             	add    $0x4,%esp
   1a0d5:	5b                   	pop    %ebx
   1a0d6:	5e                   	pop    %esi
   1a0d7:	e9 e4 fe ff ff       	jmp    19fc0 <paddr_read>
   1a0dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a0e0:	83 ec 0c             	sub    $0xc,%esp
   1a0e3:	52                   	push   %edx
   1a0e4:	e8 87 fd ff ff       	call   19e70 <page_translate>
   1a0e9:	89 74 24 24          	mov    %esi,0x24(%esp)
   1a0ed:	89 44 24 20          	mov    %eax,0x20(%esp)
   1a0f1:	83 c4 14             	add    $0x14,%esp
   1a0f4:	5b                   	pop    %ebx
   1a0f5:	5e                   	pop    %esi
   1a0f6:	e9 c5 fe ff ff       	jmp    19fc0 <paddr_read>
   1a0fb:	8d 83 94 1e ff ff    	lea    -0xe16c(%ebx),%eax
   1a101:	50                   	push   %eax
   1a102:	8d 83 17 1e ff ff    	lea    -0xe1e9(%ebx),%eax
   1a108:	6a 38                	push   $0x38
   1a10a:	50                   	push   %eax
   1a10b:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
   1a111:	50                   	push   %eax
   1a112:	e8 79 87 fe ff       	call   2890 <__assert_fail@plt>
   1a117:	89 f6                	mov    %esi,%esi
   1a119:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001a120 <laddr_write>:
   1a120:	57                   	push   %edi
   1a121:	56                   	push   %esi
   1a122:	53                   	push   %ebx
   1a123:	8b 74 24 14          	mov    0x14(%esp),%esi
   1a127:	e8 94 8b fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a12c:	81 c3 d4 0e 01 00    	add    $0x10ed4,%ebx
   1a132:	8b 54 24 10          	mov    0x10(%esp),%edx
   1a136:	8b 7c 24 18          	mov    0x18(%esp),%edi
   1a13a:	8d 46 ff             	lea    -0x1(%esi),%eax
   1a13d:	83 f8 01             	cmp    $0x1,%eax
   1a140:	76 05                	jbe    1a147 <laddr_write+0x27>
   1a142:	83 fe 04             	cmp    $0x4,%esi
   1a145:	75 49                	jne    1a190 <laddr_write+0x70>
   1a147:	8d 83 60 1d 05 00    	lea    0x51d60(%ebx),%eax
   1a14d:	8b 40 30             	mov    0x30(%eax),%eax
   1a150:	25 01 00 00 80       	and    $0x80000001,%eax
   1a155:	3d 01 00 00 80       	cmp    $0x80000001,%eax
   1a15a:	74 14                	je     1a170 <laddr_write+0x50>
   1a15c:	89 7c 24 18          	mov    %edi,0x18(%esp)
   1a160:	89 74 24 14          	mov    %esi,0x14(%esp)
   1a164:	89 54 24 10          	mov    %edx,0x10(%esp)
   1a168:	5b                   	pop    %ebx
   1a169:	5e                   	pop    %esi
   1a16a:	5f                   	pop    %edi
   1a16b:	e9 a0 fe ff ff       	jmp    1a010 <paddr_write>
   1a170:	83 ec 0c             	sub    $0xc,%esp
   1a173:	52                   	push   %edx
   1a174:	e8 f7 fc ff ff       	call   19e70 <page_translate>
   1a179:	83 c4 10             	add    $0x10,%esp
   1a17c:	89 7c 24 18          	mov    %edi,0x18(%esp)
   1a180:	89 74 24 14          	mov    %esi,0x14(%esp)
   1a184:	89 44 24 10          	mov    %eax,0x10(%esp)
   1a188:	5b                   	pop    %ebx
   1a189:	5e                   	pop    %esi
   1a18a:	5f                   	pop    %edi
   1a18b:	e9 80 fe ff ff       	jmp    1a010 <paddr_write>
   1a190:	8d 83 88 1e ff ff    	lea    -0xe178(%ebx),%eax
   1a196:	50                   	push   %eax
   1a197:	8d 83 17 1e ff ff    	lea    -0xe1e9(%ebx),%eax
   1a19d:	6a 48                	push   $0x48
   1a19f:	50                   	push   %eax
   1a1a0:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
   1a1a6:	50                   	push   %eax
   1a1a7:	e8 e4 86 fe ff       	call   2890 <__assert_fail@plt>
   1a1ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001a1b0 <vaddr_read>:
   1a1b0:	56                   	push   %esi
   1a1b1:	53                   	push   %ebx
   1a1b2:	e8 09 8b fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a1b7:	81 c3 49 0e 01 00    	add    $0x10e49,%ebx
   1a1bd:	83 ec 04             	sub    $0x4,%esp
   1a1c0:	8b 74 24 18          	mov    0x18(%esp),%esi
   1a1c4:	8b 44 24 10          	mov    0x10(%esp),%eax
   1a1c8:	8b 54 24 14          	mov    0x14(%esp),%edx
   1a1cc:	8d 4e ff             	lea    -0x1(%esi),%ecx
   1a1cf:	83 f9 01             	cmp    $0x1,%ecx
   1a1d2:	76 05                	jbe    1a1d9 <vaddr_read+0x29>
   1a1d4:	83 fe 04             	cmp    $0x4,%esi
   1a1d7:	75 2e                	jne    1a207 <vaddr_read+0x57>
   1a1d9:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
   1a1df:	f6 41 30 01          	testb  $0x1,0x30(%ecx)
   1a1e3:	74 10                	je     1a1f5 <vaddr_read+0x45>
   1a1e5:	83 ec 08             	sub    $0x8,%esp
   1a1e8:	0f b6 d2             	movzbl %dl,%edx
   1a1eb:	52                   	push   %edx
   1a1ec:	50                   	push   %eax
   1a1ed:	e8 be fa ff ff       	call   19cb0 <segment_translate>
   1a1f2:	83 c4 10             	add    $0x10,%esp
   1a1f5:	89 74 24 14          	mov    %esi,0x14(%esp)
   1a1f9:	89 44 24 10          	mov    %eax,0x10(%esp)
   1a1fd:	83 c4 04             	add    $0x4,%esp
   1a200:	5b                   	pop    %ebx
   1a201:	5e                   	pop    %esi
   1a202:	e9 89 fe ff ff       	jmp    1a090 <laddr_read>
   1a207:	8d 83 7c 1e ff ff    	lea    -0xe184(%ebx),%eax
   1a20d:	50                   	push   %eax
   1a20e:	8d 83 17 1e ff ff    	lea    -0xe1e9(%ebx),%eax
   1a214:	6a 5a                	push   $0x5a
   1a216:	50                   	push   %eax
   1a217:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
   1a21d:	50                   	push   %eax
   1a21e:	e8 6d 86 fe ff       	call   2890 <__assert_fail@plt>
   1a223:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a229:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001a230 <vaddr_write>:
   1a230:	57                   	push   %edi
   1a231:	56                   	push   %esi
   1a232:	53                   	push   %ebx
   1a233:	8b 74 24 18          	mov    0x18(%esp),%esi
   1a237:	e8 84 8a fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a23c:	81 c3 c4 0d 01 00    	add    $0x10dc4,%ebx
   1a242:	8b 44 24 10          	mov    0x10(%esp),%eax
   1a246:	8b 54 24 14          	mov    0x14(%esp),%edx
   1a24a:	8d 4e ff             	lea    -0x1(%esi),%ecx
   1a24d:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   1a251:	83 f9 01             	cmp    $0x1,%ecx
   1a254:	76 05                	jbe    1a25b <vaddr_write+0x2b>
   1a256:	83 fe 04             	cmp    $0x4,%esi
   1a259:	75 30                	jne    1a28b <vaddr_write+0x5b>
   1a25b:	8d 8b 60 1d 05 00    	lea    0x51d60(%ebx),%ecx
   1a261:	f6 41 30 01          	testb  $0x1,0x30(%ecx)
   1a265:	74 10                	je     1a277 <vaddr_write+0x47>
   1a267:	83 ec 08             	sub    $0x8,%esp
   1a26a:	0f b6 d2             	movzbl %dl,%edx
   1a26d:	52                   	push   %edx
   1a26e:	50                   	push   %eax
   1a26f:	e8 3c fa ff ff       	call   19cb0 <segment_translate>
   1a274:	83 c4 10             	add    $0x10,%esp
   1a277:	89 7c 24 18          	mov    %edi,0x18(%esp)
   1a27b:	89 74 24 14          	mov    %esi,0x14(%esp)
   1a27f:	89 44 24 10          	mov    %eax,0x10(%esp)
   1a283:	5b                   	pop    %ebx
   1a284:	5e                   	pop    %esi
   1a285:	5f                   	pop    %edi
   1a286:	e9 95 fe ff ff       	jmp    1a120 <laddr_write>
   1a28b:	8d 83 70 1e ff ff    	lea    -0xe190(%ebx),%eax
   1a291:	50                   	push   %eax
   1a292:	8d 83 17 1e ff ff    	lea    -0xe1e9(%ebx),%eax
   1a298:	6a 67                	push   $0x67
   1a29a:	50                   	push   %eax
   1a29b:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
   1a2a1:	50                   	push   %eax
   1a2a2:	e8 e9 85 fe ff       	call   2890 <__assert_fail@plt>
   1a2a7:	89 f6                	mov    %esi,%esi
   1a2a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001a2b0 <init_mem>:
   1a2b0:	53                   	push   %ebx
   1a2b1:	e8 0a 8a fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a2b6:	81 c3 4a 0d 01 00    	add    $0x10d4a,%ebx
   1a2bc:	83 ec 0c             	sub    $0xc,%esp
   1a2bf:	68 00 00 00 08       	push   $0x8000000
   1a2c4:	6a 00                	push   $0x0
   1a2c6:	ff b3 e0 ff ff ff    	pushl  -0x20(%ebx)
   1a2cc:	e8 4f 85 fe ff       	call   2820 <memset@plt>
   1a2d1:	e8 aa f4 ff ff       	call   19780 <initCache>
   1a2d6:	83 c4 18             	add    $0x18,%esp
   1a2d9:	5b                   	pop    %ebx
   1a2da:	c3                   	ret    
   1a2db:	90                   	nop
   1a2dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001a2e0 <instr_fetch>:
   1a2e0:	53                   	push   %ebx
   1a2e1:	e8 da 89 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a2e6:	81 c3 1a 0d 01 00    	add    $0x10d1a,%ebx
   1a2ec:	83 ec 08             	sub    $0x8,%esp
   1a2ef:	8b 44 24 14          	mov    0x14(%esp),%eax
   1a2f3:	8d 50 ff             	lea    -0x1(%eax),%edx
   1a2f6:	83 fa 01             	cmp    $0x1,%edx
   1a2f9:	76 05                	jbe    1a300 <instr_fetch+0x20>
   1a2fb:	83 f8 04             	cmp    $0x4,%eax
   1a2fe:	75 14                	jne    1a314 <instr_fetch+0x34>
   1a300:	83 ec 04             	sub    $0x4,%esp
   1a303:	50                   	push   %eax
   1a304:	6a 01                	push   $0x1
   1a306:	ff 74 24 1c          	pushl  0x1c(%esp)
   1a30a:	e8 a1 fe ff ff       	call   1a1b0 <vaddr_read>
   1a30f:	83 c4 18             	add    $0x18,%esp
   1a312:	5b                   	pop    %ebx
   1a313:	c3                   	ret    
   1a314:	8d 83 64 1e ff ff    	lea    -0xe19c(%ebx),%eax
   1a31a:	50                   	push   %eax
   1a31b:	8d 83 17 1e ff ff    	lea    -0xe1e9(%ebx),%eax
   1a321:	6a 7f                	push   $0x7f
   1a323:	50                   	push   %eax
   1a324:	8d 83 c0 f9 fe ff    	lea    -0x10640(%ebx),%eax
   1a32a:	50                   	push   %eax
   1a32b:	e8 60 85 fe ff       	call   2890 <__assert_fail@plt>

0001a330 <get_mem_addr>:
   1a330:	e8 b5 8f fe ff       	call   32ea <__x86.get_pc_thunk.ax>
   1a335:	05 cb 0c 01 00       	add    $0x10ccb,%eax
   1a33a:	8d 80 20 43 06 00    	lea    0x64320(%eax),%eax
   1a340:	c3                   	ret    
   1a341:	66 90                	xchg   %ax,%ax
   1a343:	66 90                	xchg   %ax,%ax
   1a345:	66 90                	xchg   %ax,%ax
   1a347:	66 90                	xchg   %ax,%ax
   1a349:	66 90                	xchg   %ax,%ax
   1a34b:	66 90                	xchg   %ax,%ax
   1a34d:	66 90                	xchg   %ax,%ax
   1a34f:	90                   	nop

0001a350 <__divdi3>:
   1a350:	55                   	push   %ebp
   1a351:	57                   	push   %edi
   1a352:	56                   	push   %esi
   1a353:	53                   	push   %ebx
   1a354:	83 ec 1c             	sub    $0x1c,%esp
   1a357:	8b 54 24 34          	mov    0x34(%esp),%edx
   1a35b:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp
   1a35f:	8b 7c 24 38          	mov    0x38(%esp),%edi
   1a363:	8b 44 24 30          	mov    0x30(%esp),%eax
   1a367:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1a36e:	00 
   1a36f:	85 d2                	test   %edx,%edx
   1a371:	89 ee                	mov    %ebp,%esi
   1a373:	89 6c 24 04          	mov    %ebp,0x4(%esp)
   1a377:	89 3c 24             	mov    %edi,(%esp)
   1a37a:	0f 88 b8 00 00 00    	js     1a438 <__divdi3+0xe8>
   1a380:	85 f6                	test   %esi,%esi
   1a382:	0f 88 98 00 00 00    	js     1a420 <__divdi3+0xd0>
   1a388:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   1a38c:	8b 0c 24             	mov    (%esp),%ecx
   1a38f:	89 d6                	mov    %edx,%esi
   1a391:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1a395:	89 c5                	mov    %eax,%ebp
   1a397:	85 db                	test   %ebx,%ebx
   1a399:	89 cf                	mov    %ecx,%edi
   1a39b:	8b 0c 24             	mov    (%esp),%ecx
   1a39e:	75 10                	jne    1a3b0 <__divdi3+0x60>
   1a3a0:	39 d7                	cmp    %edx,%edi
   1a3a2:	76 54                	jbe    1a3f8 <__divdi3+0xa8>
   1a3a4:	f7 f7                	div    %edi
   1a3a6:	31 ed                	xor    %ebp,%ebp
   1a3a8:	89 c1                	mov    %eax,%ecx
   1a3aa:	eb 0c                	jmp    1a3b8 <__divdi3+0x68>
   1a3ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a3b0:	39 d3                	cmp    %edx,%ebx
   1a3b2:	76 24                	jbe    1a3d8 <__divdi3+0x88>
   1a3b4:	31 ed                	xor    %ebp,%ebp
   1a3b6:	31 c9                	xor    %ecx,%ecx
   1a3b8:	89 c8                	mov    %ecx,%eax
   1a3ba:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   1a3be:	89 ea                	mov    %ebp,%edx
   1a3c0:	85 c9                	test   %ecx,%ecx
   1a3c2:	74 07                	je     1a3cb <__divdi3+0x7b>
   1a3c4:	f7 d8                	neg    %eax
   1a3c6:	83 d2 00             	adc    $0x0,%edx
   1a3c9:	f7 da                	neg    %edx
   1a3cb:	83 c4 1c             	add    $0x1c,%esp
   1a3ce:	5b                   	pop    %ebx
   1a3cf:	5e                   	pop    %esi
   1a3d0:	5f                   	pop    %edi
   1a3d1:	5d                   	pop    %ebp
   1a3d2:	c3                   	ret    
   1a3d3:	90                   	nop
   1a3d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a3d8:	0f bd eb             	bsr    %ebx,%ebp
   1a3db:	83 f5 1f             	xor    $0x1f,%ebp
   1a3de:	75 70                	jne    1a450 <__divdi3+0x100>
   1a3e0:	39 d3                	cmp    %edx,%ebx
   1a3e2:	72 08                	jb     1a3ec <__divdi3+0x9c>
   1a3e4:	31 c9                	xor    %ecx,%ecx
   1a3e6:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
   1a3ea:	77 cc                	ja     1a3b8 <__divdi3+0x68>
   1a3ec:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a3f1:	eb c5                	jmp    1a3b8 <__divdi3+0x68>
   1a3f3:	90                   	nop
   1a3f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a3f8:	85 c9                	test   %ecx,%ecx
   1a3fa:	75 0b                	jne    1a407 <__divdi3+0xb7>
   1a3fc:	b8 01 00 00 00       	mov    $0x1,%eax
   1a401:	31 d2                	xor    %edx,%edx
   1a403:	f7 f1                	div    %ecx
   1a405:	89 c1                	mov    %eax,%ecx
   1a407:	89 f0                	mov    %esi,%eax
   1a409:	31 d2                	xor    %edx,%edx
   1a40b:	f7 f1                	div    %ecx
   1a40d:	89 c6                	mov    %eax,%esi
   1a40f:	89 e8                	mov    %ebp,%eax
   1a411:	89 f5                	mov    %esi,%ebp
   1a413:	f7 f1                	div    %ecx
   1a415:	89 c1                	mov    %eax,%ecx
   1a417:	eb 9f                	jmp    1a3b8 <__divdi3+0x68>
   1a419:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a420:	f7 1c 24             	negl   (%esp)
   1a423:	f7 54 24 08          	notl   0x8(%esp)
   1a427:	83 54 24 04 00       	adcl   $0x0,0x4(%esp)
   1a42c:	f7 5c 24 04          	negl   0x4(%esp)
   1a430:	e9 53 ff ff ff       	jmp    1a388 <__divdi3+0x38>
   1a435:	8d 76 00             	lea    0x0(%esi),%esi
   1a438:	f7 d8                	neg    %eax
   1a43a:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1a441:	ff 
   1a442:	83 d2 00             	adc    $0x0,%edx
   1a445:	f7 da                	neg    %edx
   1a447:	e9 34 ff ff ff       	jmp    1a380 <__divdi3+0x30>
   1a44c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a450:	b8 20 00 00 00       	mov    $0x20,%eax
   1a455:	89 e9                	mov    %ebp,%ecx
   1a457:	89 fa                	mov    %edi,%edx
   1a459:	29 e8                	sub    %ebp,%eax
   1a45b:	d3 e3                	shl    %cl,%ebx
   1a45d:	89 c1                	mov    %eax,%ecx
   1a45f:	d3 ea                	shr    %cl,%edx
   1a461:	89 e9                	mov    %ebp,%ecx
   1a463:	09 da                	or     %ebx,%edx
   1a465:	d3 e7                	shl    %cl,%edi
   1a467:	89 f3                	mov    %esi,%ebx
   1a469:	89 c1                	mov    %eax,%ecx
   1a46b:	89 14 24             	mov    %edx,(%esp)
   1a46e:	8b 54 24 0c          	mov    0xc(%esp),%edx
   1a472:	d3 eb                	shr    %cl,%ebx
   1a474:	89 e9                	mov    %ebp,%ecx
   1a476:	d3 e6                	shl    %cl,%esi
   1a478:	89 c1                	mov    %eax,%ecx
   1a47a:	d3 ea                	shr    %cl,%edx
   1a47c:	09 d6                	or     %edx,%esi
   1a47e:	89 da                	mov    %ebx,%edx
   1a480:	89 f0                	mov    %esi,%eax
   1a482:	f7 34 24             	divl   (%esp)
   1a485:	89 d3                	mov    %edx,%ebx
   1a487:	89 c6                	mov    %eax,%esi
   1a489:	f7 e7                	mul    %edi
   1a48b:	39 d3                	cmp    %edx,%ebx
   1a48d:	72 21                	jb     1a4b0 <__divdi3+0x160>
   1a48f:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   1a493:	89 e9                	mov    %ebp,%ecx
   1a495:	d3 e7                	shl    %cl,%edi
   1a497:	39 c7                	cmp    %eax,%edi
   1a499:	73 04                	jae    1a49f <__divdi3+0x14f>
   1a49b:	39 d3                	cmp    %edx,%ebx
   1a49d:	74 11                	je     1a4b0 <__divdi3+0x160>
   1a49f:	89 f1                	mov    %esi,%ecx
   1a4a1:	31 ed                	xor    %ebp,%ebp
   1a4a3:	e9 10 ff ff ff       	jmp    1a3b8 <__divdi3+0x68>
   1a4a8:	90                   	nop
   1a4a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a4b0:	8d 4e ff             	lea    -0x1(%esi),%ecx
   1a4b3:	31 ed                	xor    %ebp,%ebp
   1a4b5:	e9 fe fe ff ff       	jmp    1a3b8 <__divdi3+0x68>
   1a4ba:	66 90                	xchg   %ax,%ax
   1a4bc:	66 90                	xchg   %ax,%ax
   1a4be:	66 90                	xchg   %ax,%ax

0001a4c0 <__moddi3>:
   1a4c0:	55                   	push   %ebp
   1a4c1:	57                   	push   %edi
   1a4c2:	56                   	push   %esi
   1a4c3:	53                   	push   %ebx
   1a4c4:	83 ec 2c             	sub    $0x2c,%esp
   1a4c7:	8b 7c 24 44          	mov    0x44(%esp),%edi
   1a4cb:	8b 44 24 48          	mov    0x48(%esp),%eax
   1a4cf:	8b 54 24 4c          	mov    0x4c(%esp),%edx
   1a4d3:	8b 74 24 40          	mov    0x40(%esp),%esi
   1a4d7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1a4de:	00 
   1a4df:	85 ff                	test   %edi,%edi
   1a4e1:	89 04 24             	mov    %eax,(%esp)
   1a4e4:	89 54 24 04          	mov    %edx,0x4(%esp)
   1a4e8:	89 d0                	mov    %edx,%eax
   1a4ea:	0f 88 d8 00 00 00    	js     1a5c8 <__moddi3+0x108>
   1a4f0:	85 c0                	test   %eax,%eax
   1a4f2:	0f 88 b8 00 00 00    	js     1a5b0 <__moddi3+0xf0>
   1a4f8:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   1a4fc:	8b 0c 24             	mov    (%esp),%ecx
   1a4ff:	89 f0                	mov    %esi,%eax
   1a501:	89 fa                	mov    %edi,%edx
   1a503:	89 7c 24 10          	mov    %edi,0x10(%esp)
   1a507:	89 74 24 14          	mov    %esi,0x14(%esp)
   1a50b:	85 db                	test   %ebx,%ebx
   1a50d:	89 cd                	mov    %ecx,%ebp
   1a50f:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   1a513:	8b 0c 24             	mov    (%esp),%ecx
   1a516:	89 3c 24             	mov    %edi,(%esp)
   1a519:	75 15                	jne    1a530 <__moddi3+0x70>
   1a51b:	39 fd                	cmp    %edi,%ebp
   1a51d:	76 69                	jbe    1a588 <__moddi3+0xc8>
   1a51f:	f7 f5                	div    %ebp
   1a521:	89 14 24             	mov    %edx,(%esp)
   1a524:	8b 04 24             	mov    (%esp),%eax
   1a527:	31 d2                	xor    %edx,%edx
   1a529:	eb 11                	jmp    1a53c <__moddi3+0x7c>
   1a52b:	90                   	nop
   1a52c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a530:	8b 6c 24 10          	mov    0x10(%esp),%ebp
   1a534:	39 eb                	cmp    %ebp,%ebx
   1a536:	76 20                	jbe    1a558 <__moddi3+0x98>
   1a538:	89 f0                	mov    %esi,%eax
   1a53a:	89 ea                	mov    %ebp,%edx
   1a53c:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
   1a540:	85 c9                	test   %ecx,%ecx
   1a542:	74 07                	je     1a54b <__moddi3+0x8b>
   1a544:	f7 d8                	neg    %eax
   1a546:	83 d2 00             	adc    $0x0,%edx
   1a549:	f7 da                	neg    %edx
   1a54b:	83 c4 2c             	add    $0x2c,%esp
   1a54e:	5b                   	pop    %ebx
   1a54f:	5e                   	pop    %esi
   1a550:	5f                   	pop    %edi
   1a551:	5d                   	pop    %ebp
   1a552:	c3                   	ret    
   1a553:	90                   	nop
   1a554:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a558:	0f bd fb             	bsr    %ebx,%edi
   1a55b:	83 f7 1f             	xor    $0x1f,%edi
   1a55e:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   1a562:	75 7c                	jne    1a5e0 <__moddi3+0x120>
   1a564:	3b 5c 24 10          	cmp    0x10(%esp),%ebx
   1a568:	0f 82 12 01 00 00    	jb     1a680 <__moddi3+0x1c0>
   1a56e:	3b 4c 24 14          	cmp    0x14(%esp),%ecx
   1a572:	0f 86 08 01 00 00    	jbe    1a680 <__moddi3+0x1c0>
   1a578:	8b 44 24 14          	mov    0x14(%esp),%eax
   1a57c:	8b 14 24             	mov    (%esp),%edx
   1a57f:	eb bb                	jmp    1a53c <__moddi3+0x7c>
   1a581:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a588:	85 c9                	test   %ecx,%ecx
   1a58a:	75 0b                	jne    1a597 <__moddi3+0xd7>
   1a58c:	b8 01 00 00 00       	mov    $0x1,%eax
   1a591:	31 d2                	xor    %edx,%edx
   1a593:	f7 f1                	div    %ecx
   1a595:	89 c1                	mov    %eax,%ecx
   1a597:	8b 44 24 10          	mov    0x10(%esp),%eax
   1a59b:	31 d2                	xor    %edx,%edx
   1a59d:	f7 f1                	div    %ecx
   1a59f:	8b 44 24 14          	mov    0x14(%esp),%eax
   1a5a3:	f7 f1                	div    %ecx
   1a5a5:	89 14 24             	mov    %edx,(%esp)
   1a5a8:	e9 77 ff ff ff       	jmp    1a524 <__moddi3+0x64>
   1a5ad:	8d 76 00             	lea    0x0(%esi),%esi
   1a5b0:	f7 1c 24             	negl   (%esp)
   1a5b3:	83 54 24 04 00       	adcl   $0x0,0x4(%esp)
   1a5b8:	f7 5c 24 04          	negl   0x4(%esp)
   1a5bc:	e9 37 ff ff ff       	jmp    1a4f8 <__moddi3+0x38>
   1a5c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a5c8:	f7 de                	neg    %esi
   1a5ca:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%esp)
   1a5d1:	ff 
   1a5d2:	83 d7 00             	adc    $0x0,%edi
   1a5d5:	f7 df                	neg    %edi
   1a5d7:	e9 14 ff ff ff       	jmp    1a4f0 <__moddi3+0x30>
   1a5dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a5e0:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   1a5e4:	8b 6c 24 18          	mov    0x18(%esp),%ebp
   1a5e8:	ba 20 00 00 00       	mov    $0x20,%edx
   1a5ed:	29 fa                	sub    %edi,%edx
   1a5ef:	89 f9                	mov    %edi,%ecx
   1a5f1:	89 d6                	mov    %edx,%esi
   1a5f3:	d3 e3                	shl    %cl,%ebx
   1a5f5:	89 54 24 14          	mov    %edx,0x14(%esp)
   1a5f9:	89 f1                	mov    %esi,%ecx
   1a5fb:	89 ea                	mov    %ebp,%edx
   1a5fd:	d3 ea                	shr    %cl,%edx
   1a5ff:	89 d1                	mov    %edx,%ecx
   1a601:	89 ea                	mov    %ebp,%edx
   1a603:	8b 6c 24 10          	mov    0x10(%esp),%ebp
   1a607:	09 d9                	or     %ebx,%ecx
   1a609:	89 0c 24             	mov    %ecx,(%esp)
   1a60c:	89 f9                	mov    %edi,%ecx
   1a60e:	d3 e2                	shl    %cl,%edx
   1a610:	89 eb                	mov    %ebp,%ebx
   1a612:	89 f1                	mov    %esi,%ecx
   1a614:	d3 eb                	shr    %cl,%ebx
   1a616:	0f b6 4c 24 1c       	movzbl 0x1c(%esp),%ecx
   1a61b:	89 d7                	mov    %edx,%edi
   1a61d:	89 f2                	mov    %esi,%edx
   1a61f:	89 ee                	mov    %ebp,%esi
   1a621:	89 c5                	mov    %eax,%ebp
   1a623:	d3 e6                	shl    %cl,%esi
   1a625:	89 d1                	mov    %edx,%ecx
   1a627:	89 da                	mov    %ebx,%edx
   1a629:	d3 ed                	shr    %cl,%ebp
   1a62b:	0f b6 4c 24 1c       	movzbl 0x1c(%esp),%ecx
   1a630:	09 ee                	or     %ebp,%esi
   1a632:	d3 e0                	shl    %cl,%eax
   1a634:	89 c5                	mov    %eax,%ebp
   1a636:	89 f0                	mov    %esi,%eax
   1a638:	f7 34 24             	divl   (%esp)
   1a63b:	89 d3                	mov    %edx,%ebx
   1a63d:	f7 e7                	mul    %edi
   1a63f:	39 d3                	cmp    %edx,%ebx
   1a641:	89 c6                	mov    %eax,%esi
   1a643:	89 d1                	mov    %edx,%ecx
   1a645:	72 06                	jb     1a64d <__moddi3+0x18d>
   1a647:	75 0d                	jne    1a656 <__moddi3+0x196>
   1a649:	39 c5                	cmp    %eax,%ebp
   1a64b:	73 09                	jae    1a656 <__moddi3+0x196>
   1a64d:	29 f8                	sub    %edi,%eax
   1a64f:	1b 14 24             	sbb    (%esp),%edx
   1a652:	89 d1                	mov    %edx,%ecx
   1a654:	89 c6                	mov    %eax,%esi
   1a656:	89 e8                	mov    %ebp,%eax
   1a658:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   1a65c:	29 f0                	sub    %esi,%eax
   1a65e:	19 cb                	sbb    %ecx,%ebx
   1a660:	0f b6 4c 24 14       	movzbl 0x14(%esp),%ecx
   1a665:	89 de                	mov    %ebx,%esi
   1a667:	d3 e6                	shl    %cl,%esi
   1a669:	89 f9                	mov    %edi,%ecx
   1a66b:	d3 e8                	shr    %cl,%eax
   1a66d:	89 f9                	mov    %edi,%ecx
   1a66f:	09 c6                	or     %eax,%esi
   1a671:	d3 eb                	shr    %cl,%ebx
   1a673:	89 f0                	mov    %esi,%eax
   1a675:	89 da                	mov    %ebx,%edx
   1a677:	e9 c0 fe ff ff       	jmp    1a53c <__moddi3+0x7c>
   1a67c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a680:	8b 44 24 14          	mov    0x14(%esp),%eax
   1a684:	8b 54 24 10          	mov    0x10(%esp),%edx
   1a688:	29 c8                	sub    %ecx,%eax
   1a68a:	19 da                	sbb    %ebx,%edx
   1a68c:	89 14 24             	mov    %edx,(%esp)
   1a68f:	89 44 24 14          	mov    %eax,0x14(%esp)
   1a693:	e9 e0 fe ff ff       	jmp    1a578 <__moddi3+0xb8>
   1a698:	66 90                	xchg   %ax,%ax
   1a69a:	66 90                	xchg   %ax,%ax
   1a69c:	66 90                	xchg   %ax,%ax
   1a69e:	66 90                	xchg   %ax,%ax

0001a6a0 <__udivdi3>:
   1a6a0:	55                   	push   %ebp
   1a6a1:	57                   	push   %edi
   1a6a2:	56                   	push   %esi
   1a6a3:	53                   	push   %ebx
   1a6a4:	83 ec 1c             	sub    $0x1c,%esp
   1a6a7:	8b 74 24 3c          	mov    0x3c(%esp),%esi
   1a6ab:	8b 5c 24 30          	mov    0x30(%esp),%ebx
   1a6af:	8b 4c 24 34          	mov    0x34(%esp),%ecx
   1a6b3:	8b 7c 24 38          	mov    0x38(%esp),%edi
   1a6b7:	85 f6                	test   %esi,%esi
   1a6b9:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   1a6bd:	89 ca                	mov    %ecx,%edx
   1a6bf:	89 f8                	mov    %edi,%eax
   1a6c1:	75 3d                	jne    1a700 <__udivdi3+0x60>
   1a6c3:	39 cf                	cmp    %ecx,%edi
   1a6c5:	0f 87 c5 00 00 00    	ja     1a790 <__udivdi3+0xf0>
   1a6cb:	85 ff                	test   %edi,%edi
   1a6cd:	89 fd                	mov    %edi,%ebp
   1a6cf:	75 0b                	jne    1a6dc <__udivdi3+0x3c>
   1a6d1:	b8 01 00 00 00       	mov    $0x1,%eax
   1a6d6:	31 d2                	xor    %edx,%edx
   1a6d8:	f7 f7                	div    %edi
   1a6da:	89 c5                	mov    %eax,%ebp
   1a6dc:	89 c8                	mov    %ecx,%eax
   1a6de:	31 d2                	xor    %edx,%edx
   1a6e0:	f7 f5                	div    %ebp
   1a6e2:	89 c1                	mov    %eax,%ecx
   1a6e4:	89 d8                	mov    %ebx,%eax
   1a6e6:	89 cf                	mov    %ecx,%edi
   1a6e8:	f7 f5                	div    %ebp
   1a6ea:	89 c3                	mov    %eax,%ebx
   1a6ec:	89 d8                	mov    %ebx,%eax
   1a6ee:	89 fa                	mov    %edi,%edx
   1a6f0:	83 c4 1c             	add    $0x1c,%esp
   1a6f3:	5b                   	pop    %ebx
   1a6f4:	5e                   	pop    %esi
   1a6f5:	5f                   	pop    %edi
   1a6f6:	5d                   	pop    %ebp
   1a6f7:	c3                   	ret    
   1a6f8:	90                   	nop
   1a6f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a700:	39 ce                	cmp    %ecx,%esi
   1a702:	77 74                	ja     1a778 <__udivdi3+0xd8>
   1a704:	0f bd fe             	bsr    %esi,%edi
   1a707:	83 f7 1f             	xor    $0x1f,%edi
   1a70a:	0f 84 98 00 00 00    	je     1a7a8 <__udivdi3+0x108>
   1a710:	bb 20 00 00 00       	mov    $0x20,%ebx
   1a715:	89 f9                	mov    %edi,%ecx
   1a717:	89 c5                	mov    %eax,%ebp
   1a719:	29 fb                	sub    %edi,%ebx
   1a71b:	d3 e6                	shl    %cl,%esi
   1a71d:	89 d9                	mov    %ebx,%ecx
   1a71f:	d3 ed                	shr    %cl,%ebp
   1a721:	89 f9                	mov    %edi,%ecx
   1a723:	d3 e0                	shl    %cl,%eax
   1a725:	09 ee                	or     %ebp,%esi
   1a727:	89 d9                	mov    %ebx,%ecx
   1a729:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1a72d:	89 d5                	mov    %edx,%ebp
   1a72f:	8b 44 24 08          	mov    0x8(%esp),%eax
   1a733:	d3 ed                	shr    %cl,%ebp
   1a735:	89 f9                	mov    %edi,%ecx
   1a737:	d3 e2                	shl    %cl,%edx
   1a739:	89 d9                	mov    %ebx,%ecx
   1a73b:	d3 e8                	shr    %cl,%eax
   1a73d:	09 c2                	or     %eax,%edx
   1a73f:	89 d0                	mov    %edx,%eax
   1a741:	89 ea                	mov    %ebp,%edx
   1a743:	f7 f6                	div    %esi
   1a745:	89 d5                	mov    %edx,%ebp
   1a747:	89 c3                	mov    %eax,%ebx
   1a749:	f7 64 24 0c          	mull   0xc(%esp)
   1a74d:	39 d5                	cmp    %edx,%ebp
   1a74f:	72 10                	jb     1a761 <__udivdi3+0xc1>
   1a751:	8b 74 24 08          	mov    0x8(%esp),%esi
   1a755:	89 f9                	mov    %edi,%ecx
   1a757:	d3 e6                	shl    %cl,%esi
   1a759:	39 c6                	cmp    %eax,%esi
   1a75b:	73 07                	jae    1a764 <__udivdi3+0xc4>
   1a75d:	39 d5                	cmp    %edx,%ebp
   1a75f:	75 03                	jne    1a764 <__udivdi3+0xc4>
   1a761:	83 eb 01             	sub    $0x1,%ebx
   1a764:	31 ff                	xor    %edi,%edi
   1a766:	89 d8                	mov    %ebx,%eax
   1a768:	89 fa                	mov    %edi,%edx
   1a76a:	83 c4 1c             	add    $0x1c,%esp
   1a76d:	5b                   	pop    %ebx
   1a76e:	5e                   	pop    %esi
   1a76f:	5f                   	pop    %edi
   1a770:	5d                   	pop    %ebp
   1a771:	c3                   	ret    
   1a772:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a778:	31 ff                	xor    %edi,%edi
   1a77a:	31 db                	xor    %ebx,%ebx
   1a77c:	89 d8                	mov    %ebx,%eax
   1a77e:	89 fa                	mov    %edi,%edx
   1a780:	83 c4 1c             	add    $0x1c,%esp
   1a783:	5b                   	pop    %ebx
   1a784:	5e                   	pop    %esi
   1a785:	5f                   	pop    %edi
   1a786:	5d                   	pop    %ebp
   1a787:	c3                   	ret    
   1a788:	90                   	nop
   1a789:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a790:	89 d8                	mov    %ebx,%eax
   1a792:	f7 f7                	div    %edi
   1a794:	31 ff                	xor    %edi,%edi
   1a796:	89 c3                	mov    %eax,%ebx
   1a798:	89 d8                	mov    %ebx,%eax
   1a79a:	89 fa                	mov    %edi,%edx
   1a79c:	83 c4 1c             	add    $0x1c,%esp
   1a79f:	5b                   	pop    %ebx
   1a7a0:	5e                   	pop    %esi
   1a7a1:	5f                   	pop    %edi
   1a7a2:	5d                   	pop    %ebp
   1a7a3:	c3                   	ret    
   1a7a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a7a8:	39 ce                	cmp    %ecx,%esi
   1a7aa:	72 0c                	jb     1a7b8 <__udivdi3+0x118>
   1a7ac:	31 db                	xor    %ebx,%ebx
   1a7ae:	3b 44 24 08          	cmp    0x8(%esp),%eax
   1a7b2:	0f 87 34 ff ff ff    	ja     1a6ec <__udivdi3+0x4c>
   1a7b8:	bb 01 00 00 00       	mov    $0x1,%ebx
   1a7bd:	e9 2a ff ff ff       	jmp    1a6ec <__udivdi3+0x4c>
   1a7c2:	66 90                	xchg   %ax,%ax
   1a7c4:	66 90                	xchg   %ax,%ax
   1a7c6:	66 90                	xchg   %ax,%ax
   1a7c8:	66 90                	xchg   %ax,%ax
   1a7ca:	66 90                	xchg   %ax,%ax
   1a7cc:	66 90                	xchg   %ax,%ax
   1a7ce:	66 90                	xchg   %ax,%ax

0001a7d0 <__umoddi3>:
   1a7d0:	55                   	push   %ebp
   1a7d1:	57                   	push   %edi
   1a7d2:	56                   	push   %esi
   1a7d3:	53                   	push   %ebx
   1a7d4:	83 ec 1c             	sub    $0x1c,%esp
   1a7d7:	8b 44 24 3c          	mov    0x3c(%esp),%eax
   1a7db:	8b 4c 24 30          	mov    0x30(%esp),%ecx
   1a7df:	8b 74 24 34          	mov    0x34(%esp),%esi
   1a7e3:	8b 7c 24 38          	mov    0x38(%esp),%edi
   1a7e7:	85 c0                	test   %eax,%eax
   1a7e9:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1a7ed:	89 4c 24 08          	mov    %ecx,0x8(%esp)
   1a7f1:	89 3c 24             	mov    %edi,(%esp)
   1a7f4:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1a7f8:	89 f2                	mov    %esi,%edx
   1a7fa:	75 14                	jne    1a810 <__umoddi3+0x40>
   1a7fc:	39 f7                	cmp    %esi,%edi
   1a7fe:	76 40                	jbe    1a840 <__umoddi3+0x70>
   1a800:	89 c8                	mov    %ecx,%eax
   1a802:	f7 f7                	div    %edi
   1a804:	89 d0                	mov    %edx,%eax
   1a806:	31 d2                	xor    %edx,%edx
   1a808:	83 c4 1c             	add    $0x1c,%esp
   1a80b:	5b                   	pop    %ebx
   1a80c:	5e                   	pop    %esi
   1a80d:	5f                   	pop    %edi
   1a80e:	5d                   	pop    %ebp
   1a80f:	c3                   	ret    
   1a810:	39 f0                	cmp    %esi,%eax
   1a812:	89 f3                	mov    %esi,%ebx
   1a814:	77 4a                	ja     1a860 <__umoddi3+0x90>
   1a816:	0f bd e8             	bsr    %eax,%ebp
   1a819:	83 f5 1f             	xor    $0x1f,%ebp
   1a81c:	75 52                	jne    1a870 <__umoddi3+0xa0>
   1a81e:	39 f0                	cmp    %esi,%eax
   1a820:	0f 82 da 00 00 00    	jb     1a900 <__umoddi3+0x130>
   1a826:	39 0c 24             	cmp    %ecx,(%esp)
   1a829:	0f 86 d1 00 00 00    	jbe    1a900 <__umoddi3+0x130>
   1a82f:	8b 44 24 04          	mov    0x4(%esp),%eax
   1a833:	83 c4 1c             	add    $0x1c,%esp
   1a836:	5b                   	pop    %ebx
   1a837:	5e                   	pop    %esi
   1a838:	5f                   	pop    %edi
   1a839:	5d                   	pop    %ebp
   1a83a:	c3                   	ret    
   1a83b:	90                   	nop
   1a83c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a840:	85 ff                	test   %edi,%edi
   1a842:	89 fd                	mov    %edi,%ebp
   1a844:	75 0b                	jne    1a851 <__umoddi3+0x81>
   1a846:	b8 01 00 00 00       	mov    $0x1,%eax
   1a84b:	31 d2                	xor    %edx,%edx
   1a84d:	f7 f7                	div    %edi
   1a84f:	89 c5                	mov    %eax,%ebp
   1a851:	89 f0                	mov    %esi,%eax
   1a853:	31 d2                	xor    %edx,%edx
   1a855:	f7 f5                	div    %ebp
   1a857:	89 c8                	mov    %ecx,%eax
   1a859:	f7 f5                	div    %ebp
   1a85b:	eb a7                	jmp    1a804 <__umoddi3+0x34>
   1a85d:	8d 76 00             	lea    0x0(%esi),%esi
   1a860:	89 c8                	mov    %ecx,%eax
   1a862:	89 f2                	mov    %esi,%edx
   1a864:	83 c4 1c             	add    $0x1c,%esp
   1a867:	5b                   	pop    %ebx
   1a868:	5e                   	pop    %esi
   1a869:	5f                   	pop    %edi
   1a86a:	5d                   	pop    %ebp
   1a86b:	c3                   	ret    
   1a86c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a870:	8b 34 24             	mov    (%esp),%esi
   1a873:	bf 20 00 00 00       	mov    $0x20,%edi
   1a878:	89 e9                	mov    %ebp,%ecx
   1a87a:	29 ef                	sub    %ebp,%edi
   1a87c:	d3 e0                	shl    %cl,%eax
   1a87e:	89 f9                	mov    %edi,%ecx
   1a880:	89 f2                	mov    %esi,%edx
   1a882:	d3 ea                	shr    %cl,%edx
   1a884:	89 e9                	mov    %ebp,%ecx
   1a886:	09 c2                	or     %eax,%edx
   1a888:	89 d8                	mov    %ebx,%eax
   1a88a:	89 14 24             	mov    %edx,(%esp)
   1a88d:	89 f2                	mov    %esi,%edx
   1a88f:	d3 e2                	shl    %cl,%edx
   1a891:	89 f9                	mov    %edi,%ecx
   1a893:	89 54 24 04          	mov    %edx,0x4(%esp)
   1a897:	8b 54 24 08          	mov    0x8(%esp),%edx
   1a89b:	d3 e8                	shr    %cl,%eax
   1a89d:	89 e9                	mov    %ebp,%ecx
   1a89f:	89 c6                	mov    %eax,%esi
   1a8a1:	d3 e3                	shl    %cl,%ebx
   1a8a3:	89 f9                	mov    %edi,%ecx
   1a8a5:	89 d0                	mov    %edx,%eax
   1a8a7:	d3 e8                	shr    %cl,%eax
   1a8a9:	89 e9                	mov    %ebp,%ecx
   1a8ab:	09 d8                	or     %ebx,%eax
   1a8ad:	89 d3                	mov    %edx,%ebx
   1a8af:	89 f2                	mov    %esi,%edx
   1a8b1:	f7 34 24             	divl   (%esp)
   1a8b4:	89 d6                	mov    %edx,%esi
   1a8b6:	d3 e3                	shl    %cl,%ebx
   1a8b8:	f7 64 24 04          	mull   0x4(%esp)
   1a8bc:	39 d6                	cmp    %edx,%esi
   1a8be:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   1a8c2:	89 d1                	mov    %edx,%ecx
   1a8c4:	89 c3                	mov    %eax,%ebx
   1a8c6:	72 08                	jb     1a8d0 <__umoddi3+0x100>
   1a8c8:	75 11                	jne    1a8db <__umoddi3+0x10b>
   1a8ca:	39 44 24 08          	cmp    %eax,0x8(%esp)
   1a8ce:	73 0b                	jae    1a8db <__umoddi3+0x10b>
   1a8d0:	2b 44 24 04          	sub    0x4(%esp),%eax
   1a8d4:	1b 14 24             	sbb    (%esp),%edx
   1a8d7:	89 d1                	mov    %edx,%ecx
   1a8d9:	89 c3                	mov    %eax,%ebx
   1a8db:	8b 54 24 08          	mov    0x8(%esp),%edx
   1a8df:	29 da                	sub    %ebx,%edx
   1a8e1:	19 ce                	sbb    %ecx,%esi
   1a8e3:	89 f9                	mov    %edi,%ecx
   1a8e5:	89 f0                	mov    %esi,%eax
   1a8e7:	d3 e0                	shl    %cl,%eax
   1a8e9:	89 e9                	mov    %ebp,%ecx
   1a8eb:	d3 ea                	shr    %cl,%edx
   1a8ed:	89 e9                	mov    %ebp,%ecx
   1a8ef:	d3 ee                	shr    %cl,%esi
   1a8f1:	09 d0                	or     %edx,%eax
   1a8f3:	89 f2                	mov    %esi,%edx
   1a8f5:	83 c4 1c             	add    $0x1c,%esp
   1a8f8:	5b                   	pop    %ebx
   1a8f9:	5e                   	pop    %esi
   1a8fa:	5f                   	pop    %edi
   1a8fb:	5d                   	pop    %ebp
   1a8fc:	c3                   	ret    
   1a8fd:	8d 76 00             	lea    0x0(%esi),%esi
   1a900:	89 f2                	mov    %esi,%edx
   1a902:	29 f9                	sub    %edi,%ecx
   1a904:	1b 54 24 0c          	sbb    0xc(%esp),%edx
   1a908:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1a90c:	e9 1e ff ff ff       	jmp    1a82f <__umoddi3+0x5f>
   1a911:	66 90                	xchg   %ax,%ax
   1a913:	66 90                	xchg   %ax,%ax
   1a915:	66 90                	xchg   %ax,%ax
   1a917:	66 90                	xchg   %ax,%ax
   1a919:	66 90                	xchg   %ax,%ax
   1a91b:	66 90                	xchg   %ax,%ax
   1a91d:	66 90                	xchg   %ax,%ax
   1a91f:	90                   	nop

0001a920 <__libc_csu_init>:
   1a920:	55                   	push   %ebp
   1a921:	57                   	push   %edi
   1a922:	56                   	push   %esi
   1a923:	53                   	push   %ebx
   1a924:	e8 97 83 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a929:	81 c3 d7 06 01 00    	add    $0x106d7,%ebx
   1a92f:	83 ec 0c             	sub    $0xc,%esp
   1a932:	8b 6c 24 20          	mov    0x20(%esp),%ebp
   1a936:	8d b3 38 fc ff ff    	lea    -0x3c8(%ebx),%esi
   1a93c:	e8 27 7c fe ff       	call   2568 <_init>
   1a941:	8d 83 34 fc ff ff    	lea    -0x3cc(%ebx),%eax
   1a947:	29 c6                	sub    %eax,%esi
   1a949:	c1 fe 02             	sar    $0x2,%esi
   1a94c:	85 f6                	test   %esi,%esi
   1a94e:	74 25                	je     1a975 <__libc_csu_init+0x55>
   1a950:	31 ff                	xor    %edi,%edi
   1a952:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a958:	83 ec 04             	sub    $0x4,%esp
   1a95b:	ff 74 24 2c          	pushl  0x2c(%esp)
   1a95f:	ff 74 24 2c          	pushl  0x2c(%esp)
   1a963:	55                   	push   %ebp
   1a964:	ff 94 bb 34 fc ff ff 	call   *-0x3cc(%ebx,%edi,4)
   1a96b:	83 c7 01             	add    $0x1,%edi
   1a96e:	83 c4 10             	add    $0x10,%esp
   1a971:	39 fe                	cmp    %edi,%esi
   1a973:	75 e3                	jne    1a958 <__libc_csu_init+0x38>
   1a975:	83 c4 0c             	add    $0xc,%esp
   1a978:	5b                   	pop    %ebx
   1a979:	5e                   	pop    %esi
   1a97a:	5f                   	pop    %edi
   1a97b:	5d                   	pop    %ebp
   1a97c:	c3                   	ret    
   1a97d:	8d 76 00             	lea    0x0(%esi),%esi

0001a980 <__libc_csu_fini>:
   1a980:	f3 c3                	repz ret 

Disassembly of section .fini:

0001a984 <_fini>:
   1a984:	53                   	push   %ebx
   1a985:	83 ec 08             	sub    $0x8,%esp
   1a988:	e8 33 83 fe ff       	call   2cc0 <__x86.get_pc_thunk.bx>
   1a98d:	81 c3 73 06 01 00    	add    $0x10673,%ebx
   1a993:	83 c4 08             	add    $0x8,%esp
   1a996:	5b                   	pop    %ebx
   1a997:	c3                   	ret    
